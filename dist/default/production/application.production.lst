

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Sep 07 21:04:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 23/03/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   001D5C                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _port_registers
    79   001D5C  80                 	db	128
    80   001D5D  0F                 	db	15
    81   001D5E  81                 	db	129
    82   001D5F  0F                 	db	15
    83   001D60  82                 	db	130
    84   001D61  0F                 	db	15
    85   001D62  83                 	db	131
    86   001D63  0F                 	db	15
    87   001D64  84                 	db	132
    88   001D65  0F                 	db	15
    89                           
    90                           ;initializer for _lat_registers
    91   001D66  89                 	db	137
    92   001D67  0F                 	db	15
    93   001D68  8A                 	db	138
    94   001D69  0F                 	db	15
    95   001D6A  8B                 	db	139
    96   001D6B  0F                 	db	15
    97   001D6C  8C                 	db	140
    98   001D6D  0F                 	db	15
    99   001D6E  8D                 	db	141
   100   001D6F  0F                 	db	15
   101                           
   102                           ;initializer for _tris_registers
   103   001D70  92                 	db	146
   104   001D71  0F                 	db	15
   105   001D72  93                 	db	147
   106   001D73  0F                 	db	15
   107   001D74  94                 	db	148
   108   001D75  0F                 	db	15
   109   001D76  95                 	db	149
   110   001D77  0F                 	db	15
   111   001D78  96                 	db	150
   112   001D79  0F                 	db	15
   113                           
   114                           ;initializer for _led1
   115   001D7A  03                 	db	3
   116                           
   117                           ;initializer for _lcd_2
   118   001D7B  32                 	db	50
   119   001D7C  3A                 	db	58
   120   001D7D  03                 	db	3
   121   001D7E  0B                 	db	11
   122   001D7F  13                 	db	19
   123   001D80  1B                 	db	27
   124   001D81  23                 	db	35
   125   001D82  2B                 	db	43
   126   001D83  33                 	db	51
   127   001D84  3B                 	db	59
   128                           
   129                           ;initializer for _custom_char3
   130   001D85  0E                 	db	14
   131   001D86  0A                 	db	10
   132   001D87  11                 	db	17
   133   001D88  11                 	db	17
   134   001D89  1F                 	db	31
   135   001D8A  1F                 	db	31
   136   001D8B  1F                 	db	31
   137   001D8C  00                 	db	0
   138                           
   139                           ;initializer for _custom_char2
   140   001D8D  0E                 	db	14
   141   001D8E  0A                 	db	10
   142   001D8F  11                 	db	17
   143   001D90  11                 	db	17
   144   001D91  11                 	db	17
   145   001D92  1F                 	db	31
   146   001D93  1F                 	db	31
   147   001D94  00                 	db	0
   148                           
   149                           ;initializer for _custom_char1
   150   001D95  0E                 	db	14
   151   001D96  0A                 	db	10
   152   001D97  11                 	db	17
   153   001D98  11                 	db	17
   154   001D99  11                 	db	17
   155   001D9A  11                 	db	17
   156   001D9B  1F                 	db	31
   157   001D9C  00                 	db	0
   158                           
   159                           ;initializer for _lcd1
   160   001D9D  02                 	db	2
   161   001D9E  0A                 	db	10
   162   001D9F  12                 	db	18
   163   001DA0  1A                 	db	26
   164   001DA1  22                 	db	34
   165   001DA2  2A                 	db	42
   166                           
   167                           	psect	idataBANK0
   168   001E76                     __pidataBANK0:
   169                           	callstack 0
   170                           
   171                           ;initializer for _keypad1
   172   001E76  02                 	db	2
   173   001E77  0A                 	db	10
   174   001E78  12                 	db	18
   175   001E79  1A                 	db	26
   176   001E7A  62                 	db	98
   177   001E7B  6A                 	db	106
   178   001E7C  72                 	db	114
   179   001E7D  7A                 	db	122
   180                           
   181                           ;initializer for _custom_char6
   182   001E7E  0E                 	db	14
   183   001E7F  0E                 	db	14
   184   001E80  1F                 	db	31
   185   001E81  1F                 	db	31
   186   001E82  1F                 	db	31
   187   001E83  1F                 	db	31
   188   001E84  1F                 	db	31
   189   001E85  00                 	db	0
   190                           
   191                           ;initializer for _custom_char5
   192   001E86  0E                 	db	14
   193   001E87  0A                 	db	10
   194   001E88  1F                 	db	31
   195   001E89  1F                 	db	31
   196   001E8A  1F                 	db	31
   197   001E8B  1F                 	db	31
   198   001E8C  1F                 	db	31
   199   001E8D  00                 	db	0
   200                           
   201                           ;initializer for _custom_char4
   202   001E8E  0E                 	db	14
   203   001E8F  0A                 	db	10
   204   001E90  11                 	db	17
   205   001E91  1F                 	db	31
   206   001E92  1F                 	db	31
   207   001E93  1F                 	db	31
   208   001E94  1F                 	db	31
   209   001E95  00                 	db	0
   210                           
   211                           	psect	smallconst
   212   001000                     __psmallconst:
   213                           	callstack 0
   214   001000  00                 	db	0
   215   001001                     _btn_values:
   216                           	callstack 0
   217   001001  37                 	db	55
   218   001002  38                 	db	56
   219   001003  39                 	db	57
   220   001004  2F                 	db	47
   221   001005  34                 	db	52
   222   001006  35                 	db	53
   223   001007  36                 	db	54
   224   001008  2A                 	db	42
   225   001009  31                 	db	49
   226   00100A  32                 	db	50
   227   00100B  33                 	db	51
   228   00100C  2D                 	db	45
   229   00100D  23                 	db	35
   230   00100E  30                 	db	48
   231   00100F  3D                 	db	61
   232   001010  2B                 	db	43
   233   001011                     __end_of_btn_values:
   234                           	callstack 0
   235   001011                     STR_1:
   236   001011  25                 	db	37
   237   001012  69                 	db	105	;'i'
   238   001013  00                 	db	0
   239   001014  00                 	db	0	; dummy byte at the end
   240   000000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244   001CAC                     __pcinit:
   245                           	callstack 0
   246   001CAC                     start_initialization:
   247                           	callstack 0
   248   001CAC                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Initialize objects allocated to BANK0 (32 bytes)
   252                           ; load TBLPTR registers with __pidataBANK0
   253   001CAC  0E76               	movlw	low __pidataBANK0
   254   001CAE  6EF6               	movwf	tblptrl,c
   255   001CB0  0E1E               	movlw	high __pidataBANK0
   256   001CB2  6EF7               	movwf	tblptrh,c
   257   001CB4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   258   001CB6  6EF8               	movwf	tblptru,c
   259   001CB8  EE00  F080         	lfsr	0,__pdataBANK0
   260   001CBC  EE10 F020          	lfsr	1,32
   261   001CC0                     copy_data0:
   262   001CC0  0009               	tblrd		*+
   263   001CC2  CFF5 FFEE          	movff	tablat,postinc0
   264   001CC6  50E5               	movf	postdec1,w,c
   265   001CC8  50E1               	movf	fsr1l,w,c
   266   001CCA  E1FA               	bnz	copy_data0
   267                           
   268                           ; Initialize objects allocated to COMRAM (71 bytes)
   269                           ; load TBLPTR registers with __pidataCOMRAM
   270   001CCC  0E5C               	movlw	low __pidataCOMRAM
   271   001CCE  6EF6               	movwf	tblptrl,c
   272   001CD0  0E1D               	movlw	high __pidataCOMRAM
   273   001CD2  6EF7               	movwf	tblptrh,c
   274   001CD4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   275   001CD6  6EF8               	movwf	tblptru,c
   276   001CD8  EE00  F001         	lfsr	0,__pdataCOMRAM
   277   001CDC  EE10 F047          	lfsr	1,71
   278   001CE0                     copy_data1:
   279   001CE0  0009               	tblrd		*+
   280   001CE2  CFF5 FFEE          	movff	tablat,postinc0
   281   001CE6  50E5               	movf	postdec1,w,c
   282   001CE8  50E1               	movf	fsr1l,w,c
   283   001CEA  E1FA               	bnz	copy_data1
   284                           
   285                           ; Clear objects allocated to BANK0 (16 bytes)
   286   001CEC  EE00  F0A0         	lfsr	0,__pbssBANK0
   287   001CF0  0E10               	movlw	16
   288   001CF2                     clear_0:
   289   001CF2  6AEE               	clrf	postinc0,c
   290   001CF4  06E8               	decf	wreg,f,c
   291   001CF6  E1FD               	bnz	clear_0
   292                           
   293                           ; Clear objects allocated to COMRAM (12 bytes)
   294   001CF8  EE00  F073         	lfsr	0,__pbssCOMRAM
   295   001CFC  0E0C               	movlw	12
   296   001CFE                     clear_1:
   297   001CFE  6AEE               	clrf	postinc0,c
   298   001D00  06E8               	decf	wreg,f,c
   299   001D02  E1FD               	bnz	clear_1
   300   001D04                     end_of_initialization:
   301                           	callstack 0
   302   001D04                     __end_of__initialization:
   303                           	callstack 0
   304   001D04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305   001D06  6EF8               	movwf	tblptru,c
   306   001D08  0100               	movlb	0
   307   001D0A  EF0B  F008         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310   000073                     __pbssCOMRAM:
   311                           	callstack 0
   312   000073                     _counter:
   313                           	callstack 0
   314   000073                     	ds	4
   315   000077                     _ret:
   316                           	callstack 0
   317   000077                     	ds	1
   318   000078                     relay_turn_off@F3052:
   319                           	callstack 0
   320   000078                     	ds	1
   321   000079                     relay_turn_on@F3047:
   322                           	callstack 0
   323   000079                     	ds	1
   324   00007A                     relay_initialize@F3042:
   325                           	callstack 0
   326   00007A                     	ds	1
   327   00007B                     led_toggle@F3063:
   328                           	callstack 0
   329   00007B                     	ds	1
   330   00007C                     led_turn_off@F3058:
   331                           	callstack 0
   332   00007C                     	ds	1
   333   00007D                     led_turn_on@F3053:
   334                           	callstack 0
   335   00007D                     	ds	1
   336   00007E                     led_initialize@F3048:
   337                           	callstack 0
   338   00007E                     	ds	1
   339                           
   340                           	psect	dataCOMRAM
   341   000001                     __pdataCOMRAM:
   342                           	callstack 0
   343   000001                     _port_registers:
   344                           	callstack 0
   345   000001                     	ds	10
   346   00000B                     _lat_registers:
   347                           	callstack 0
   348   00000B                     	ds	10
   349   000015                     _tris_registers:
   350                           	callstack 0
   351   000015                     	ds	10
   352   00001F                     _led1:
   353                           	callstack 0
   354   00001F                     	ds	1
   355   000020                     _lcd_2:
   356                           	callstack 0
   357   000020                     	ds	10
   358   00002A                     _custom_char3:
   359                           	callstack 0
   360   00002A                     	ds	8
   361   000032                     _custom_char2:
   362                           	callstack 0
   363   000032                     	ds	8
   364   00003A                     _custom_char1:
   365                           	callstack 0
   366   00003A                     	ds	8
   367   000042                     _lcd1:
   368                           	callstack 0
   369   000042                     	ds	6
   370                           
   371                           	psect	bssBANK0
   372   0000A0                     __pbssBANK0:
   373                           	callstack 0
   374   0000A0                     _counter_txt:
   375                           	callstack 0
   376   0000A0                     	ds	16
   377                           
   378                           	psect	dataBANK0
   379   000080                     __pdataBANK0:
   380                           	callstack 0
   381   000080                     _keypad1:
   382                           	callstack 0
   383   000080                     	ds	8
   384   000088                     _custom_char6:
   385                           	callstack 0
   386   000088                     	ds	8
   387   000090                     _custom_char5:
   388                           	callstack 0
   389   000090                     	ds	8
   390   000098                     _custom_char4:
   391                           	callstack 0
   392   000098                     	ds	8
   393                           
   394                           	psect	cstackCOMRAM
   395   000048                     __pcstackCOMRAM:
   396                           	callstack 0
   397   000048                     gpio_pin_direction_initialize@pin_config:
   398                           	callstack 0
   399   000048                     gpio_pin_write_logic@pin_config:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x0
   403   000048                     	ds	2
   404   00004A                     ??_gpio_pin_direction_initialize:
   405   00004A                     gpio_pin_write_logic@logic:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x2
   409   00004A                     	ds	1
   410   00004B                     ??_gpio_pin_write_logic:
   411                           
   412                           ; 1 bytes @ 0x3
   413   00004B                     	ds	5
   414   000050                     gpio_pin_direction_initialize@ret:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x8
   418   000050                     	ds	1
   419   000051                     gpio_pin_write_logic@ret:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x9
   423   000051                     	ds	1
   424   000052                     gpio_pin_initialize@pin_config:
   425                           	callstack 0
   426   000052                     lcd_send_4bits@lcd:
   427                           	callstack 0
   428   000052                     lcd_4bit_send_enable_signal@lcd:
   429                           	callstack 0
   430   000052                     lcd_8bit_send_enable_signal@lcd:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xA
   434   000052                     	ds	2
   435   000054                     ??_gpio_pin_initialize:
   436   000054                     lcd_send_4bits@_data_command:
   437                           	callstack 0
   438   000054                     lcd_4bit_send_enable_signal@ret:
   439                           	callstack 0
   440   000054                     lcd_8bit_send_command@lcd:
   441                           	callstack 0
   442   000054                     lcd_8bit_send_char_data@lcd:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446   000054                     	ds	1
   447   000055                     gpio_pin_initialize@ret:
   448                           	callstack 0
   449   000055                     lcd_send_4bits@ret:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xD
   453   000055                     	ds	1
   454   000056                     lcd_8bit_send_command@command:
   455                           	callstack 0
   456   000056                     lcd_8bit_send_char_data@data:
   457                           	callstack 0
   458   000056                     lcd_4bit_send_command@lcd:
   459                           	callstack 0
   460   000056                     lcd_4bit_send_char_data@lcd:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xE
   464   000056                     	ds	1
   465   000057                     ??_lcd_8bit_send_command:
   466   000057                     ??_lcd_8bit_send_char_data:
   467                           
   468                           ; 1 bytes @ 0xF
   469   000057                     	ds	1
   470   000058                     lcd_4bit_send_command@command:
   471                           	callstack 0
   472   000058                     lcd_4bit_send_char_data@data:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x10
   476   000058                     	ds	1
   477   000059                     lcd_4bit_send_command@ret:
   478                           	callstack 0
   479   000059                     lcd_4bit_send_char_data@ret:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x11
   483   000059                     	ds	1
   484   00005A                     lcd_4bit_initialize@lcd:
   485                           	callstack 0
   486   00005A                     lcd_4bit_set_cursor@lcd:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x12
   490   00005A                     	ds	1
   491   00005B                     lcd_8bit_send_command@ret:
   492                           	callstack 0
   493   00005B                     lcd_8bit_send_char_data@ret:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x13
   497   00005B                     	ds	1
   498   00005C                     ??_lcd_4bit_initialize:
   499   00005C                     lcd_8bit_send_command@l_pins_counter:
   500                           	callstack 0
   501   00005C                     lcd_8bit_send_char_data@l_pins_counter:
   502                           	callstack 0
   503   00005C                     lcd_4bit_set_cursor@row:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x14
   507   00005C                     	ds	1
   508   00005D                     lcd_4bit_set_cursor@column:
   509                           	callstack 0
   510   00005D                     lcd_8bit_initialize@lcd:
   511                           	callstack 0
   512   00005D                     lcd_8bit_set_cursor@lcd:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x15
   516   00005D                     	ds	1
   517   00005E                     ??_lcd_4bit_set_cursor:
   518   00005E                     lcd_4bit_initialize@ret:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x16
   522   00005E                     	ds	1
   523   00005F                     ??_lcd_8bit_initialize:
   524   00005F                     lcd_4bit_initialize@l_data_pins_counter:
   525                           	callstack 0
   526   00005F                     lcd_8bit_set_cursor@row:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x17
   530   00005F                     	ds	1
   531   000060                     lcd_8bit_set_cursor@column:
   532                           	callstack 0
   533   000060                     lcd_4bit_send_char_data_pos@lcd:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x18
   537   000060                     	ds	1
   538   000061                     ??_lcd_8bit_set_cursor:
   539   000061                     lcd_8bit_initialize@l_data_pins_counter:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x19
   543   000061                     	ds	1
   544   000062                     lcd_4bit_send_char_data_pos@row:
   545                           	callstack 0
   546   000062                     lcd_8bit_initialize@ret:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x1A
   550   000062                     	ds	1
   551   000063                     lcd_4bit_send_char_data_pos@column:
   552                           	callstack 0
   553   000063                     lcd_8bit_send_char_data_pos@lcd:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x1B
   557   000063                     	ds	1
   558   000064                     lcd_4bit_send_char_data_pos@data:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x1C
   562   000064                     	ds	1
   563   000065                     lcd_4bit_send_char_data_pos@ret:
   564                           	callstack 0
   565   000065                     lcd_8bit_send_char_data_pos@row:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x1D
   569   000065                     	ds	1
   570   000066                     lcd_8bit_send_char_data_pos@column:
   571                           	callstack 0
   572   000066                     lcd_4bit_send_custom_char@lcd:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x1E
   576   000066                     	ds	1
   577   000067                     lcd_8bit_send_char_data_pos@data:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1F
   581   000067                     	ds	1
   582   000068                     lcd_4bit_send_custom_char@row:
   583                           	callstack 0
   584   000068                     lcd_8bit_send_char_data_pos@ret:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x20
   588   000068                     	ds	1
   589   000069                     lcd_4bit_send_custom_char@column:
   590                           	callstack 0
   591   000069                     lcd_8bit_send_custom_char@lcd:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x21
   595   000069                     	ds	1
   596   00006A                     lcd_4bit_send_custom_char@_chr:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x22
   600   00006A                     	ds	1
   601   00006B                     lcd_8bit_send_custom_char@row:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x23
   605   00006B                     	ds	1
   606   00006C                     lcd_4bit_send_custom_char@mem_pos:
   607                           	callstack 0
   608   00006C                     lcd_8bit_send_custom_char@column:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x24
   612   00006C                     	ds	1
   613   00006D                     lcd_4bit_send_custom_char@lcd_counter:
   614                           	callstack 0
   615   00006D                     lcd_8bit_send_custom_char@_chr:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x25
   619   00006D                     	ds	2
   620   00006F                     lcd_8bit_send_custom_char@mem_pos:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x27
   624   00006F                     	ds	1
   625   000070                     lcd_8bit_send_custom_char@lcd_counter:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x28
   629   000070                     	ds	1
   630   000071                     ??_main:
   631                           
   632                           ; 1 bytes @ 0x29
   633   000071                     	ds	2
   634                           
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 79 in file "application.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2  300[None  ] int 
   647 ;; Registers used:
   648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels required when called: 6
   660 ;; This function calls:
   661 ;;		_application_initialize
   662 ;;		_lcd_4bit_send_custom_char
   663 ;;		_lcd_8bit_send_custom_char
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text0
   670   001016                     __ptext0:
   671                           	callstack 0
   672   001016                     _main:
   673                           	callstack 25
   674   001016                     
   675                           ;application.c: 80:     application_initialize();
   676   001016  EC58  F00F         	call	_application_initialize	;wreg free
   677   00101A                     l301:
   678                           
   679                           ;application.c: 84:         lcd_4bit_send_custom_char(&lcd1,1,20,custom_char1,0);_delay(
      +                          (unsigned long)((250)*(4000000/4000.0)));
   680   00101A  0E42               	movlw	low _lcd1
   681   00101C  6E66               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   682   00101E  0E00               	movlw	high _lcd1
   683   001020  6E67               	movwf	(lcd_4bit_send_custom_char@lcd+1)^0,c
   684   001022  0E01               	movlw	1
   685   001024  6E68               	movwf	lcd_4bit_send_custom_char@row^0,c
   686   001026  0E14               	movlw	20
   687   001028  6E69               	movwf	lcd_4bit_send_custom_char@column^0,c
   688   00102A  0E3A               	movlw	low _custom_char1
   689   00102C  6E6A               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   690   00102E  0E00               	movlw	high _custom_char1
   691   001030  6E6B               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   692   001032  0E00               	movlw	0
   693   001034  6E6C               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   694   001036  ECA6  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   695   00103A  0E02               	movlw	2
   696   00103C  6E72               	movwf	(??_main+1)^0,c
   697   00103E  0E45               	movlw	69
   698   001040  6E71               	movwf	??_main^0,c
   699   001042  0EAA               	movlw	170
   700   001044                     u1837:
   701   001044  2EE8               	decfsz	wreg,f,c
   702   001046  D7FE               	bra	u1837
   703   001048  2E71               	decfsz	??_main^0,f,c
   704   00104A  D7FC               	bra	u1837
   705   00104C  2E72               	decfsz	(??_main+1)^0,f,c
   706   00104E  D7FA               	bra	u1837
   707   001050                     
   708                           ;application.c: 85:         lcd_4bit_send_custom_char(&lcd1,1,20,custom_char2,0);_delay(
      +                          (unsigned long)((250)*(4000000/4000.0)));
   709   001050  0E42               	movlw	low _lcd1
   710   001052  6E66               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   711   001054  0E00               	movlw	high _lcd1
   712   001056  6E67               	movwf	(lcd_4bit_send_custom_char@lcd+1)^0,c
   713   001058  0E01               	movlw	1
   714   00105A  6E68               	movwf	lcd_4bit_send_custom_char@row^0,c
   715   00105C  0E14               	movlw	20
   716   00105E  6E69               	movwf	lcd_4bit_send_custom_char@column^0,c
   717   001060  0E32               	movlw	low _custom_char2
   718   001062  6E6A               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   719   001064  0E00               	movlw	high _custom_char2
   720   001066  6E6B               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   721   001068  0E00               	movlw	0
   722   00106A  6E6C               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   723   00106C  ECA6  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   724   001070  0E02               	movlw	2
   725   001072  6E72               	movwf	(??_main+1)^0,c
   726   001074  0E45               	movlw	69
   727   001076  6E71               	movwf	??_main^0,c
   728   001078  0EAA               	movlw	170
   729   00107A                     u1847:
   730   00107A  2EE8               	decfsz	wreg,f,c
   731   00107C  D7FE               	bra	u1847
   732   00107E  2E71               	decfsz	??_main^0,f,c
   733   001080  D7FC               	bra	u1847
   734   001082  2E72               	decfsz	(??_main+1)^0,f,c
   735   001084  D7FA               	bra	u1847
   736   001086                     
   737                           ;application.c: 86:         lcd_4bit_send_custom_char(&lcd1,1,20,custom_char3,0);_delay(
      +                          (unsigned long)((250)*(4000000/4000.0)));
   738   001086  0E42               	movlw	low _lcd1
   739   001088  6E66               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   740   00108A  0E00               	movlw	high _lcd1
   741   00108C  6E67               	movwf	(lcd_4bit_send_custom_char@lcd+1)^0,c
   742   00108E  0E01               	movlw	1
   743   001090  6E68               	movwf	lcd_4bit_send_custom_char@row^0,c
   744   001092  0E14               	movlw	20
   745   001094  6E69               	movwf	lcd_4bit_send_custom_char@column^0,c
   746   001096  0E2A               	movlw	low _custom_char3
   747   001098  6E6A               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   748   00109A  0E00               	movlw	high _custom_char3
   749   00109C  6E6B               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   750   00109E  0E00               	movlw	0
   751   0010A0  6E6C               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   752   0010A2  ECA6  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   753   0010A6  0E02               	movlw	2
   754   0010A8  6E72               	movwf	(??_main+1)^0,c
   755   0010AA  0E45               	movlw	69
   756   0010AC  6E71               	movwf	??_main^0,c
   757   0010AE  0EAA               	movlw	170
   758   0010B0                     u1857:
   759   0010B0  2EE8               	decfsz	wreg,f,c
   760   0010B2  D7FE               	bra	u1857
   761   0010B4  2E71               	decfsz	??_main^0,f,c
   762   0010B6  D7FC               	bra	u1857
   763   0010B8  2E72               	decfsz	(??_main+1)^0,f,c
   764   0010BA  D7FA               	bra	u1857
   765                           
   766                           ;application.c: 87:         lcd_4bit_send_custom_char(&lcd1,1,20,custom_char4,0);_delay(
      +                          (unsigned long)((250)*(4000000/4000.0)));
   767   0010BC  0E42               	movlw	low _lcd1
   768   0010BE  6E66               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   769   0010C0  0E00               	movlw	high _lcd1
   770   0010C2  6E67               	movwf	(lcd_4bit_send_custom_char@lcd+1)^0,c
   771   0010C4  0E01               	movlw	1
   772   0010C6  6E68               	movwf	lcd_4bit_send_custom_char@row^0,c
   773   0010C8  0E14               	movlw	20
   774   0010CA  6E69               	movwf	lcd_4bit_send_custom_char@column^0,c
   775   0010CC  0E98               	movlw	low _custom_char4
   776   0010CE  6E6A               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   777   0010D0  0E00               	movlw	high _custom_char4
   778   0010D2  6E6B               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   779   0010D4  0E00               	movlw	0
   780   0010D6  6E6C               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   781   0010D8  ECA6  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   782   0010DC  0E02               	movlw	2
   783   0010DE  6E72               	movwf	(??_main+1)^0,c
   784   0010E0  0E45               	movlw	69
   785   0010E2  6E71               	movwf	??_main^0,c
   786   0010E4  0EAA               	movlw	170
   787   0010E6                     u1867:
   788   0010E6  2EE8               	decfsz	wreg,f,c
   789   0010E8  D7FE               	bra	u1867
   790   0010EA  2E71               	decfsz	??_main^0,f,c
   791   0010EC  D7FC               	bra	u1867
   792   0010EE  2E72               	decfsz	(??_main+1)^0,f,c
   793   0010F0  D7FA               	bra	u1867
   794   0010F2                     
   795                           ;application.c: 88:         lcd_4bit_send_custom_char(&lcd1,1,20,custom_char5,0);_delay(
      +                          (unsigned long)((250)*(4000000/4000.0)));
   796   0010F2  0E42               	movlw	low _lcd1
   797   0010F4  6E66               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   798   0010F6  0E00               	movlw	high _lcd1
   799   0010F8  6E67               	movwf	(lcd_4bit_send_custom_char@lcd+1)^0,c
   800   0010FA  0E01               	movlw	1
   801   0010FC  6E68               	movwf	lcd_4bit_send_custom_char@row^0,c
   802   0010FE  0E14               	movlw	20
   803   001100  6E69               	movwf	lcd_4bit_send_custom_char@column^0,c
   804   001102  0E90               	movlw	low _custom_char5
   805   001104  6E6A               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   806   001106  0E00               	movlw	high _custom_char5
   807   001108  6E6B               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   808   00110A  0E00               	movlw	0
   809   00110C  6E6C               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   810   00110E  ECA6  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   811   001112  0E02               	movlw	2
   812   001114  6E72               	movwf	(??_main+1)^0,c
   813   001116  0E45               	movlw	69
   814   001118  6E71               	movwf	??_main^0,c
   815   00111A  0EAA               	movlw	170
   816   00111C                     u1877:
   817   00111C  2EE8               	decfsz	wreg,f,c
   818   00111E  D7FE               	bra	u1877
   819   001120  2E71               	decfsz	??_main^0,f,c
   820   001122  D7FC               	bra	u1877
   821   001124  2E72               	decfsz	(??_main+1)^0,f,c
   822   001126  D7FA               	bra	u1877
   823   001128                     
   824                           ;application.c: 89:         lcd_4bit_send_custom_char(&lcd1,1,20,custom_char6,0);_delay(
      +                          (unsigned long)((250)*(4000000/4000.0)));
   825   001128  0E42               	movlw	low _lcd1
   826   00112A  6E66               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   827   00112C  0E00               	movlw	high _lcd1
   828   00112E  6E67               	movwf	(lcd_4bit_send_custom_char@lcd+1)^0,c
   829   001130  0E01               	movlw	1
   830   001132  6E68               	movwf	lcd_4bit_send_custom_char@row^0,c
   831   001134  0E14               	movlw	20
   832   001136  6E69               	movwf	lcd_4bit_send_custom_char@column^0,c
   833   001138  0E88               	movlw	low _custom_char6
   834   00113A  6E6A               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   835   00113C  0E00               	movlw	high _custom_char6
   836   00113E  6E6B               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   837   001140  0E00               	movlw	0
   838   001142  6E6C               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   839   001144  ECA6  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   840   001148  0E02               	movlw	2
   841   00114A  6E72               	movwf	(??_main+1)^0,c
   842   00114C  0E45               	movlw	69
   843   00114E  6E71               	movwf	??_main^0,c
   844   001150  0EAA               	movlw	170
   845   001152                     u1887:
   846   001152  2EE8               	decfsz	wreg,f,c
   847   001154  D7FE               	bra	u1887
   848   001156  2E71               	decfsz	??_main^0,f,c
   849   001158  D7FC               	bra	u1887
   850   00115A  2E72               	decfsz	(??_main+1)^0,f,c
   851   00115C  D7FA               	bra	u1887
   852                           
   853                           ;application.c: 90:         lcd_8bit_send_custom_char(&lcd_2,1,20,custom_char1,0);_delay
      +                          ((unsigned long)((250)*(4000000/4000.0)));
   854   00115E  0E20               	movlw	low _lcd_2
   855   001160  6E69               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   856   001162  0E00               	movlw	high _lcd_2
   857   001164  6E6A               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   858   001166  0E01               	movlw	1
   859   001168  6E6B               	movwf	lcd_8bit_send_custom_char@row^0,c
   860   00116A  0E14               	movlw	20
   861   00116C  6E6C               	movwf	lcd_8bit_send_custom_char@column^0,c
   862   00116E  0E3A               	movlw	low _custom_char1
   863   001170  6E6D               	movwf	lcd_8bit_send_custom_char@_chr^0,c
   864   001172  0E00               	movlw	high _custom_char1
   865   001174  6E6E               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
   866   001176  0E00               	movlw	0
   867   001178  6E6F               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   868   00117A  EC68  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   869   00117E  0E02               	movlw	2
   870   001180  6E72               	movwf	(??_main+1)^0,c
   871   001182  0E45               	movlw	69
   872   001184  6E71               	movwf	??_main^0,c
   873   001186  0EAA               	movlw	170
   874   001188                     u1897:
   875   001188  2EE8               	decfsz	wreg,f,c
   876   00118A  D7FE               	bra	u1897
   877   00118C  2E71               	decfsz	??_main^0,f,c
   878   00118E  D7FC               	bra	u1897
   879   001190  2E72               	decfsz	(??_main+1)^0,f,c
   880   001192  D7FA               	bra	u1897
   881   001194                     
   882                           ;application.c: 91:         lcd_8bit_send_custom_char(&lcd_2,1,20,custom_char2,0);_delay
      +                          ((unsigned long)((250)*(4000000/4000.0)));
   883   001194  0E20               	movlw	low _lcd_2
   884   001196  6E69               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   885   001198  0E00               	movlw	high _lcd_2
   886   00119A  6E6A               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   887   00119C  0E01               	movlw	1
   888   00119E  6E6B               	movwf	lcd_8bit_send_custom_char@row^0,c
   889   0011A0  0E14               	movlw	20
   890   0011A2  6E6C               	movwf	lcd_8bit_send_custom_char@column^0,c
   891   0011A4  0E32               	movlw	low _custom_char2
   892   0011A6  6E6D               	movwf	lcd_8bit_send_custom_char@_chr^0,c
   893   0011A8  0E00               	movlw	high _custom_char2
   894   0011AA  6E6E               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
   895   0011AC  0E00               	movlw	0
   896   0011AE  6E6F               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   897   0011B0  EC68  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   898   0011B4  0E02               	movlw	2
   899   0011B6  6E72               	movwf	(??_main+1)^0,c
   900   0011B8  0E45               	movlw	69
   901   0011BA  6E71               	movwf	??_main^0,c
   902   0011BC  0EAA               	movlw	170
   903   0011BE                     u1907:
   904   0011BE  2EE8               	decfsz	wreg,f,c
   905   0011C0  D7FE               	bra	u1907
   906   0011C2  2E71               	decfsz	??_main^0,f,c
   907   0011C4  D7FC               	bra	u1907
   908   0011C6  2E72               	decfsz	(??_main+1)^0,f,c
   909   0011C8  D7FA               	bra	u1907
   910   0011CA                     
   911                           ;application.c: 92:         lcd_8bit_send_custom_char(&lcd_2,1,20,custom_char3,0);_delay
      +                          ((unsigned long)((250)*(4000000/4000.0)));
   912   0011CA  0E20               	movlw	low _lcd_2
   913   0011CC  6E69               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   914   0011CE  0E00               	movlw	high _lcd_2
   915   0011D0  6E6A               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   916   0011D2  0E01               	movlw	1
   917   0011D4  6E6B               	movwf	lcd_8bit_send_custom_char@row^0,c
   918   0011D6  0E14               	movlw	20
   919   0011D8  6E6C               	movwf	lcd_8bit_send_custom_char@column^0,c
   920   0011DA  0E2A               	movlw	low _custom_char3
   921   0011DC  6E6D               	movwf	lcd_8bit_send_custom_char@_chr^0,c
   922   0011DE  0E00               	movlw	high _custom_char3
   923   0011E0  6E6E               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
   924   0011E2  0E00               	movlw	0
   925   0011E4  6E6F               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   926   0011E6  EC68  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   927   0011EA  0E02               	movlw	2
   928   0011EC  6E72               	movwf	(??_main+1)^0,c
   929   0011EE  0E45               	movlw	69
   930   0011F0  6E71               	movwf	??_main^0,c
   931   0011F2  0EAA               	movlw	170
   932   0011F4                     u1917:
   933   0011F4  2EE8               	decfsz	wreg,f,c
   934   0011F6  D7FE               	bra	u1917
   935   0011F8  2E71               	decfsz	??_main^0,f,c
   936   0011FA  D7FC               	bra	u1917
   937   0011FC  2E72               	decfsz	(??_main+1)^0,f,c
   938   0011FE  D7FA               	bra	u1917
   939                           
   940                           ;application.c: 93:         lcd_8bit_send_custom_char(&lcd_2,1,20,custom_char4,0);_delay
      +                          ((unsigned long)((250)*(4000000/4000.0)));
   941   001200  0E20               	movlw	low _lcd_2
   942   001202  6E69               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   943   001204  0E00               	movlw	high _lcd_2
   944   001206  6E6A               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   945   001208  0E01               	movlw	1
   946   00120A  6E6B               	movwf	lcd_8bit_send_custom_char@row^0,c
   947   00120C  0E14               	movlw	20
   948   00120E  6E6C               	movwf	lcd_8bit_send_custom_char@column^0,c
   949   001210  0E98               	movlw	low _custom_char4
   950   001212  6E6D               	movwf	lcd_8bit_send_custom_char@_chr^0,c
   951   001214  0E00               	movlw	high _custom_char4
   952   001216  6E6E               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
   953   001218  0E00               	movlw	0
   954   00121A  6E6F               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   955   00121C  EC68  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   956   001220  0E02               	movlw	2
   957   001222  6E72               	movwf	(??_main+1)^0,c
   958   001224  0E45               	movlw	69
   959   001226  6E71               	movwf	??_main^0,c
   960   001228  0EAA               	movlw	170
   961   00122A                     u1927:
   962   00122A  2EE8               	decfsz	wreg,f,c
   963   00122C  D7FE               	bra	u1927
   964   00122E  2E71               	decfsz	??_main^0,f,c
   965   001230  D7FC               	bra	u1927
   966   001232  2E72               	decfsz	(??_main+1)^0,f,c
   967   001234  D7FA               	bra	u1927
   968   001236                     
   969                           ;application.c: 94:         lcd_8bit_send_custom_char(&lcd_2,1,20,custom_char5,0);_delay
      +                          ((unsigned long)((250)*(4000000/4000.0)));
   970   001236  0E20               	movlw	low _lcd_2
   971   001238  6E69               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   972   00123A  0E00               	movlw	high _lcd_2
   973   00123C  6E6A               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   974   00123E  0E01               	movlw	1
   975   001240  6E6B               	movwf	lcd_8bit_send_custom_char@row^0,c
   976   001242  0E14               	movlw	20
   977   001244  6E6C               	movwf	lcd_8bit_send_custom_char@column^0,c
   978   001246  0E90               	movlw	low _custom_char5
   979   001248  6E6D               	movwf	lcd_8bit_send_custom_char@_chr^0,c
   980   00124A  0E00               	movlw	high _custom_char5
   981   00124C  6E6E               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
   982   00124E  0E00               	movlw	0
   983   001250  6E6F               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   984   001252  EC68  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   985   001256  0E02               	movlw	2
   986   001258  6E72               	movwf	(??_main+1)^0,c
   987   00125A  0E45               	movlw	69
   988   00125C  6E71               	movwf	??_main^0,c
   989   00125E  0EAA               	movlw	170
   990   001260                     u1937:
   991   001260  2EE8               	decfsz	wreg,f,c
   992   001262  D7FE               	bra	u1937
   993   001264  2E71               	decfsz	??_main^0,f,c
   994   001266  D7FC               	bra	u1937
   995   001268  2E72               	decfsz	(??_main+1)^0,f,c
   996   00126A  D7FA               	bra	u1937
   997   00126C                     
   998                           ;application.c: 95:         lcd_8bit_send_custom_char(&lcd_2,1,20,custom_char6,0);_delay
      +                          ((unsigned long)((250)*(4000000/4000.0)));
   999   00126C  0E20               	movlw	low _lcd_2
  1000   00126E  6E69               	movwf	lcd_8bit_send_custom_char@lcd^0,c
  1001   001270  0E00               	movlw	high _lcd_2
  1002   001272  6E6A               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
  1003   001274  0E01               	movlw	1
  1004   001276  6E6B               	movwf	lcd_8bit_send_custom_char@row^0,c
  1005   001278  0E14               	movlw	20
  1006   00127A  6E6C               	movwf	lcd_8bit_send_custom_char@column^0,c
  1007   00127C  0E88               	movlw	low _custom_char6
  1008   00127E  6E6D               	movwf	lcd_8bit_send_custom_char@_chr^0,c
  1009   001280  0E00               	movlw	high _custom_char6
  1010   001282  6E6E               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
  1011   001284  0E00               	movlw	0
  1012   001286  6E6F               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
  1013   001288  EC68  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
  1014   00128C  0E02               	movlw	2
  1015   00128E  6E72               	movwf	(??_main+1)^0,c
  1016   001290  0E45               	movlw	69
  1017   001292  6E71               	movwf	??_main^0,c
  1018   001294  0EAA               	movlw	170
  1019   001296                     u1947:
  1020   001296  2EE8               	decfsz	wreg,f,c
  1021   001298  D7FE               	bra	u1947
  1022   00129A  2E71               	decfsz	??_main^0,f,c
  1023   00129C  D7FC               	bra	u1947
  1024   00129E  2E72               	decfsz	(??_main+1)^0,f,c
  1025   0012A0  D7FA               	bra	u1947
  1026   0012A2  EF0D  F008         	goto	l301
  1027   0012A6  EF00  F000         	goto	start
  1028   0012AA                     __end_of_main:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _lcd_8bit_send_custom_char *****************
  1032 ;; Defined at:
  1033 ;;		line 304 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  lcd             2   33[COMRAM] PTR const struct .
  1036 ;;		 -> lcd_2(10), 
  1037 ;;  row             1   35[COMRAM] unsigned char 
  1038 ;;  column          1   36[COMRAM] unsigned char 
  1039 ;;  _chr            2   37[COMRAM] PTR const unsigned char 
  1040 ;;		 -> custom_char6(8), custom_char5(8), custom_char4(8), custom_char3(8), 
  1041 ;;		 -> custom_char2(8), custom_char1(8), 
  1042 ;;  mem_pos         1   39[COMRAM] unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  lcd_counter     1   40[COMRAM] unsigned char 
  1045 ;;  ret             1    0        unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1055 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;Total ram usage:        8 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 5
  1062 ;; This function calls:
  1063 ;;		_lcd_8bit_send_char_data
  1064 ;;		_lcd_8bit_send_char_data_pos
  1065 ;;		_lcd_8bit_send_command
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text1
  1072   001AD0                     __ptext1:
  1073                           	callstack 0
  1074   001AD0                     _lcd_8bit_send_custom_char:
  1075                           	callstack 25
  1076   001AD0                     
  1077                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 307:     uint8 lcd_counter=0;
  1078   001AD0  0E00               	movlw	0
  1079   001AD2  6E70               	movwf	lcd_8bit_send_custom_char@lcd_counter^0,c
  1080   001AD4                     
  1081                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 308:     if(lcd==((void*)0)){
  1082   001AD4  5069               	movf	lcd_8bit_send_custom_char@lcd^0,w,c
  1083   001AD6  106A               	iorwf	(lcd_8bit_send_custom_char@lcd+1)^0,w,c
  1084   001AD8  A4D8               	btfss	status,2,c
  1085   001ADA  EF71  F00D         	goto	u1441
  1086   001ADE  EF73  F00D         	goto	u1440
  1087   001AE2                     u1441:
  1088   001AE2  EF75  F00D         	goto	l2500
  1089   001AE6                     u1440:
  1090   001AE6                     
  1091                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 310:     }
  1092   001AE6  EFA5  F00D         	goto	l425
  1093   001AEA                     l2500:
  1094   001AEA  C069  F054         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_command@lcd
  1095   001AEE  C06A  F055         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_command@lcd+1
  1096   001AF2  506F               	movf	lcd_8bit_send_custom_char@mem_pos^0,w,c
  1097   001AF4  0D08               	mullw	8
  1098   001AF6  50F3               	movf	243,w,c
  1099   001AF8  0F40               	addlw	64
  1100   001AFA  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1101   001AFC  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  1102   001B00                     
  1103                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 313:         for(lcd_counter=0;lcd_counter<8;lcd_count
      +                          er++){
  1104   001B00  0E00               	movlw	0
  1105   001B02  6E70               	movwf	lcd_8bit_send_custom_char@lcd_counter^0,c
  1106   001B04                     l2508:
  1107   001B04  C069  F054         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data@lcd
  1108   001B08  C06A  F055         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_char_data@lcd+1
  1109   001B0C  5070               	movf	lcd_8bit_send_custom_char@lcd_counter^0,w,c
  1110   001B0E  246D               	addwf	lcd_8bit_send_custom_char@_chr^0,w,c
  1111   001B10  6ED9               	movwf	fsr2l,c
  1112   001B12  0E00               	movlw	0
  1113   001B14  206E               	addwfc	(lcd_8bit_send_custom_char@_chr+1)^0,w,c
  1114   001B16  6EDA               	movwf	fsr2h,c
  1115   001B18  50DF               	movf	indf2,w,c
  1116   001B1A  6E56               	movwf	lcd_8bit_send_char_data@data^0,c
  1117   001B1C  EC4F  F00C         	call	_lcd_8bit_send_char_data	;wreg free
  1118   001B20                     
  1119                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 315:         }
  1120   001B20  2A70               	incf	lcd_8bit_send_custom_char@lcd_counter^0,f,c
  1121   001B22  0E07               	movlw	7
  1122   001B24  6470               	cpfsgt	lcd_8bit_send_custom_char@lcd_counter^0,c
  1123   001B26  EF97  F00D         	goto	u1451
  1124   001B2A  EF99  F00D         	goto	u1450
  1125   001B2E                     u1451:
  1126   001B2E  EF82  F00D         	goto	l2508
  1127   001B32                     u1450:
  1128   001B32  C069  F063         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data_pos@lcd
  1129   001B36  C06A  F064         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_char_data_pos@lcd+1
  1130   001B3A  C06B  F065         	movff	lcd_8bit_send_custom_char@row,lcd_8bit_send_char_data_pos@row
  1131   001B3E  C06C  F066         	movff	lcd_8bit_send_custom_char@column,lcd_8bit_send_char_data_pos@column
  1132   001B42  C06F  F067         	movff	lcd_8bit_send_custom_char@mem_pos,lcd_8bit_send_char_data_pos@data
  1133   001B46  ECD2  F00E         	call	_lcd_8bit_send_char_data_pos	;wreg free
  1134   001B4A                     l425:
  1135   001B4A  0012               	return		;funcret
  1136   001B4C                     __end_of_lcd_8bit_send_custom_char:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _lcd_8bit_send_char_data_pos *****************
  1140 ;; Defined at:
  1141 ;;		line 245 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  lcd             2   27[COMRAM] PTR const struct .
  1144 ;;		 -> lcd_2(10), 
  1145 ;;  row             1   29[COMRAM] unsigned char 
  1146 ;;  column          1   30[COMRAM] unsigned char 
  1147 ;;  data            1   31[COMRAM] unsigned char 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  ret             1   32[COMRAM] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      unsigned char 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1159 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;Total ram usage:        6 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 4
  1166 ;; This function calls:
  1167 ;;		_lcd_8bit_send_char_data
  1168 ;;		_lcd_8bit_set_cursor
  1169 ;; This function is called by:
  1170 ;;		_lcd_8bit_send_custom_char
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text2
  1175   001DA4                     __ptext2:
  1176                           	callstack 0
  1177   001DA4                     _lcd_8bit_send_char_data_pos:
  1178                           	callstack 25
  1179   001DA4                     
  1180                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 246:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1181   001DA4  0E01               	movlw	1
  1182   001DA6  6E68               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1183   001DA8                     
  1184                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 247:     if(lcd==((void*)0)){
  1185   001DA8  5063               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
  1186   001DAA  1064               	iorwf	(lcd_8bit_send_char_data_pos@lcd+1)^0,w,c
  1187   001DAC  A4D8               	btfss	status,2,c
  1188   001DAE  EFDB  F00E         	goto	u1411
  1189   001DB2  EFDD  F00E         	goto	u1410
  1190   001DB6                     u1411:
  1191   001DB6  EFE1  F00E         	goto	l2460
  1192   001DBA                     u1410:
  1193   001DBA                     
  1194                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 248:         ret=(Std_ReturnType)0x00;
  1195   001DBA  0E00               	movlw	0
  1196   001DBC  6E68               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1197                           
  1198                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 249:     }
  1199   001DBE  EFF3  F00E         	goto	l2462
  1200   001DC2                     l2460:
  1201                           
  1202                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 251:         lcd_8bit_set_cursor(lcd,row,column);
  1203   001DC2  C063  F05D         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
  1204   001DC6  C064  F05E         	movff	lcd_8bit_send_char_data_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  1205   001DCA  C065  F05F         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
  1206   001DCE  C066  F060         	movff	lcd_8bit_send_char_data_pos@column,lcd_8bit_set_cursor@column
  1207   001DD2  EC9F  F00B         	call	_lcd_8bit_set_cursor	;wreg free
  1208                           
  1209                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 252:         lcd_8bit_send_char_data(lcd,data);
  1210   001DD6  C063  F054         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
  1211   001DDA  C064  F055         	movff	lcd_8bit_send_char_data_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
  1212   001DDE  C067  F056         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
  1213   001DE2  EC4F  F00C         	call	_lcd_8bit_send_char_data	;wreg free
  1214   001DE6                     l2462:
  1215                           
  1216                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:     return ret;
  1217   001DE6  5068               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
  1218   001DE8  0012               	return		;funcret
  1219   001DEA                     __end_of_lcd_8bit_send_char_data_pos:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _lcd_8bit_set_cursor *****************
  1223 ;; Defined at:
  1224 ;;		line 412 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  lcd             2   21[COMRAM] PTR const struct .
  1227 ;;		 -> lcd_2(10), 
  1228 ;;  row             1   23[COMRAM] unsigned char 
  1229 ;;  column          1   24[COMRAM] unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  ret             1    0        unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      unsigned char 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;Total ram usage:        6 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 3
  1248 ;; This function calls:
  1249 ;;		_lcd_8bit_send_command
  1250 ;; This function is called by:
  1251 ;;		_lcd_8bit_send_char_data_pos
  1252 ;;		_lcd_8bit_send_string_pos
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text3
  1257   00173E                     __ptext3:
  1258                           	callstack 0
  1259   00173E                     _lcd_8bit_set_cursor:
  1260                           	callstack 25
  1261   00173E                     
  1262                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 414:     if(lcd==((void*)0)){
  1263   00173E  505D               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1264   001740  105E               	iorwf	(lcd_8bit_set_cursor@lcd+1)^0,w,c
  1265   001742  A4D8               	btfss	status,2,c
  1266   001744  EFA6  F00B         	goto	u1391
  1267   001748  EFA8  F00B         	goto	u1390
  1268   00174C                     u1391:
  1269   00174C  EFAA  F00B         	goto	l2416
  1270   001750                     u1390:
  1271   001750                     l2414:
  1272                           
  1273                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:     }
  1274   001750  EFF6  F00B         	goto	l467
  1275   001754                     l2416:
  1276                           
  1277                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 418:         column--;
  1278   001754  0660               	decf	lcd_8bit_set_cursor@column^0,f,c
  1279                           
  1280                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:         switch (row){
  1281   001756  EFD9  F00B         	goto	l2430
  1282   00175A                     l2418:
  1283   00175A  C05D  F054         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1284   00175E  C05E  F055         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1285   001762  5060               	movf	lcd_8bit_set_cursor@column^0,w,c
  1286   001764  0F80               	addlw	128
  1287   001766  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1288   001768  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  1289   00176C  EFF6  F00B         	goto	l467
  1290   001770                     l2420:
  1291   001770  C05D  F054         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1292   001774  C05E  F055         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1293   001778  5060               	movf	lcd_8bit_set_cursor@column^0,w,c
  1294   00177A  0FC0               	addlw	192
  1295   00177C  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1296   00177E  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  1297   001782  EFF6  F00B         	goto	l467
  1298   001786                     l2422:
  1299   001786  C05D  F054         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1300   00178A  C05E  F055         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1301   00178E  5060               	movf	lcd_8bit_set_cursor@column^0,w,c
  1302   001790  0F94               	addlw	148
  1303   001792  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1304   001794  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  1305   001798  EFF6  F00B         	goto	l467
  1306   00179C                     l2424:
  1307   00179C  C05D  F054         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1308   0017A0  C05E  F055         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  1309   0017A4  5060               	movf	lcd_8bit_set_cursor@column^0,w,c
  1310   0017A6  0FD4               	addlw	212
  1311   0017A8  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1312   0017AA  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  1313   0017AE  EFF6  F00B         	goto	l467
  1314   0017B2                     l2430:
  1315   0017B2  505F               	movf	lcd_8bit_set_cursor@row^0,w,c
  1316   0017B4  6E61               	movwf	??_lcd_8bit_set_cursor^0,c
  1317   0017B6  6A62               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1318                           
  1319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 1, Range of values is 0 to 0
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            4     3 (average)
  1325                           ;	Chosen strategy is simple_byte
  1326   0017B8  5062               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1327   0017BA  0A00               	xorlw	0	; case 0
  1328   0017BC  B4D8               	btfsc	status,2,c
  1329   0017BE  EFE3  F00B         	goto	l2892
  1330   0017C2  EFA8  F00B         	goto	l2414
  1331   0017C6                     l2892:
  1332                           
  1333                           ; Switch size 1, requested type "simple"
  1334                           ; Number of cases is 4, Range of values is 1 to 4
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; simple_byte           13     7 (average)
  1338                           ;	Chosen strategy is simple_byte
  1339   0017C6  5061               	movf	??_lcd_8bit_set_cursor^0,w,c
  1340   0017C8  0A01               	xorlw	1	; case 1
  1341   0017CA  B4D8               	btfsc	status,2,c
  1342   0017CC  EFAD  F00B         	goto	l2418
  1343   0017D0  0A03               	xorlw	3	; case 2
  1344   0017D2  B4D8               	btfsc	status,2,c
  1345   0017D4  EFB8  F00B         	goto	l2420
  1346   0017D8  0A01               	xorlw	1	; case 3
  1347   0017DA  B4D8               	btfsc	status,2,c
  1348   0017DC  EFC3  F00B         	goto	l2422
  1349   0017E0  0A07               	xorlw	7	; case 4
  1350   0017E2  B4D8               	btfsc	status,2,c
  1351   0017E4  EFCE  F00B         	goto	l2424
  1352   0017E8  EFA8  F00B         	goto	l2414
  1353   0017EC                     l467:
  1354   0017EC  0012               	return		;funcret
  1355   0017EE                     __end_of_lcd_8bit_set_cursor:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _lcd_8bit_send_char_data *****************
  1359 ;; Defined at:
  1360 ;;		line 222 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  lcd             2   12[COMRAM] PTR const struct .
  1363 ;;		 -> lcd_2(10), 
  1364 ;;  data            1   14[COMRAM] unsigned char 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  l_pins_count    1   20[COMRAM] unsigned char 
  1367 ;;  ret             1   19[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      unsigned char 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1377 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;Total ram usage:        9 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 2
  1384 ;; This function calls:
  1385 ;;		_gpio_pin_write_logic
  1386 ;;		_lcd_8bit_send_enable_signal
  1387 ;; This function is called by:
  1388 ;;		_lcd_8bit_send_char_data_pos
  1389 ;;		_lcd_8bit_send_custom_char
  1390 ;;		_lcd_8bit_send_string
  1391 ;;		_lcd_8bit_send_string_pos
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text4
  1396   00189E                     __ptext4:
  1397                           	callstack 0
  1398   00189E                     _lcd_8bit_send_char_data:
  1399                           	callstack 26
  1400   00189E                     
  1401                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:      uint8 l_pins_counter=0;
  1402   00189E  0E00               	movlw	0
  1403   0018A0  6E5C               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
  1404   0018A2                     
  1405                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 225:     if(lcd==((void*)0)){
  1406   0018A2  5054               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1407   0018A4  1055               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1408   0018A6  A4D8               	btfss	status,2,c
  1409   0018A8  EF58  F00C         	goto	u1361
  1410   0018AC  EF5A  F00C         	goto	u1360
  1411   0018B0                     u1361:
  1412   0018B0  EF5E  F00C         	goto	l2390
  1413   0018B4                     u1360:
  1414   0018B4                     
  1415                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:         ret=(Std_ReturnType)0x00;
  1416   0018B4  0E00               	movlw	0
  1417   0018B6  6E5B               	movwf	lcd_8bit_send_char_data@ret^0,c
  1418                           
  1419                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:     }
  1420   0018B8  EF95  F00C         	goto	l2406
  1421   0018BC                     l2390:
  1422   0018BC  C054  F048         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1423   0018C0  C055  F049         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1424   0018C4  0E01               	movlw	1
  1425   0018C6  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  1426   0018C8  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  1427   0018CC                     
  1428                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:         for(l_pins_counter=0;l_pins_counter<8;l_p
      +                          ins_counter++){
  1429   0018CC  0E00               	movlw	0
  1430   0018CE  6E5C               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
  1431   0018D0                     l2398:
  1432                           
  1433                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 231:          ret=gpio_pin_write_logic(&(lcd->lcd_data
      +                          [l_pins_counter]),( data >> l_pins_counter ) & (uint8)0x01);
  1434   0018D0  505C               	movf	lcd_8bit_send_char_data@l_pins_counter^0,w,c
  1435   0018D2  2454               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
  1436   0018D4  6E57               	movwf	??_lcd_8bit_send_char_data^0,c
  1437   0018D6  0E00               	movlw	0
  1438   0018D8  2055               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  1439   0018DA  6E58               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
  1440   0018DC  0E02               	movlw	2
  1441   0018DE  2457               	addwf	??_lcd_8bit_send_char_data^0,w,c
  1442   0018E0  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  1443   0018E2  0E00               	movlw	0
  1444   0018E4  2058               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
  1445   0018E6  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1446   0018E8  C05C  F059         	movff	lcd_8bit_send_char_data@l_pins_counter,??_lcd_8bit_send_char_data+2
  1447   0018EC  C056  F05A         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
  1448   0018F0  2A59               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
  1449   0018F2  EF7D  F00C         	goto	u1374
  1450   0018F6                     u1375:
  1451   0018F6  90D8               	bcf	status,0,c
  1452   0018F8  325A               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
  1453   0018FA                     u1374:
  1454   0018FA  2E59               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
  1455   0018FC  EF7B  F00C         	goto	u1375
  1456   001900  505A               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
  1457   001902  0B01               	andlw	1
  1458   001904  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  1459   001906  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  1460   00190A  6E5B               	movwf	lcd_8bit_send_char_data@ret^0,c
  1461   00190C                     
  1462                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 232:         }
  1463   00190C  2A5C               	incf	lcd_8bit_send_char_data@l_pins_counter^0,f,c
  1464   00190E  0E07               	movlw	7
  1465   001910  645C               	cpfsgt	lcd_8bit_send_char_data@l_pins_counter^0,c
  1466   001912  EF8D  F00C         	goto	u1381
  1467   001916  EF8F  F00C         	goto	u1380
  1468   00191A                     u1381:
  1469   00191A  EF68  F00C         	goto	l2398
  1470   00191E                     u1380:
  1471   00191E                     
  1472                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 233:         lcd_8bit_send_enable_signal(lcd);
  1473   00191E  C054  F052         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1474   001922  C055  F053         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1475   001926  EC18  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  1476   00192A                     l2406:
  1477                           
  1478                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 235:     return ret;
  1479   00192A  505B               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1480   00192C  0012               	return		;funcret
  1481   00192E                     __end_of_lcd_8bit_send_char_data:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _lcd_4bit_send_custom_char *****************
  1485 ;; Defined at:
  1486 ;;		line 144 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  lcd             2   30[COMRAM] PTR const struct .
  1489 ;;		 -> lcd1(6), 
  1490 ;;  row             1   32[COMRAM] unsigned char 
  1491 ;;  column          1   33[COMRAM] unsigned char 
  1492 ;;  _chr            2   34[COMRAM] PTR const unsigned char 
  1493 ;;		 -> custom_char6(8), custom_char5(8), custom_char4(8), custom_char3(8), 
  1494 ;;		 -> custom_char2(8), custom_char1(8), 
  1495 ;;  mem_pos         1   36[COMRAM] unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  lcd_counter     1   37[COMRAM] unsigned char 
  1498 ;;  ret             1    0        unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:        8 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 5
  1515 ;; This function calls:
  1516 ;;		_lcd_4bit_send_char_data
  1517 ;;		_lcd_4bit_send_char_data_pos
  1518 ;;		_lcd_4bit_send_command
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text5
  1525   001B4C                     __ptext5:
  1526                           	callstack 0
  1527   001B4C                     _lcd_4bit_send_custom_char:
  1528                           	callstack 25
  1529   001B4C                     
  1530                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 147:     uint8 lcd_counter=0;
  1531   001B4C  0E00               	movlw	0
  1532   001B4E  6E6D               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1533   001B50                     
  1534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 148:     if(lcd==((void*)0)){
  1535   001B50  5066               	movf	lcd_4bit_send_custom_char@lcd^0,w,c
  1536   001B52  1067               	iorwf	(lcd_4bit_send_custom_char@lcd+1)^0,w,c
  1537   001B54  A4D8               	btfss	status,2,c
  1538   001B56  EFAF  F00D         	goto	u1421
  1539   001B5A  EFB1  F00D         	goto	u1420
  1540   001B5E                     u1421:
  1541   001B5E  EFB3  F00D         	goto	l2476
  1542   001B62                     u1420:
  1543   001B62                     
  1544                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 150:     }
  1545   001B62  EFE3  F00D         	goto	l376
  1546   001B66                     l2476:
  1547   001B66  C066  F056         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_command@lcd
  1548   001B6A  C067  F057         	movff	lcd_4bit_send_custom_char@lcd+1,lcd_4bit_send_command@lcd+1
  1549   001B6E  506C               	movf	lcd_4bit_send_custom_char@mem_pos^0,w,c
  1550   001B70  0D08               	mullw	8
  1551   001B72  50F3               	movf	243,w,c
  1552   001B74  0F40               	addlw	64
  1553   001B76  6E58               	movwf	lcd_4bit_send_command@command^0,c
  1554   001B78  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  1555   001B7C                     
  1556                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 153:         for(lcd_counter=0;lcd_counter<8;lcd_count
      +                          er++){
  1557   001B7C  0E00               	movlw	0
  1558   001B7E  6E6D               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1559   001B80                     l2484:
  1560   001B80  C066  F056         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data@lcd
  1561   001B84  C067  F057         	movff	lcd_4bit_send_custom_char@lcd+1,lcd_4bit_send_char_data@lcd+1
  1562   001B88  506D               	movf	lcd_4bit_send_custom_char@lcd_counter^0,w,c
  1563   001B8A  246A               	addwf	lcd_4bit_send_custom_char@_chr^0,w,c
  1564   001B8C  6ED9               	movwf	fsr2l,c
  1565   001B8E  0E00               	movlw	0
  1566   001B90  206B               	addwfc	(lcd_4bit_send_custom_char@_chr+1)^0,w,c
  1567   001B92  6EDA               	movwf	fsr2h,c
  1568   001B94  50DF               	movf	indf2,w,c
  1569   001B96  6E58               	movwf	lcd_4bit_send_char_data@data^0,c
  1570   001B98  ECE4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
  1571   001B9C                     
  1572                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 155:         }
  1573   001B9C  2A6D               	incf	lcd_4bit_send_custom_char@lcd_counter^0,f,c
  1574   001B9E  0E07               	movlw	7
  1575   001BA0  646D               	cpfsgt	lcd_4bit_send_custom_char@lcd_counter^0,c
  1576   001BA2  EFD5  F00D         	goto	u1431
  1577   001BA6  EFD7  F00D         	goto	u1430
  1578   001BAA                     u1431:
  1579   001BAA  EFC0  F00D         	goto	l2484
  1580   001BAE                     u1430:
  1581   001BAE  C066  F060         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data_pos@lcd
  1582   001BB2  C067  F061         	movff	lcd_4bit_send_custom_char@lcd+1,lcd_4bit_send_char_data_pos@lcd+1
  1583   001BB6  C068  F062         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
  1584   001BBA  C069  F063         	movff	lcd_4bit_send_custom_char@column,lcd_4bit_send_char_data_pos@column
  1585   001BBE  C06C  F064         	movff	lcd_4bit_send_custom_char@mem_pos,lcd_4bit_send_char_data_pos@data
  1586   001BC2  ECF5  F00E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1587   001BC6                     l376:
  1588   001BC6  0012               	return		;funcret
  1589   001BC8                     __end_of_lcd_4bit_send_custom_char:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1593 ;; Defined at:
  1594 ;;		line 85 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  lcd             2   24[COMRAM] PTR const struct .
  1597 ;;		 -> lcd1(6), 
  1598 ;;  row             1   26[COMRAM] unsigned char 
  1599 ;;  column          1   27[COMRAM] unsigned char 
  1600 ;;  data            1   28[COMRAM] unsigned char 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  ret             1   29[COMRAM] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        6 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 4
  1619 ;; This function calls:
  1620 ;;		_lcd_4bit_send_char_data
  1621 ;;		_lcd_4bit_set_cursor
  1622 ;; This function is called by:
  1623 ;;		_lcd_4bit_send_custom_char
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text6
  1628   001DEA                     __ptext6:
  1629                           	callstack 0
  1630   001DEA                     _lcd_4bit_send_char_data_pos:
  1631                           	callstack 25
  1632   001DEA                     
  1633                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 86:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1634   001DEA  0E01               	movlw	1
  1635   001DEC  6E65               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1636   001DEE                     
  1637                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 87:     if(lcd==((void*)0)){
  1638   001DEE  5060               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1639   001DF0  1061               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  1640   001DF2  A4D8               	btfss	status,2,c
  1641   001DF4  EFFE  F00E         	goto	u1401
  1642   001DF8  EF00  F00F         	goto	u1400
  1643   001DFC                     u1401:
  1644   001DFC  EF04  F00F         	goto	l2448
  1645   001E00                     u1400:
  1646   001E00                     
  1647                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:         ret=(Std_ReturnType)0x00;
  1648   001E00  0E00               	movlw	0
  1649   001E02  6E65               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1650                           
  1651                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 89:     }
  1652   001E04  EF16  F00F         	goto	l2450
  1653   001E08                     l2448:
  1654                           
  1655                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         lcd_4bit_set_cursor(lcd,row,column);
  1656   001E08  C060  F05A         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1657   001E0C  C061  F05B         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1658   001E10  C062  F05C         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1659   001E14  C063  F05D         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  1660   001E18  ECF7  F00B         	call	_lcd_4bit_set_cursor	;wreg free
  1661                           
  1662                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         lcd_4bit_send_char_data(lcd,data);
  1663   001E1C  C060  F056         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1664   001E20  C061  F057         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1665   001E24  C064  F058         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1666   001E28  ECE4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
  1667   001E2C                     l2450:
  1668                           
  1669                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 94:     return ret;
  1670   001E2C  5065               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1671   001E2E  0012               	return		;funcret
  1672   001E30                     __end_of_lcd_4bit_send_char_data_pos:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _lcd_4bit_set_cursor *****************
  1676 ;; Defined at:
  1677 ;;		line 429 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  lcd             2   18[COMRAM] PTR const struct .
  1680 ;;		 -> lcd1(6), 
  1681 ;;  row             1   20[COMRAM] unsigned char 
  1682 ;;  column          1   21[COMRAM] unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  ret             1    0        unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      unsigned char 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;Total ram usage:        6 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 3
  1701 ;; This function calls:
  1702 ;;		_lcd_4bit_send_command
  1703 ;; This function is called by:
  1704 ;;		_lcd_4bit_send_char_data_pos
  1705 ;;		_lcd_4bit_send_string_pos
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text7
  1710   0017EE                     __ptext7:
  1711                           	callstack 0
  1712   0017EE                     _lcd_4bit_set_cursor:
  1713                           	callstack 25
  1714   0017EE                     
  1715                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 431:     if(lcd==((void*)0)){
  1716   0017EE  505A               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1717   0017F0  105B               	iorwf	(lcd_4bit_set_cursor@lcd+1)^0,w,c
  1718   0017F2  A4D8               	btfss	status,2,c
  1719   0017F4  EFFE  F00B         	goto	u1351
  1720   0017F8  EF00  F00C         	goto	u1350
  1721   0017FC                     u1351:
  1722   0017FC  EF02  F00C         	goto	l2364
  1723   001800                     u1350:
  1724   001800                     l2362:
  1725                           
  1726                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 433:     }
  1727   001800  EF4E  F00C         	goto	l479
  1728   001804                     l2364:
  1729                           
  1730                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 435:         column--;
  1731   001804  065D               	decf	lcd_4bit_set_cursor@column^0,f,c
  1732                           
  1733                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 436:         switch (row){
  1734   001806  EF31  F00C         	goto	l2378
  1735   00180A                     l2366:
  1736   00180A  C05A  F056         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1737   00180E  C05B  F057         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1738   001812  505D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1739   001814  0F80               	addlw	128
  1740   001816  6E58               	movwf	lcd_4bit_send_command@command^0,c
  1741   001818  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  1742   00181C  EF4E  F00C         	goto	l479
  1743   001820                     l2368:
  1744   001820  C05A  F056         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1745   001824  C05B  F057         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1746   001828  505D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1747   00182A  0FC0               	addlw	192
  1748   00182C  6E58               	movwf	lcd_4bit_send_command@command^0,c
  1749   00182E  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  1750   001832  EF4E  F00C         	goto	l479
  1751   001836                     l2370:
  1752   001836  C05A  F056         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1753   00183A  C05B  F057         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1754   00183E  505D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1755   001840  0F94               	addlw	148
  1756   001842  6E58               	movwf	lcd_4bit_send_command@command^0,c
  1757   001844  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  1758   001848  EF4E  F00C         	goto	l479
  1759   00184C                     l2372:
  1760   00184C  C05A  F056         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1761   001850  C05B  F057         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1762   001854  505D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1763   001856  0FD4               	addlw	212
  1764   001858  6E58               	movwf	lcd_4bit_send_command@command^0,c
  1765   00185A  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  1766   00185E  EF4E  F00C         	goto	l479
  1767   001862                     l2378:
  1768   001862  505C               	movf	lcd_4bit_set_cursor@row^0,w,c
  1769   001864  6E5E               	movwf	??_lcd_4bit_set_cursor^0,c
  1770   001866  6A5F               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1771                           
  1772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 1, Range of values is 0 to 0
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte            4     3 (average)
  1778                           ;	Chosen strategy is simple_byte
  1779   001868  505F               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1780   00186A  0A00               	xorlw	0	; case 0
  1781   00186C  B4D8               	btfsc	status,2,c
  1782   00186E  EF3B  F00C         	goto	l2894
  1783   001872  EF00  F00C         	goto	l2362
  1784   001876                     l2894:
  1785                           
  1786                           ; Switch size 1, requested type "simple"
  1787                           ; Number of cases is 4, Range of values is 1 to 4
  1788                           ; switch strategies available:
  1789                           ; Name         Instructions Cycles
  1790                           ; simple_byte           13     7 (average)
  1791                           ;	Chosen strategy is simple_byte
  1792   001876  505E               	movf	??_lcd_4bit_set_cursor^0,w,c
  1793   001878  0A01               	xorlw	1	; case 1
  1794   00187A  B4D8               	btfsc	status,2,c
  1795   00187C  EF05  F00C         	goto	l2366
  1796   001880  0A03               	xorlw	3	; case 2
  1797   001882  B4D8               	btfsc	status,2,c
  1798   001884  EF10  F00C         	goto	l2368
  1799   001888  0A01               	xorlw	1	; case 3
  1800   00188A  B4D8               	btfsc	status,2,c
  1801   00188C  EF1B  F00C         	goto	l2370
  1802   001890  0A07               	xorlw	7	; case 4
  1803   001892  B4D8               	btfsc	status,2,c
  1804   001894  EF26  F00C         	goto	l2372
  1805   001898  EF00  F00C         	goto	l2362
  1806   00189C                     l479:
  1807   00189C  0012               	return		;funcret
  1808   00189E                     __end_of_lcd_4bit_set_cursor:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _lcd_4bit_send_char_data *****************
  1812 ;; Defined at:
  1813 ;;		line 63 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  lcd             2   14[COMRAM] PTR const struct .
  1816 ;;		 -> lcd1(6), 
  1817 ;;  data            1   16[COMRAM] unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  ret             1   17[COMRAM] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      unsigned char 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1829 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;Total ram usage:        4 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 2
  1836 ;; This function calls:
  1837 ;;		_gpio_pin_write_logic
  1838 ;;		_lcd_4bit_send_enable_signal
  1839 ;;		_lcd_send_4bits
  1840 ;; This function is called by:
  1841 ;;		_lcd_4bit_send_char_data_pos
  1842 ;;		_lcd_4bit_send_custom_char
  1843 ;;		_lcd_4bit_send_string
  1844 ;;		_lcd_4bit_send_string_pos
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text8
  1849   001BC8                     __ptext8:
  1850                           	callstack 0
  1851   001BC8                     _lcd_4bit_send_char_data:
  1852                           	callstack 26
  1853   001BC8                     
  1854                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     if(lcd==((void*)0)){
  1855   001BC8  5056               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1856   001BCA  1057               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1857   001BCC  A4D8               	btfss	status,2,c
  1858   001BCE  EFEB  F00D         	goto	u1341
  1859   001BD2  EFED  F00D         	goto	u1340
  1860   001BD6                     u1341:
  1861   001BD6  EFF1  F00D         	goto	l2352
  1862   001BDA                     u1340:
  1863   001BDA                     
  1864                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret=(Std_ReturnType)0x00;
  1865   001BDA  0E00               	movlw	0
  1866   001BDC  6E59               	movwf	lcd_4bit_send_char_data@ret^0,c
  1867                           
  1868                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:     }
  1869   001BDE  EF1B  F00E         	goto	l2354
  1870   001BE2                     l2352:
  1871                           
  1872                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  1873   001BE2  C056  F048         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1874   001BE6  C057  F049         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1875   001BEA  0E01               	movlw	1
  1876   001BEC  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  1877   001BEE  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  1878   001BF2  6E59               	movwf	lcd_4bit_send_char_data@ret^0,c
  1879                           
  1880                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret=lcd_send_4bits(lcd, data >> 4);
  1881   001BF4  C056  F052         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1882   001BF8  C057  F053         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1883   001BFC  3858               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1884   001BFE  0B0F               	andlw	15
  1885   001C00  6E54               	movwf	lcd_send_4bits@_data_command^0,c
  1886   001C02  EC24  F00D         	call	_lcd_send_4bits	;wreg free
  1887   001C06  6E59               	movwf	lcd_4bit_send_char_data@ret^0,c
  1888                           
  1889                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_4bit_send_enable_signal(lcd);
  1890   001C08  C056  F052         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1891   001C0C  C057  F053         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1892   001C10  EC87  F00E         	call	_lcd_4bit_send_enable_signal	;wreg free
  1893   001C14  6E59               	movwf	lcd_4bit_send_char_data@ret^0,c
  1894                           
  1895                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_send_4bits(lcd, data);
  1896   001C16  C056  F052         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1897   001C1A  C057  F053         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1898   001C1E  C058  F054         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1899   001C22  EC24  F00D         	call	_lcd_send_4bits	;wreg free
  1900   001C26  6E59               	movwf	lcd_4bit_send_char_data@ret^0,c
  1901                           
  1902                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_4bit_send_enable_signal(lcd);
  1903   001C28  C056  F052         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1904   001C2C  C057  F053         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1905   001C30  EC87  F00E         	call	_lcd_4bit_send_enable_signal	;wreg free
  1906   001C34  6E59               	movwf	lcd_4bit_send_char_data@ret^0,c
  1907   001C36                     l2354:
  1908                           
  1909                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:     return ret;
  1910   001C36  5059               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1911   001C38  0012               	return		;funcret
  1912   001C3A                     __end_of_lcd_4bit_send_char_data:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _application_initialize *****************
  1916 ;; Defined at:
  1917 ;;		line 102 in file "application.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  ret             1    0        unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 5
  1938 ;; This function calls:
  1939 ;;		_ecu_layer_initialize
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text9
  1946   001EB0                     __ptext9:
  1947                           	callstack 0
  1948   001EB0                     _application_initialize:
  1949                           	callstack 25
  1950   001EB0                     
  1951                           ;application.c: 104:     ecu_layer_initialize();
  1952   001EB0  EC4B  F00F         	call	_ecu_layer_initialize	;wreg free
  1953   001EB4  0012               	return		;funcret
  1954   001EB6                     __end_of_application_initialize:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _ecu_layer_initialize *****************
  1958 ;; Defined at:
  1959 ;;		line 111 in file "ECU_Layer/ecu_layer_init.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  ret             1    0        unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 4
  1980 ;; This function calls:
  1981 ;;		_lcd_4bit_initialize
  1982 ;;		_lcd_8bit_initialize
  1983 ;; This function is called by:
  1984 ;;		_application_initialize
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text10
  1989   001E96                     __ptext10:
  1990                           	callstack 0
  1991   001E96                     _ecu_layer_initialize:
  1992                           	callstack 25
  1993   001E96  0E42               	movlw	low _lcd1
  1994   001E98  6E5A               	movwf	lcd_4bit_initialize@lcd^0,c
  1995   001E9A  0E00               	movlw	high _lcd1
  1996   001E9C  6E5B               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  1997   001E9E  EC31  F00B         	call	_lcd_4bit_initialize	;wreg free
  1998   001EA2  0E20               	movlw	low _lcd_2
  1999   001EA4  6E5D               	movwf	lcd_8bit_initialize@lcd^0,c
  2000   001EA6  0E00               	movlw	high _lcd_2
  2001   001EA8  6E5E               	movwf	(lcd_8bit_initialize@lcd+1)^0,c
  2002   001EAA  ECAB  F00A         	call	_lcd_8bit_initialize	;wreg free
  2003   001EAE  0012               	return		;funcret
  2004   001EB0                     __end_of_ecu_layer_initialize:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _lcd_8bit_initialize *****************
  2008 ;; Defined at:
  2009 ;;		line 167 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  lcd             2   21[COMRAM] PTR const struct .
  2012 ;;		 -> lcd_2(10), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  ret             1   26[COMRAM] unsigned char 
  2015 ;;  l_data_pins_    1   25[COMRAM] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      unsigned char 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:        6 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 3
  2032 ;; This function calls:
  2033 ;;		_gpio_pin_initialize
  2034 ;;		_lcd_8bit_send_command
  2035 ;; This function is called by:
  2036 ;;		_ecu_layer_initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text11
  2041   001556                     __ptext11:
  2042                           	callstack 0
  2043   001556                     _lcd_8bit_initialize:
  2044                           	callstack 25
  2045   001556                     
  2046                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:      uint8 l_data_pins_counter=0;
  2047   001556  0E00               	movlw	0
  2048   001558  6E61               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  2049   00155A                     
  2050                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:     if(lcd==((void*)0)){
  2051   00155A  505D               	movf	lcd_8bit_initialize@lcd^0,w,c
  2052   00155C  105E               	iorwf	(lcd_8bit_initialize@lcd+1)^0,w,c
  2053   00155E  A4D8               	btfss	status,2,c
  2054   001560  EFB4  F00A         	goto	u1321
  2055   001564  EFB6  F00A         	goto	u1320
  2056   001568                     u1321:
  2057   001568  EFBA  F00A         	goto	l2310
  2058   00156C                     u1320:
  2059   00156C                     
  2060                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:         ret=(Std_ReturnType)0x00;
  2061   00156C  0E00               	movlw	0
  2062   00156E  6E62               	movwf	lcd_8bit_initialize@ret^0,c
  2063                           
  2064                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 172:     }
  2065   001570  EF2F  F00B         	goto	l2342
  2066   001574                     l2310:
  2067                           
  2068                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  2069   001574  C05D  F052         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@pin_config
  2070   001578  C05E  F053         	movff	lcd_8bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  2071   00157C  ECDF  F00C         	call	_gpio_pin_initialize	;wreg free
  2072   001580  6E62               	movwf	lcd_8bit_initialize@ret^0,c
  2073                           
  2074                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 175:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  2075   001582  0E01               	movlw	1
  2076   001584  245D               	addwf	lcd_8bit_initialize@lcd^0,w,c
  2077   001586  6E52               	movwf	gpio_pin_initialize@pin_config^0,c
  2078   001588  0E00               	movlw	0
  2079   00158A  205E               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  2080   00158C  6E53               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  2081   00158E  ECDF  F00C         	call	_gpio_pin_initialize	;wreg free
  2082   001592  6E62               	movwf	lcd_8bit_initialize@ret^0,c
  2083   001594                     
  2084                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:         for(l_data_pins_counter=0;l_data_pins_cou
      +                          nter<8;l_data_pins_counter++){
  2085   001594  0E00               	movlw	0
  2086   001596  6E61               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  2087   001598                     l2318:
  2088   001598  5061               	movf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  2089   00159A  245D               	addwf	lcd_8bit_initialize@lcd^0,w,c
  2090   00159C  6E5F               	movwf	??_lcd_8bit_initialize^0,c
  2091   00159E  0E00               	movlw	0
  2092   0015A0  205E               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  2093   0015A2  6E60               	movwf	(??_lcd_8bit_initialize+1)^0,c
  2094   0015A4  0E02               	movlw	2
  2095   0015A6  245F               	addwf	??_lcd_8bit_initialize^0,w,c
  2096   0015A8  6E52               	movwf	gpio_pin_initialize@pin_config^0,c
  2097   0015AA  0E00               	movlw	0
  2098   0015AC  2060               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  2099   0015AE  6E53               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  2100   0015B0  ECDF  F00C         	call	_gpio_pin_initialize	;wreg free
  2101   0015B4                     
  2102                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 178:         }
  2103   0015B4  2A61               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  2104   0015B6  0E07               	movlw	7
  2105   0015B8  6461               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  2106   0015BA  EFE1  F00A         	goto	u1331
  2107   0015BE  EFE3  F00A         	goto	u1330
  2108   0015C2                     u1331:
  2109   0015C2  EFCC  F00A         	goto	l2318
  2110   0015C6                     u1330:
  2111   0015C6                     
  2112                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 179:         _delay((unsigned long)((20)*(4000000/4000
      +                          .0)));
  2113   0015C6  0E1A               	movlw	26
  2114   0015C8  6E5F               	movwf	??_lcd_8bit_initialize^0,c
  2115   0015CA  0EF8               	movlw	248
  2116   0015CC                     u1957:
  2117   0015CC  2EE8               	decfsz	wreg,f,c
  2118   0015CE  D7FE               	bra	u1957
  2119   0015D0  2E5F               	decfsz	??_lcd_8bit_initialize^0,f,c
  2120   0015D2  D7FC               	bra	u1957
  2121   0015D4  D000               	nop2	
  2122   0015D6  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2123   0015DA  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2124   0015DE  0E38               	movlw	56
  2125   0015E0  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2126   0015E2  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2127   0015E6                     
  2128                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 181:         _delay((unsigned long)((5)*(4000000/4000.
      +                          0)));
  2129   0015E6  0E07               	movlw	7
  2130   0015E8  6E5F               	movwf	??_lcd_8bit_initialize^0,c
  2131   0015EA  0E7D               	movlw	125
  2132   0015EC                     u1967:
  2133   0015EC  2EE8               	decfsz	wreg,f,c
  2134   0015EE  D7FE               	bra	u1967
  2135   0015F0  2E5F               	decfsz	??_lcd_8bit_initialize^0,f,c
  2136   0015F2  D7FC               	bra	u1967
  2137   0015F4  F000               	nop	
  2138   0015F6  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2139   0015FA  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2140   0015FE  0E38               	movlw	56
  2141   001600  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2142   001602  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2143   001606                     
  2144                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 183:         _delay((unsigned long)((150)*(4000000/400
      +                          0000.0)));
  2145   001606  0E32               	movlw	50
  2146   001608                     u1977:
  2147   001608  2EE8               	decfsz	wreg,f,c
  2148   00160A  D7FE               	bra	u1977
  2149   00160C  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2150   001610  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2151   001614  0E38               	movlw	56
  2152   001616  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2153   001618  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2154   00161C  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2155   001620  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2156   001624  0E38               	movlw	56
  2157   001626  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2158   001628  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2159   00162C  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2160   001630  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2161   001634  0E01               	movlw	1
  2162   001636  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2163   001638  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2164   00163C  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2165   001640  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2166   001644  0E06               	movlw	6
  2167   001646  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2168   001648  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2169   00164C                     
  2170                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 188:         ret=lcd_8bit_send_command(lcd,0X0C);
  2171   00164C  C05D  F054         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2172   001650  C05E  F055         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  2173   001654  0E0C               	movlw	12
  2174   001656  6E56               	movwf	lcd_8bit_send_command@command^0,c
  2175   001658  EC97  F00C         	call	_lcd_8bit_send_command	;wreg free
  2176   00165C  6E62               	movwf	lcd_8bit_initialize@ret^0,c
  2177   00165E                     l2342:
  2178                           
  2179                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 192:     return ret;
  2180   00165E  5062               	movf	lcd_8bit_initialize@ret^0,w,c
  2181   001660  0012               	return		;funcret
  2182   001662                     __end_of_lcd_8bit_initialize:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _lcd_8bit_send_command *****************
  2186 ;; Defined at:
  2187 ;;		line 200 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  lcd             2   12[COMRAM] PTR const struct .
  2190 ;;		 -> lcd_2(10), 
  2191 ;;  command         1   14[COMRAM] unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  l_pins_count    1   20[COMRAM] unsigned char 
  2194 ;;  ret             1   19[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        9 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 2
  2211 ;; This function calls:
  2212 ;;		_gpio_pin_write_logic
  2213 ;;		_lcd_8bit_send_enable_signal
  2214 ;; This function is called by:
  2215 ;;		_lcd_8bit_initialize
  2216 ;;		_lcd_8bit_send_custom_char
  2217 ;;		_lcd_8bit_set_cursor
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222   00192E                     __ptext12:
  2223                           	callstack 0
  2224   00192E                     _lcd_8bit_send_command:
  2225                           	callstack 27
  2226   00192E                     
  2227                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 202:      uint8 l_pins_counter=0;
  2228   00192E  0E00               	movlw	0
  2229   001930  6E5C               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  2230   001932                     
  2231                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 203:     if(lcd==((void*)0)){
  2232   001932  5054               	movf	lcd_8bit_send_command@lcd^0,w,c
  2233   001934  1055               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  2234   001936  A4D8               	btfss	status,2,c
  2235   001938  EFA0  F00C         	goto	u1271
  2236   00193C  EFA2  F00C         	goto	u1270
  2237   001940                     u1271:
  2238   001940  EFA6  F00C         	goto	l2246
  2239   001944                     u1270:
  2240   001944                     
  2241                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 204:         ret=(Std_ReturnType)0x00;
  2242   001944  0E00               	movlw	0
  2243   001946  6E5B               	movwf	lcd_8bit_send_command@ret^0,c
  2244                           
  2245                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 205:     }
  2246   001948  EFDD  F00C         	goto	l2262
  2247   00194C                     l2246:
  2248   00194C  C054  F048         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin_config
  2249   001950  C055  F049         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  2250   001954  0E00               	movlw	0
  2251   001956  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2252   001958  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2253   00195C                     
  2254                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:         for(l_pins_counter=0;l_pins_counter<8;l_p
      +                          ins_counter++){
  2255   00195C  0E00               	movlw	0
  2256   00195E  6E5C               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  2257   001960                     l2254:
  2258                           
  2259                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 209:          ret=gpio_pin_write_logic(&(lcd->lcd_data
      +                          [l_pins_counter]),( command >> l_pins_counter ) & (uint8)0x01);
  2260   001960  505C               	movf	lcd_8bit_send_command@l_pins_counter^0,w,c
  2261   001962  2454               	addwf	lcd_8bit_send_command@lcd^0,w,c
  2262   001964  6E57               	movwf	??_lcd_8bit_send_command^0,c
  2263   001966  0E00               	movlw	0
  2264   001968  2055               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  2265   00196A  6E58               	movwf	(??_lcd_8bit_send_command+1)^0,c
  2266   00196C  0E02               	movlw	2
  2267   00196E  2457               	addwf	??_lcd_8bit_send_command^0,w,c
  2268   001970  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2269   001972  0E00               	movlw	0
  2270   001974  2058               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  2271   001976  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2272   001978  C05C  F059         	movff	lcd_8bit_send_command@l_pins_counter,??_lcd_8bit_send_command+2
  2273   00197C  C056  F05A         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  2274   001980  2A59               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  2275   001982  EFC5  F00C         	goto	u1284
  2276   001986                     u1285:
  2277   001986  90D8               	bcf	status,0,c
  2278   001988  325A               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  2279   00198A                     u1284:
  2280   00198A  2E59               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  2281   00198C  EFC3  F00C         	goto	u1285
  2282   001990  505A               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  2283   001992  0B01               	andlw	1
  2284   001994  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2285   001996  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2286   00199A  6E5B               	movwf	lcd_8bit_send_command@ret^0,c
  2287   00199C                     
  2288                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 210:         }
  2289   00199C  2A5C               	incf	lcd_8bit_send_command@l_pins_counter^0,f,c
  2290   00199E  0E07               	movlw	7
  2291   0019A0  645C               	cpfsgt	lcd_8bit_send_command@l_pins_counter^0,c
  2292   0019A2  EFD5  F00C         	goto	u1291
  2293   0019A6  EFD7  F00C         	goto	u1290
  2294   0019AA                     u1291:
  2295   0019AA  EFB0  F00C         	goto	l2254
  2296   0019AE                     u1290:
  2297   0019AE                     
  2298                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 211:         lcd_8bit_send_enable_signal(lcd);
  2299   0019AE  C054  F052         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  2300   0019B2  C055  F053         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  2301   0019B6  EC18  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  2302   0019BA                     l2262:
  2303                           
  2304                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 214:     return ret;
  2305   0019BA  505B               	movf	lcd_8bit_send_command@ret^0,w,c
  2306   0019BC  0012               	return		;funcret
  2307   0019BE                     __end_of_lcd_8bit_send_command:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _lcd_8bit_send_enable_signal *****************
  2311 ;; Defined at:
  2312 ;;		line 400 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  lcd             2   10[COMRAM] PTR const struct .
  2315 ;;		 -> lcd_2(10), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  ret             1    0        unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      unsigned char 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;Total ram usage:        2 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 1
  2334 ;; This function calls:
  2335 ;;		_gpio_pin_write_logic
  2336 ;; This function is called by:
  2337 ;;		_lcd_8bit_send_command
  2338 ;;		_lcd_8bit_send_char_data
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text13
  2343   001E30                     __ptext13:
  2344                           	callstack 0
  2345   001E30                     _lcd_8bit_send_enable_signal:
  2346                           	callstack 27
  2347   001E30                     
  2348                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:     if(lcd==((void*)0)){
  2349   001E30  5052               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2350   001E32  1053               	iorwf	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  2351   001E34  A4D8               	btfss	status,2,c
  2352   001E36  EF1F  F00F         	goto	u1221
  2353   001E3A  EF21  F00F         	goto	u1220
  2354   001E3E                     u1221:
  2355   001E3E  EF23  F00F         	goto	l2206
  2356   001E42                     u1220:
  2357   001E42                     
  2358                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:     }
  2359   001E42  EF3A  F00F         	goto	l455
  2360   001E46                     l2206:
  2361   001E46  0E01               	movlw	1
  2362   001E48  2452               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2363   001E4A  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2364   001E4C  0E00               	movlw	0
  2365   001E4E  2053               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  2366   001E50  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2367   001E52  0E01               	movlw	1
  2368   001E54  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2369   001E56  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2370   001E5A                     
  2371                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  2372   001E5A  D000               	nop2		;2 cycle nop
  2373   001E5C  D000               	nop2		;2 cycle nop
  2374   001E5E  F000               	nop	
  2375   001E60  0E01               	movlw	1
  2376   001E62  2452               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2377   001E64  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2378   001E66  0E00               	movlw	0
  2379   001E68  2053               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  2380   001E6A  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2381   001E6C  0E00               	movlw	0
  2382   001E6E  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2383   001E70  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2384   001E74                     l455:
  2385   001E74  0012               	return		;funcret
  2386   001E76                     __end_of_lcd_8bit_send_enable_signal:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _lcd_4bit_initialize *****************
  2390 ;; Defined at:
  2391 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  lcd             2   18[COMRAM] PTR const struct .
  2394 ;;		 -> lcd1(6), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  l_data_pins_    1   23[COMRAM] unsigned char 
  2397 ;;  ret             1   22[COMRAM] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      unsigned char 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;Total ram usage:        6 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 3
  2414 ;; This function calls:
  2415 ;;		_gpio_pin_initialize
  2416 ;;		_lcd_4bit_send_command
  2417 ;; This function is called by:
  2418 ;;		_ecu_layer_initialize
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text14
  2423   001662                     __ptext14:
  2424                           	callstack 0
  2425   001662                     _lcd_4bit_initialize:
  2426                           	callstack 25
  2427   001662                     
  2428                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  2429   001662  0E00               	movlw	0
  2430   001664  6E5F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  2431   001666                     
  2432                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  2433   001666  505A               	movf	lcd_4bit_initialize@lcd^0,w,c
  2434   001668  105B               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  2435   00166A  A4D8               	btfss	status,2,c
  2436   00166C  EF3A  F00B         	goto	u1301
  2437   001670  EF3C  F00B         	goto	u1300
  2438   001674                     u1301:
  2439   001674  EF40  F00B         	goto	l2272
  2440   001678                     u1300:
  2441   001678                     
  2442                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  2443   001678  0E00               	movlw	0
  2444   00167A  6E5E               	movwf	lcd_4bit_initialize@ret^0,c
  2445                           
  2446                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  2447   00167C  EF9D  F00B         	goto	l2300
  2448   001680                     l2272:
  2449                           
  2450                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  2451   001680  C05A  F052         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  2452   001684  C05B  F053         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  2453   001688  ECDF  F00C         	call	_gpio_pin_initialize	;wreg free
  2454   00168C  6E5E               	movwf	lcd_4bit_initialize@ret^0,c
  2455                           
  2456                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  2457   00168E  0E01               	movlw	1
  2458   001690  245A               	addwf	lcd_4bit_initialize@lcd^0,w,c
  2459   001692  6E52               	movwf	gpio_pin_initialize@pin_config^0,c
  2460   001694  0E00               	movlw	0
  2461   001696  205B               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  2462   001698  6E53               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  2463   00169A  ECDF  F00C         	call	_gpio_pin_initialize	;wreg free
  2464   00169E  6E5E               	movwf	lcd_4bit_initialize@ret^0,c
  2465   0016A0                     
  2466                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  2467   0016A0  0E00               	movlw	0
  2468   0016A2  6E5F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  2469   0016A4                     l2280:
  2470   0016A4  505F               	movf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  2471   0016A6  245A               	addwf	lcd_4bit_initialize@lcd^0,w,c
  2472   0016A8  6E5C               	movwf	??_lcd_4bit_initialize^0,c
  2473   0016AA  0E00               	movlw	0
  2474   0016AC  205B               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  2475   0016AE  6E5D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  2476   0016B0  0E02               	movlw	2
  2477   0016B2  245C               	addwf	??_lcd_4bit_initialize^0,w,c
  2478   0016B4  6E52               	movwf	gpio_pin_initialize@pin_config^0,c
  2479   0016B6  0E00               	movlw	0
  2480   0016B8  205D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  2481   0016BA  6E53               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  2482   0016BC  ECDF  F00C         	call	_gpio_pin_initialize	;wreg free
  2483   0016C0                     
  2484                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  2485   0016C0  2A5F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  2486   0016C2  0E03               	movlw	3
  2487   0016C4  645F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  2488   0016C6  EF67  F00B         	goto	u1311
  2489   0016CA  EF69  F00B         	goto	u1310
  2490   0016CE                     u1311:
  2491   0016CE  EF52  F00B         	goto	l2280
  2492   0016D2                     u1310:
  2493   0016D2  C05A  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2494   0016D6  C05B  F057         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2495   0016DA  0E33               	movlw	51
  2496   0016DC  6E58               	movwf	lcd_4bit_send_command@command^0,c
  2497   0016DE  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  2498   0016E2                     
  2499                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((150)*(4000000/4000
      +                          000.0)));
  2500   0016E2  0E32               	movlw	50
  2501   0016E4                     u1987:
  2502   0016E4  2EE8               	decfsz	wreg,f,c
  2503   0016E6  D7FE               	bra	u1987
  2504   0016E8  C05A  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2505   0016EC  C05B  F057         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2506   0016F0  0E32               	movlw	50
  2507   0016F2  6E58               	movwf	lcd_4bit_send_command@command^0,c
  2508   0016F4  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  2509   0016F8  C05A  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2510   0016FC  C05B  F057         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2511   001700  0E28               	movlw	40
  2512   001702  6E58               	movwf	lcd_4bit_send_command@command^0,c
  2513   001704  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  2514   001708  C05A  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2515   00170C  C05B  F057         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2516   001710  0E01               	movlw	1
  2517   001712  6E58               	movwf	lcd_4bit_send_command@command^0,c
  2518   001714  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  2519   001718  C05A  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2520   00171C  C05B  F057         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2521   001720  0E06               	movlw	6
  2522   001722  6E58               	movwf	lcd_4bit_send_command@command^0,c
  2523   001724  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  2524   001728                     
  2525                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret=lcd_4bit_send_command(lcd,0X0C);
  2526   001728  C05A  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2527   00172C  C05B  F057         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  2528   001730  0E0C               	movlw	12
  2529   001732  6E58               	movwf	lcd_4bit_send_command@command^0,c
  2530   001734  EC1D  F00E         	call	_lcd_4bit_send_command	;wreg free
  2531   001738  6E5E               	movwf	lcd_4bit_initialize@ret^0,c
  2532   00173A                     l2300:
  2533                           
  2534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     return ret;
  2535   00173A  505E               	movf	lcd_4bit_initialize@ret^0,w,c
  2536   00173C  0012               	return		;funcret
  2537   00173E                     __end_of_lcd_4bit_initialize:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _lcd_4bit_send_command *****************
  2541 ;; Defined at:
  2542 ;;		line 43 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  lcd             2   14[COMRAM] PTR const struct .
  2545 ;;		 -> lcd1(6), 
  2546 ;;  command         1   16[COMRAM] unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  ret             1   17[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      unsigned char 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        4 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 2
  2565 ;; This function calls:
  2566 ;;		_gpio_pin_write_logic
  2567 ;;		_lcd_4bit_send_enable_signal
  2568 ;;		_lcd_send_4bits
  2569 ;; This function is called by:
  2570 ;;		_lcd_4bit_initialize
  2571 ;;		_lcd_4bit_send_custom_char
  2572 ;;		_lcd_4bit_set_cursor
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text15
  2577   001C3A                     __ptext15:
  2578                           	callstack 0
  2579   001C3A                     _lcd_4bit_send_command:
  2580                           	callstack 27
  2581   001C3A                     
  2582                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:     if(lcd==((void*)0)){
  2583   001C3A  5056               	movf	lcd_4bit_send_command@lcd^0,w,c
  2584   001C3C  1057               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  2585   001C3E  A4D8               	btfss	status,2,c
  2586   001C40  EF24  F00E         	goto	u1261
  2587   001C44  EF26  F00E         	goto	u1260
  2588   001C48                     u1261:
  2589   001C48  EF2A  F00E         	goto	l2234
  2590   001C4C                     u1260:
  2591   001C4C                     
  2592                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         ret=(Std_ReturnType)0x00;
  2593   001C4C  0E00               	movlw	0
  2594   001C4E  6E59               	movwf	lcd_4bit_send_command@ret^0,c
  2595                           
  2596                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:     }
  2597   001C50  EF54  F00E         	goto	l2236
  2598   001C54                     l2234:
  2599                           
  2600                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  2601   001C54  C056  F048         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  2602   001C58  C057  F049         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  2603   001C5C  0E00               	movlw	0
  2604   001C5E  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2605   001C60  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2606   001C64  6E59               	movwf	lcd_4bit_send_command@ret^0,c
  2607                           
  2608                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=lcd_send_4bits(lcd, command >> 4);
  2609   001C66  C056  F052         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2610   001C6A  C057  F053         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  2611   001C6E  3858               	swapf	lcd_4bit_send_command@command^0,w,c
  2612   001C70  0B0F               	andlw	15
  2613   001C72  6E54               	movwf	lcd_send_4bits@_data_command^0,c
  2614   001C74  EC24  F00D         	call	_lcd_send_4bits	;wreg free
  2615   001C78  6E59               	movwf	lcd_4bit_send_command@ret^0,c
  2616                           
  2617                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_4bit_send_enable_signal(lcd);
  2618   001C7A  C056  F052         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2619   001C7E  C057  F053         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2620   001C82  EC87  F00E         	call	_lcd_4bit_send_enable_signal	;wreg free
  2621   001C86  6E59               	movwf	lcd_4bit_send_command@ret^0,c
  2622                           
  2623                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_send_4bits(lcd, command);
  2624   001C88  C056  F052         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2625   001C8C  C057  F053         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  2626   001C90  C058  F054         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2627   001C94  EC24  F00D         	call	_lcd_send_4bits	;wreg free
  2628   001C98  6E59               	movwf	lcd_4bit_send_command@ret^0,c
  2629                           
  2630                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_4bit_send_enable_signal(lcd);
  2631   001C9A  C056  F052         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2632   001C9E  C057  F053         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  2633   001CA2  EC87  F00E         	call	_lcd_4bit_send_enable_signal	;wreg free
  2634   001CA6  6E59               	movwf	lcd_4bit_send_command@ret^0,c
  2635   001CA8                     l2236:
  2636                           
  2637                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:     return ret;
  2638   001CA8  5059               	movf	lcd_4bit_send_command@ret^0,w,c
  2639   001CAA  0012               	return		;funcret
  2640   001CAC                     __end_of_lcd_4bit_send_command:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _lcd_send_4bits *****************
  2644 ;; Defined at:
  2645 ;;		line 375 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  lcd             2   10[COMRAM] PTR const struct .
  2648 ;;		 -> lcd1(6), 
  2649 ;;  _data_comman    1   12[COMRAM] unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  ret             1   13[COMRAM] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      unsigned char 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:        4 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 1
  2668 ;; This function calls:
  2669 ;;		_gpio_pin_write_logic
  2670 ;; This function is called by:
  2671 ;;		_lcd_4bit_send_command
  2672 ;;		_lcd_4bit_send_char_data
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text16
  2677   001A48                     __ptext16:
  2678                           	callstack 0
  2679   001A48                     _lcd_send_4bits:
  2680                           	callstack 27
  2681   001A48                     
  2682                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 377:     if(lcd==((void*)0)){
  2683   001A48  5052               	movf	lcd_send_4bits@lcd^0,w,c
  2684   001A4A  1053               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  2685   001A4C  A4D8               	btfss	status,2,c
  2686   001A4E  EF2B  F00D         	goto	u1201
  2687   001A52  EF2D  F00D         	goto	u1200
  2688   001A56                     u1201:
  2689   001A56  EF31  F00D         	goto	l2180
  2690   001A5A                     u1200:
  2691   001A5A                     
  2692                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 378:         ret=(Std_ReturnType)0x00;
  2693   001A5A  0E00               	movlw	0
  2694   001A5C  6E55               	movwf	lcd_send_4bits@ret^0,c
  2695                           
  2696                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 379:     }
  2697   001A5E  EF66  F00D         	goto	l2182
  2698   001A62                     l2180:
  2699                           
  2700                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 381:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  2701   001A62  0E02               	movlw	2
  2702   001A64  2452               	addwf	lcd_send_4bits@lcd^0,w,c
  2703   001A66  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2704   001A68  0E00               	movlw	0
  2705   001A6A  2053               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2706   001A6C  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2707   001A6E  5054               	movf	lcd_send_4bits@_data_command^0,w,c
  2708   001A70  0B01               	andlw	1
  2709   001A72  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2710   001A74  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2711   001A78  6E55               	movwf	lcd_send_4bits@ret^0,c
  2712                           
  2713                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 382:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  2714   001A7A  0E03               	movlw	3
  2715   001A7C  2452               	addwf	lcd_send_4bits@lcd^0,w,c
  2716   001A7E  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2717   001A80  0E00               	movlw	0
  2718   001A82  2053               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2719   001A84  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2720   001A86  90D8               	bcf	status,0,c
  2721   001A88  3054               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2722   001A8A  0B01               	andlw	1
  2723   001A8C  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2724   001A8E  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2725   001A92  6E55               	movwf	lcd_send_4bits@ret^0,c
  2726                           
  2727                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 383:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  2728   001A94  0E04               	movlw	4
  2729   001A96  2452               	addwf	lcd_send_4bits@lcd^0,w,c
  2730   001A98  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2731   001A9A  0E00               	movlw	0
  2732   001A9C  2053               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2733   001A9E  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2734   001AA0  4054               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2735   001AA2  42E8               	rrncf	wreg,f,c
  2736   001AA4  0B3F               	andlw	63
  2737   001AA6  0B01               	andlw	1
  2738   001AA8  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2739   001AAA  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2740   001AAE  6E55               	movwf	lcd_send_4bits@ret^0,c
  2741                           
  2742                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 384:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  2743   001AB0  0E05               	movlw	5
  2744   001AB2  2452               	addwf	lcd_send_4bits@lcd^0,w,c
  2745   001AB4  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2746   001AB6  0E00               	movlw	0
  2747   001AB8  2053               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2748   001ABA  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2749   001ABC  3854               	swapf	lcd_send_4bits@_data_command^0,w,c
  2750   001ABE  46E8               	rlncf	wreg,f,c
  2751   001AC0  0B1F               	andlw	31
  2752   001AC2  0B01               	andlw	1
  2753   001AC4  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2754   001AC6  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2755   001ACA  6E55               	movwf	lcd_send_4bits@ret^0,c
  2756   001ACC                     l2182:
  2757                           
  2758                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 386:     return ret;
  2759   001ACC  5055               	movf	lcd_send_4bits@ret^0,w,c
  2760   001ACE  0012               	return		;funcret
  2761   001AD0                     __end_of_lcd_send_4bits:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2765 ;; Defined at:
  2766 ;;		line 388 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  lcd             2   10[COMRAM] PTR const struct .
  2769 ;;		 -> lcd1(6), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  ret             1   12[COMRAM] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      unsigned char 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;Total ram usage:        3 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; Hardware stack levels required when called: 1
  2788 ;; This function calls:
  2789 ;;		_gpio_pin_write_logic
  2790 ;; This function is called by:
  2791 ;;		_lcd_4bit_send_command
  2792 ;;		_lcd_4bit_send_char_data
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text17
  2797   001D0E                     __ptext17:
  2798                           	callstack 0
  2799   001D0E                     _lcd_4bit_send_enable_signal:
  2800                           	callstack 27
  2801   001D0E                     
  2802                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 390:     if(lcd==((void*)0)){
  2803   001D0E  5052               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2804   001D10  1053               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2805   001D12  A4D8               	btfss	status,2,c
  2806   001D14  EF8E  F00E         	goto	u1211
  2807   001D18  EF90  F00E         	goto	u1210
  2808   001D1C                     u1211:
  2809   001D1C  EF94  F00E         	goto	l2192
  2810   001D20                     u1210:
  2811   001D20                     
  2812                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 391:         ret=(Std_ReturnType)0x00;
  2813   001D20  0E00               	movlw	0
  2814   001D22  6E54               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2815                           
  2816                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 392:     }
  2817   001D24  EFAC  F00E         	goto	l2196
  2818   001D28                     l2192:
  2819   001D28  0E01               	movlw	1
  2820   001D2A  2452               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2821   001D2C  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2822   001D2E  0E00               	movlw	0
  2823   001D30  2053               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2824   001D32  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2825   001D34  0E01               	movlw	1
  2826   001D36  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2827   001D38  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2828   001D3C                     
  2829                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 395:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  2830   001D3C  D000               	nop2		;2 cycle nop
  2831   001D3E  D000               	nop2		;2 cycle nop
  2832   001D40  F000               	nop	
  2833                           
  2834                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 396:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  2835   001D42  0E01               	movlw	1
  2836   001D44  2452               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2837   001D46  6E48               	movwf	gpio_pin_write_logic@pin_config^0,c
  2838   001D48  0E00               	movlw	0
  2839   001D4A  2053               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2840   001D4C  6E49               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2841   001D4E  0E00               	movlw	0
  2842   001D50  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2843   001D52  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2844   001D56  6E54               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2845   001D58                     l2196:
  2846                           
  2847                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:     return ret;
  2848   001D58  5054               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2849   001D5A  0012               	return		;funcret
  2850   001D5C                     __end_of_lcd_4bit_send_enable_signal:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _gpio_pin_initialize *****************
  2854 ;; Defined at:
  2855 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  pin_config      2   10[COMRAM] PTR const struct .
  2858 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd1.lcd_data(4), lcd1(6), 
  2859 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  ret             1   13[COMRAM] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      unsigned char 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;Total ram usage:        4 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 1
  2878 ;; This function calls:
  2879 ;;		_gpio_pin_direction_initialize
  2880 ;;		_gpio_pin_write_logic
  2881 ;; This function is called by:
  2882 ;;		_lcd_4bit_initialize
  2883 ;;		_lcd_8bit_initialize
  2884 ;;		_seven_segment_initialize
  2885 ;;		_dc_motor_initialize
  2886 ;;		_keypad_initialize
  2887 ;;		_led_initialize
  2888 ;;		_relay_initialize
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text18
  2893   0019BE                     __ptext18:
  2894                           	callstack 0
  2895   0019BE                     _gpio_pin_initialize:
  2896                           	callstack 26
  2897   0019BE                     
  2898                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2899   0019BE  5052               	movf	gpio_pin_initialize@pin_config^0,w,c
  2900   0019C0  1053               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
  2901   0019C2  B4D8               	btfsc	status,2,c
  2902   0019C4  EFE6  F00C         	goto	u1231
  2903   0019C8  EFE8  F00C         	goto	u1230
  2904   0019CC                     u1231:
  2905   0019CC  EF08  F00D         	goto	l2220
  2906   0019D0                     u1230:
  2907   0019D0  C052  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2908   0019D4  C053  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2909   0019D8  30DF               	rrcf	223,w,c
  2910   0019DA  32E8               	rrcf	wreg,f,c
  2911   0019DC  32E8               	rrcf	wreg,f,c
  2912   0019DE  0B07               	andlw	7
  2913   0019E0  6E54               	movwf	??_gpio_pin_initialize^0,c
  2914   0019E2  0E08               	movlw	8
  2915   0019E4  6054               	cpfslt	??_gpio_pin_initialize^0,c
  2916   0019E6  EFF7  F00C         	goto	u1241
  2917   0019EA  EFF9  F00C         	goto	u1240
  2918   0019EE                     u1241:
  2919   0019EE  EF08  F00D         	goto	l2220
  2920   0019F2                     u1240:
  2921   0019F2  C052  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2922   0019F6  C053  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2923   0019FA  50DF               	movf	223,w,c
  2924   0019FC  0B07               	andlw	7
  2925   0019FE  6E54               	movwf	??_gpio_pin_initialize^0,c
  2926   001A00  0E04               	movlw	4
  2927   001A02  6454               	cpfsgt	??_gpio_pin_initialize^0,c
  2928   001A04  EF06  F00D         	goto	u1251
  2929   001A08  EF08  F00D         	goto	u1250
  2930   001A0C                     u1251:
  2931   001A0C  EF0C  F00D         	goto	l2222
  2932   001A10                     u1250:
  2933   001A10                     l2220:
  2934                           
  2935                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  2936   001A10  0E00               	movlw	0
  2937   001A12  6E55               	movwf	gpio_pin_initialize@ret^0,c
  2938                           
  2939                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  2940   001A14  EF22  F00D         	goto	l2224
  2941   001A18                     l2222:
  2942                           
  2943                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  2944   001A18  C052  F048         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  2945   001A1C  C053  F049         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  2946   001A20  EC55  F009         	call	_gpio_pin_direction_initialize	;wreg free
  2947   001A24  6E55               	movwf	gpio_pin_initialize@ret^0,c
  2948                           
  2949                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  2950   001A26  C052  F048         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  2951   001A2A  C053  F049         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  2952   001A2E  C052  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2953   001A32  C053  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2954   001A36  0E00               	movlw	0
  2955   001A38  BEDF               	btfsc	indf2,7,c
  2956   001A3A  0E01               	movlw	1
  2957   001A3C  6E4A               	movwf	gpio_pin_write_logic@logic^0,c
  2958   001A3E  EC06  F00A         	call	_gpio_pin_write_logic	;wreg free
  2959   001A42  6E55               	movwf	gpio_pin_initialize@ret^0,c
  2960   001A44                     l2224:
  2961                           
  2962                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  2963   001A44  5055               	movf	gpio_pin_initialize@ret^0,w,c
  2964   001A46  0012               	return		;funcret
  2965   001A48                     __end_of_gpio_pin_initialize:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _gpio_pin_write_logic *****************
  2969 ;; Defined at:
  2970 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  pin_config      2    0[COMRAM] PTR const struct .
  2973 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd1.lcd_data(4), lcd1(6), 
  2974 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  2975 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2976 ;;  logic           1    2[COMRAM] enum E2968
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  ret             1    9[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      unsigned char 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:       10 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_gpio_pin_initialize
  2998 ;;		_lcd_4bit_send_command
  2999 ;;		_lcd_4bit_send_char_data
  3000 ;;		_lcd_8bit_send_command
  3001 ;;		_lcd_8bit_send_char_data
  3002 ;;		_lcd_send_4bits
  3003 ;;		_lcd_4bit_send_enable_signal
  3004 ;;		_lcd_8bit_send_enable_signal
  3005 ;;		_seven_segment_write_number
  3006 ;;		_dc_motor_move_right
  3007 ;;		_dc_motor_move_left
  3008 ;;		_dc_motor_stop
  3009 ;;		_keypad_get_value
  3010 ;;		_led_turn_on
  3011 ;;		_led_turn_off
  3012 ;;		_relay_turn_on
  3013 ;;		_relay_turn_off
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text19
  3018   00140C                     __ptext19:
  3019                           	callstack 0
  3020   00140C                     _gpio_pin_write_logic:
  3021                           	callstack 27
  3022   00140C                     
  3023                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  3024   00140C  0E01               	movlw	1
  3025   00140E  6E51               	movwf	gpio_pin_write_logic@ret^0,c
  3026   001410                     
  3027                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  3028   001410  5048               	movf	gpio_pin_write_logic@pin_config^0,w,c
  3029   001412  1049               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  3030   001414  B4D8               	btfsc	status,2,c
  3031   001416  EF0F  F00A         	goto	u1081
  3032   00141A  EF11  F00A         	goto	u1080
  3033   00141E                     u1081:
  3034   00141E  EF31  F00A         	goto	l2130
  3035   001422                     u1080:
  3036   001422  C048  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3037   001426  C049  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3038   00142A  30DF               	rrcf	223,w,c
  3039   00142C  32E8               	rrcf	wreg,f,c
  3040   00142E  32E8               	rrcf	wreg,f,c
  3041   001430  0B07               	andlw	7
  3042   001432  6E4B               	movwf	??_gpio_pin_write_logic^0,c
  3043   001434  0E08               	movlw	8
  3044   001436  604B               	cpfslt	??_gpio_pin_write_logic^0,c
  3045   001438  EF20  F00A         	goto	u1091
  3046   00143C  EF22  F00A         	goto	u1090
  3047   001440                     u1091:
  3048   001440  EF31  F00A         	goto	l2130
  3049   001444                     u1090:
  3050   001444  C048  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3051   001448  C049  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3052   00144C  50DF               	movf	223,w,c
  3053   00144E  0B07               	andlw	7
  3054   001450  6E4B               	movwf	??_gpio_pin_write_logic^0,c
  3055   001452  0E04               	movlw	4
  3056   001454  644B               	cpfsgt	??_gpio_pin_write_logic^0,c
  3057   001456  EF2F  F00A         	goto	u1101
  3058   00145A  EF31  F00A         	goto	u1100
  3059   00145E                     u1101:
  3060   00145E  EF94  F00A         	goto	l2138
  3061   001462                     u1100:
  3062   001462                     l2130:
  3063                           
  3064                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  3065   001462  0E00               	movlw	0
  3066   001464  6E51               	movwf	gpio_pin_write_logic@ret^0,c
  3067                           
  3068                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  3069   001466  EFA9  F00A         	goto	l2140
  3070   00146A                     l2132:
  3071                           
  3072                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  3073   00146A  C048  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3074   00146E  C049  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3075   001472  30DF               	rrcf	223,w,c
  3076   001474  32E8               	rrcf	wreg,f,c
  3077   001476  32E8               	rrcf	wreg,f,c
  3078   001478  0B07               	andlw	7
  3079   00147A  6E4B               	movwf	??_gpio_pin_write_logic^0,c
  3080   00147C  0E01               	movlw	1
  3081   00147E  6E4C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3082   001480  2A4B               	incf	??_gpio_pin_write_logic^0,f,c
  3083   001482  EF45  F00A         	goto	u1114
  3084   001486                     u1115:
  3085   001486  90D8               	bcf	status,0,c
  3086   001488  364C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3087   00148A                     u1114:
  3088   00148A  2E4B               	decfsz	??_gpio_pin_write_logic^0,f,c
  3089   00148C  EF43  F00A         	goto	u1115
  3090   001490  C048  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3091   001494  C049  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3092   001498  50DF               	movf	223,w,c
  3093   00149A  0B07               	andlw	7
  3094   00149C  6E4D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3095   00149E  504D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3096   0014A0  0D02               	mullw	2
  3097   0014A2  0E0B               	movlw	low _lat_registers
  3098   0014A4  24F3               	addwf	243,w,c
  3099   0014A6  6ED9               	movwf	fsr2l,c
  3100   0014A8  0E00               	movlw	high _lat_registers
  3101   0014AA  20F4               	addwfc	prodh,w,c
  3102   0014AC  6EDA               	movwf	fsr2h,c
  3103   0014AE  CFDE F04E          	movff	postinc2,??_gpio_pin_write_logic+3
  3104   0014B2  CFDD F04F          	movff	postdec2,??_gpio_pin_write_logic+4
  3105   0014B6  C04E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3106   0014BA  C04F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3107   0014BE  504C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3108   0014C0  12DF               	iorwf	indf2,f,c
  3109                           
  3110                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  3111   0014C2  EFA9  F00A         	goto	l2140
  3112   0014C6                     l2134:
  3113                           
  3114                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  3115   0014C6  C048  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3116   0014CA  C049  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3117   0014CE  30DF               	rrcf	223,w,c
  3118   0014D0  32E8               	rrcf	wreg,f,c
  3119   0014D2  32E8               	rrcf	wreg,f,c
  3120   0014D4  0B07               	andlw	7
  3121   0014D6  6E4B               	movwf	??_gpio_pin_write_logic^0,c
  3122   0014D8  0E01               	movlw	1
  3123   0014DA  6E4C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3124   0014DC  2A4B               	incf	??_gpio_pin_write_logic^0,f,c
  3125   0014DE  EF73  F00A         	goto	u1124
  3126   0014E2                     u1125:
  3127   0014E2  90D8               	bcf	status,0,c
  3128   0014E4  364C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3129   0014E6                     u1124:
  3130   0014E6  2E4B               	decfsz	??_gpio_pin_write_logic^0,f,c
  3131   0014E8  EF71  F00A         	goto	u1125
  3132   0014EC  504C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3133   0014EE  0AFF               	xorlw	255
  3134   0014F0  6E4D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3135   0014F2  C048  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  3136   0014F6  C049  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  3137   0014FA  50DF               	movf	223,w,c
  3138   0014FC  0B07               	andlw	7
  3139   0014FE  6E4E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3140   001500  504E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3141   001502  0D02               	mullw	2
  3142   001504  0E0B               	movlw	low _lat_registers
  3143   001506  24F3               	addwf	243,w,c
  3144   001508  6ED9               	movwf	fsr2l,c
  3145   00150A  0E00               	movlw	high _lat_registers
  3146   00150C  20F4               	addwfc	prodh,w,c
  3147   00150E  6EDA               	movwf	fsr2h,c
  3148   001510  CFDE F04F          	movff	postinc2,??_gpio_pin_write_logic+4
  3149   001514  CFDD F050          	movff	postdec2,??_gpio_pin_write_logic+5
  3150   001518  C04F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3151   00151C  C050  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3152   001520  504D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3153   001522  16DF               	andwf	indf2,f,c
  3154                           
  3155                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  3156   001524  EFA9  F00A         	goto	l2140
  3157   001528                     l2138:
  3158   001528  504A               	movf	gpio_pin_write_logic@logic^0,w,c
  3159   00152A  6E4B               	movwf	??_gpio_pin_write_logic^0,c
  3160   00152C  6A4C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3161                           
  3162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3163                           ; Switch size 1, requested type "simple"
  3164                           ; Number of cases is 1, Range of values is 0 to 0
  3165                           ; switch strategies available:
  3166                           ; Name         Instructions Cycles
  3167                           ; simple_byte            4     3 (average)
  3168                           ;	Chosen strategy is simple_byte
  3169   00152E  504C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3170   001530  0A00               	xorlw	0	; case 0
  3171   001532  B4D8               	btfsc	status,2,c
  3172   001534  EF9E  F00A         	goto	l2896
  3173   001538  EF31  F00A         	goto	l2130
  3174   00153C                     l2896:
  3175                           
  3176                           ; Switch size 1, requested type "simple"
  3177                           ; Number of cases is 2, Range of values is 0 to 1
  3178                           ; switch strategies available:
  3179                           ; Name         Instructions Cycles
  3180                           ; simple_byte            7     4 (average)
  3181                           ;	Chosen strategy is simple_byte
  3182   00153C  504B               	movf	??_gpio_pin_write_logic^0,w,c
  3183   00153E  0A00               	xorlw	0	; case 0
  3184   001540  B4D8               	btfsc	status,2,c
  3185   001542  EF63  F00A         	goto	l2134
  3186   001546  0A01               	xorlw	1	; case 1
  3187   001548  B4D8               	btfsc	status,2,c
  3188   00154A  EF35  F00A         	goto	l2132
  3189   00154E  EF31  F00A         	goto	l2130
  3190   001552                     l2140:
  3191                           
  3192                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  3193   001552  5051               	movf	gpio_pin_write_logic@ret^0,w,c
  3194   001554  0012               	return		;funcret
  3195   001556                     __end_of_gpio_pin_write_logic:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _gpio_pin_direction_initialize *****************
  3199 ;; Defined at:
  3200 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  pin_config      2    0[COMRAM] PTR const struct .
  3203 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd1.lcd_data(4), lcd1(6), 
  3204 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  ret             1    8[COMRAM] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      unsigned char 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;Total ram usage:        9 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_gpio_pin_initialize
  3226 ;;		_button_initialize
  3227 ;;		_keypad_initialize
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text20
  3232   0012AA                     __ptext20:
  3233                           	callstack 0
  3234   0012AA                     _gpio_pin_direction_initialize:
  3235                           	callstack 26
  3236   0012AA                     
  3237                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  3238   0012AA  0E01               	movlw	1
  3239   0012AC  6E50               	movwf	gpio_pin_direction_initialize@ret^0,c
  3240   0012AE                     
  3241                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  3242   0012AE  5048               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  3243   0012B0  1049               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  3244   0012B2  B4D8               	btfsc	status,2,c
  3245   0012B4  EF5E  F009         	goto	u1131
  3246   0012B8  EF60  F009         	goto	u1130
  3247   0012BC                     u1131:
  3248   0012BC  EF80  F009         	goto	l2156
  3249   0012C0                     u1130:
  3250   0012C0  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3251   0012C4  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3252   0012C8  30DF               	rrcf	223,w,c
  3253   0012CA  32E8               	rrcf	wreg,f,c
  3254   0012CC  32E8               	rrcf	wreg,f,c
  3255   0012CE  0B07               	andlw	7
  3256   0012D0  6E4A               	movwf	??_gpio_pin_direction_initialize^0,c
  3257   0012D2  0E08               	movlw	8
  3258   0012D4  604A               	cpfslt	??_gpio_pin_direction_initialize^0,c
  3259   0012D6  EF6F  F009         	goto	u1141
  3260   0012DA  EF71  F009         	goto	u1140
  3261   0012DE                     u1141:
  3262   0012DE  EF80  F009         	goto	l2156
  3263   0012E2                     u1140:
  3264   0012E2  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3265   0012E6  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3266   0012EA  50DF               	movf	223,w,c
  3267   0012EC  0B07               	andlw	7
  3268   0012EE  6E4A               	movwf	??_gpio_pin_direction_initialize^0,c
  3269   0012F0  0E04               	movlw	4
  3270   0012F2  644A               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  3271   0012F4  EF7E  F009         	goto	u1151
  3272   0012F8  EF80  F009         	goto	u1150
  3273   0012FC                     u1151:
  3274   0012FC  EFE3  F009         	goto	l2164
  3275   001300                     u1150:
  3276   001300                     l2156:
  3277                           
  3278                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  3279   001300  0E00               	movlw	0
  3280   001302  6E50               	movwf	gpio_pin_direction_initialize@ret^0,c
  3281                           
  3282                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  3283   001304  EF04  F00A         	goto	l2166
  3284   001308                     l2158:
  3285                           
  3286                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  3287   001308  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3288   00130C  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3289   001310  30DF               	rrcf	223,w,c
  3290   001312  32E8               	rrcf	wreg,f,c
  3291   001314  32E8               	rrcf	wreg,f,c
  3292   001316  0B07               	andlw	7
  3293   001318  6E4A               	movwf	??_gpio_pin_direction_initialize^0,c
  3294   00131A  0E01               	movlw	1
  3295   00131C  6E4B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3296   00131E  2A4A               	incf	??_gpio_pin_direction_initialize^0,f,c
  3297   001320  EF94  F009         	goto	u1164
  3298   001324                     u1165:
  3299   001324  90D8               	bcf	status,0,c
  3300   001326  364B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3301   001328                     u1164:
  3302   001328  2E4A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3303   00132A  EF92  F009         	goto	u1165
  3304   00132E  504B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3305   001330  0AFF               	xorlw	255
  3306   001332  6E4C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  3307   001334  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3308   001338  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3309   00133C  50DF               	movf	223,w,c
  3310   00133E  0B07               	andlw	7
  3311   001340  6E4D               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  3312   001342  504D               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  3313   001344  0D02               	mullw	2
  3314   001346  0E15               	movlw	low _tris_registers
  3315   001348  24F3               	addwf	243,w,c
  3316   00134A  6ED9               	movwf	fsr2l,c
  3317   00134C  0E00               	movlw	high _tris_registers
  3318   00134E  20F4               	addwfc	prodh,w,c
  3319   001350  6EDA               	movwf	fsr2h,c
  3320   001352  CFDE F04E          	movff	postinc2,??_gpio_pin_direction_initialize+4
  3321   001356  CFDD F04F          	movff	postdec2,??_gpio_pin_direction_initialize+5
  3322   00135A  C04E  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  3323   00135E  C04F  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  3324   001362  504C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  3325   001364  16DF               	andwf	indf2,f,c
  3326                           
  3327                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  3328   001366  EF04  F00A         	goto	l2166
  3329   00136A                     l2160:
  3330                           
  3331                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  3332   00136A  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3333   00136E  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3334   001372  30DF               	rrcf	223,w,c
  3335   001374  32E8               	rrcf	wreg,f,c
  3336   001376  32E8               	rrcf	wreg,f,c
  3337   001378  0B07               	andlw	7
  3338   00137A  6E4A               	movwf	??_gpio_pin_direction_initialize^0,c
  3339   00137C  0E01               	movlw	1
  3340   00137E  6E4B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3341   001380  2A4A               	incf	??_gpio_pin_direction_initialize^0,f,c
  3342   001382  EFC5  F009         	goto	u1174
  3343   001386                     u1175:
  3344   001386  90D8               	bcf	status,0,c
  3345   001388  364B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3346   00138A                     u1174:
  3347   00138A  2E4A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3348   00138C  EFC3  F009         	goto	u1175
  3349   001390  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3350   001394  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3351   001398  50DF               	movf	223,w,c
  3352   00139A  0B07               	andlw	7
  3353   00139C  6E4C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  3354   00139E  504C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  3355   0013A0  0D02               	mullw	2
  3356   0013A2  0E15               	movlw	low _tris_registers
  3357   0013A4  24F3               	addwf	243,w,c
  3358   0013A6  6ED9               	movwf	fsr2l,c
  3359   0013A8  0E00               	movlw	high _tris_registers
  3360   0013AA  20F4               	addwfc	prodh,w,c
  3361   0013AC  6EDA               	movwf	fsr2h,c
  3362   0013AE  CFDE F04D          	movff	postinc2,??_gpio_pin_direction_initialize+3
  3363   0013B2  CFDD F04E          	movff	postdec2,??_gpio_pin_direction_initialize+4
  3364   0013B6  C04D  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  3365   0013BA  C04E  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  3366   0013BE  504B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3367   0013C0  12DF               	iorwf	indf2,f,c
  3368                           
  3369                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  3370   0013C2  EF04  F00A         	goto	l2166
  3371   0013C6                     l2164:
  3372   0013C6  C048  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  3373   0013CA  C049  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  3374   0013CE  BCDF               	btfsc	indf2,6,c
  3375   0013D0  EFEC  F009         	goto	u1181
  3376   0013D4  EFEF  F009         	goto	u1180
  3377   0013D8                     u1181:
  3378   0013D8  0E01               	movlw	1
  3379   0013DA  EFF0  F009         	goto	u1190
  3380   0013DE                     u1180:
  3381   0013DE  0E00               	movlw	0
  3382   0013E0                     u1190:
  3383   0013E0  6E4A               	movwf	??_gpio_pin_direction_initialize^0,c
  3384   0013E2  6A4B               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  3385                           
  3386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3387                           ; Switch size 1, requested type "simple"
  3388                           ; Number of cases is 1, Range of values is 0 to 0
  3389                           ; switch strategies available:
  3390                           ; Name         Instructions Cycles
  3391                           ; simple_byte            4     3 (average)
  3392                           ;	Chosen strategy is simple_byte
  3393   0013E4  504B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3394   0013E6  0A00               	xorlw	0	; case 0
  3395   0013E8  B4D8               	btfsc	status,2,c
  3396   0013EA  EFF9  F009         	goto	l2898
  3397   0013EE  EF80  F009         	goto	l2156
  3398   0013F2                     l2898:
  3399                           
  3400                           ; Switch size 1, requested type "simple"
  3401                           ; Number of cases is 2, Range of values is 0 to 1
  3402                           ; switch strategies available:
  3403                           ; Name         Instructions Cycles
  3404                           ; simple_byte            7     4 (average)
  3405                           ;	Chosen strategy is simple_byte
  3406   0013F2  504A               	movf	??_gpio_pin_direction_initialize^0,w,c
  3407   0013F4  0A00               	xorlw	0	; case 0
  3408   0013F6  B4D8               	btfsc	status,2,c
  3409   0013F8  EF84  F009         	goto	l2158
  3410   0013FC  0A01               	xorlw	1	; case 1
  3411   0013FE  B4D8               	btfsc	status,2,c
  3412   001400  EFB5  F009         	goto	l2160
  3413   001404  EF80  F009         	goto	l2156
  3414   001408                     l2166:
  3415                           
  3416                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  3417   001408  5050               	movf	gpio_pin_direction_initialize@ret^0,w,c
  3418   00140A  0012               	return		;funcret
  3419   00140C                     __end_of_gpio_pin_direction_initialize:
  3420                           	callstack 0
  3421                           
  3422                           	psect	rparam
  3423   000000                     
  3424                           	psect	config
  3425                           
  3426                           ; Padding undefined space
  3427   300000                     	org	3145728
  3428   300000  FF                 	db	255
  3429                           
  3430                           ;Config register CONFIG1H @ 0x300001
  3431                           ;	Oscillator Selection bits
  3432                           ;	OSC = HS, HS oscillator
  3433                           ;	Fail-Safe Clock Monitor Enable bit
  3434                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3435                           ;	Internal/External Oscillator Switchover bit
  3436                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3437   300001                     	org	3145729
  3438   300001  02                 	db	2
  3439                           
  3440                           ;Config register CONFIG2L @ 0x300002
  3441                           ;	Power-up Timer Enable bit
  3442                           ;	PWRT = OFF, PWRT disabled
  3443                           ;	Brown-out Reset Enable bits
  3444                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3445                           ;	Brown Out Reset Voltage bits
  3446                           ;	BORV = 1, 
  3447   300002                     	org	3145730
  3448   300002  09                 	db	9
  3449                           
  3450                           ;Config register CONFIG2H @ 0x300003
  3451                           ;	Watchdog Timer Enable bit
  3452                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3453                           ;	Watchdog Timer Postscale Select bits
  3454                           ;	WDTPS = 32768, 1:32768
  3455   300003                     	org	3145731
  3456   300003  1E                 	db	30
  3457                           
  3458                           ; Padding undefined space
  3459   300004                     	org	3145732
  3460   300004  FF                 	db	255
  3461                           
  3462                           ;Config register CONFIG3H @ 0x300005
  3463                           ;	CCP2 MUX bit
  3464                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3465                           ;	PORTB A/D Enable bit
  3466                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3467                           ;	Low-Power Timer1 Oscillator Enable bit
  3468                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3469                           ;	MCLR Pin Enable bit
  3470                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3471   300005                     	org	3145733
  3472   300005  81                 	db	129
  3473                           
  3474                           ;Config register CONFIG4L @ 0x300006
  3475                           ;	Stack Full/Underflow Reset Enable bit
  3476                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3477                           ;	Single-Supply ICSP Enable bit
  3478                           ;	LVP = OFF, Single-Supply ICSP disabled
  3479                           ;	Extended Instruction Set Enable bit
  3480                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3481                           ;	Background Debugger Enable bit
  3482                           ;	DEBUG = 0x1, unprogrammed default
  3483   300006                     	org	3145734
  3484   300006  81                 	db	129
  3485                           
  3486                           ; Padding undefined space
  3487   300007                     	org	3145735
  3488   300007  FF                 	db	255
  3489                           
  3490                           ;Config register CONFIG5L @ 0x300008
  3491                           ;	Code Protection bit
  3492                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3493                           ;	Code Protection bit
  3494                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3495                           ;	Code Protection bit
  3496                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3497                           ;	Code Protection bit
  3498                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3499   300008                     	org	3145736
  3500   300008  0F                 	db	15
  3501                           
  3502                           ;Config register CONFIG5H @ 0x300009
  3503                           ;	Boot Block Code Protection bit
  3504                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3505                           ;	Data EEPROM Code Protection bit
  3506                           ;	CPD = OFF, Data EEPROM not code-protected
  3507   300009                     	org	3145737
  3508   300009  C0                 	db	192
  3509                           
  3510                           ;Config register CONFIG6L @ 0x30000A
  3511                           ;	Write Protection bit
  3512                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3513                           ;	Write Protection bit
  3514                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3515                           ;	Write Protection bit
  3516                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3517                           ;	Write Protection bit
  3518                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3519   30000A                     	org	3145738
  3520   30000A  0F                 	db	15
  3521                           
  3522                           ;Config register CONFIG6H @ 0x30000B
  3523                           ;	Configuration Register Write Protection bit
  3524                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3525                           ;	Boot Block Write Protection bit
  3526                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3527                           ;	Data EEPROM Write Protection bit
  3528                           ;	WRTD = OFF, Data EEPROM not write-protected
  3529   30000B                     	org	3145739
  3530   30000B  E0                 	db	224
  3531                           
  3532                           ;Config register CONFIG7L @ 0x30000C
  3533                           ;	Table Read Protection bit
  3534                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3535                           ;	Table Read Protection bit
  3536                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3537                           ;	Table Read Protection bit
  3538                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3539                           ;	Table Read Protection bit
  3540                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3541   30000C                     	org	3145740
  3542   30000C  0F                 	db	15
  3543                           
  3544                           ;Config register CONFIG7H @ 0x30000D
  3545                           ;	Boot Block Table Read Protection bit
  3546                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3547   30000D                     	org	3145741
  3548   30000D  40                 	db	64
  3549                           tosu	equ	0xFFF
  3550                           tosh	equ	0xFFE
  3551                           tosl	equ	0xFFD
  3552                           stkptr	equ	0xFFC
  3553                           pclatu	equ	0xFFB
  3554                           pclath	equ	0xFFA
  3555                           pcl	equ	0xFF9
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           prodh	equ	0xFF4
  3561                           prodl	equ	0xFF3
  3562                           indf0	equ	0xFEF
  3563                           postinc0	equ	0xFEE
  3564                           postdec0	equ	0xFED
  3565                           preinc0	equ	0xFEC
  3566                           plusw0	equ	0xFEB
  3567                           fsr0h	equ	0xFEA
  3568                           fsr0l	equ	0xFE9
  3569                           wreg	equ	0xFE8
  3570                           indf1	equ	0xFE7
  3571                           postinc1	equ	0xFE6
  3572                           postdec1	equ	0xFE5
  3573                           preinc1	equ	0xFE4
  3574                           plusw1	equ	0xFE3
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           bsr	equ	0xFE0
  3578                           indf2	equ	0xFDF
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           preinc2	equ	0xFDC
  3582                           plusw2	equ	0xFDB
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        103
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43     126
    BANK0           128      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S1289$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1289$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_8bit_send_custom_char@_chr	PTR const unsigned char  size(2) Largest target is 8
		 -> custom_char6(BANK0[8]), custom_char5(BANK0[8]), custom_char4(BANK0[8]), custom_char3(COMRAM[8]), 
		 -> custom_char2(COMRAM[8]), custom_char1(COMRAM[8]), 

    lcd_8bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_4bit_send_custom_char@_chr	PTR const unsigned char  size(2) Largest target is 8
		 -> custom_char6(BANK0[8]), custom_char5(BANK0[8]), custom_char4(BANK0[8]), custom_char3(COMRAM[8]), 
		 -> custom_char2(COMRAM[8]), custom_char1(COMRAM[8]), 

    lcd_4bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_custom_char
    _lcd_8bit_send_custom_char->_lcd_8bit_send_char_data_pos
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  166714
                                             41 COMRAM     2     2      0
             _application_initialize
          _lcd_4bit_send_custom_char
          _lcd_8bit_send_custom_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char                            9     2      7   49696
                                             33 COMRAM     8     1      7
            _lcd_8bit_send_char_data
        _lcd_8bit_send_char_data_pos
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data_pos                          6     1      5   24144
                                             27 COMRAM     6     1      5
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  7     3      4   12795
                                             21 COMRAM     6     2      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              9     6      3   10889
                                             12 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custom_char                            9     2      7   72964
                                             30 COMRAM     8     1      7
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          6     1      5   35778
                                             24 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  7     3      4   18536
                                             18 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              4     1      3   16782
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   44054
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   44053
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   19166
                                             21 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_command                                9     6      3   12105
                                             12 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_enable_signal                          3     1      2    5141
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   24884
                                             18 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_command                                4     1      3   17846
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       4     1      3    5747
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_enable_signal                          3     1      2    5309
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6640
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    4913
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     429
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_custom_char
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
     _lcd_4bit_send_command
   _lcd_8bit_send_custom_char
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_send_char_data_pos
       _lcd_8bit_send_char_data
       _lcd_8bit_set_cursor
         _lcd_8bit_send_command
     _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      30       5       37.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      7E       1       99.2%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE      12        0.0%
DATA                 0      0      AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Sep 07 21:04:52 2023

                        ?_lcd_send_4bits 0052            lcd_8bit_send_custom_char@_chr 006D  
                                    l202 140A                                      l221 1554  
                                    l301 101A                                      l402 1DE8  
                                    l307 1EB4                                      l173 1EAE  
                                    l190 1A46                                      l343 1CAA  
                                    l353 1E2E                                      l425 1B4A  
                                    l450 1D5A                                      l338 173C  
                                    l348 1C38                                      l445 1ACE  
                                    l390 19BC                                      l455 1E74  
                                    l383 1660                                      l376 1BC6  
                                    l467 17EC                                      l397 192C  
                                    l479 189C            gpio_pin_initialize@pin_config 0052  
                                    _ret 0077      __end_of_lcd_4bit_send_enable_signal 1D5C  
            _lcd_4bit_send_enable_signal 1D0E                      led_initialize@F3048 007E  
                                    prod 0FF3                    relay_initialize@F3042 007A  
                                    wreg 0FE8              __end_of_lcd_8bit_set_cursor 17EE  
            lcd_send_4bits@_data_command 0054                                     l2200 1E30  
                                   l2130 1462                                     l2122 140C  
                                   l2202 1E30                                     l2132 146A  
                                   l2140 1552                                     l2124 1410  
                                   l2220 1A10                                     l2212 19BE  
                                   l2300 173A                                     l2204 1E42  
                                   l2150 12AE                                     l2134 14C6  
                                   l2126 1422                                     l2222 1A18  
                                   l2214 19BE                                     l2230 1C3A  
                                   l2206 1E46                                     l2310 1574  
                                   l2160 136A                                     l2152 12C0  
                                   l2128 1444                                     l2224 1A44  
                                   l2216 19D0                                     l2232 1C4C  
                                   l2208 1E5A                                     l2240 192E  
                                   l2320 15B4                                     l2312 1594  
                                   l2304 1556                                     l2400 190C  
                                   l2154 12E2                                     l2138 1528  
                                   l2218 19F2                                     l2234 1C54  
                                   l2242 1932                                     l2330 1606  
                                   l2322 15B6                                     l2306 155A  
                                   l2402 190E                                     l2410 173E  
                                   l2164 13C6                                     l2156 1300  
                                   l2148 12AA                                     l2180 1A62  
                                   l2236 1CA8                                     l2228 1C3A  
                                   l2260 19AE                                     l2244 1944  
                                   l2340 164C                                     l2332 160C  
                                   l2324 15C6                                     l2308 156C  
                                   l2404 191E                                     l2420 1770  
                                   l2412 173E                                     l2500 1AEA  
                                   l2158 1308                                     l2166 1408  
                                   l2190 1D20                                     l2182 1ACC  
                                   l2174 1A48                                     l2270 1678  
                                   l2254 1960                                     l2262 19BA  
                                   l2246 194C                                     l2334 161C  
                                   l2326 15D6                                     l2318 1598  
                                   l2342 165E                                     l2350 1BDA  
                                   l2406 192A                                     l2422 1786  
                                   l2430 17B2                                     l2414 1750  
                                   l2510 1B20                                     l2502 1B00  
                                   l2192 1D28                                     l2176 1A48  
                                   l2280 16A4                                     l2272 1680  
                                   l2256 199C                                     l2248 195C  
                                   l2336 162C                                     l2328 15E6  
                                   l2440 1EA2                                     l2352 1BE2  
                                   l2360 17EE                                     l2424 179C  
                                   l2416 1754                                     l2512 1B22  
                                   l2194 1D3C                                     l2186 1D0E  
                                   l2178 1A5A                                     l2290 16E8  
                                   l2282 16C0                                     l2274 16A0  
                                   l2266 1662                                     l2258 199E  
                                   l2338 163C                                     l2354 1C36  
                                   l2346 1BC8                                     l2370 1836  
                                   l2362 1800                                     l2450 1E2C  
                                   l2442 1DEA                                     l2418 175A  
                                   l2514 1B32                                     l2196 1D58  
                                   l2188 1D0E                                     l2292 16F8  
                                   l2284 16C2                                     l2268 1666  
                                   l2436 1E96                                     l2348 1BC8  
                                   l2372 184C                                     l2364 1804  
                                   l2444 1DEE                                     l2460 1DC2  
                                   l2508 1B04                                     l2294 1708  
                                   l2286 16D2                                     l2438 1E96  
                                   l2366 180A                                     l2358 17EE  
                                   l2446 1E00                                     l2470 1B4C  
                                   l2390 18BC                                     l2462 1DE6  
                                   l2454 1DA4                                     l2296 1718  
                                   l2288 16E2                                     l2368 1820  
                                   l2448 1E08                                     l2472 1B50  
                                   l2392 18CC                                     l2384 189E  
                                   l2456 1DA8                                     l2800 10DC  
                                   l2298 1728                                     l2466 1EB0  
                                   l2378 1862                                     l2490 1BAE  
                                   l2474 1B62                                     l2386 18A2  
                                   l2458 1DBA                                     l2810 1194  
                                   l2802 10F2                                     l2468 1EB0  
                                   l2484 1B80                                     l2476 1B66  
                                   l2388 18B4                                     l2820 126C  
                                   l2812 11CA                                     l2804 1128  
                                   l2486 1B9C                                     l2478 1B7C  
                                   l2398 18D0                                     l2494 1AD0  
                                   l2822 128C                                     l2814 11EA  
                                   l2806 1148                                     l2488 1B9E  
                                   l2496 1AD4                                     l2816 1220  
                                   l2808 117E                                     l2498 1AE6  
                                   l2818 1236                                     l2790 1016  
                                   l2792 103A                                     l2794 1050  
                                   l2892 17C6                                     l2796 1086  
                                   l2894 1876                                     l2798 10A6  
                                   l2896 153C                                     l2898 13F2  
                                   STR_1 1011                                     u1100 1462  
                                   u1101 145E                                     u1200 1A5A  
                                   u1201 1A56                                     u1130 12C0  
                                   u1114 148A                                     u1210 1D20  
                                   u1131 12BC                                     u1115 1486  
                                   u1211 1D1C                                     u1140 12E2  
                                   u1124 14E6                                     u1300 1678  
                                   u1220 1E42                                     u1141 12DE  
                                   u1125 14E2                                     u1301 1674  
                                   u1221 1E3E                                     u1150 1300  
                                   u1230 19D0                                     u1310 16D2  
                                   u1151 12FC                                     u1231 19CC  
                                   u1311 16CE                                     u1080 1422  
                                   u1240 19F2                                     u1320 156C  
                                   u1400 1E00                                     u1081 141E  
                                   u1241 19EE                                     u1321 1568  
                                   u1401 1DFC                                     u1090 1444  
                                   u1250 1A10                                     u1330 15C6  
                                   u1410 1DBA                                     u1091 1440  
                                   u1251 1A0C                                     u1331 15C2  
                                   u1411 1DB6                                     u1180 13DE  
                                   u1164 1328                                     u1260 1C4C  
                                   u1340 1BDA                                     u1420 1B62  
                                   u1181 13D8                                     u1165 1324  
                                   u1261 1C48                                     u1341 1BD6  
                                   u1421 1B5E                                     u1190 13E0  
                                   u1174 138A                                     u1270 1944  
                                   u1350 1800                                     u1430 1BAE  
                                   u1175 1386                                     u1271 1940  
                                   u1351 17FC                                     u1431 1BAA  
                                   u1360 18B4                                     u1440 1AE6  
                                   u1361 18B0                                     u1441 1AE2  
                                   u1290 19AE                                     u1450 1B32  
                                   u1291 19AA                                     u1451 1B2E  
                                   u1284 198A                                     u1380 191E  
                                   u1285 1986                                     u1381 191A  
                                   u1374 18FA                                     u1390 1750  
                                   u1375 18F6                                     u1391 174C  
                                   u1907 11BE                                     u1917 11F4  
                                   u1837 1044                                     u1927 122A  
                                   u1847 107A                                     u1937 1260  
                                   u1857 10B0                                     u1947 1296  
                                   u1867 10E6                                     u1957 15CC  
                                   u1877 111C                                     u1967 15EC  
                                   u1887 1152                                     u1977 1608  
                                   u1897 1188                                     u1987 16E4  
          ??_lcd_4bit_send_enable_signal 0054                                     _lcd1 0042  
                                   _led1 001F                                     _main 1016  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
      lcd_4bit_send_char_data_pos@column 0063                                     prodl 0FF3  
                                   start 0000            __end_of_lcd_8bit_send_command 19BE  
                           ___param_bank 0000                    _lcd_4bit_send_command 1C3A  
                   _gpio_pin_write_logic 140C                                    ?_main 0048  
               ??_application_initialize 0063                      relay_turn_off@F3052 0078  
            ??_lcd_8bit_send_custom_char 0070                lcd_4bit_set_cursor@column 005D  
                                  _lcd_2 0020                 ?_lcd_8bit_send_char_data 0054  
    __end_of_lcd_8bit_send_char_data_pos 1DEA              _lcd_8bit_send_char_data_pos 1DA4  
                                  tablat 0FF5                                    status 0FD8  
         ?_gpio_pin_direction_initialize 0048            ??_lcd_8bit_send_char_data_pos 0068  
                        __initialization 1CAC                             __end_of_main 12AA  
                  ?_gpio_pin_write_logic 0048                   lcd_8bit_set_cursor@lcd 005D  
                 lcd_8bit_set_cursor@row 005F                            _lat_registers 000B  
      __end_of_lcd_4bit_send_custom_char 1BC8      lcd_8bit_send_command@l_pins_counter 005C  
                                 ??_main 0071                            __activetblptr 0002  
                       led_turn_on@F3053 007D                _lcd_8bit_send_custom_char 1AD0  
                 ?_lcd_4bit_send_command 0056                                   clear_0 1CF2  
                                 clear_1 1CFE                                   isa$std 0001  
         lcd_8bit_send_char_data_pos@lcd 0063           lcd_8bit_send_char_data_pos@ret 0068  
         lcd_8bit_send_char_data_pos@row 0065                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 1D04  
                          ___rparam_used 0001                         ??_lcd_send_4bits 0055  
                _lcd_4bit_send_char_data 1BC8          lcd_8bit_send_custom_char@column 006C  
                 ??_gpio_pin_write_logic 004B                           __pcstackCOMRAM 0048  
                           __pidataBANK0 1E76                 lcd_4bit_send_command@lcd 0056  
               lcd_4bit_send_command@ret 0059            lcd_4bit_send_custom_char@_chr 006A  
           ?_lcd_4bit_send_char_data_pos 0060                               __pbssBANK0 00A0  
                 _application_initialize 1EB0                   lcd_8bit_initialize@lcd 005D  
                 lcd_8bit_initialize@ret 0062          lcd_4bit_send_custom_char@column 0069  
                      led_turn_off@F3058 007C                          led_toggle@F3063 007B  
           lcd_4bit_send_custom_char@lcd 0066             lcd_4bit_send_custom_char@row 0068  
    __end_of_lcd_8bit_send_enable_signal 1E76              _lcd_8bit_send_enable_signal 1E30  
                             _btn_values 1001           lcd_8bit_send_enable_signal@lcd 0052  
                         _tris_registers 0015                ??_lcd_4bit_send_char_data 0059  
          ??_lcd_8bit_send_enable_signal 0054   lcd_8bit_initialize@l_data_pins_counter 0061  
 lcd_4bit_initialize@l_data_pins_counter 005F                                  __Hparam 0000  
                                __Lparam 0000                      _gpio_pin_initialize 19BE  
                  _lcd_8bit_send_command 192E                             __psmallconst 1000  
                                __pcinit 1CAC                                  __ramtop 1000  
                                __ptext0 1016                                  __ptext1 1AD0  
                                __ptext2 1DA4                                  __ptext3 173E  
                                __ptext4 189E                                  __ptext5 1B4C  
                                __ptext6 1DEA                                  __ptext7 17EE  
                                __ptext8 1BC8                                  __ptext9 1EB0  
        ??_gpio_pin_direction_initialize 004A                                  _counter 0073  
                                _keypad1 0080                     ?_gpio_pin_initialize 0052  
        lcd_8bit_send_char_data_pos@data 0067                     end_of_initialization 1D04  
                      lcd_send_4bits@lcd 0052                        lcd_send_4bits@ret 0055  
                          __Lmediumconst 0000                  ??_lcd_4bit_send_command 0059  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                    _lcd_4bit_initialize 1662          __end_of_lcd_4bit_send_char_data 1C3A  
      __end_of_lcd_8bit_send_custom_char 1B4C               ?_lcd_4bit_send_custom_char 0066  
             lcd_4bit_send_char_data@lcd 0056               lcd_4bit_send_char_data@ret 0059  
                  ??_gpio_pin_initialize 0054          lcd_4bit_send_char_data_pos@data 0064  
                   ?_lcd_4bit_initialize 005A         lcd_8bit_send_custom_char@mem_pos 006F  
                    _lcd_4bit_set_cursor 17EE                       relay_turn_on@F3047 0079  
                 ?_lcd_8bit_send_command 0054                            __pidataCOMRAM 1D5C  
  lcd_8bit_send_char_data@l_pins_counter 005C                      start_initialization 1CAC  
           ?_lcd_4bit_send_enable_signal 0052                     ?_lcd_4bit_set_cursor 005A  
                    _lcd_8bit_initialize 1556    __end_of_gpio_pin_direction_initialize 140C  
          _gpio_pin_direction_initialize 12AA                  ?_application_initialize 0048  
                  ??_lcd_4bit_initialize 005C                     ?_lcd_8bit_initialize 005D  
                _lcd_8bit_send_char_data 189E                              __pdataBANK0 0080  
           __end_of_ecu_layer_initialize 1EB0                      _lcd_8bit_set_cursor 173E  
           lcd_4bit_send_command@command 0058                 lcd_8bit_send_command@lcd 0054  
               lcd_8bit_send_command@ret 005B                              __pbssCOMRAM 0073  
                  ??_lcd_4bit_set_cursor 005E           __end_of_application_initialize 1EB6  
           ?_lcd_8bit_send_char_data_pos 0063                     ?_lcd_8bit_set_cursor 005D  
         gpio_pin_write_logic@pin_config 0048                    ??_lcd_8bit_initialize 005F  
            lcd_8bit_send_char_data@data 0056         lcd_4bit_send_custom_char@mem_pos 006C  
                           _custom_char1 003A                             _custom_char2 0032  
                           _custom_char3 002A                             _custom_char4 0098  
                           _custom_char5 0090                             _custom_char6 0088  
              gpio_pin_write_logic@logic 004A                              __smallconst 1000  
                  ??_lcd_8bit_set_cursor 0061             lcd_8bit_send_custom_char@lcd 0069  
           lcd_8bit_send_custom_char@row 006B                ??_lcd_8bit_send_char_data 0057  
          __end_of_lcd_4bit_send_command 1CAC         gpio_pin_direction_initialize@ret 0050  
         lcd_4bit_send_char_data_pos@lcd 0060           lcd_4bit_send_char_data_pos@ret 0065  
         lcd_4bit_send_char_data_pos@row 0062  gpio_pin_direction_initialize@pin_config 0048  
            ??_lcd_4bit_send_custom_char 006D        lcd_8bit_send_char_data_pos@column 0066  
                 gpio_pin_initialize@ret 0055                lcd_8bit_set_cursor@column 0060  
    __end_of_lcd_4bit_send_char_data_pos 1E30              _lcd_4bit_send_char_data_pos 1DEA  
                gpio_pin_write_logic@ret 0051                 ?_lcd_4bit_send_char_data 0056  
                              copy_data0 1CC0                                copy_data1 1CE0  
                   _ecu_layer_initialize 1E96            ??_lcd_4bit_send_char_data_pos 0065  
                ??_lcd_8bit_send_command 0057     lcd_8bit_send_custom_char@lcd_counter 0070  
   lcd_4bit_send_custom_char@lcd_counter 006D                              _counter_txt 00A0  
                               __Hrparam 0000                                 __Lrparam 0000  
                 lcd_4bit_set_cursor@lcd 005A                   lcd_4bit_set_cursor@row 005C  
        __end_of_lcd_8bit_send_char_data 192E              __end_of_gpio_pin_initialize 1A48  
                     __end_of_btn_values 1011               ?_lcd_8bit_send_custom_char 0069  
             lcd_8bit_send_char_data@lcd 0054               lcd_8bit_send_char_data@ret 005B  
                               __ptext10 1E96                                 __ptext11 1556  
                               __ptext20 12AA                                 __ptext12 192E  
                               __ptext13 1E30                                 __ptext14 1662  
                               __ptext15 1C3A                                 __ptext16 1A48  
                               __ptext17 1D0E                                 __ptext18 19BE  
                               __ptext19 140C                    ?_ecu_layer_initialize 0048  
              _lcd_4bit_send_custom_char 1B4C                                 isa$xinst 0000  
                         _lcd_send_4bits 1A48              __end_of_lcd_4bit_initialize 173E  
           __end_of_gpio_pin_write_logic 1556             ?_lcd_8bit_send_enable_signal 0052  
         lcd_4bit_send_enable_signal@lcd 0052           lcd_4bit_send_enable_signal@ret 0054  
                 __end_of_lcd_send_4bits 1AD0              __end_of_lcd_4bit_set_cursor 189E  
                         _port_registers 0001                   ??_ecu_layer_initialize 0063  
            __end_of_lcd_8bit_initialize 1662             lcd_8bit_send_command@command 0056  
            lcd_4bit_send_char_data@data 0058                   lcd_4bit_initialize@lcd 005A  
                 lcd_4bit_initialize@ret 005E  
