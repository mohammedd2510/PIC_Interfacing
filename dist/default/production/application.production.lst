

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Aug 28 16:10:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   00FADE                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   00FADE  80                 	db	128
    65   00FADF  0F                 	db	15
    66   00FAE0  81                 	db	129
    67   00FAE1  0F                 	db	15
    68   00FAE2  82                 	db	130
    69   00FAE3  0F                 	db	15
    70   00FAE4  83                 	db	131
    71   00FAE5  0F                 	db	15
    72   00FAE6  84                 	db	132
    73   00FAE7  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   00FAE8  89                 	db	137
    77   00FAE9  0F                 	db	15
    78   00FAEA  8A                 	db	138
    79   00FAEB  0F                 	db	15
    80   00FAEC  8B                 	db	139
    81   00FAED  0F                 	db	15
    82   00FAEE  8C                 	db	140
    83   00FAEF  0F                 	db	15
    84   00FAF0  8D                 	db	141
    85   00FAF1  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   00FAF2  92                 	db	146
    89   00FAF3  0F                 	db	15
    90   00FAF4  93                 	db	147
    91   00FAF5  0F                 	db	15
    92   00FAF6  94                 	db	148
    93   00FAF7  0F                 	db	15
    94   00FAF8  95                 	db	149
    95   00FAF9  0F                 	db	15
    96   00FAFA  96                 	db	150
    97   00FAFB  0F                 	db	15
    98                           
    99                           ;initializer for _Motor2
   100   00FAFC  12                 	db	18
   101   00FAFD  1A                 	db	26
   102                           
   103                           ;initializer for _Motor1
   104   00FAFE  02                 	db	2
   105   00FAFF  0A                 	db	10
   106                           
   107                           	psect	nvCOMRAM
   108   00003D                     __pnvCOMRAM:
   109                           	callstack 0
   110   00003D                     _ret:
   111                           	callstack 0
   112   00003D                     	ds	1
   113                           
   114                           ; #config settings
   115                           
   116                           	psect	cinit
   117   00FB00                     __pcinit:
   118                           	callstack 0
   119   00FB00                     start_initialization:
   120                           	callstack 0
   121   00FB00                     __initialization:
   122                           	callstack 0
   123                           
   124                           ; Initialize objects allocated to COMRAM (34 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126   00FB00  0EDE               	movlw	low __pidataCOMRAM
   127   00FB02  6EF6               	movwf	tblptrl,c
   128   00FB04  0EFA               	movlw	high __pidataCOMRAM
   129   00FB06  6EF7               	movwf	tblptrh,c
   130   00FB08  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131   00FB0A  6EF8               	movwf	tblptru,c
   132   00FB0C  EE00  F001         	lfsr	0,__pdataCOMRAM
   133   00FB10  EE10 F022          	lfsr	1,34
   134   00FB14                     copy_data0:
   135   00FB14  0009               	tblrd		*+
   136   00FB16  CFF5 FFEE          	movff	tablat,postinc0
   137   00FB1A  50E5               	movf	postdec1,w,c
   138   00FB1C  50E1               	movf	fsr1l,w,c
   139   00FB1E  E1FA               	bnz	copy_data0
   140                           
   141                           ; Clear objects allocated to COMRAM (7 bytes)
   142   00FB20  EE00  F036         	lfsr	0,__pbssCOMRAM
   143   00FB24  0E07               	movlw	7
   144   00FB26                     clear_0:
   145   00FB26  6AEE               	clrf	postinc0,c
   146   00FB28  06E8               	decf	wreg,f,c
   147   00FB2A  E1FD               	bnz	clear_0
   148   00FB2C                     end_of_initialization:
   149                           	callstack 0
   150   00FB2C                     __end_of__initialization:
   151                           	callstack 0
   152   00FB2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153   00FB2E  6EF8               	movwf	tblptru,c
   154   00FB30  0100               	movlb	0
   155   00FB32  EF5F  F07E         	goto	_main	;jump to C main() function
   156                           
   157                           	psect	bssCOMRAM
   158   000036                     __pbssCOMRAM:
   159                           	callstack 0
   160   000036                     relay_turn_off@F2885:
   161                           	callstack 0
   162   000036                     	ds	1
   163   000037                     relay_turn_on@F2880:
   164                           	callstack 0
   165   000037                     	ds	1
   166   000038                     relay_initialize@F2875:
   167                           	callstack 0
   168   000038                     	ds	1
   169   000039                     led_toggle@F2896:
   170                           	callstack 0
   171   000039                     	ds	1
   172   00003A                     led_turn_off@F2891:
   173                           	callstack 0
   174   00003A                     	ds	1
   175   00003B                     led_turn_on@F2886:
   176                           	callstack 0
   177   00003B                     	ds	1
   178   00003C                     led_initialize@F2881:
   179                           	callstack 0
   180   00003C                     	ds	1
   181                           
   182                           	psect	dataCOMRAM
   183   000001                     __pdataCOMRAM:
   184                           	callstack 0
   185   000001                     _port_registers:
   186                           	callstack 0
   187   000001                     	ds	10
   188   00000B                     _lat_registers:
   189                           	callstack 0
   190   00000B                     	ds	10
   191   000015                     _tris_registers:
   192                           	callstack 0
   193   000015                     	ds	10
   194   00001F                     _Motor2:
   195                           	callstack 0
   196   00001F                     	ds	2
   197   000021                     _Motor1:
   198                           	callstack 0
   199   000021                     	ds	2
   200                           
   201                           	psect	cstackCOMRAM
   202   000023                     __pcstackCOMRAM:
   203                           	callstack 0
   204   000023                     gpio_pin_direction_initialize@pin_config:
   205                           	callstack 0
   206   000023                     gpio_pin_write_logic@pin_config:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x0
   210   000023                     	ds	2
   211   000025                     ??_gpio_pin_direction_initialize:
   212   000025                     gpio_pin_write_logic@logic:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x2
   216   000025                     	ds	1
   217   000026                     ??_gpio_pin_write_logic:
   218                           
   219                           ; 1 bytes @ 0x3
   220   000026                     	ds	5
   221   00002B                     gpio_pin_direction_initialize@ret:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x8
   225   00002B                     	ds	1
   226   00002C                     gpio_pin_write_logic@ret:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x9
   230   00002C                     	ds	1
   231   00002D                     gpio_pin_initialize@pin_config:
   232                           	callstack 0
   233   00002D                     dc_motor_move_right@_dc_motor:
   234                           	callstack 0
   235   00002D                     dc_motor_move_left@_dc_motor:
   236                           	callstack 0
   237   00002D                     dc_motor_stop@_dc_motor:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xA
   241   00002D                     	ds	2
   242   00002F                     ??_gpio_pin_initialize:
   243   00002F                     dc_motor_move_right@ret:
   244                           	callstack 0
   245   00002F                     dc_motor_move_left@ret:
   246                           	callstack 0
   247   00002F                     dc_motor_stop@ret:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0xC
   251   00002F                     	ds	1
   252   000030                     gpio_pin_initialize@ret:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0xD
   256   000030                     	ds	1
   257   000031                     dc_motor_initialize@_dc_motor:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0xE
   261   000031                     	ds	2
   262   000033                     dc_motor_initialize@ret:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x10
   266   000033                     	ds	1
   267   000034                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x11
   270   000034                     	ds	2
   271                           
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 34 in file "application.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  2  196[None  ] int 
   284 ;; Registers used:
   285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   295 ;;Total ram usage:        2 bytes
   296 ;; Hardware stack levels required when called: 4
   297 ;; This function calls:
   298 ;;		_application_initialize
   299 ;;		_dc_motor_move_left
   300 ;;		_dc_motor_move_right
   301 ;;		_dc_motor_stop
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308   00FCBE                     __ptext0:
   309                           	callstack 0
   310   00FCBE                     _main:
   311                           	callstack 27
   312   00FCBE                     
   313                           ;application.c: 35:     application_initialize();
   314   00FCBE  EC60  F07D         	call	_application_initialize	;wreg free
   315   00FCC2                     l197:
   316                           
   317                           ;application.c: 37:         dc_motor_move_right(&Motor1);
   318   00FCC2  0E21               	movlw	low _Motor1
   319   00FCC4  6E2D               	movwf	dc_motor_move_right@_dc_motor^0,c
   320   00FCC6  0E00               	movlw	high _Motor1
   321   00FCC8  6E2E               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
   322   00FCCA  ECDA  F07D         	call	_dc_motor_move_right	;wreg free
   323                           
   324                           ;application.c: 38:         dc_motor_move_right(&Motor2);
   325   00FCCE  0E1F               	movlw	low _Motor2
   326   00FCD0  6E2D               	movwf	dc_motor_move_right@_dc_motor^0,c
   327   00FCD2  0E00               	movlw	high _Motor2
   328   00FCD4  6E2E               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
   329   00FCD6  ECDA  F07D         	call	_dc_motor_move_right	;wreg free
   330   00FCDA                     
   331                           ;application.c: 39:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   332   00FCDA  0E10               	movlw	16
   333   00FCDC  6E35               	movwf	(??_main+1)^0,c
   334   00FCDE  0E39               	movlw	57
   335   00FCE0  6E34               	movwf	??_main^0,c
   336   00FCE2  0E0E               	movlw	14
   337   00FCE4                     u947:
   338   00FCE4  2EE8               	decfsz	wreg,f,c
   339   00FCE6  D7FE               	bra	u947
   340   00FCE8  2E34               	decfsz	??_main^0,f,c
   341   00FCEA  D7FC               	bra	u947
   342   00FCEC  2E35               	decfsz	(??_main+1)^0,f,c
   343   00FCEE  D7FA               	bra	u947
   344   00FCF0                     
   345                           ;application.c: 40:         dc_motor_move_left(&Motor1);
   346   00FCF0  0E21               	movlw	low _Motor1
   347   00FCF2  6E2D               	movwf	dc_motor_move_left@_dc_motor^0,c
   348   00FCF4  0E00               	movlw	high _Motor1
   349   00FCF6  6E2E               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
   350   00FCF8  ECBA  F07D         	call	_dc_motor_move_left	;wreg free
   351   00FCFC                     
   352                           ;application.c: 41:         dc_motor_move_left(&Motor2);
   353   00FCFC  0E1F               	movlw	low _Motor2
   354   00FCFE  6E2D               	movwf	dc_motor_move_left@_dc_motor^0,c
   355   00FD00  0E00               	movlw	high _Motor2
   356   00FD02  6E2E               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
   357   00FD04  ECBA  F07D         	call	_dc_motor_move_left	;wreg free
   358   00FD08                     
   359                           ;application.c: 42:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   360   00FD08  0E10               	movlw	16
   361   00FD0A  6E35               	movwf	(??_main+1)^0,c
   362   00FD0C  0E39               	movlw	57
   363   00FD0E  6E34               	movwf	??_main^0,c
   364   00FD10  0E0E               	movlw	14
   365   00FD12                     u957:
   366   00FD12  2EE8               	decfsz	wreg,f,c
   367   00FD14  D7FE               	bra	u957
   368   00FD16  2E34               	decfsz	??_main^0,f,c
   369   00FD18  D7FC               	bra	u957
   370   00FD1A  2E35               	decfsz	(??_main+1)^0,f,c
   371   00FD1C  D7FA               	bra	u957
   372                           
   373                           ;application.c: 43:          dc_motor_stop(&Motor1);
   374   00FD1E  0E21               	movlw	low _Motor1
   375   00FD20  6E2D               	movwf	dc_motor_stop@_dc_motor^0,c
   376   00FD22  0E00               	movlw	high _Motor1
   377   00FD24  6E2E               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
   378   00FD26  ECFA  F07D         	call	_dc_motor_stop	;wreg free
   379                           
   380                           ;application.c: 44:         dc_motor_stop(&Motor2);
   381   00FD2A  0E1F               	movlw	low _Motor2
   382   00FD2C  6E2D               	movwf	dc_motor_stop@_dc_motor^0,c
   383   00FD2E  0E00               	movlw	high _Motor2
   384   00FD30  6E2E               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
   385   00FD32  ECFA  F07D         	call	_dc_motor_stop	;wreg free
   386   00FD36                     
   387                           ;application.c: 45:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   388   00FD36  0E10               	movlw	16
   389   00FD38  6E35               	movwf	(??_main+1)^0,c
   390   00FD3A  0E39               	movlw	57
   391   00FD3C  6E34               	movwf	??_main^0,c
   392   00FD3E  0E0E               	movlw	14
   393   00FD40                     u967:
   394   00FD40  2EE8               	decfsz	wreg,f,c
   395   00FD42  D7FE               	bra	u967
   396   00FD44  2E34               	decfsz	??_main^0,f,c
   397   00FD46  D7FC               	bra	u967
   398   00FD48  2E35               	decfsz	(??_main+1)^0,f,c
   399   00FD4A  D7FA               	bra	u967
   400   00FD4C  EF61  F07E         	goto	l197
   401   00FD50  EF00  F000         	goto	start
   402   00FD54                     __end_of_main:
   403                           	callstack 0
   404                           
   405 ;; *************** function _dc_motor_stop *****************
   406 ;; Defined at:
   407 ;;		line 55 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   410 ;;		 -> Motor2(2), Motor1(2), 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  ret             1   12[COMRAM] unsigned char 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      unsigned char 
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;Total ram usage:        3 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 1
   429 ;; This function calls:
   430 ;;		_gpio_pin_write_logic
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text1
   437   00FBF4                     __ptext1:
   438                           	callstack 0
   439   00FBF4                     _dc_motor_stop:
   440                           	callstack 29
   441   00FBF4                     
   442                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:     if(_dc_motor==((void*)0)){
   443   00FBF4  502D               	movf	dc_motor_stop@_dc_motor^0,w,c
   444   00FBF6  102E               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
   445   00FBF8  A4D8               	btfss	status,2,c
   446   00FBFA  EF01  F07E         	goto	u801
   447   00FBFE  EF03  F07E         	goto	u800
   448   00FC02                     u801:
   449   00FC02  EF05  F07E         	goto	l1423
   450   00FC06                     u800:
   451   00FC06                     
   452                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 59:     }
   453   00FC06  EF19  F07E         	goto	l227
   454   00FC0A                     l1423:
   455                           
   456                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
   457   00FC0A  C02D  F023         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@pin_config
   458   00FC0E  C02E  F024         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@pin_config+1
   459   00FC12  0E00               	movlw	0
   460   00FC14  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   461   00FC16  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   462   00FC1A  6E2F               	movwf	dc_motor_stop@ret^0,c
   463                           
   464                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
   465   00FC1C  0E01               	movlw	1
   466   00FC1E  242D               	addwf	dc_motor_stop@_dc_motor^0,w,c
   467   00FC20  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   468   00FC22  0E00               	movlw	0
   469   00FC24  202E               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
   470   00FC26  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   471   00FC28  0E00               	movlw	0
   472   00FC2A  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   473   00FC2C  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   474   00FC30  6E2F               	movwf	dc_motor_stop@ret^0,c
   475   00FC32                     l227:
   476   00FC32  0012               	return		;funcret
   477   00FC34                     __end_of_dc_motor_stop:
   478                           	callstack 0
   479                           
   480 ;; *************** function _dc_motor_move_right *****************
   481 ;; Defined at:
   482 ;;		line 23 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   485 ;;		 -> Motor2(2), Motor1(2), 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  ret             1   12[COMRAM] unsigned char 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      unsigned char 
   490 ;; Registers used:
   491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;Total ram usage:        3 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 1
   504 ;; This function calls:
   505 ;;		_gpio_pin_write_logic
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text2
   512   00FBB4                     __ptext2:
   513                           	callstack 0
   514   00FBB4                     _dc_motor_move_right:
   515                           	callstack 29
   516   00FBB4                     
   517                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:     if(_dc_motor==((void*)0)){
   518   00FBB4  502D               	movf	dc_motor_move_right@_dc_motor^0,w,c
   519   00FBB6  102E               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
   520   00FBB8  A4D8               	btfss	status,2,c
   521   00FBBA  EFE1  F07D         	goto	u781
   522   00FBBE  EFE3  F07D         	goto	u780
   523   00FBC2                     u781:
   524   00FBC2  EFE5  F07D         	goto	l1403
   525   00FBC6                     u780:
   526   00FBC6                     
   527                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:     }
   528   00FBC6  EFF9  F07D         	goto	l217
   529   00FBCA                     l1403:
   530                           
   531                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),HIGH);
   532   00FBCA  C02D  F023         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@pin_config
   533   00FBCE  C02E  F024         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@pin_config+1
   534   00FBD2  0E01               	movlw	1
   535   00FBD4  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   536   00FBD6  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   537   00FBDA  6E2F               	movwf	dc_motor_move_right@ret^0,c
   538                           
   539                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
   540   00FBDC  0E01               	movlw	1
   541   00FBDE  242D               	addwf	dc_motor_move_right@_dc_motor^0,w,c
   542   00FBE0  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   543   00FBE2  0E00               	movlw	0
   544   00FBE4  202E               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
   545   00FBE6  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   546   00FBE8  0E00               	movlw	0
   547   00FBEA  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   548   00FBEC  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   549   00FBF0  6E2F               	movwf	dc_motor_move_right@ret^0,c
   550   00FBF2                     l217:
   551   00FBF2  0012               	return		;funcret
   552   00FBF4                     __end_of_dc_motor_move_right:
   553                           	callstack 0
   554                           
   555 ;; *************** function _dc_motor_move_left *****************
   556 ;; Defined at:
   557 ;;		line 39 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   560 ;;		 -> Motor2(2), Motor1(2), 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  ret             1   12[COMRAM] unsigned char 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      unsigned char 
   565 ;; Registers used:
   566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;Total ram usage:        3 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 1
   579 ;; This function calls:
   580 ;;		_gpio_pin_write_logic
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text3
   587   00FB74                     __ptext3:
   588                           	callstack 0
   589   00FB74                     _dc_motor_move_left:
   590                           	callstack 29
   591   00FB74                     
   592                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     if(_dc_motor==((void*)0)){
   593   00FB74  502D               	movf	dc_motor_move_left@_dc_motor^0,w,c
   594   00FB76  102E               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
   595   00FB78  A4D8               	btfss	status,2,c
   596   00FB7A  EFC1  F07D         	goto	u791
   597   00FB7E  EFC3  F07D         	goto	u790
   598   00FB82                     u791:
   599   00FB82  EFC5  F07D         	goto	l1413
   600   00FB86                     u790:
   601   00FB86                     
   602                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
   603   00FB86  EFD9  F07D         	goto	l222
   604   00FB8A                     l1413:
   605                           
   606                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
   607   00FB8A  C02D  F023         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@pin_config
   608   00FB8E  C02E  F024         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@pin_config+1
   609   00FB92  0E00               	movlw	0
   610   00FB94  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   611   00FB96  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   612   00FB9A  6E2F               	movwf	dc_motor_move_left@ret^0,c
   613                           
   614                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),HIGH);
   615   00FB9C  0E01               	movlw	1
   616   00FB9E  242D               	addwf	dc_motor_move_left@_dc_motor^0,w,c
   617   00FBA0  6E23               	movwf	gpio_pin_write_logic@pin_config^0,c
   618   00FBA2  0E00               	movlw	0
   619   00FBA4  202E               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
   620   00FBA6  6E24               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   621   00FBA8  0E01               	movlw	1
   622   00FBAA  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   623   00FBAC  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   624   00FBB0  6E2F               	movwf	dc_motor_move_left@ret^0,c
   625   00FBB2                     l222:
   626   00FBB2  0012               	return		;funcret
   627   00FBB4                     __end_of_dc_motor_move_left:
   628                           	callstack 0
   629                           
   630 ;; *************** function _application_initialize *****************
   631 ;; Defined at:
   632 ;;		line 49 in file "application.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 3
   653 ;; This function calls:
   654 ;;		_dc_motor_initialize
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text4
   661   00FAC0                     __ptext4:
   662                           	callstack 0
   663   00FAC0                     _application_initialize:
   664                           	callstack 27
   665   00FAC0                     
   666                           ;application.c: 50:     ret=dc_motor_initialize(&Motor1);
   667   00FAC0  0E21               	movlw	low _Motor1
   668   00FAC2  6E31               	movwf	dc_motor_initialize@_dc_motor^0,c
   669   00FAC4  0E00               	movlw	high _Motor1
   670   00FAC6  6E32               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
   671   00FAC8  EC9B  F07D         	call	_dc_motor_initialize	;wreg free
   672   00FACC  6E3D               	movwf	_ret^0,c
   673                           
   674                           ;application.c: 51:      ret=dc_motor_initialize(&Motor2);
   675   00FACE  0E1F               	movlw	low _Motor2
   676   00FAD0  6E31               	movwf	dc_motor_initialize@_dc_motor^0,c
   677   00FAD2  0E00               	movlw	high _Motor2
   678   00FAD4  6E32               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
   679   00FAD6  EC9B  F07D         	call	_dc_motor_initialize	;wreg free
   680   00FADA  6E3D               	movwf	_ret^0,c
   681   00FADC  0012               	return		;funcret
   682   00FADE                     __end_of_application_initialize:
   683                           	callstack 0
   684                           
   685 ;; *************** function _dc_motor_initialize *****************
   686 ;; Defined at:
   687 ;;		line 7 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  _dc_motor       2   14[COMRAM] PTR const struct .
   690 ;;		 -> Motor2(2), Motor1(2), 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  ret             1   16[COMRAM] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      unsigned char 
   695 ;; Registers used:
   696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;Total ram usage:        3 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; Hardware stack levels required when called: 2
   709 ;; This function calls:
   710 ;;		_gpio_pin_initialize
   711 ;; This function is called by:
   712 ;;		_application_initialize
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text5
   717   00FB36                     __ptext5:
   718                           	callstack 0
   719   00FB36                     _dc_motor_initialize:
   720                           	callstack 27
   721   00FB36                     
   722                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 9:     if(_dc_motor==((void*)0)){
   723   00FB36  5031               	movf	dc_motor_initialize@_dc_motor^0,w,c
   724   00FB38  1032               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
   725   00FB3A  A4D8               	btfss	status,2,c
   726   00FB3C  EFA2  F07D         	goto	u771
   727   00FB40  EFA4  F07D         	goto	u770
   728   00FB44                     u771:
   729   00FB44  EFA8  F07D         	goto	l1389
   730   00FB48                     u770:
   731   00FB48                     
   732                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 10:         ret=(Std_ReturnType)0x00;
   733   00FB48  0E00               	movlw	0
   734   00FB4A  6E33               	movwf	dc_motor_initialize@ret^0,c
   735                           
   736                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 11:     }
   737   00FB4C  EFB8  F07D         	goto	l1391
   738   00FB50                     l1389:
   739                           
   740                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 13:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0X00U]));
   741   00FB50  C031  F02D         	movff	dc_motor_initialize@_dc_motor,gpio_pin_initialize@pin_config
   742   00FB54  C032  F02E         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_initialize@pin_config+1
   743   00FB58  EC1A  F07E         	call	_gpio_pin_initialize	;wreg free
   744   00FB5C  6E33               	movwf	dc_motor_initialize@ret^0,c
   745                           
   746                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 14:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0X01U]));
   747   00FB5E  0E01               	movlw	1
   748   00FB60  2431               	addwf	dc_motor_initialize@_dc_motor^0,w,c
   749   00FB62  6E2D               	movwf	gpio_pin_initialize@pin_config^0,c
   750   00FB64  0E00               	movlw	0
   751   00FB66  2032               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
   752   00FB68  6E2E               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
   753   00FB6A  EC1A  F07E         	call	_gpio_pin_initialize	;wreg free
   754   00FB6E  6E33               	movwf	dc_motor_initialize@ret^0,c
   755   00FB70                     l1391:
   756                           
   757                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 16:     return ret;
   758   00FB70  5033               	movf	dc_motor_initialize@ret^0,w,c
   759   00FB72  0012               	return		;funcret
   760   00FB74                     __end_of_dc_motor_initialize:
   761                           	callstack 0
   762                           
   763 ;; *************** function _gpio_pin_initialize *****************
   764 ;; Defined at:
   765 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  pin_config      2   10[COMRAM] PTR const struct .
   768 ;;		 -> Motor2.dc_motor_pin(2), Motor2(2), Motor1.dc_motor_pin(2), Motor1(2), 
   769 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  ret             1   13[COMRAM] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      unsigned char 
   774 ;; Registers used:
   775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;Total ram usage:        4 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 1
   788 ;; This function calls:
   789 ;;		_gpio_pin_direction_initialize
   790 ;;		_gpio_pin_write_logic
   791 ;; This function is called by:
   792 ;;		_dc_motor_initialize
   793 ;;		_led_initialize
   794 ;;		_relay_initialize
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text6
   799   00FC34                     __ptext6:
   800                           	callstack 0
   801   00FC34                     _gpio_pin_initialize:
   802                           	callstack 27
   803   00FC34                     
   804                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
   805   00FC34  502D               	movf	gpio_pin_initialize@pin_config^0,w,c
   806   00FC36  102E               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
   807   00FC38  B4D8               	btfsc	status,2,c
   808   00FC3A  EF21  F07E         	goto	u741
   809   00FC3E  EF23  F07E         	goto	u740
   810   00FC42                     u741:
   811   00FC42  EF43  F07E         	goto	l1375
   812   00FC46                     u740:
   813   00FC46  C02D  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   814   00FC4A  C02E  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   815   00FC4E  30DF               	rrcf	223,w,c
   816   00FC50  32E8               	rrcf	wreg,f,c
   817   00FC52  32E8               	rrcf	wreg,f,c
   818   00FC54  0B07               	andlw	7
   819   00FC56  6E2F               	movwf	??_gpio_pin_initialize^0,c
   820   00FC58  0E08               	movlw	8
   821   00FC5A  602F               	cpfslt	??_gpio_pin_initialize^0,c
   822   00FC5C  EF32  F07E         	goto	u751
   823   00FC60  EF34  F07E         	goto	u750
   824   00FC64                     u751:
   825   00FC64  EF43  F07E         	goto	l1375
   826   00FC68                     u750:
   827   00FC68  C02D  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   828   00FC6C  C02E  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   829   00FC70  50DF               	movf	223,w,c
   830   00FC72  0B07               	andlw	7
   831   00FC74  6E2F               	movwf	??_gpio_pin_initialize^0,c
   832   00FC76  0E04               	movlw	4
   833   00FC78  642F               	cpfsgt	??_gpio_pin_initialize^0,c
   834   00FC7A  EF41  F07E         	goto	u761
   835   00FC7E  EF43  F07E         	goto	u760
   836   00FC82                     u761:
   837   00FC82  EF47  F07E         	goto	l1377
   838   00FC86                     u760:
   839   00FC86                     l1375:
   840                           
   841                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
   842   00FC86  0E00               	movlw	0
   843   00FC88  6E30               	movwf	gpio_pin_initialize@ret^0,c
   844                           
   845                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
   846   00FC8A  EF5D  F07E         	goto	l1379
   847   00FC8E                     l1377:
   848                           
   849                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
   850   00FC8E  C02D  F023         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
   851   00FC92  C02E  F024         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
   852   00FC96  EC4F  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   853   00FC9A  6E30               	movwf	gpio_pin_initialize@ret^0,c
   854                           
   855                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
   856   00FC9C  C02D  F023         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
   857   00FCA0  C02E  F024         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
   858   00FCA4  C02D  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
   859   00FCA8  C02E  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
   860   00FCAC  0E00               	movlw	0
   861   00FCAE  BEDF               	btfsc	indf2,7,c
   862   00FCB0  0E01               	movlw	1
   863   00FCB2  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   864   00FCB4  ECAA  F07E         	call	_gpio_pin_write_logic	;wreg free
   865   00FCB8  6E30               	movwf	gpio_pin_initialize@ret^0,c
   866   00FCBA                     l1379:
   867                           
   868                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
   869   00FCBA  5030               	movf	gpio_pin_initialize@ret^0,w,c
   870   00FCBC  0012               	return		;funcret
   871   00FCBE                     __end_of_gpio_pin_initialize:
   872                           	callstack 0
   873                           
   874 ;; *************** function _gpio_pin_write_logic *****************
   875 ;; Defined at:
   876 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  pin_config      2    0[COMRAM] PTR const struct .
   879 ;;		 -> Motor2.dc_motor_pin(2), Motor2(2), Motor1.dc_motor_pin(2), Motor1(2), 
   880 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
   881 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   882 ;;  logic           1    2[COMRAM] enum E2801
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  ret             1    9[COMRAM] unsigned char 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      unsigned char 
   887 ;; Registers used:
   888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   894 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;Total ram usage:       10 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_gpio_pin_initialize
   904 ;;		_dc_motor_move_right
   905 ;;		_dc_motor_move_left
   906 ;;		_dc_motor_stop
   907 ;;		_led_turn_on
   908 ;;		_led_turn_off
   909 ;;		_relay_turn_on
   910 ;;		_relay_turn_off
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text7
   915   00FD54                     __ptext7:
   916                           	callstack 0
   917   00FD54                     _gpio_pin_write_logic:
   918                           	callstack 29
   919   00FD54                     
   920                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
   921   00FD54  0E01               	movlw	1
   922   00FD56  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
   923   00FD58                     
   924                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
   925   00FD58  5023               	movf	gpio_pin_write_logic@pin_config^0,w,c
   926   00FD5A  1024               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
   927   00FD5C  B4D8               	btfsc	status,2,c
   928   00FD5E  EFB3  F07E         	goto	u691
   929   00FD62  EFB5  F07E         	goto	u690
   930   00FD66                     u691:
   931   00FD66  EFD5  F07E         	goto	l1349
   932   00FD6A                     u690:
   933   00FD6A  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   934   00FD6E  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   935   00FD72  30DF               	rrcf	223,w,c
   936   00FD74  32E8               	rrcf	wreg,f,c
   937   00FD76  32E8               	rrcf	wreg,f,c
   938   00FD78  0B07               	andlw	7
   939   00FD7A  6E26               	movwf	??_gpio_pin_write_logic^0,c
   940   00FD7C  0E08               	movlw	8
   941   00FD7E  6026               	cpfslt	??_gpio_pin_write_logic^0,c
   942   00FD80  EFC4  F07E         	goto	u701
   943   00FD84  EFC6  F07E         	goto	u700
   944   00FD88                     u701:
   945   00FD88  EFD5  F07E         	goto	l1349
   946   00FD8C                     u700:
   947   00FD8C  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   948   00FD90  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   949   00FD94  50DF               	movf	223,w,c
   950   00FD96  0B07               	andlw	7
   951   00FD98  6E26               	movwf	??_gpio_pin_write_logic^0,c
   952   00FD9A  0E04               	movlw	4
   953   00FD9C  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
   954   00FD9E  EFD3  F07E         	goto	u711
   955   00FDA2  EFD5  F07E         	goto	u710
   956   00FDA6                     u711:
   957   00FDA6  EF38  F07F         	goto	l1357
   958   00FDAA                     u710:
   959   00FDAA                     l1349:
   960                           
   961                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
   962   00FDAA  0E00               	movlw	0
   963   00FDAC  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
   964                           
   965                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
   966   00FDAE  EF4D  F07F         	goto	l1359
   967   00FDB2                     l1351:
   968                           
   969                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
   970   00FDB2  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   971   00FDB6  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   972   00FDBA  30DF               	rrcf	223,w,c
   973   00FDBC  32E8               	rrcf	wreg,f,c
   974   00FDBE  32E8               	rrcf	wreg,f,c
   975   00FDC0  0B07               	andlw	7
   976   00FDC2  6E26               	movwf	??_gpio_pin_write_logic^0,c
   977   00FDC4  0E01               	movlw	1
   978   00FDC6  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   979   00FDC8  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   980   00FDCA  EFE9  F07E         	goto	u724
   981   00FDCE                     u725:
   982   00FDCE  90D8               	bcf	status,0,c
   983   00FDD0  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   984   00FDD2                     u724:
   985   00FDD2  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   986   00FDD4  EFE7  F07E         	goto	u725
   987   00FDD8  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   988   00FDDC  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   989   00FDE0  50DF               	movf	223,w,c
   990   00FDE2  0B07               	andlw	7
   991   00FDE4  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
   992   00FDE6  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   993   00FDE8  0D02               	mullw	2
   994   00FDEA  0E0B               	movlw	low _lat_registers
   995   00FDEC  24F3               	addwf	243,w,c
   996   00FDEE  6ED9               	movwf	fsr2l,c
   997   00FDF0  0E00               	movlw	high _lat_registers
   998   00FDF2  20F4               	addwfc	prodh,w,c
   999   00FDF4  6EDA               	movwf	fsr2h,c
  1000   00FDF6  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
  1001   00FDFA  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
  1002   00FDFE  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1003   00FE02  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1004   00FE06  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1005   00FE08  12DF               	iorwf	indf2,f,c
  1006                           
  1007                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  1008   00FE0A  EF4D  F07F         	goto	l1359
  1009   00FE0E                     l1353:
  1010                           
  1011                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  1012   00FE0E  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1013   00FE12  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1014   00FE16  30DF               	rrcf	223,w,c
  1015   00FE18  32E8               	rrcf	wreg,f,c
  1016   00FE1A  32E8               	rrcf	wreg,f,c
  1017   00FE1C  0B07               	andlw	7
  1018   00FE1E  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1019   00FE20  0E01               	movlw	1
  1020   00FE22  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1021   00FE24  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1022   00FE26  EF17  F07F         	goto	u734
  1023   00FE2A                     u735:
  1024   00FE2A  90D8               	bcf	status,0,c
  1025   00FE2C  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1026   00FE2E                     u734:
  1027   00FE2E  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1028   00FE30  EF15  F07F         	goto	u735
  1029   00FE34  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1030   00FE36  0AFF               	xorlw	255
  1031   00FE38  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1032   00FE3A  C023  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1033   00FE3E  C024  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1034   00FE42  50DF               	movf	223,w,c
  1035   00FE44  0B07               	andlw	7
  1036   00FE46  6E29               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1037   00FE48  5029               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1038   00FE4A  0D02               	mullw	2
  1039   00FE4C  0E0B               	movlw	low _lat_registers
  1040   00FE4E  24F3               	addwf	243,w,c
  1041   00FE50  6ED9               	movwf	fsr2l,c
  1042   00FE52  0E00               	movlw	high _lat_registers
  1043   00FE54  20F4               	addwfc	prodh,w,c
  1044   00FE56  6EDA               	movwf	fsr2h,c
  1045   00FE58  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+4
  1046   00FE5C  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+5
  1047   00FE60  C02A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1048   00FE64  C02B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1049   00FE68  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1050   00FE6A  16DF               	andwf	indf2,f,c
  1051                           
  1052                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  1053   00FE6C  EF4D  F07F         	goto	l1359
  1054   00FE70                     l1357:
  1055   00FE70  5025               	movf	gpio_pin_write_logic@logic^0,w,c
  1056   00FE72  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1057   00FE74  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1058                           
  1059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1060                           ; Switch size 1, requested type "simple"
  1061                           ; Number of cases is 1, Range of values is 0 to 0
  1062                           ; switch strategies available:
  1063                           ; Name         Instructions Cycles
  1064                           ; simple_byte            4     3 (average)
  1065                           ;	Chosen strategy is simple_byte
  1066   00FE76  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1067   00FE78  0A00               	xorlw	0	; case 0
  1068   00FE7A  B4D8               	btfsc	status,2,c
  1069   00FE7C  EF42  F07F         	goto	l1577
  1070   00FE80  EFD5  F07E         	goto	l1349
  1071   00FE84                     l1577:
  1072                           
  1073                           ; Switch size 1, requested type "simple"
  1074                           ; Number of cases is 2, Range of values is 0 to 1
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte            7     4 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079   00FE84  5026               	movf	??_gpio_pin_write_logic^0,w,c
  1080   00FE86  0A00               	xorlw	0	; case 0
  1081   00FE88  B4D8               	btfsc	status,2,c
  1082   00FE8A  EF07  F07F         	goto	l1353
  1083   00FE8E  0A01               	xorlw	1	; case 1
  1084   00FE90  B4D8               	btfsc	status,2,c
  1085   00FE92  EFD9  F07E         	goto	l1351
  1086   00FE96  EFD5  F07E         	goto	l1349
  1087   00FE9A                     l1359:
  1088                           
  1089                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  1090   00FE9A  502C               	movf	gpio_pin_write_logic@ret^0,w,c
  1091   00FE9C  0012               	return		;funcret
  1092   00FE9E                     __end_of_gpio_pin_write_logic:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _gpio_pin_direction_initialize *****************
  1096 ;; Defined at:
  1097 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1100 ;;		 -> Motor2.dc_motor_pin(2), Motor2(2), Motor1.dc_motor_pin(2), Motor1(2), 
  1101 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  ret             1    8[COMRAM] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      unsigned char 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:        9 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_gpio_pin_initialize
  1123 ;;		_button_initialize
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text8
  1128   00FE9E                     __ptext8:
  1129                           	callstack 0
  1130   00FE9E                     _gpio_pin_direction_initialize:
  1131                           	callstack 27
  1132   00FE9E                     
  1133                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1134   00FE9E  0E01               	movlw	1
  1135   00FEA0  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1136   00FEA2                     
  1137                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  1138   00FEA2  5023               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1139   00FEA4  1024               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  1140   00FEA6  B4D8               	btfsc	status,2,c
  1141   00FEA8  EF58  F07F         	goto	u621
  1142   00FEAC  EF5A  F07F         	goto	u620
  1143   00FEB0                     u621:
  1144   00FEB0  EF7A  F07F         	goto	l1323
  1145   00FEB4                     u620:
  1146   00FEB4  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1147   00FEB8  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1148   00FEBC  30DF               	rrcf	223,w,c
  1149   00FEBE  32E8               	rrcf	wreg,f,c
  1150   00FEC0  32E8               	rrcf	wreg,f,c
  1151   00FEC2  0B07               	andlw	7
  1152   00FEC4  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1153   00FEC6  0E08               	movlw	8
  1154   00FEC8  6025               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1155   00FECA  EF69  F07F         	goto	u631
  1156   00FECE  EF6B  F07F         	goto	u630
  1157   00FED2                     u631:
  1158   00FED2  EF7A  F07F         	goto	l1323
  1159   00FED6                     u630:
  1160   00FED6  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1161   00FEDA  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1162   00FEDE  50DF               	movf	223,w,c
  1163   00FEE0  0B07               	andlw	7
  1164   00FEE2  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1165   00FEE4  0E04               	movlw	4
  1166   00FEE6  6425               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1167   00FEE8  EF78  F07F         	goto	u641
  1168   00FEEC  EF7A  F07F         	goto	u640
  1169   00FEF0                     u641:
  1170   00FEF0  EFDD  F07F         	goto	l1331
  1171   00FEF4                     u640:
  1172   00FEF4                     l1323:
  1173                           
  1174                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  1175   00FEF4  0E00               	movlw	0
  1176   00FEF6  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1177                           
  1178                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  1179   00FEF8  EFFE  F07F         	goto	l1333
  1180   00FEFC                     l1325:
  1181                           
  1182                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  1183   00FEFC  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1184   00FF00  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1185   00FF04  30DF               	rrcf	223,w,c
  1186   00FF06  32E8               	rrcf	wreg,f,c
  1187   00FF08  32E8               	rrcf	wreg,f,c
  1188   00FF0A  0B07               	andlw	7
  1189   00FF0C  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1190   00FF0E  0E01               	movlw	1
  1191   00FF10  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1192   00FF12  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
  1193   00FF14  EF8E  F07F         	goto	u654
  1194   00FF18                     u655:
  1195   00FF18  90D8               	bcf	status,0,c
  1196   00FF1A  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1197   00FF1C                     u654:
  1198   00FF1C  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1199   00FF1E  EF8C  F07F         	goto	u655
  1200   00FF22  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1201   00FF24  0AFF               	xorlw	255
  1202   00FF26  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1203   00FF28  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1204   00FF2C  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1205   00FF30  50DF               	movf	223,w,c
  1206   00FF32  0B07               	andlw	7
  1207   00FF34  6E28               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1208   00FF36  5028               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1209   00FF38  0D02               	mullw	2
  1210   00FF3A  0E15               	movlw	low _tris_registers
  1211   00FF3C  24F3               	addwf	243,w,c
  1212   00FF3E  6ED9               	movwf	fsr2l,c
  1213   00FF40  0E00               	movlw	high _tris_registers
  1214   00FF42  20F4               	addwfc	prodh,w,c
  1215   00FF44  6EDA               	movwf	fsr2h,c
  1216   00FF46  CFDE F029          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1217   00FF4A  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1218   00FF4E  C029  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1219   00FF52  C02A  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1220   00FF56  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1221   00FF58  16DF               	andwf	indf2,f,c
  1222                           
  1223                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  1224   00FF5A  EFFE  F07F         	goto	l1333
  1225   00FF5E                     l1327:
  1226                           
  1227                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  1228   00FF5E  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1229   00FF62  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1230   00FF66  30DF               	rrcf	223,w,c
  1231   00FF68  32E8               	rrcf	wreg,f,c
  1232   00FF6A  32E8               	rrcf	wreg,f,c
  1233   00FF6C  0B07               	andlw	7
  1234   00FF6E  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1235   00FF70  0E01               	movlw	1
  1236   00FF72  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1237   00FF74  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
  1238   00FF76  EFBF  F07F         	goto	u664
  1239   00FF7A                     u665:
  1240   00FF7A  90D8               	bcf	status,0,c
  1241   00FF7C  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1242   00FF7E                     u664:
  1243   00FF7E  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1244   00FF80  EFBD  F07F         	goto	u665
  1245   00FF84  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1246   00FF88  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1247   00FF8C  50DF               	movf	223,w,c
  1248   00FF8E  0B07               	andlw	7
  1249   00FF90  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1250   00FF92  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1251   00FF94  0D02               	mullw	2
  1252   00FF96  0E15               	movlw	low _tris_registers
  1253   00FF98  24F3               	addwf	243,w,c
  1254   00FF9A  6ED9               	movwf	fsr2l,c
  1255   00FF9C  0E00               	movlw	high _tris_registers
  1256   00FF9E  20F4               	addwfc	prodh,w,c
  1257   00FFA0  6EDA               	movwf	fsr2h,c
  1258   00FFA2  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1259   00FFA6  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1260   00FFAA  C028  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1261   00FFAE  C029  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1262   00FFB2  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1263   00FFB4  12DF               	iorwf	indf2,f,c
  1264                           
  1265                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  1266   00FFB6  EFFE  F07F         	goto	l1333
  1267   00FFBA                     l1331:
  1268   00FFBA  C023  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1269   00FFBE  C024  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1270   00FFC2  BCDF               	btfsc	indf2,6,c
  1271   00FFC4  EFE6  F07F         	goto	u671
  1272   00FFC8  EFE9  F07F         	goto	u670
  1273   00FFCC                     u671:
  1274   00FFCC  0E01               	movlw	1
  1275   00FFCE  EFEA  F07F         	goto	u680
  1276   00FFD2                     u670:
  1277   00FFD2  0E00               	movlw	0
  1278   00FFD4                     u680:
  1279   00FFD4  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1280   00FFD6  6A26               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1281                           
  1282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 1, Range of values is 0 to 0
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte            4     3 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289   00FFD8  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1290   00FFDA  0A00               	xorlw	0	; case 0
  1291   00FFDC  B4D8               	btfsc	status,2,c
  1292   00FFDE  EFF3  F07F         	goto	l1579
  1293   00FFE2  EF7A  F07F         	goto	l1323
  1294   00FFE6                     l1579:
  1295                           
  1296                           ; Switch size 1, requested type "simple"
  1297                           ; Number of cases is 2, Range of values is 0 to 1
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte            7     4 (average)
  1301                           ;	Chosen strategy is simple_byte
  1302   00FFE6  5025               	movf	??_gpio_pin_direction_initialize^0,w,c
  1303   00FFE8  0A00               	xorlw	0	; case 0
  1304   00FFEA  B4D8               	btfsc	status,2,c
  1305   00FFEC  EF7E  F07F         	goto	l1325
  1306   00FFF0  0A01               	xorlw	1	; case 1
  1307   00FFF2  B4D8               	btfsc	status,2,c
  1308   00FFF4  EFAF  F07F         	goto	l1327
  1309   00FFF8  EF7A  F07F         	goto	l1323
  1310   00FFFC                     l1333:
  1311                           
  1312                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  1313   00FFFC  502B               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1314   00FFFE  0012               	return		;funcret
  1315   010000                     __end_of_gpio_pin_direction_initialize:
  1316                           	callstack 0
  1317   000000                     
  1318                           	psect	rparam
  1319   000000                     
  1320                           	psect	config
  1321                           
  1322                           ; Padding undefined space
  1323   300000                     	org	3145728
  1324   300000  FF                 	db	255
  1325                           
  1326                           ;Config register CONFIG1H @ 0x300001
  1327                           ;	Oscillator Selection bits
  1328                           ;	OSC = HS, HS oscillator
  1329                           ;	Fail-Safe Clock Monitor Enable bit
  1330                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1331                           ;	Internal/External Oscillator Switchover bit
  1332                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1333   300001                     	org	3145729
  1334   300001  02                 	db	2
  1335                           
  1336                           ;Config register CONFIG2L @ 0x300002
  1337                           ;	Power-up Timer Enable bit
  1338                           ;	PWRT = OFF, PWRT disabled
  1339                           ;	Brown-out Reset Enable bits
  1340                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1341                           ;	Brown Out Reset Voltage bits
  1342                           ;	BORV = 1, 
  1343   300002                     	org	3145730
  1344   300002  09                 	db	9
  1345                           
  1346                           ;Config register CONFIG2H @ 0x300003
  1347                           ;	Watchdog Timer Enable bit
  1348                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1349                           ;	Watchdog Timer Postscale Select bits
  1350                           ;	WDTPS = 32768, 1:32768
  1351   300003                     	org	3145731
  1352   300003  1E                 	db	30
  1353                           
  1354                           ; Padding undefined space
  1355   300004                     	org	3145732
  1356   300004  FF                 	db	255
  1357                           
  1358                           ;Config register CONFIG3H @ 0x300005
  1359                           ;	CCP2 MUX bit
  1360                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1361                           ;	PORTB A/D Enable bit
  1362                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1363                           ;	Low-Power Timer1 Oscillator Enable bit
  1364                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1365                           ;	MCLR Pin Enable bit
  1366                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1367   300005                     	org	3145733
  1368   300005  81                 	db	129
  1369                           
  1370                           ;Config register CONFIG4L @ 0x300006
  1371                           ;	Stack Full/Underflow Reset Enable bit
  1372                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1373                           ;	Single-Supply ICSP Enable bit
  1374                           ;	LVP = OFF, Single-Supply ICSP disabled
  1375                           ;	Extended Instruction Set Enable bit
  1376                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1377                           ;	Background Debugger Enable bit
  1378                           ;	DEBUG = 0x1, unprogrammed default
  1379   300006                     	org	3145734
  1380   300006  81                 	db	129
  1381                           
  1382                           ; Padding undefined space
  1383   300007                     	org	3145735
  1384   300007  FF                 	db	255
  1385                           
  1386                           ;Config register CONFIG5L @ 0x300008
  1387                           ;	Code Protection bit
  1388                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1389                           ;	Code Protection bit
  1390                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1391                           ;	Code Protection bit
  1392                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1393                           ;	Code Protection bit
  1394                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1395   300008                     	org	3145736
  1396   300008  0F                 	db	15
  1397                           
  1398                           ;Config register CONFIG5H @ 0x300009
  1399                           ;	Boot Block Code Protection bit
  1400                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1401                           ;	Data EEPROM Code Protection bit
  1402                           ;	CPD = OFF, Data EEPROM not code-protected
  1403   300009                     	org	3145737
  1404   300009  C0                 	db	192
  1405                           
  1406                           ;Config register CONFIG6L @ 0x30000A
  1407                           ;	Write Protection bit
  1408                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1409                           ;	Write Protection bit
  1410                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1411                           ;	Write Protection bit
  1412                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1413                           ;	Write Protection bit
  1414                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1415   30000A                     	org	3145738
  1416   30000A  0F                 	db	15
  1417                           
  1418                           ;Config register CONFIG6H @ 0x30000B
  1419                           ;	Configuration Register Write Protection bit
  1420                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1421                           ;	Boot Block Write Protection bit
  1422                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1423                           ;	Data EEPROM Write Protection bit
  1424                           ;	WRTD = OFF, Data EEPROM not write-protected
  1425   30000B                     	org	3145739
  1426   30000B  E0                 	db	224
  1427                           
  1428                           ;Config register CONFIG7L @ 0x30000C
  1429                           ;	Table Read Protection bit
  1430                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1431                           ;	Table Read Protection bit
  1432                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1433                           ;	Table Read Protection bit
  1434                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1435                           ;	Table Read Protection bit
  1436                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1437   30000C                     	org	3145740
  1438   30000C  0F                 	db	15
  1439                           
  1440                           ;Config register CONFIG7H @ 0x30000D
  1441                           ;	Boot Block Table Read Protection bit
  1442                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1443   30000D                     	org	3145741
  1444   30000D  40                 	db	64
  1445                           tosu	equ	0xFFF
  1446                           tosh	equ	0xFFE
  1447                           tosl	equ	0xFFD
  1448                           stkptr	equ	0xFFC
  1449                           pclatu	equ	0xFFB
  1450                           pclath	equ	0xFFA
  1451                           pcl	equ	0xFF9
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           prodh	equ	0xFF4
  1457                           prodl	equ	0xFF3
  1458                           indf0	equ	0xFEF
  1459                           postinc0	equ	0xFEE
  1460                           postdec0	equ	0xFED
  1461                           preinc0	equ	0xFEC
  1462                           plusw0	equ	0xFEB
  1463                           fsr0h	equ	0xFEA
  1464                           fsr0l	equ	0xFE9
  1465                           wreg	equ	0xFE8
  1466                           indf1	equ	0xFE7
  1467                           postinc1	equ	0xFE6
  1468                           postdec1	equ	0xFE5
  1469                           preinc1	equ	0xFE4
  1470                           plusw1	equ	0xFE3
  1471                           fsr1h	equ	0xFE2
  1472                           fsr1l	equ	0xFE1
  1473                           bsr	equ	0xFE0
  1474                           indf2	equ	0xFDF
  1475                           postinc2	equ	0xFDE
  1476                           postdec2	equ	0xFDD
  1477                           preinc2	equ	0xFDC
  1478                           plusw2	equ	0xFDB
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     19      61
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> Motor2(COMRAM[2]), Motor1(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> Motor2(COMRAM[2]), Motor1(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> Motor2(COMRAM[2]), Motor1(COMRAM[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> Motor2(COMRAM[2]), Motor1(COMRAM[2]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 2
		 -> Motor2.dc_motor_pin(COMRAM[2]), Motor2(COMRAM[2]), Motor1.dc_motor_pin(COMRAM[2]), Motor1(COMRAM[2]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 2
		 -> Motor2.dc_motor_pin(COMRAM[2]), Motor2(COMRAM[2]), Motor1.dc_motor_pin(COMRAM[2]), Motor1(COMRAM[2]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 2
		 -> Motor2.dc_motor_pin(COMRAM[2]), Motor2(COMRAM[2]), Motor1.dc_motor_pin(COMRAM[2]), Motor1(COMRAM[2]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 


Critical Paths under _main in COMRAM

    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9235
                                             17 COMRAM     2     2      0
             _application_initialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    2101
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    2101
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    2101
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    2932
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2    2932
                                             14 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    2688
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    1873
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     353
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     13      3D       1       48.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      12        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Aug 28 16:10:40 2023

                                    l100 FCBC                                      l112 FFFE  
                                    l131 FE9C                                      l203 FADC  
                                    l212 FB72                                      l222 FBB2  
                                    l217 FBF2                                      l227 FC32  
                                    l197 FCC2                                      u620 FEB4  
                                    u700 FD8C                                      u621 FEB0  
                                    u701 FD88                                      u630 FED6  
                                    u710 FDAA                                      u631 FED2  
                                    u711 FDA6                                      u640 FEF4  
                                    u800 FC06                                      u641 FEF0  
                                    u801 FC02                                      u724 FDD2  
                                    u740 FC46                                      u725 FDCE  
                                    u741 FC42                                      u670 FFD2  
                                    u654 FF1C                                      u734 FE2E  
                                    u750 FC68                                      u671 FFCC  
                                    u655 FF18                                      u735 FE2A  
                                    u751 FC64                                      u680 FFD4  
                                    u664 FF7E                                      u760 FC86  
                                    u665 FF7A                                      u761 FC82  
                                    u690 FD6A                                      u770 FB48  
                                    u691 FD66                                      u771 FB44  
                                    u780 FBC6                                      u781 FBC2  
                                    u790 FB86                                      u791 FB82  
                                    u947 FCE4                                      u957 FD12  
                                    u967 FD40            gpio_pin_initialize@pin_config 002D  
                                    _ret 003D                                      prod 0FF3  
                    led_initialize@F2881 003C                                      wreg 0FE8  
                  relay_initialize@F2875 0038                                     l1321 FED6  
                                   l1401 FBC6                                     l1331 FFBA  
                                   l1323 FEF4                                     l1315 FE9E  
                                   l1411 FB86                                     l1403 FBCA  
                                   l1325 FEFC                                     l1333 FFFC  
                                   l1317 FEA2                                     l1341 FD54  
                                   l1413 FB8A                                     l1421 FC06  
                                   l1327 FF5E                                     l1319 FEB4  
                                   l1351 FDB2                                     l1343 FD58  
                                   l1407 FB74                                     l1423 FC0A  
                                   l1353 FE0E                                     l1345 FD6A  
                                   l1409 FB74                                     l1417 FBF4  
                                   l1347 FD8C                                     l1371 FC46  
                                   l1419 FBF4                                     l1357 FE70  
                                   l1349 FDAA                                     l1373 FC68  
                                   l1359 FE9A                                     l1375 FC86  
                                   l1367 FC34                                     l1391 FB70  
                                   l1383 FB36                                     l1377 FC8E  
                                   l1369 FC34                                     l1385 FB36  
                                   l1561 FCF0                                     l1379 FCBA  
                                   l1387 FB48                                     l1395 FAC0  
                                   l1563 FCFC                                     l1389 FB50  
                                   l1397 FBB4                                     l1565 FD08  
                                   l1557 FCBE                                     l1399 FBB4  
                                   l1567 FD36                                     l1559 FCDA  
                                   l1577 FE84                                     l1579 FFE6  
                                   _main FCBE                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                 dc_motor_initialize@ret 0033                     _gpio_pin_write_logic FD54  
                                  ?_main 0023                 ??_application_initialize 0034  
                    relay_turn_off@F2885 0036                                    tablat 0FF5  
                                  status 0FD8           ?_gpio_pin_direction_initialize 0023  
                        __initialization FB00                             __end_of_main FD54  
                  ?_gpio_pin_write_logic 0023                            _lat_registers 000B  
            __end_of_dc_motor_initialize FB74                                   ??_main 0034  
                          __activetblptr 0002                         led_turn_on@F2886 003B  
                                 _Motor1 0021                                   _Motor2 001F  
            __end_of_dc_motor_move_right FBF4                                   clear_0 FB26  
                                 isa$std 0001                             __pdataCOMRAM 0001  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization FB2C                            ___rparam_used 0001  
            dc_motor_move_left@_dc_motor 002D                   ??_gpio_pin_write_logic 0026  
                         __pcstackCOMRAM 0023                   _application_initialize FAC0  
                             __pnvCOMRAM 003D                        led_turn_off@F2891 003A  
                        led_toggle@F2896 0039                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                  dc_motor_move_left@ret 002F                      _gpio_pin_initialize FC34  
                                __pcinit FB00                                  __ramtop 1000  
                                __ptext0 FCBE                                  __ptext1 FBF4  
                                __ptext2 FBB4                                  __ptext3 FB74  
                                __ptext4 FAC0                                  __ptext5 FB36  
                                __ptext6 FC34                                  __ptext7 FD54  
                                __ptext8 FE9E          ??_gpio_pin_direction_initialize 0025  
                   ?_gpio_pin_initialize 002D                     end_of_initialization FB2C  
                          __Lmediumconst 0000                            _dc_motor_stop FBF4  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                  ??_gpio_pin_initialize 002F                           ?_dc_motor_stop 002D  
                     relay_turn_on@F2880 0037                            __pidataCOMRAM FADE  
                    start_initialization FB00    __end_of_gpio_pin_direction_initialize 0000  
          _gpio_pin_direction_initialize FE9E                  ?_application_initialize 0023  
                 dc_motor_stop@_dc_motor 002D               __end_of_dc_motor_move_left FBB4  
                       dc_motor_stop@ret 002F                              __pbssCOMRAM 0036  
         __end_of_application_initialize FADE           gpio_pin_write_logic@pin_config 0023  
                        ??_dc_motor_stop 002F                gpio_pin_write_logic@logic 0025  
                    _dc_motor_initialize FB36             dc_motor_initialize@_dc_motor 0031  
       gpio_pin_direction_initialize@ret 002B  gpio_pin_direction_initialize@pin_config 0023  
                 gpio_pin_initialize@ret 0030                     ?_dc_motor_initialize 0031  
                gpio_pin_write_logic@ret 002C                                copy_data0 FB14  
                    _dc_motor_move_right FBB4                                 __Hrparam 0000  
                               __Lrparam 0000                     ?_dc_motor_move_right 002D  
            __end_of_gpio_pin_initialize FCBE                    ??_dc_motor_initialize 0033  
                 dc_motor_move_right@ret 002F                                 isa$xinst 0000  
                  ??_dc_motor_move_right 002F                       _dc_motor_move_left FB74  
           __end_of_gpio_pin_write_logic FE9E                      ?_dc_motor_move_left 002D  
                   ??_dc_motor_move_left 002F             dc_motor_move_right@_dc_motor 002D  
                         _port_registers 0001                    __end_of_dc_motor_stop FC34  
