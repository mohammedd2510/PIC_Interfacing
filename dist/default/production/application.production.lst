

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Oct 05 00:23:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 23/03/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4620 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120                           	psect	idataBANK0
   121   0035B0                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for _port_registers
   125   0035B0  80                 	db	128
   126   0035B1  0F                 	db	15
   127   0035B2  81                 	db	129
   128   0035B3  0F                 	db	15
   129   0035B4  82                 	db	130
   130   0035B5  0F                 	db	15
   131   0035B6  83                 	db	131
   132   0035B7  0F                 	db	15
   133   0035B8  84                 	db	132
   134   0035B9  0F                 	db	15
   135                           
   136                           ;initializer for _lat_registers
   137   0035BA  89                 	db	137
   138   0035BB  0F                 	db	15
   139   0035BC  8A                 	db	138
   140   0035BD  0F                 	db	15
   141   0035BE  8B                 	db	139
   142   0035BF  0F                 	db	15
   143   0035C0  8C                 	db	140
   144   0035C1  0F                 	db	15
   145   0035C2  8D                 	db	141
   146   0035C3  0F                 	db	15
   147                           
   148                           ;initializer for _tris_registers
   149   0035C4  92                 	db	146
   150   0035C5  0F                 	db	15
   151   0035C6  93                 	db	147
   152   0035C7  0F                 	db	15
   153   0035C8  94                 	db	148
   154   0035C9  0F                 	db	15
   155   0035CA  95                 	db	149
   156   0035CB  0F                 	db	15
   157   0035CC  96                 	db	150
   158   0035CD  0F                 	db	15
   159                           
   160                           ;initializer for _adc_1
   161   0035CE  F4                 	db	low _ADC_ISR_HANDLER
   162   0035CF  30                 	db	high _ADC_ISR_HANDLER
   163   0035D0  00                 	db	0
   164   0035D1  05                 	db	5
   165   0035D2  05                 	db	5
   166   0035D3  00                 	db	0
   167   0035D4  02                 	db	2
   168                           
   169                           ;initializer for _lcd1
   170   0035D5  02                 	db	2
   171   0035D6  0A                 	db	10
   172   0035D7  12                 	db	18
   173   0035D8  1A                 	db	26
   174   0035D9  22                 	db	34
   175   0035DA  2A                 	db	42
   176                           
   177                           ;initializer for _dc_motor_2
   178   0035DB  13                 	db	19
   179   0035DC  1B                 	db	27
   180                           
   181                           ;initializer for _dc_motor_1
   182   0035DD  03                 	db	3
   183   0035DE  0B                 	db	11
   184                           
   185                           	psect	smallconst
   186   001000                     __psmallconst:
   187                           	callstack 0
   188   001000  00                 	db	0
   189   001001                     _btn_values:
   190                           	callstack 0
   191   001001  37                 	db	55
   192   001002  38                 	db	56
   193   001003  39                 	db	57
   194   001004  2F                 	db	47
   195   001005  34                 	db	52
   196   001006  35                 	db	53
   197   001007  36                 	db	54
   198   001008  2A                 	db	42
   199   001009  31                 	db	49
   200   00100A  32                 	db	50
   201   00100B  33                 	db	51
   202   00100C  2D                 	db	45
   203   00100D  23                 	db	35
   204   00100E  30                 	db	48
   205   00100F  3D                 	db	61
   206   001010  2B                 	db	43
   207   001011                     __end_of_btn_values:
   208                           	callstack 0
   209   001011                     STR_5:
   210   001011  20                 	db	32
   211   001012  54                 	db	84	;'T'
   212   001013  65                 	db	101	;'e'
   213   001014  6D                 	db	109	;'m'
   214   001015  70                 	db	112	;'p'
   215   001016  31                 	db	49	;'1'
   216   001017  20                 	db	32
   217   001018  3A                 	db	58	;':'
   218   001019  20                 	db	32
   219   00101A  00                 	db	0
   220   00101B                     STR_7:
   221   00101B  20                 	db	32
   222   00101C  54                 	db	84	;'T'
   223   00101D  65                 	db	101	;'e'
   224   00101E  6D                 	db	109	;'m'
   225   00101F  70                 	db	112	;'p'
   226   001020  32                 	db	50	;'2'
   227   001021  20                 	db	32
   228   001022  3A                 	db	58	;':'
   229   001023  20                 	db	32
   230   001024  00                 	db	0
   231   001025                     STR_4:
   232   001025  4C                 	db	76	;'L'
   233   001026  4D                 	db	77	;'M'
   234   001027  33                 	db	51	;'3'
   235   001028  35                 	db	53	;'5'
   236   001029  20                 	db	32
   237   00102A  54                 	db	84	;'T'
   238   00102B  65                 	db	101	;'e'
   239   00102C  73                 	db	115	;'s'
   240   00102D  74                 	db	116	;'t'
   241   00102E  00                 	db	0
   242   00102F                     STR_1:
   243   00102F  25                 	db	37
   244   001030  69                 	db	105	;'i'
   245   001031  00                 	db	0
   246   001032  00                 	db	0	; dummy byte at the end
   247   000000                     
   248                           	psect	nvCOMRAM
   249   000064                     __pnvCOMRAM:
   250                           	callstack 0
   251   000064                     _ret:
   252                           	callstack 0
   253   000064                     	ds	1
   254   000000                     _ADRESL	set	4035
   255   000000                     _ADRESH	set	4036
   256                           
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260   003308                     __pcinit:
   261                           	callstack 0
   262   003308                     start_initialization:
   263                           	callstack 0
   264   003308                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (47 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269   003308  0EB0               	movlw	low __pidataBANK0
   270   00330A  6EF6               	movwf	tblptrl,c
   271   00330C  0E35               	movlw	high __pidataBANK0
   272   00330E  6EF7               	movwf	tblptrh,c
   273   003310  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274   003312  6EF8               	movwf	tblptru,c
   275   003314  EE00  F0B5         	lfsr	0,__pdataBANK0
   276   003318  EE10 F02F          	lfsr	1,47
   277   00331C                     copy_data0:
   278   00331C  0009               	tblrd		*+
   279   00331E  CFF5 FFEE          	movff	tablat,postinc0
   280   003322  50E5               	movf	postdec1,w,c
   281   003324  50E1               	movf	fsr1l,w,c
   282   003326  E1FA               	bnz	copy_data0
   283                           
   284                           ; Clear objects allocated to BANK1 (32 bytes)
   285   003328  EE01  F000         	lfsr	0,__pbssBANK1
   286   00332C  0E20               	movlw	32
   287   00332E                     clear_0:
   288   00332E  6AEE               	clrf	postinc0,c
   289   003330  06E8               	decf	wreg,f,c
   290   003332  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to BANK0 (53 bytes)
   293   003334  EE00  F080         	lfsr	0,__pbssBANK0
   294   003338  0E35               	movlw	53
   295   00333A                     clear_1:
   296   00333A  6AEE               	clrf	postinc0,c
   297   00333C  06E8               	decf	wreg,f,c
   298   00333E  E1FD               	bnz	clear_1
   299                           
   300                           ; Clear objects allocated to COMRAM (25 bytes)
   301   003340  EE00  F04B         	lfsr	0,__pbssCOMRAM
   302   003344  0E19               	movlw	25
   303   003346                     clear_2:
   304   003346  6AEE               	clrf	postinc0,c
   305   003348  06E8               	decf	wreg,f,c
   306   00334A  E1FD               	bnz	clear_2
   307   00334C                     end_of_initialization:
   308                           	callstack 0
   309   00334C                     __end_of__initialization:
   310                           	callstack 0
   311   00334C  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312   00334E  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313   003350  0100               	movlb	0
   314   003352  EFFD  F00B         	goto	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMRAM
   317   00004B                     __pbssCOMRAM:
   318                           	callstack 0
   319   00004B                     _RB4_InterruptHandler:
   320                           	callstack 0
   321   00004B                     	ds	2
   322   00004D                     _INT2_InterruptHandler:
   323                           	callstack 0
   324   00004D                     	ds	2
   325   00004F                     _INT1_InterruptHandler:
   326                           	callstack 0
   327   00004F                     	ds	2
   328   000051                     _ADC_InterruptHandler:
   329                           	callstack 0
   330   000051                     	ds	2
   331   000053                     _flags:
   332                           	callstack 0
   333   000053                     	ds	1
   334   000054                     _ADC_Flag:
   335                           	callstack 0
   336   000054                     	ds	1
   337   000055                     _RB7_pin_init_value:
   338                           	callstack 0
   339   000055                     	ds	1
   340   000056                     _RB6_pin_init_value:
   341                           	callstack 0
   342   000056                     	ds	1
   343   000057                     _RB5_pin_init_value:
   344                           	callstack 0
   345   000057                     	ds	1
   346   000058                     _RB4_pin_init_value:
   347                           	callstack 0
   348   000058                     	ds	1
   349   000059                     relay_turn_off@F3237:
   350                           	callstack 0
   351   000059                     	ds	1
   352   00005A                     relay_turn_on@F3232:
   353                           	callstack 0
   354   00005A                     	ds	1
   355   00005B                     relay_initialize@F3227:
   356                           	callstack 0
   357   00005B                     	ds	1
   358   00005C                     led_toggle@F3248:
   359                           	callstack 0
   360   00005C                     	ds	1
   361   00005D                     led_turn_off@F3243:
   362                           	callstack 0
   363   00005D                     	ds	1
   364   00005E                     led_turn_on@F3238:
   365                           	callstack 0
   366   00005E                     	ds	1
   367   00005F                     led_initialize@F3233:
   368                           	callstack 0
   369   00005F                     	ds	1
   370   000060                     _lm35_res_2:
   371                           	callstack 0
   372   000060                     	ds	2
   373   000062                     _lm35_res_1:
   374                           	callstack 0
   375   000062                     	ds	2
   376                           
   377                           	psect	bssBANK0
   378   000080                     __pbssBANK0:
   379                           	callstack 0
   380   000080                     	ds	11
   381   00008B                     	ds	6
   382   000091                     	ds	4
   383   000095                     _width:
   384                           	callstack 0
   385   000095                     	ds	2
   386   000097                     _prec:
   387                           	callstack 0
   388   000097                     	ds	2
   389   000099                     _lm35_res_2_Celsius_mv:
   390                           	callstack 0
   391   000099                     	ds	2
   392   00009B                     _lm35_res_1_Celsius_mv:
   393                           	callstack 0
   394   00009B                     	ds	2
   395   00009D                     _RB7_InterruptHandler:
   396                           	callstack 0
   397   00009D                     	ds	2
   398   00009F                     _RB6_InterruptHandler:
   399                           	callstack 0
   400   00009F                     	ds	2
   401   0000A1                     _RB5_InterruptHandler:
   402                           	callstack 0
   403   0000A1                     	ds	2
   404   0000A3                     _INT0_InterruptHandler:
   405                           	callstack 0
   406   0000A3                     	ds	2
   407   0000A5                     _TMR0_InterruptHandler:
   408                           	callstack 0
   409   0000A5                     	ds	2
   410   0000A7                     _lm35_res_2_txt:
   411                           	callstack 0
   412   0000A7                     	ds	7
   413   0000AE                     _lm35_res_1_txt:
   414                           	callstack 0
   415   0000AE                     	ds	7
   416                           
   417                           	psect	dataBANK0
   418   0000B5                     __pdataBANK0:
   419                           	callstack 0
   420   0000B5                     _port_registers:
   421                           	callstack 0
   422   0000B5                     	ds	10
   423   0000BF                     _lat_registers:
   424                           	callstack 0
   425   0000BF                     	ds	10
   426   0000C9                     _tris_registers:
   427                           	callstack 0
   428   0000C9                     	ds	10
   429   0000D3                     _adc_1:
   430                           	callstack 0
   431   0000D3                     	ds	7
   432   0000DA                     _lcd1:
   433                           	callstack 0
   434   0000DA                     	ds	6
   435   0000E0                     _dc_motor_2:
   436                           	callstack 0
   437   0000E0                     	ds	2
   438   0000E2                     _dc_motor_1:
   439                           	callstack 0
   440   0000E2                     	ds	2
   441                           
   442                           	psect	bssBANK1
   443   000100                     __pbssBANK1:
   444                           	callstack 0
   445   000100                     _dbuf:
   446                           	callstack 0
   447   000100                     	ds	32
   448                           
   449                           	psect	cstackBANK1
   450   000120                     __pcstackBANK1:
   451                           	callstack 0
   452   000120                     sprintf@ap:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456   000120                     	ds	2
   457   000122                     sprintf@f:
   458                           	callstack 0
   459                           
   460                           ; 12 bytes @ 0x2
   461   000122                     	ds	12
   462   00012E                     convert_uint16_to_string@Temp_str:
   463                           	callstack 0
   464                           
   465                           ; 6 bytes @ 0xE
   466   00012E                     	ds	6
   467   000134                     convert_uint16_to_string@ret:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x14
   471   000134                     	ds	1
   472   000135                     convert_uint16_to_string@cnt:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x15
   476   000135                     	ds	1
   477   000136                     ??_main:
   478                           
   479                           ; 1 bytes @ 0x16
   480   000136                     	ds	2
   481                           
   482                           	psect	cstackBANK0
   483   0000E4                     __pcstackBANK0:
   484                           	callstack 0
   485   0000E4                     ??___fldiv:
   486   0000E4                     vfpfcnvrt@convarg:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x0
   490   0000E4                     	ds	4
   491   0000E8                     vfpfcnvrt@cp:
   492                           	callstack 0
   493   0000E8                     ___fldiv@rem:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x4
   497   0000E8                     	ds	2
   498   0000EA                     ?_vfprintf:
   499                           	callstack 0
   500   0000EA                     vfprintf@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x6
   504   0000EA                     	ds	2
   505   0000EC                     ___fldiv@sign:
   506                           	callstack 0
   507   0000EC                     vfprintf@fmt:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x8
   511   0000EC                     	ds	1
   512   0000ED                     ___fldiv@new_exp:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x9
   516   0000ED                     	ds	1
   517   0000EE                     vfprintf@ap:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0xA
   521   0000EE                     	ds	1
   522   0000EF                     ___fldiv@grs:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0xB
   526   0000EF                     	ds	1
   527   0000F0                     vfprintf@cfmt:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0xC
   531   0000F0                     	ds	2
   532   0000F2                     ?_sprintf:
   533                           	callstack 0
   534   0000F2                     sprintf@s:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xE
   538   0000F2                     	ds	1
   539   0000F3                     ___fldiv@bexp:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0xF
   543   0000F3                     	ds	1
   544   0000F4                     ___fldiv@aexp:
   545                           	callstack 0
   546   0000F4                     sprintf@fmt:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x10
   550   0000F4                     	ds	1
   551   0000F5                     ?___fltol:
   552                           	callstack 0
   553   0000F5                     ___fltol@f1:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x11
   557   0000F5                     	ds	4
   558   0000F9                     ??___fltol:
   559                           
   560                           ; 1 bytes @ 0x15
   561   0000F9                     	ds	1
   562   0000FA                     convert_uint16_to_string@value:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x16
   566   0000FA                     	ds	2
   567   0000FC                     convert_uint16_to_string@str:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x18
   571   0000FC                     	ds	1
   572   0000FD                     ___fltol@sign1:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576   0000FD                     	ds	1
   577   0000FE                     ___fltol@exp1:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1A
   581   0000FE                     	ds	1
   582                           
   583                           	psect	cstackCOMRAM
   584   000001                     __pcstackCOMRAM:
   585                           	callstack 0
   586   000001                     i2ADC_GetConversionResult@_adc:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x0
   590   000001                     	ds	2
   591   000003                     i2ADC_GetConversionResult@conversion_result:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x2
   595   000003                     	ds	2
   596   000005                     ??i2_ADC_GetConversionResult:
   597                           
   598                           ; 1 bytes @ 0x4
   599   000005                     	ds	3
   600   000008                     ??_InterruptManagerHigh:
   601   000008                     
   602                           ; 1 bytes @ 0x7
   603   000008                     	ds	4
   604   00000C                     ADC_GetConversionResult@_adc:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0xB
   608   00000C                     	ds	2
   609   00000E                     ADC_GetConversionResult@conversion_result:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xD
   613   00000E                     	ds	2
   614   000010                     ??_ADC_GetConversionResult:
   615                           
   616                           ; 1 bytes @ 0xF
   617   000010                     	ds	3
   618   000013                     ADC_GetConversionResult@ret:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x12
   622   000013                     	ds	1
   623   000014                     ??_InterruptManagerLow:
   624                           
   625                           ; 1 bytes @ 0x13
   626   000014                     	ds	7
   627   00001B                     ??_adc_input_channel_port_configure:
   628   00001B                     ?___awdiv:
   629                           	callstack 0
   630   00001B                     ?___awmod:
   631                           	callstack 0
   632   00001B                     ?___xxtofl:
   633                           	callstack 0
   634   00001B                     ADC_StartConversion@_adc:
   635                           	callstack 0
   636   00001B                     select_result_format@_adc:
   637                           	callstack 0
   638   00001B                     configure_voltage_reference@_adc:
   639                           	callstack 0
   640   00001B                     gpio_pin_direction_initialize@pin_config:
   641                           	callstack 0
   642   00001B                     gpio_pin_write_logic@pin_config:
   643                           	callstack 0
   644   00001B                     ___awdiv@dividend:
   645                           	callstack 0
   646   00001B                     ___awmod@dividend:
   647                           	callstack 0
   648   00001B                     memset@dest:
   649                           	callstack 0
   650   00001B                     fputc@c:
   651                           	callstack 0
   652   00001B                     ___xxtofl@val:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x1A
   656   00001B                     	ds	2
   657   00001D                     ??_gpio_pin_direction_initialize:
   658   00001D                     ??_select_result_format:
   659   00001D                     ??_configure_voltage_reference:
   660   00001D                     ADC_StartConversion@ret:
   661                           	callstack 0
   662   00001D                     adc_input_channel_port_configure@channel:
   663                           	callstack 0
   664   00001D                     gpio_pin_write_logic@logic:
   665                           	callstack 0
   666   00001D                     ___awdiv@divisor:
   667                           	callstack 0
   668   00001D                     ___awmod@divisor:
   669                           	callstack 0
   670   00001D                     memset@c:
   671                           	callstack 0
   672   00001D                     fputc@fp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x1C
   676   00001D                     	ds	1
   677   00001E                     ??_gpio_pin_write_logic:
   678   00001E                     ADC_SelectChannel@_adc:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x1D
   682   00001E                     	ds	1
   683   00001F                     ??_fputc:
   684   00001F                     ??___xxtofl:
   685   00001F                     ___awdiv@counter:
   686                           	callstack 0
   687   00001F                     ___awmod@counter:
   688                           	callstack 0
   689   00001F                     ADC_Init@_adc:
   690                           	callstack 0
   691   00001F                     memset@n:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x1E
   695   00001F                     	ds	1
   696   000020                     ADC_SelectChannel@channel:
   697                           	callstack 0
   698   000020                     ___awdiv@sign:
   699                           	callstack 0
   700   000020                     ___awmod@sign:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x1F
   704   000020                     	ds	1
   705   000021                     ??_memset:
   706   000021                     ??_ADC_Init:
   707   000021                     ??_ADC_SelectChannel:
   708   000021                     ?_abs:
   709                           	callstack 0
   710   000021                     ___awdiv@quotient:
   711                           	callstack 0
   712   000021                     abs@a:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x20
   716   000021                     	ds	1
   717   000022                     ADC_Init@ret:
   718                           	callstack 0
   719   000022                     ADC_SelectChannel@ret:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x21
   723   000022                     	ds	1
   724   000023                     ??_abs:
   725   000023                     gpio_pin_direction_initialize@ret:
   726                           	callstack 0
   727   000023                     ___xxtofl@sign:
   728                           	callstack 0
   729   000023                     ADC_StartConversion_Interrupt@_adc:
   730                           	callstack 0
   731   000023                     memset@k:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x22
   735   000023                     	ds	1
   736   000024                     gpio_pin_write_logic@ret:
   737                           	callstack 0
   738   000024                     ___xxtofl@exp:
   739                           	callstack 0
   740   000024                     fputs@s:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x23
   744   000024                     	ds	1
   745   000025                     ADC_StartConversion_Interrupt@channel:
   746                           	callstack 0
   747   000025                     lcd_send_4bits@lcd:
   748                           	callstack 0
   749   000025                     lcd_4bit_send_enable_signal@lcd:
   750                           	callstack 0
   751   000025                     dc_motor_move_right@_dc_motor:
   752                           	callstack 0
   753   000025                     dc_motor_move_left@_dc_motor:
   754                           	callstack 0
   755   000025                     dc_motor_stop@_dc_motor:
   756                           	callstack 0
   757   000025                     gpio_pin_initialize@pin_config:
   758                           	callstack 0
   759   000025                     memset@s:
   760                           	callstack 0
   761   000025                     ___xxtofl@arg:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x24
   765   000025                     	ds	1
   766   000026                     ADC_StartConversion_Interrupt@ret:
   767                           	callstack 0
   768   000026                     fputs@fp:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x25
   772   000026                     	ds	1
   773   000027                     ??_gpio_pin_initialize:
   774   000027                     lcd_send_4bits@_data_command:
   775                           	callstack 0
   776   000027                     lcd_4bit_send_enable_signal@ret:
   777                           	callstack 0
   778   000027                     dc_motor_move_right@ret:
   779                           	callstack 0
   780   000027                     dc_motor_move_left@ret:
   781                           	callstack 0
   782   000027                     dc_motor_stop@ret:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x26
   786   000027                     	ds	1
   787   000028                     lcd_send_4bits@ret:
   788                           	callstack 0
   789   000028                     gpio_pin_initialize@ret:
   790                           	callstack 0
   791   000028                     fputs@c:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x27
   795   000028                     	ds	1
   796   000029                     ?___flmul:
   797                           	callstack 0
   798   000029                     lcd_4bit_send_command@lcd:
   799                           	callstack 0
   800   000029                     lcd_4bit_send_char_data@lcd:
   801                           	callstack 0
   802   000029                     dc_motor_initialize@_dc_motor:
   803                           	callstack 0
   804   000029                     fputs@i:
   805                           	callstack 0
   806   000029                     ___flmul@b:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x28
   810   000029                     	ds	2
   811   00002B                     lcd_4bit_send_command@command:
   812                           	callstack 0
   813   00002B                     lcd_4bit_send_char_data@data:
   814                           	callstack 0
   815   00002B                     dc_motor_initialize@ret:
   816                           	callstack 0
   817   00002B                     pad@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x2A
   821   00002B                     	ds	1
   822   00002C                     lcd_4bit_send_command@ret:
   823                           	callstack 0
   824   00002C                     lcd_4bit_send_char_data@ret:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x2B
   828   00002C                     	ds	1
   829   00002D                     lcd_4bit_initialize@lcd:
   830                           	callstack 0
   831   00002D                     lcd_4bit_set_cursor@lcd:
   832                           	callstack 0
   833   00002D                     pad@buf:
   834                           	callstack 0
   835   00002D                     ___flmul@a:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0x2C
   839   00002D                     	ds	2
   840   00002F                     ??_lcd_4bit_initialize:
   841   00002F                     lcd_4bit_set_cursor@row:
   842                           	callstack 0
   843   00002F                     pad@p:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2E
   847   00002F                     	ds	1
   848   000030                     lcd_4bit_set_cursor@column:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x2F
   852   000030                     	ds	1
   853   000031                     ??_lcd_4bit_set_cursor:
   854   000031                     ??___flmul:
   855   000031                     ??_pad:
   856   000031                     lcd_4bit_initialize@ret:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x30
   860   000031                     	ds	1
   861   000032                     lcd_4bit_initialize@l_data_pins_counter:
   862                           	callstack 0
   863   000032                     pad@i:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x31
   867   000032                     	ds	1
   868   000033                     ecu_layer_initialize@ret:
   869                           	callstack 0
   870   000033                     lcd_4bit_send_string_pos@lcd:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x32
   874   000033                     	ds	1
   875   000034                     pad@w:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x33
   879   000034                     	ds	1
   880   000035                     lcd_4bit_send_string_pos@row:
   881                           	callstack 0
   882   000035                     ___flmul@sign:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x34
   886   000035                     	ds	1
   887   000036                     lcd_4bit_send_string_pos@column:
   888                           	callstack 0
   889   000036                     dtoa@fp:
   890                           	callstack 0
   891   000036                     ___flmul@grs:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x35
   895   000036                     	ds	1
   896   000037                     lcd_4bit_send_string_pos@str:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x36
   900   000037                     	ds	1
   901   000038                     dtoa@d:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x37
   905   000038                     	ds	1
   906   000039                     lcd_4bit_send_string_pos@ret:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x38
   910   000039                     	ds	1
   911   00003A                     ___flmul@aexp:
   912                           	callstack 0
   913   00003A                     _dtoa$2407:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x39
   917   00003A                     	ds	1
   918   00003B                     ___flmul@bexp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x3A
   922   00003B                     	ds	1
   923   00003C                     dtoa@p:
   924                           	callstack 0
   925   00003C                     ___flmul@prod:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x3B
   929   00003C                     	ds	2
   930   00003E                     dtoa@w:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x3D
   934   00003E                     	ds	2
   935   000040                     dtoa@s:
   936                           	callstack 0
   937   000040                     ___flmul@temp:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x3F
   941   000040                     	ds	1
   942   000041                     dtoa@i:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x40
   946   000041                     	ds	1
   947   000042                     ?___fldiv:
   948                           	callstack 0
   949   000042                     ___fldiv@b:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x41
   953   000042                     	ds	1
   954   000043                     vfpfcnvrt@fp:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x42
   958   000043                     	ds	2
   959   000045                     vfpfcnvrt@fmt:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x44
   963   000045                     	ds	1
   964   000046                     ___fldiv@a:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x45
   968   000046                     	ds	1
   969   000047                     vfpfcnvrt@ap:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x46
   973   000047                     	ds	2
   974   000049                     ??_vfpfcnvrt:
   975                           
   976                           ; 1 bytes @ 0x48
   977   000049                     	ds	2
   978   00004B                     
   979                           ; 1 bytes @ 0x4A
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 14 in file "application.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2  1013[None  ] int 
   992 ;; Registers used:
   993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;Total ram usage:        2 bytes
  1004 ;; Hardware stack levels required when called: 17
  1005 ;; This function calls:
  1006 ;;		_ADC_StartConversion_Interrupt
  1007 ;;		___fldiv
  1008 ;;		___flmul
  1009 ;;		___fltol
  1010 ;;		___xxtofl
  1011 ;;		_application_initialize
  1012 ;;		_convert_uint16_to_string
  1013 ;;		_dc_motor_move_left
  1014 ;;		_dc_motor_move_right
  1015 ;;		_dc_motor_stop
  1016 ;;		_lcd_4bit_send_command
  1017 ;;		_lcd_4bit_send_string_pos
  1018 ;; This function is called by:
  1019 ;;		Startup code after reset
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text0
  1024   0017FA                     __ptext0:
  1025                           	callstack 0
  1026   0017FA                     _main:
  1027                           	callstack 14
  1028   0017FA                     
  1029                           ;application.c: 16:     application_initialize();
  1030   0017FA  EC46  F01B         	call	_application_initialize	;wreg free
  1031   0017FE                     
  1032                           ;application.c: 17:     ret = lcd_4bit_send_string_pos(&lcd1,1,6,"LM35 Test");
  1033   0017FE  0EDA               	movlw	low _lcd1
  1034   001800  6E33               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1035   001802  0E00               	movlw	high _lcd1
  1036   001804  6E34               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1037   001806  0E01               	movlw	1
  1038   001808  6E35               	movwf	lcd_4bit_send_string_pos@row^0,c
  1039   00180A  0E06               	movlw	6
  1040   00180C  6E36               	movwf	lcd_4bit_send_string_pos@column^0,c
  1041   00180E  0E25               	movlw	low STR_4
  1042   001810  6E37               	movwf	lcd_4bit_send_string_pos@str^0,c
  1043   001812  0E10               	movlw	high STR_4
  1044   001814  6E38               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1045   001816  ECF1  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1046   00181A  6E64               	movwf	_ret^0,c
  1047   00181C                     
  1048                           ;application.c: 18:     _delay((unsigned long)((1400)*(4000000/4000.0)));
  1049   00181C  0E08               	movlw	8
  1050   00181E  0101               	movlb	1	; () banked
  1051   001820  6F37               	movwf	(??_main+1)& (0+255),b
  1052   001822  0E1B               	movlw	27
  1053   001824  6F36               	movwf	??_main& (0+255),b
  1054   001826  0E27               	movlw	39
  1055   001828                     u7387:
  1056   001828  2EE8               	decfsz	wreg,f,c
  1057   00182A  D7FE               	bra	u7387
  1058   00182C  2F36               	decfsz	??_main& (0+255),f,b
  1059   00182E  D7FC               	bra	u7387
  1060   001830  2F37               	decfsz	(??_main+1)& (0+255),f,b
  1061   001832  D7FA               	bra	u7387
  1062   001834                     
  1063                           ;application.c: 19:     ret&= lcd_4bit_send_command(&lcd1,0X01);
  1064   001834  0EDA               	movlw	low _lcd1
  1065   001836  6E29               	movwf	lcd_4bit_send_command@lcd^0,c
  1066   001838  0E00               	movlw	high _lcd1
  1067   00183A  6E2A               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1068   00183C  0E01               	movlw	1
  1069   00183E  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  1070   001840  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  1071   001844  1664               	andwf	_ret^0,f,c
  1072   001846                     
  1073                           ;application.c: 20:     ret &= lcd_4bit_send_string_pos(&lcd1,1,1," Temp1 : ");
  1074   001846  0EDA               	movlw	low _lcd1
  1075   001848  6E33               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1076   00184A  0E00               	movlw	high _lcd1
  1077   00184C  6E34               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1078   00184E  0E01               	movlw	1
  1079   001850  6E35               	movwf	lcd_4bit_send_string_pos@row^0,c
  1080   001852  0E01               	movlw	1
  1081   001854  6E36               	movwf	lcd_4bit_send_string_pos@column^0,c
  1082   001856  0E11               	movlw	low STR_5
  1083   001858  6E37               	movwf	lcd_4bit_send_string_pos@str^0,c
  1084   00185A  0E10               	movlw	high STR_5
  1085   00185C  6E38               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1086   00185E  ECF1  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1087   001862  1664               	andwf	_ret^0,f,c
  1088   001864                     
  1089                           ;application.c: 21:     ret &= lcd_4bit_send_string_pos(&lcd1,2,1," Temp2 : ");
  1090   001864  0EDA               	movlw	low _lcd1
  1091   001866  6E33               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1092   001868  0E00               	movlw	high _lcd1
  1093   00186A  6E34               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1094   00186C  0E02               	movlw	2
  1095   00186E  6E35               	movwf	lcd_4bit_send_string_pos@row^0,c
  1096   001870  0E01               	movlw	1
  1097   001872  6E36               	movwf	lcd_4bit_send_string_pos@column^0,c
  1098   001874  0E1B               	movlw	low STR_7
  1099   001876  6E37               	movwf	lcd_4bit_send_string_pos@str^0,c
  1100   001878  0E10               	movlw	high STR_7
  1101   00187A  6E38               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1102   00187C  ECF1  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1103   001880  1664               	andwf	_ret^0,f,c
  1104   001882                     l7366:
  1105                           
  1106                           ;application.c: 23:     {;application.c: 24:         if (ADC_Flag == 0){
  1107   001882  5054               	movf	_ADC_Flag^0,w,c
  1108   001884  A4D8               	btfss	status,2,c
  1109   001886  EF47  F00C         	goto	u7341
  1110   00188A  EF49  F00C         	goto	u7340
  1111   00188E                     u7341:
  1112   00188E  EF52  F00C         	goto	l7370
  1113   001892                     u7340:
  1114   001892                     
  1115                           ;application.c: 25:           ret &= ADC_StartConversion_Interrupt(&adc_1,ADC_CHANNEL_AN
      +                          0);
  1116   001892  0ED3               	movlw	low _adc_1
  1117   001894  6E23               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1118   001896  0E00               	movlw	high _adc_1
  1119   001898  6E24               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1120   00189A  0E00               	movlw	0
  1121   00189C  6E25               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1122   00189E  EC9C  F01A         	call	_ADC_StartConversion_Interrupt	;wreg free
  1123   0018A2  1664               	andwf	_ret^0,f,c
  1124   0018A4                     l7370:
  1125                           
  1126                           ;application.c: 27:        if (ADC_Flag == 1){
  1127   0018A4  0454               	decf	_ADC_Flag^0,w,c
  1128   0018A6  A4D8               	btfss	status,2,c
  1129   0018A8  EF58  F00C         	goto	u7351
  1130   0018AC  EF5A  F00C         	goto	u7350
  1131   0018B0                     u7351:
  1132   0018B0  EF63  F00C         	goto	l7374
  1133   0018B4                     u7350:
  1134   0018B4                     
  1135                           ;application.c: 28:             ret &= ADC_StartConversion_Interrupt(&adc_1,ADC_CHANNEL_
      +                          AN1);
  1136   0018B4  0ED3               	movlw	low _adc_1
  1137   0018B6  6E23               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1138   0018B8  0E00               	movlw	high _adc_1
  1139   0018BA  6E24               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1140   0018BC  0E01               	movlw	1
  1141   0018BE  6E25               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1142   0018C0  EC9C  F01A         	call	_ADC_StartConversion_Interrupt	;wreg free
  1143   0018C4  1664               	andwf	_ret^0,f,c
  1144   0018C6                     l7374:
  1145                           
  1146                           ;application.c: 30:        lm35_res_1_Celsius_mv = (lm35_res_1 *4.88f)/10;
  1147   0018C6  0E00               	movlw	0
  1148   0018C8  6E46               	movwf	___fldiv@a^0,c
  1149   0018CA  0E00               	movlw	0
  1150   0018CC  6E47               	movwf	(___fldiv@a+1)^0,c
  1151   0018CE  0E20               	movlw	32
  1152   0018D0  6E48               	movwf	(___fldiv@a+2)^0,c
  1153   0018D2  0E41               	movlw	65
  1154   0018D4  6E49               	movwf	(___fldiv@a+3)^0,c
  1155   0018D6  0EF6               	movlw	246
  1156   0018D8  6E2D               	movwf	___flmul@a^0,c
  1157   0018DA  0E28               	movlw	40
  1158   0018DC  6E2E               	movwf	(___flmul@a+1)^0,c
  1159   0018DE  0E9C               	movlw	156
  1160   0018E0  6E2F               	movwf	(___flmul@a+2)^0,c
  1161   0018E2  0E40               	movlw	64
  1162   0018E4  6E30               	movwf	(___flmul@a+3)^0,c
  1163   0018E6  C062  F01B         	movff	_lm35_res_1,___xxtofl@val
  1164   0018EA  C063  F01C         	movff	_lm35_res_1+1,___xxtofl@val+1
  1165   0018EE  6A1D               	clrf	(___xxtofl@val+2)^0,c
  1166   0018F0  6A1E               	clrf	(___xxtofl@val+3)^0,c
  1167   0018F2  0E00               	movlw	0
  1168   0018F4  EC4B  F00D         	call	___xxtofl
  1169   0018F8  C01B  F029         	movff	?___xxtofl,___flmul@b
  1170   0018FC  C01C  F02A         	movff	?___xxtofl+1,___flmul@b+1
  1171   001900  C01D  F02B         	movff	?___xxtofl+2,___flmul@b+2
  1172   001904  C01E  F02C         	movff	?___xxtofl+3,___flmul@b+3
  1173   001908  EC1A  F008         	call	___flmul	;wreg free
  1174   00190C  C029  F042         	movff	?___flmul,___fldiv@b
  1175   001910  C02A  F043         	movff	?___flmul+1,___fldiv@b+1
  1176   001914  C02B  F044         	movff	?___flmul+2,___fldiv@b+2
  1177   001918  C02C  F045         	movff	?___flmul+3,___fldiv@b+3
  1178   00191C  EC2F  F00A         	call	___fldiv	;wreg free
  1179   001920  C042  F0F5         	movff	?___fldiv,___fltol@f1
  1180   001924  C043  F0F6         	movff	?___fldiv+1,___fltol@f1+1
  1181   001928  C044  F0F7         	movff	?___fldiv+2,___fltol@f1+2
  1182   00192C  C045  F0F8         	movff	?___fldiv+3,___fltol@f1+3
  1183   001930  EC5F  F012         	call	___fltol	;wreg free
  1184   001934  C0F5  F09B         	movff	?___fltol,_lm35_res_1_Celsius_mv
  1185   001938  C0F6  F09C         	movff	?___fltol+1,_lm35_res_1_Celsius_mv+1
  1186   00193C                     
  1187                           ;application.c: 31:        lm35_res_2_Celsius_mv = (lm35_res_2 *4.88f)/10;
  1188   00193C  0E00               	movlw	0
  1189   00193E  6E46               	movwf	___fldiv@a^0,c
  1190   001940  0E00               	movlw	0
  1191   001942  6E47               	movwf	(___fldiv@a+1)^0,c
  1192   001944  0E20               	movlw	32
  1193   001946  6E48               	movwf	(___fldiv@a+2)^0,c
  1194   001948  0E41               	movlw	65
  1195   00194A  6E49               	movwf	(___fldiv@a+3)^0,c
  1196   00194C  0EF6               	movlw	246
  1197   00194E  6E2D               	movwf	___flmul@a^0,c
  1198   001950  0E28               	movlw	40
  1199   001952  6E2E               	movwf	(___flmul@a+1)^0,c
  1200   001954  0E9C               	movlw	156
  1201   001956  6E2F               	movwf	(___flmul@a+2)^0,c
  1202   001958  0E40               	movlw	64
  1203   00195A  6E30               	movwf	(___flmul@a+3)^0,c
  1204   00195C  C060  F01B         	movff	_lm35_res_2,___xxtofl@val
  1205   001960  C061  F01C         	movff	_lm35_res_2+1,___xxtofl@val+1
  1206   001964  6A1D               	clrf	(___xxtofl@val+2)^0,c
  1207   001966  6A1E               	clrf	(___xxtofl@val+3)^0,c
  1208   001968  0E00               	movlw	0
  1209   00196A  EC4B  F00D         	call	___xxtofl
  1210   00196E  C01B  F029         	movff	?___xxtofl,___flmul@b
  1211   001972  C01C  F02A         	movff	?___xxtofl+1,___flmul@b+1
  1212   001976  C01D  F02B         	movff	?___xxtofl+2,___flmul@b+2
  1213   00197A  C01E  F02C         	movff	?___xxtofl+3,___flmul@b+3
  1214   00197E  EC1A  F008         	call	___flmul	;wreg free
  1215   001982  C029  F042         	movff	?___flmul,___fldiv@b
  1216   001986  C02A  F043         	movff	?___flmul+1,___fldiv@b+1
  1217   00198A  C02B  F044         	movff	?___flmul+2,___fldiv@b+2
  1218   00198E  C02C  F045         	movff	?___flmul+3,___fldiv@b+3
  1219   001992  EC2F  F00A         	call	___fldiv	;wreg free
  1220   001996  C042  F0F5         	movff	?___fldiv,___fltol@f1
  1221   00199A  C043  F0F6         	movff	?___fldiv+1,___fltol@f1+1
  1222   00199E  C044  F0F7         	movff	?___fldiv+2,___fltol@f1+2
  1223   0019A2  C045  F0F8         	movff	?___fldiv+3,___fltol@f1+3
  1224   0019A6  EC5F  F012         	call	___fltol	;wreg free
  1225   0019AA  C0F5  F099         	movff	?___fltol,_lm35_res_2_Celsius_mv
  1226   0019AE  C0F6  F09A         	movff	?___fltol+1,_lm35_res_2_Celsius_mv+1
  1227   0019B2                     
  1228                           ;application.c: 32:        ret&=convert_uint16_to_string(lm35_res_1_Celsius_mv , lm35_re
      +                          s_1_txt);
  1229   0019B2  C09B  F0FA         	movff	_lm35_res_1_Celsius_mv,convert_uint16_to_string@value
  1230   0019B6  C09C  F0FB         	movff	_lm35_res_1_Celsius_mv+1,convert_uint16_to_string@value+1
  1231   0019BA  0EAE               	movlw	low _lm35_res_1_txt
  1232   0019BC  0100               	movlb	0	; () banked
  1233   0019BE  6FFC               	movwf	convert_uint16_to_string@str& (0+255),b
  1234   0019C0  0E00               	movlw	high _lm35_res_1_txt
  1235   0019C2  6FFD               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1236   0019C4  EC14  F015         	call	_convert_uint16_to_string	;wreg free
  1237   0019C8  1664               	andwf	_ret^0,f,c
  1238   0019CA                     
  1239                           ;application.c: 33:        ret&=convert_uint16_to_string(lm35_res_2_Celsius_mv , lm35_re
      +                          s_2_txt);
  1240   0019CA  C099  F0FA         	movff	_lm35_res_2_Celsius_mv,convert_uint16_to_string@value
  1241   0019CE  C09A  F0FB         	movff	_lm35_res_2_Celsius_mv+1,convert_uint16_to_string@value+1
  1242   0019D2  0EA7               	movlw	low _lm35_res_2_txt
  1243   0019D4  0100               	movlb	0	; () banked
  1244   0019D6  6FFC               	movwf	convert_uint16_to_string@str& (0+255),b
  1245   0019D8  0E00               	movlw	high _lm35_res_2_txt
  1246   0019DA  6FFD               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1247   0019DC  EC14  F015         	call	_convert_uint16_to_string	;wreg free
  1248   0019E0  1664               	andwf	_ret^0,f,c
  1249   0019E2                     
  1250                           ;application.c: 34:        ret &= lcd_4bit_send_string_pos(&lcd1,1,10,lm35_res_1_txt);
  1251   0019E2  0EDA               	movlw	low _lcd1
  1252   0019E4  6E33               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1253   0019E6  0E00               	movlw	high _lcd1
  1254   0019E8  6E34               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1255   0019EA  0E01               	movlw	1
  1256   0019EC  6E35               	movwf	lcd_4bit_send_string_pos@row^0,c
  1257   0019EE  0E0A               	movlw	10
  1258   0019F0  6E36               	movwf	lcd_4bit_send_string_pos@column^0,c
  1259   0019F2  0EAE               	movlw	low _lm35_res_1_txt
  1260   0019F4  6E37               	movwf	lcd_4bit_send_string_pos@str^0,c
  1261   0019F6  0E00               	movlw	high _lm35_res_1_txt
  1262   0019F8  6E38               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1263   0019FA  ECF1  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1264   0019FE  1664               	andwf	_ret^0,f,c
  1265   001A00                     
  1266                           ;application.c: 35:        ret &= lcd_4bit_send_string_pos(&lcd1,2,10,lm35_res_2_txt);
  1267   001A00  0EDA               	movlw	low _lcd1
  1268   001A02  6E33               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1269   001A04  0E00               	movlw	high _lcd1
  1270   001A06  6E34               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1271   001A08  0E02               	movlw	2
  1272   001A0A  6E35               	movwf	lcd_4bit_send_string_pos@row^0,c
  1273   001A0C  0E0A               	movlw	10
  1274   001A0E  6E36               	movwf	lcd_4bit_send_string_pos@column^0,c
  1275   001A10  0EA7               	movlw	low _lm35_res_2_txt
  1276   001A12  6E37               	movwf	lcd_4bit_send_string_pos@str^0,c
  1277   001A14  0E00               	movlw	high _lm35_res_2_txt
  1278   001A16  6E38               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1279   001A18  ECF1  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1280   001A1C  1664               	andwf	_ret^0,f,c
  1281   001A1E                     
  1282                           ;application.c: 36:        if(lm35_res_1_Celsius_mv > 20){
  1283   001A1E  0100               	movlb	0	; () banked
  1284   001A20  519C               	movf	(_lm35_res_1_Celsius_mv+1)& (0+255),w,b
  1285   001A22  E109               	bnz	u7360
  1286   001A24  0E15               	movlw	21
  1287   001A26  5D9B               	subwf	_lm35_res_1_Celsius_mv& (0+255),w,b
  1288   001A28  A0D8               	btfss	status,0,c
  1289   001A2A  EF19  F00D         	goto	u7361
  1290   001A2E  EF1B  F00D         	goto	u7360
  1291   001A32                     u7361:
  1292   001A32  EF24  F00D         	goto	l7390
  1293   001A36                     u7360:
  1294   001A36                     
  1295                           ; BSR set to: 0
  1296                           ;application.c: 37:            ret&= dc_motor_move_right(&dc_motor_1);
  1297   001A36  0EE2               	movlw	low _dc_motor_1
  1298   001A38  6E25               	movwf	dc_motor_move_right@_dc_motor^0,c
  1299   001A3A  0E00               	movlw	high _dc_motor_1
  1300   001A3C  6E26               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1301   001A3E  ECF5  F019         	call	_dc_motor_move_right	;wreg free
  1302   001A42  1664               	andwf	_ret^0,f,c
  1303                           
  1304                           ;application.c: 38:        }
  1305   001A44  EF2B  F00D         	goto	l7392
  1306   001A48                     l7390:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;application.c: 40:             ret&= dc_motor_stop(&dc_motor_1);
  1310   001A48  0EE2               	movlw	low _dc_motor_1
  1311   001A4A  6E25               	movwf	dc_motor_stop@_dc_motor^0,c
  1312   001A4C  0E00               	movlw	high _dc_motor_1
  1313   001A4E  6E26               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1314   001A50  ECD2  F019         	call	_dc_motor_stop	;wreg free
  1315   001A54  1664               	andwf	_ret^0,f,c
  1316   001A56                     l7392:
  1317                           
  1318                           ;application.c: 42:        if(lm35_res_2_Celsius_mv > 25){
  1319   001A56  0100               	movlb	0	; () banked
  1320   001A58  519A               	movf	(_lm35_res_2_Celsius_mv+1)& (0+255),w,b
  1321   001A5A  E109               	bnz	u7370
  1322   001A5C  0E1A               	movlw	26
  1323   001A5E  5D99               	subwf	_lm35_res_2_Celsius_mv& (0+255),w,b
  1324   001A60  A0D8               	btfss	status,0,c
  1325   001A62  EF35  F00D         	goto	u7371
  1326   001A66  EF37  F00D         	goto	u7370
  1327   001A6A                     u7371:
  1328   001A6A  EF40  F00D         	goto	l7396
  1329   001A6E                     u7370:
  1330   001A6E                     
  1331                           ; BSR set to: 0
  1332                           ;application.c: 43:            ret&= dc_motor_move_left(&dc_motor_2);
  1333   001A6E  0EE0               	movlw	low _dc_motor_2
  1334   001A70  6E25               	movwf	dc_motor_move_left@_dc_motor^0,c
  1335   001A72  0E00               	movlw	high _dc_motor_2
  1336   001A74  6E26               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  1337   001A76  EC18  F01A         	call	_dc_motor_move_left	;wreg free
  1338   001A7A  1664               	andwf	_ret^0,f,c
  1339                           
  1340                           ;application.c: 44:        }
  1341   001A7C  EF41  F00C         	goto	l7366
  1342   001A80                     l7396:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;application.c: 46:             ret&= dc_motor_stop(&dc_motor_2);
  1346   001A80  0EE0               	movlw	low _dc_motor_2
  1347   001A82  6E25               	movwf	dc_motor_stop@_dc_motor^0,c
  1348   001A84  0E00               	movlw	high _dc_motor_2
  1349   001A86  6E26               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1350   001A88  ECD2  F019         	call	_dc_motor_stop	;wreg free
  1351   001A8C  1664               	andwf	_ret^0,f,c
  1352   001A8E  EF41  F00C         	goto	l7366
  1353   001A92  EFD0  F000         	goto	start
  1354   001A96                     __end_of_main:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _lcd_4bit_send_string_pos *****************
  1358 ;; Defined at:
  1359 ;;		line 122 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  lcd             2   50[COMRAM] PTR const struct .
  1362 ;;		 -> lcd1(6), 
  1363 ;;  row             1   52[COMRAM] unsigned char 
  1364 ;;  column          1   53[COMRAM] unsigned char 
  1365 ;;  str             2   54[COMRAM] PTR unsigned char 
  1366 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_8(10), STR_6(10), 
  1367 ;;		 -> STR_4(10), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  ret             1   56[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      unsigned char 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:        7 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 12
  1386 ;; This function calls:
  1387 ;;		_lcd_4bit_send_char_data
  1388 ;;		_lcd_4bit_set_cursor
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text1
  1395   002DE2                     __ptext1:
  1396                           	callstack 0
  1397   002DE2                     _lcd_4bit_send_string_pos:
  1398                           	callstack 18
  1399   002DE2                     
  1400                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1401   002DE2  0E01               	movlw	1
  1402   002DE4  6E39               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1403   002DE6                     
  1404                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:     if(lcd==((void*)0)){
  1405   002DE6  5033               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1406   002DE8  1034               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1407   002DEA  A4D8               	btfss	status,2,c
  1408   002DEC  EFFA  F016         	goto	u4411
  1409   002DF0  EFFC  F016         	goto	u4410
  1410   002DF4                     u4411:
  1411   002DF4  EF00  F017         	goto	l5200
  1412   002DF8                     u4410:
  1413   002DF8                     
  1414                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:         ret=(Std_ReturnType)0x00;
  1415   002DF8  0E00               	movlw	0
  1416   002DFA  6E39               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1417                           
  1418                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:     }
  1419   002DFC  EF40  F017         	goto	l5208
  1420   002E00                     l5200:
  1421                           
  1422                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:        lcd_4bit_set_cursor(lcd,row,column);
  1423   002E00  C033  F02D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1424   002E04  C034  F02E         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1425   002E08  C035  F02F         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1426   002E0C  C036  F030         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1427   002E10  EC41  F016         	call	_lcd_4bit_set_cursor	;wreg free
  1428                           
  1429                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
  1430   002E14  EF27  F017         	goto	l5206
  1431   002E18                     l5202:
  1432                           
  1433                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 130:             ret=lcd_4bit_send_char_data(lcd,*str+
      +                          +);
  1434   002E18  C033  F029         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1435   002E1C  C034  F02A         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1436   002E20  C037  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1437   002E24  C038  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1438   002E28  0E00               	movlw	low (__smallconst shr (0+16))
  1439   002E2A  6EF8               	movwf	tblptru,c
  1440   002E2C  0E0F               	movlw	(high __ramtop+-1)
  1441   002E2E  64F7               	cpfsgt	tblptrh,c
  1442   002E30  D003               	bra	u4427
  1443   002E32  0008               	tblrd		*
  1444   002E34  50F5               	movf	tablat,w,c
  1445   002E36  D005               	bra	u4420
  1446   002E38                     u4427:
  1447   002E38  CFF6 FFE9          	movff	tblptrl,fsr0l
  1448   002E3C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1449   002E40  50EF               	movf	indf0,w,c
  1450   002E42                     u4420:
  1451   002E42  6E2B               	movwf	lcd_4bit_send_char_data@data^0,c
  1452   002E44  EC08  F018         	call	_lcd_4bit_send_char_data	;wreg free
  1453   002E48  6E39               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1454   002E4A  4A37               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1455   002E4C  2A38               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1456   002E4E                     l5206:
  1457                           
  1458                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
  1459   002E4E  C037  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1460   002E52  C038  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1461   002E56  0E00               	movlw	low (__smallconst shr (0+16))
  1462   002E58  6EF8               	movwf	tblptru,c
  1463   002E5A  0E0F               	movlw	(high __ramtop+-1)
  1464   002E5C  64F7               	cpfsgt	tblptrh,c
  1465   002E5E  D003               	bra	u4437
  1466   002E60  0008               	tblrd		*
  1467   002E62  50F5               	movf	tablat,w,c
  1468   002E64  D005               	bra	u4430
  1469   002E66                     u4437:
  1470   002E66  CFF6 FFE9          	movff	tblptrl,fsr0l
  1471   002E6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1472   002E6E  50EF               	movf	indf0,w,c
  1473   002E70                     u4430:
  1474   002E70  0900               	iorlw	0
  1475   002E72  A4D8               	btfss	status,2,c
  1476   002E74  EF3E  F017         	goto	u4441
  1477   002E78  EF40  F017         	goto	u4440
  1478   002E7C                     u4441:
  1479   002E7C  EF0C  F017         	goto	l5202
  1480   002E80                     u4440:
  1481   002E80                     l5208:
  1482                           
  1483                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 133:     return ret;
  1484   002E80  5039               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1485   002E82  0012               	return		;funcret
  1486   002E84                     __end_of_lcd_4bit_send_string_pos:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _lcd_4bit_set_cursor *****************
  1490 ;; Defined at:
  1491 ;;		line 450 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  lcd             2   44[COMRAM] PTR const struct .
  1494 ;;		 -> lcd1(6), 
  1495 ;;  row             1   46[COMRAM] unsigned char 
  1496 ;;  column          1   47[COMRAM] unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  ret             1    0        unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:        6 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 11
  1515 ;; This function calls:
  1516 ;;		_lcd_4bit_send_command
  1517 ;; This function is called by:
  1518 ;;		_lcd_4bit_send_string_pos
  1519 ;;		_lcd_4bit_send_char_data_pos
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text2
  1524   002C82                     __ptext2:
  1525                           	callstack 0
  1526   002C82                     _lcd_4bit_set_cursor:
  1527                           	callstack 18
  1528   002C82                     
  1529                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:     if(lcd==((void*)0)){
  1530   002C82  502D               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1531   002C84  102E               	iorwf	(lcd_4bit_set_cursor@lcd+1)^0,w,c
  1532   002C86  A4D8               	btfss	status,2,c
  1533   002C88  EF48  F016         	goto	u4211
  1534   002C8C  EF4A  F016         	goto	u4210
  1535   002C90                     u4211:
  1536   002C90  EF4C  F016         	goto	l4990
  1537   002C94                     u4210:
  1538   002C94                     l4988:
  1539                           
  1540                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 454:     }
  1541   002C94  EF98  F016         	goto	l227
  1542   002C98                     l4990:
  1543                           
  1544                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 456:         column--;
  1545   002C98  0630               	decf	lcd_4bit_set_cursor@column^0,f,c
  1546                           
  1547                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:         switch (row){
  1548   002C9A  EF7B  F016         	goto	l5004
  1549   002C9E                     l4992:
  1550   002C9E  C02D  F029         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1551   002CA2  C02E  F02A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1552   002CA6  5030               	movf	lcd_4bit_set_cursor@column^0,w,c
  1553   002CA8  0F80               	addlw	128
  1554   002CAA  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  1555   002CAC  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  1556   002CB0  EF98  F016         	goto	l227
  1557   002CB4                     l4994:
  1558   002CB4  C02D  F029         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1559   002CB8  C02E  F02A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1560   002CBC  5030               	movf	lcd_4bit_set_cursor@column^0,w,c
  1561   002CBE  0FC0               	addlw	192
  1562   002CC0  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  1563   002CC2  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  1564   002CC6  EF98  F016         	goto	l227
  1565   002CCA                     l4996:
  1566   002CCA  C02D  F029         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1567   002CCE  C02E  F02A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1568   002CD2  5030               	movf	lcd_4bit_set_cursor@column^0,w,c
  1569   002CD4  0F94               	addlw	148
  1570   002CD6  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  1571   002CD8  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  1572   002CDC  EF98  F016         	goto	l227
  1573   002CE0                     l4998:
  1574   002CE0  C02D  F029         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1575   002CE4  C02E  F02A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1576   002CE8  5030               	movf	lcd_4bit_set_cursor@column^0,w,c
  1577   002CEA  0FD4               	addlw	212
  1578   002CEC  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  1579   002CEE  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  1580   002CF2  EF98  F016         	goto	l227
  1581   002CF6                     l5004:
  1582   002CF6  502F               	movf	lcd_4bit_set_cursor@row^0,w,c
  1583   002CF8  6E31               	movwf	??_lcd_4bit_set_cursor^0,c
  1584   002CFA  6A32               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1585                           
  1586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1587                           ; Switch size 1, requested type "simple"
  1588                           ; Number of cases is 1, Range of values is 0 to 0
  1589                           ; switch strategies available:
  1590                           ; Name         Instructions Cycles
  1591                           ; simple_byte            4     3 (average)
  1592                           ;	Chosen strategy is simple_byte
  1593   002CFC  5032               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1594   002CFE  0A00               	xorlw	0	; case 0
  1595   002D00  B4D8               	btfsc	status,2,c
  1596   002D02  EF85  F016         	goto	l7558
  1597   002D06  EF4A  F016         	goto	l4988
  1598   002D0A                     l7558:
  1599                           
  1600                           ; Switch size 1, requested type "simple"
  1601                           ; Number of cases is 4, Range of values is 1 to 4
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte           13     7 (average)
  1605                           ;	Chosen strategy is simple_byte
  1606   002D0A  5031               	movf	??_lcd_4bit_set_cursor^0,w,c
  1607   002D0C  0A01               	xorlw	1	; case 1
  1608   002D0E  B4D8               	btfsc	status,2,c
  1609   002D10  EF4F  F016         	goto	l4992
  1610   002D14  0A03               	xorlw	3	; case 2
  1611   002D16  B4D8               	btfsc	status,2,c
  1612   002D18  EF5A  F016         	goto	l4994
  1613   002D1C  0A01               	xorlw	1	; case 3
  1614   002D1E  B4D8               	btfsc	status,2,c
  1615   002D20  EF65  F016         	goto	l4996
  1616   002D24  0A07               	xorlw	7	; case 4
  1617   002D26  B4D8               	btfsc	status,2,c
  1618   002D28  EF70  F016         	goto	l4998
  1619   002D2C  EF4A  F016         	goto	l4988
  1620   002D30                     l227:
  1621   002D30  0012               	return		;funcret
  1622   002D32                     __end_of_lcd_4bit_set_cursor:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _lcd_4bit_send_char_data *****************
  1626 ;; Defined at:
  1627 ;;		line 63 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  lcd             2   40[COMRAM] PTR const struct .
  1630 ;;		 -> lcd1(6), 
  1631 ;;  data            1   42[COMRAM] unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  ret             1   43[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      unsigned char 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 10
  1650 ;; This function calls:
  1651 ;;		_gpio_pin_write_logic
  1652 ;;		_lcd_4bit_send_enable_signal
  1653 ;;		_lcd_send_4bits
  1654 ;; This function is called by:
  1655 ;;		_lcd_4bit_send_string_pos
  1656 ;;		_lcd_4bit_send_char_data_pos
  1657 ;;		_lcd_4bit_send_string
  1658 ;;		_lcd_4bit_send_custom_char
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text3
  1663   003010                     __ptext3:
  1664                           	callstack 0
  1665   003010                     _lcd_4bit_send_char_data:
  1666                           	callstack 19
  1667   003010                     
  1668                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     if(lcd==((void*)0)){
  1669   003010  5029               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1670   003012  102A               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1671   003014  A4D8               	btfss	status,2,c
  1672   003016  EF0F  F018         	goto	u4201
  1673   00301A  EF11  F018         	goto	u4200
  1674   00301E                     u4201:
  1675   00301E  EF15  F018         	goto	l4978
  1676   003022                     u4200:
  1677   003022                     
  1678                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret=(Std_ReturnType)0x00;
  1679   003022  0E00               	movlw	0
  1680   003024  6E2C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1681                           
  1682                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:     }
  1683   003026  EF3F  F018         	goto	l4980
  1684   00302A                     l4978:
  1685                           
  1686                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  1687   00302A  C029  F01B         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1688   00302E  C02A  F01C         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1689   003032  0E01               	movlw	1
  1690   003034  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1691   003036  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1692   00303A  6E2C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1693                           
  1694                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret=lcd_send_4bits(lcd, data >> 4);
  1695   00303C  C029  F025         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1696   003040  C02A  F026         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1697   003044  382B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1698   003046  0B0F               	andlw	15
  1699   003048  6E27               	movwf	lcd_send_4bits@_data_command^0,c
  1700   00304A  EC87  F017         	call	_lcd_send_4bits	;wreg free
  1701   00304E  6E2C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1702                           
  1703                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_4bit_send_enable_signal(lcd);
  1704   003050  C029  F025         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1705   003054  C02A  F026         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1706   003058  ECAB  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  1707   00305C  6E2C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1708                           
  1709                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_send_4bits(lcd, data);
  1710   00305E  C029  F025         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1711   003062  C02A  F026         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1712   003066  C02B  F027         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1713   00306A  EC87  F017         	call	_lcd_send_4bits	;wreg free
  1714   00306E  6E2C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1715                           
  1716                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_4bit_send_enable_signal(lcd);
  1717   003070  C029  F025         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1718   003074  C02A  F026         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1719   003078  ECAB  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  1720   00307C  6E2C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1721   00307E                     l4980:
  1722                           
  1723                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:     return ret;
  1724   00307E  502C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1725   003080  0012               	return		;funcret
  1726   003082                     __end_of_lcd_4bit_send_char_data:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _dc_motor_stop *****************
  1730 ;; Defined at:
  1731 ;;		line 55 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  _dc_motor       2   36[COMRAM] PTR const struct .
  1734 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  ret             1   38[COMRAM] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      unsigned char 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;Total ram usage:        3 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 9
  1753 ;; This function calls:
  1754 ;;		_gpio_pin_write_logic
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text4
  1761   0033A4                     __ptext4:
  1762                           	callstack 0
  1763   0033A4                     _dc_motor_stop:
  1764                           	callstack 21
  1765   0033A4                     
  1766                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:     if(_dc_motor==((void*)0)){
  1767   0033A4  5025               	movf	dc_motor_stop@_dc_motor^0,w,c
  1768   0033A6  1026               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  1769   0033A8  A4D8               	btfss	status,2,c
  1770   0033AA  EFD9  F019         	goto	u4541
  1771   0033AE  EFDB  F019         	goto	u4540
  1772   0033B2                     u4541:
  1773   0033B2  EFDF  F019         	goto	l5306
  1774   0033B6                     u4540:
  1775   0033B6                     
  1776                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:         ret=(Std_ReturnType)0x00;
  1777   0033B6  0E00               	movlw	0
  1778   0033B8  6E27               	movwf	dc_motor_stop@ret^0,c
  1779                           
  1780                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 59:     }
  1781   0033BA  EFF3  F019         	goto	l5308
  1782   0033BE                     l5306:
  1783                           
  1784                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
  1785   0033BE  C025  F01B         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@pin_config
  1786   0033C2  C026  F01C         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1787   0033C6  0E00               	movlw	0
  1788   0033C8  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1789   0033CA  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1790   0033CE  6E27               	movwf	dc_motor_stop@ret^0,c
  1791                           
  1792                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
  1793   0033D0  0E01               	movlw	1
  1794   0033D2  2425               	addwf	dc_motor_stop@_dc_motor^0,w,c
  1795   0033D4  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  1796   0033D6  0E00               	movlw	0
  1797   0033D8  2026               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  1798   0033DA  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1799   0033DC  0E00               	movlw	0
  1800   0033DE  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1801   0033E0  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1802   0033E4  6E27               	movwf	dc_motor_stop@ret^0,c
  1803   0033E6                     l5308:
  1804                           
  1805                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:       return ret;
  1806   0033E6  5027               	movf	dc_motor_stop@ret^0,w,c
  1807   0033E8  0012               	return		;funcret
  1808   0033EA                     __end_of_dc_motor_stop:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _dc_motor_move_right *****************
  1812 ;; Defined at:
  1813 ;;		line 23 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  _dc_motor       2   36[COMRAM] PTR const struct .
  1816 ;;		 -> dc_motor_1(2), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  ret             1   38[COMRAM] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      unsigned char 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        3 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 9
  1835 ;; This function calls:
  1836 ;;		_gpio_pin_write_logic
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text5
  1843   0033EA                     __ptext5:
  1844                           	callstack 0
  1845   0033EA                     _dc_motor_move_right:
  1846                           	callstack 21
  1847   0033EA                     
  1848                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:     if(_dc_motor==((void*)0)){
  1849   0033EA  5025               	movf	dc_motor_move_right@_dc_motor^0,w,c
  1850   0033EC  1026               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  1851   0033EE  A4D8               	btfss	status,2,c
  1852   0033F0  EFFC  F019         	goto	u4521
  1853   0033F4  EFFE  F019         	goto	u4520
  1854   0033F8                     u4521:
  1855   0033F8  EF02  F01A         	goto	l5282
  1856   0033FC                     u4520:
  1857   0033FC                     
  1858                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         ret=(Std_ReturnType)0x00;
  1859   0033FC  0E00               	movlw	0
  1860   0033FE  6E27               	movwf	dc_motor_move_right@ret^0,c
  1861                           
  1862                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:     }
  1863   003400  EF16  F01A         	goto	l5284
  1864   003404                     l5282:
  1865                           
  1866                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),HIGH);
  1867   003404  C025  F01B         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@pin_config
  1868   003408  C026  F01C         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1869   00340C  0E01               	movlw	1
  1870   00340E  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1871   003410  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1872   003414  6E27               	movwf	dc_motor_move_right@ret^0,c
  1873                           
  1874                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
  1875   003416  0E01               	movlw	1
  1876   003418  2425               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  1877   00341A  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  1878   00341C  0E00               	movlw	0
  1879   00341E  2026               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  1880   003420  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1881   003422  0E00               	movlw	0
  1882   003424  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1883   003426  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1884   00342A  6E27               	movwf	dc_motor_move_right@ret^0,c
  1885   00342C                     l5284:
  1886                           
  1887                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 32:     return ret;
  1888   00342C  5027               	movf	dc_motor_move_right@ret^0,w,c
  1889   00342E  0012               	return		;funcret
  1890   003430                     __end_of_dc_motor_move_right:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _dc_motor_move_left *****************
  1894 ;; Defined at:
  1895 ;;		line 39 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  _dc_motor       2   36[COMRAM] PTR const struct .
  1898 ;;		 -> dc_motor_2(2), 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  ret             1   38[COMRAM] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      unsigned char 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;Total ram usage:        3 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 9
  1917 ;; This function calls:
  1918 ;;		_gpio_pin_write_logic
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text6
  1925   003430                     __ptext6:
  1926                           	callstack 0
  1927   003430                     _dc_motor_move_left:
  1928                           	callstack 21
  1929   003430                     
  1930                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     if(_dc_motor==((void*)0)){
  1931   003430  5025               	movf	dc_motor_move_left@_dc_motor^0,w,c
  1932   003432  1026               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
  1933   003434  A4D8               	btfss	status,2,c
  1934   003436  EF1F  F01A         	goto	u4531
  1935   00343A  EF21  F01A         	goto	u4530
  1936   00343E                     u4531:
  1937   00343E  EF25  F01A         	goto	l5294
  1938   003442                     u4530:
  1939   003442                     
  1940                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         ret=(Std_ReturnType)0x00;
  1941   003442  0E00               	movlw	0
  1942   003444  6E27               	movwf	dc_motor_move_left@ret^0,c
  1943                           
  1944                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
  1945   003446  EF39  F01A         	goto	l5296
  1946   00344A                     l5294:
  1947                           
  1948                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
  1949   00344A  C025  F01B         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@pin_config
  1950   00344E  C026  F01C         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1951   003452  0E00               	movlw	0
  1952   003454  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1953   003456  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1954   00345A  6E27               	movwf	dc_motor_move_left@ret^0,c
  1955                           
  1956                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),HIGH);
  1957   00345C  0E01               	movlw	1
  1958   00345E  2425               	addwf	dc_motor_move_left@_dc_motor^0,w,c
  1959   003460  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  1960   003462  0E00               	movlw	0
  1961   003464  2026               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
  1962   003466  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1963   003468  0E01               	movlw	1
  1964   00346A  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1965   00346C  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  1966   003470  6E27               	movwf	dc_motor_move_left@ret^0,c
  1967   003472                     l5296:
  1968                           
  1969                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 48:       return ret;
  1970   003472  5027               	movf	dc_motor_move_left@ret^0,w,c
  1971   003474  0012               	return		;funcret
  1972   003476                     __end_of_dc_motor_move_left:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _convert_uint16_to_string *****************
  1976 ;; Defined at:
  1977 ;;		line 349 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  value           2   22[BANK0 ] unsigned int 
  1980 ;;  str             2   24[BANK0 ] PTR unsigned char 
  1981 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  Temp_str        6   14[BANK1 ] unsigned char [6]
  1984 ;;  cnt             1   21[BANK1 ] unsigned char 
  1985 ;;  ret             1   20[BANK1 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      unsigned char 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:       12 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 16
  2002 ;; This function calls:
  2003 ;;		_memset
  2004 ;;		_sprintf
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text7
  2011   002A28                     __ptext7:
  2012                           	callstack 0
  2013   002A28                     _convert_uint16_to_string:
  2014                           	callstack 14
  2015   002A28                     
  2016                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 350:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2017   002A28  0E01               	movlw	1
  2018   002A2A  0101               	movlb	1	; () banked
  2019   002A2C  6F34               	movwf	convert_uint16_to_string@ret& (0+255),b
  2020   002A2E                     
  2021                           ; BSR set to: 1
  2022                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 351:    uint8 Temp_str[6]={0};
  2023   002A2E  EE21  F02E         	lfsr	2,convert_uint16_to_string@Temp_str
  2024   002A32  0E05               	movlw	5
  2025   002A34                     u6961:
  2026   002A34  6ADE               	clrf	postinc2,c
  2027   002A36  06E8               	decf	wreg,f,c
  2028   002A38  E2FD               	bc	u6961
  2029   002A3A                     
  2030                           ; BSR set to: 1
  2031                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:    uint8 cnt =0;
  2032   002A3A  0E00               	movlw	0
  2033   002A3C  6F35               	movwf	convert_uint16_to_string@cnt& (0+255),b
  2034   002A3E                     
  2035                           ; BSR set to: 1
  2036                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 353:     if(str==((void*)0)){
  2037   002A3E  0100               	movlb	0	; () banked
  2038   002A40  51FC               	movf	convert_uint16_to_string@str& (0+255),w,b
  2039   002A42  11FD               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2040   002A44  A4D8               	btfss	status,2,c
  2041   002A46  EF27  F015         	goto	u6971
  2042   002A4A  EF29  F015         	goto	u6970
  2043   002A4E                     u6971:
  2044   002A4E  EF2E  F015         	goto	l7112
  2045   002A52                     u6970:
  2046   002A52                     
  2047                           ; BSR set to: 0
  2048                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 354:         ret=(Std_ReturnType)0x00;
  2049   002A52  0E00               	movlw	0
  2050   002A54  0101               	movlb	1	; () banked
  2051   002A56  6F34               	movwf	convert_uint16_to_string@ret& (0+255),b
  2052                           
  2053                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 355:     }
  2054   002A58  EF77  F015         	goto	l7124
  2055   002A5C                     l7112:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 357:         memset(str,' ',6);
  2059   002A5C  C0FC  F01B         	movff	convert_uint16_to_string@str,memset@dest
  2060   002A60  C0FD  F01C         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2061   002A64  0E00               	movlw	0
  2062   002A66  6E1E               	movwf	(memset@c+1)^0,c
  2063   002A68  0E20               	movlw	32
  2064   002A6A  6E1D               	movwf	memset@c^0,c
  2065   002A6C  0E00               	movlw	0
  2066   002A6E  6E20               	movwf	(memset@n+1)^0,c
  2067   002A70  0E06               	movlw	6
  2068   002A72  6E1F               	movwf	memset@n^0,c
  2069   002A74  ECB8  F00F         	call	_memset	;wreg free
  2070   002A78                     
  2071                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 358:         sprintf(Temp_str,"%i",value);
  2072   002A78  0E2E               	movlw	low convert_uint16_to_string@Temp_str
  2073   002A7A  0100               	movlb	0	; () banked
  2074   002A7C  6FF2               	movwf	sprintf@s& (0+255),b
  2075   002A7E  0E01               	movlw	high convert_uint16_to_string@Temp_str
  2076   002A80  6FF3               	movwf	(sprintf@s+1)& (0+255),b
  2077   002A82  0E2F               	movlw	low STR_1
  2078   002A84  6FF4               	movwf	sprintf@fmt& (0+255),b
  2079   002A86  0E10               	movlw	high STR_1
  2080   002A88  6FF5               	movwf	(sprintf@fmt+1)& (0+255),b
  2081   002A8A  C0FA  F0F6         	movff	convert_uint16_to_string@value,?_sprintf+4
  2082   002A8E  C0FB  F0F7         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2083   002A92  ECD8  F018         	call	_sprintf	;wreg free
  2084                           
  2085                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:         while (Temp_str[cnt] != '\0'){
  2086   002A96  EF60  F015         	goto	l7120
  2087   002A9A                     l7116:
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 360:             str[cnt] = Temp_str [cnt];
  2091   002A9A  0E2E               	movlw	low convert_uint16_to_string@Temp_str
  2092   002A9C  2535               	addwf	convert_uint16_to_string@cnt& (0+255),w,b
  2093   002A9E  6ED9               	movwf	fsr2l,c
  2094   002AA0  6ADA               	clrf	fsr2h,c
  2095   002AA2  0E01               	movlw	high convert_uint16_to_string@Temp_str
  2096   002AA4  22DA               	addwfc	fsr2h,f,c
  2097   002AA6  5135               	movf	convert_uint16_to_string@cnt& (0+255),w,b
  2098   002AA8  0100               	movlb	0	; () banked
  2099   002AAA  25FC               	addwf	convert_uint16_to_string@str& (0+255),w,b
  2100   002AAC  6EE1               	movwf	fsr1l,c
  2101   002AAE  0101               	movlb	1	; () banked
  2102   002AB0  0E00               	movlw	0
  2103   002AB2  0100               	movlb	0	; () banked
  2104   002AB4  21FD               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  2105   002AB6  6EE2               	movwf	fsr1h,c
  2106   002AB8  CFDF FFE7          	movff	indf2,indf1
  2107   002ABC                     
  2108                           ; BSR set to: 0
  2109                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 361:             cnt++;
  2110   002ABC  0101               	movlb	1	; () banked
  2111   002ABE  2B35               	incf	convert_uint16_to_string@cnt& (0+255),f,b
  2112   002AC0                     l7120:
  2113                           
  2114                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:         while (Temp_str[cnt] != '\0'){
  2115   002AC0  0E2E               	movlw	low convert_uint16_to_string@Temp_str
  2116   002AC2  0101               	movlb	1	; () banked
  2117   002AC4  2535               	addwf	convert_uint16_to_string@cnt& (0+255),w,b
  2118   002AC6  6ED9               	movwf	fsr2l,c
  2119   002AC8  6ADA               	clrf	fsr2h,c
  2120   002ACA  0E01               	movlw	high convert_uint16_to_string@Temp_str
  2121   002ACC  22DA               	addwfc	fsr2h,f,c
  2122   002ACE  50DF               	movf	indf2,w,c
  2123   002AD0  A4D8               	btfss	status,2,c
  2124   002AD2  EF6D  F015         	goto	u6981
  2125   002AD6  EF6F  F015         	goto	u6980
  2126   002ADA                     u6981:
  2127   002ADA  EF4D  F015         	goto	l7116
  2128   002ADE                     u6980:
  2129   002ADE                     
  2130                           ; BSR set to: 1
  2131                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 363:         str[5] = '\0';
  2132   002ADE  0100               	movlb	0	; () banked
  2133   002AE0  EE20 F005          	lfsr	2,5
  2134   002AE4  51FC               	movf	convert_uint16_to_string@str& (0+255),w,b
  2135   002AE6  26D9               	addwf	fsr2l,f,c
  2136   002AE8  51FD               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2137   002AEA  22DA               	addwfc	fsr2h,f,c
  2138   002AEC  6ADF               	clrf	indf2,c
  2139   002AEE                     l7124:
  2140                           
  2141                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 365:     return ret;
  2142   002AEE  0101               	movlb	1	; () banked
  2143   002AF0  5134               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2144   002AF2                     
  2145                           ; BSR set to: 1
  2146   002AF2  0012               	return		;funcret
  2147   002AF4                     __end_of_convert_uint16_to_string:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _sprintf *****************
  2151 ;; Defined at:
  2152 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  s               2   14[BANK0 ] PTR unsigned char 
  2155 ;;		 -> convert_uint32_to_string@Temp_str(11), convert_uint16_to_string@Temp_str(6), convert_uint8_to_string@Temp_str(4)
      +, 
  2156 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  2157 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  f              12    2[BANK1 ] struct _IO_FILE
  2160 ;;  ap              2    0[BANK1 ] PTR void [1]
  2161 ;;		 -> ?_sprintf(2), 
  2162 ;;  ret             2    0        int 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2   14[BANK0 ] int 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:         0       8      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:       22 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 15
  2179 ;; This function calls:
  2180 ;;		_vfprintf
  2181 ;; This function is called by:
  2182 ;;		_convert_uint16_to_string
  2183 ;;		_convert_uint8_to_string
  2184 ;;		_convert_uint32_to_string
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text8
  2189   0031B0                     __ptext8:
  2190                           	callstack 0
  2191   0031B0                     _sprintf:
  2192                           	callstack 14
  2193   0031B0  0EF6               	movlw	low (?_sprintf+4)
  2194   0031B2  0101               	movlb	1	; () banked
  2195   0031B4  6F20               	movwf	sprintf@ap& (0+255),b
  2196   0031B6  0E00               	movlw	high (?_sprintf+4)
  2197   0031B8  6F21               	movwf	(sprintf@ap+1)& (0+255),b
  2198   0031BA  C0F2  F122         	movff	sprintf@s,sprintf@f
  2199   0031BE  C0F3  F123         	movff	sprintf@s+1,sprintf@f+1
  2200   0031C2                     
  2201                           ; BSR set to: 1
  2202   0031C2  0E00               	movlw	0
  2203   0031C4  6F26               	movwf	(sprintf@f+4)& (0+255),b
  2204   0031C6  0E00               	movlw	0
  2205   0031C8  6F25               	movwf	(sprintf@f+3)& (0+255),b
  2206   0031CA                     
  2207                           ; BSR set to: 1
  2208   0031CA  0E00               	movlw	0
  2209   0031CC  6F2D               	movwf	(sprintf@f+11)& (0+255),b
  2210   0031CE  0E00               	movlw	0
  2211   0031D0  6F2C               	movwf	(sprintf@f+10)& (0+255),b
  2212   0031D2                     
  2213                           ; BSR set to: 1
  2214   0031D2  0E22               	movlw	low sprintf@f
  2215   0031D4  0100               	movlb	0	; () banked
  2216   0031D6  6FEA               	movwf	vfprintf@fp& (0+255),b
  2217   0031D8  0E01               	movlw	high sprintf@f
  2218   0031DA  6FEB               	movwf	(vfprintf@fp+1)& (0+255),b
  2219   0031DC  C0F4  F0EC         	movff	sprintf@fmt,vfprintf@fmt
  2220   0031E0  C0F5  F0ED         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2221   0031E4  0E20               	movlw	low sprintf@ap
  2222   0031E6  6FEE               	movwf	vfprintf@ap& (0+255),b
  2223   0031E8  0E01               	movlw	high sprintf@ap
  2224   0031EA  6FEF               	movwf	(vfprintf@ap+1)& (0+255),b
  2225   0031EC  EC5B  F019         	call	_vfprintf	;wreg free
  2226   0031F0  0101               	movlb	1	; () banked
  2227   0031F2  5125               	movf	(sprintf@f+3)& (0+255),w,b
  2228   0031F4  0100               	movlb	0	; () banked
  2229   0031F6  25F2               	addwf	sprintf@s& (0+255),w,b
  2230   0031F8  6ED9               	movwf	fsr2l,c
  2231   0031FA  0101               	movlb	1	; () banked
  2232   0031FC  5126               	movf	(sprintf@f+4)& (0+255),w,b
  2233   0031FE  0100               	movlb	0	; () banked
  2234   003200  21F3               	addwfc	(sprintf@s+1)& (0+255),w,b
  2235   003202  6EDA               	movwf	fsr2h,c
  2236   003204  6ADF               	clrf	indf2,c
  2237   003206                     
  2238                           ; BSR set to: 0
  2239   003206  0012               	return		;funcret
  2240   003208                     __end_of_sprintf:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _vfprintf *****************
  2244 ;; Defined at:
  2245 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  2248 ;;		 -> sprintf@f(12), 
  2249 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2250 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2251 ;;  ap              2   10[BANK0 ] PTR PTR void 
  2252 ;;		 -> sprintf@ap(2), 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  cfmt            2   12[BANK0 ] PTR unsigned char 
  2255 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  2    6[BANK0 ] int 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        8 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 14
  2272 ;; This function calls:
  2273 ;;		_vfpfcnvrt
  2274 ;; This function is called by:
  2275 ;;		_sprintf
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text9
  2280   0032B6                     __ptext9:
  2281                           	callstack 0
  2282   0032B6                     _vfprintf:
  2283                           	callstack 14
  2284   0032B6                     
  2285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2286   0032B6  C0EC  F0F0         	movff	vfprintf@fmt,vfprintf@cfmt
  2287   0032BA  C0ED  F0F1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2290   0032BE  EF6F  F019         	goto	l7052
  2291   0032C2                     l7050:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2294   0032C2  C0EA  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2295   0032C6  C0EB  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2296   0032CA  0EF0               	movlw	low vfprintf@cfmt
  2297   0032CC  6E45               	movwf	vfpfcnvrt@fmt^0,c
  2298   0032CE  0E00               	movlw	high vfprintf@cfmt
  2299   0032D0  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2300   0032D2  C0EE  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2301   0032D6  C0EF  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2302   0032DA  ECC9  F011         	call	_vfpfcnvrt	;wreg free
  2303   0032DE                     l7052:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2306   0032DE  C0F0  FFF6         	movff	vfprintf@cfmt,tblptrl
  2307   0032E2  C0F1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2308   0032E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2309   0032E6  6AF8               	clrf	tblptru,c
  2310   0032E8                     	endif
  2311   0032E8                     	if	0	;tblptru may be non-zero
  2312   0032E8                     	endif
  2313   0032E8  0008               	tblrd		*
  2314   0032EA  50F5               	movf	tablat,w,c
  2315   0032EC  0900               	iorlw	0
  2316   0032EE  A4D8               	btfss	status,2,c
  2317   0032F0  EF7C  F019         	goto	u6901
  2318   0032F4  EF7E  F019         	goto	u6900
  2319   0032F8                     u6901:
  2320   0032F8  EF61  F019         	goto	l7050
  2321   0032FC                     u6900:
  2322   0032FC                     
  2323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2324   0032FC  0E00               	movlw	0
  2325   0032FE  0100               	movlb	0	; () banked
  2326   003300  6FEB               	movwf	(?_vfprintf+1)& (0+255),b
  2327   003302  0E00               	movlw	0
  2328   003304  6FEA               	movwf	?_vfprintf& (0+255),b
  2329   003306                     
  2330                           ; BSR set to: 0
  2331   003306  0012               	return		;funcret
  2332   003308                     __end_of_vfprintf:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _vfpfcnvrt *****************
  2336 ;; Defined at:
  2337 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2340 ;;		 -> sprintf@f(12), 
  2341 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2342 ;;		 -> vfprintf@cfmt(2), 
  2343 ;;  ap              2   70[COMRAM] PTR PTR void 
  2344 ;;		 -> sprintf@ap(2), 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  convarg         4    0[BANK0 ] struct .
  2347 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  2348 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2349 ;;  i               2    0        int 
  2350 ;;  done            2    0        int 
  2351 ;;  c               1    0        unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2361 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;Total ram usage:       14 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 13
  2368 ;; This function calls:
  2369 ;;		_dtoa
  2370 ;;		_fputc
  2371 ;; This function is called by:
  2372 ;;		_vfprintf
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text10
  2377   002392                     __ptext10:
  2378                           	callstack 0
  2379   002392                     _vfpfcnvrt:
  2380                           	callstack 14
  2381   002392                     
  2382                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2383   002392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384   002396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385   00239A  CFDE FFF6          	movff	postinc2,tblptrl
  2386   00239E  CFDD FFF7          	movff	postdec2,tblptrh
  2387   0023A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2388   0023A2  6AF8               	clrf	tblptru,c
  2389   0023A4                     	endif
  2390   0023A4                     	if	0	;tblptru may be non-zero
  2391   0023A4                     	endif
  2392   0023A4  0008               	tblrd		*
  2393   0023A6  50F5               	movf	tablat,w,c
  2394   0023A8  0A25               	xorlw	37
  2395   0023AA  A4D8               	btfss	status,2,c
  2396   0023AC  EFDA  F011         	goto	u6871
  2397   0023B0  EFDC  F011         	goto	u6870
  2398   0023B4                     u6871:
  2399   0023B4  EF49  F012         	goto	l7042
  2400   0023B8                     u6870:
  2401   0023B8                     
  2402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2403   0023B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2404   0023BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2405   0023C0  2ADE               	incf	postinc2,f,c
  2406   0023C2  0E00               	movlw	0
  2407   0023C4  22DD               	addwfc	postdec2,f,c
  2408   0023C6                     
  2409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2410   0023C6  0E00               	movlw	0
  2411   0023C8  0100               	movlb	0	; () banked
  2412   0023CA  6F96               	movwf	(_width+1)& (0+255),b
  2413   0023CC  0E00               	movlw	0
  2414   0023CE  6F95               	movwf	_width& (0+255),b
  2415   0023D0  C095  F053         	movff	_width,_flags
  2416   0023D4                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2419   0023D4  6997               	setf	_prec& (0+255),b
  2420   0023D6  6998               	setf	(_prec+1)& (0+255),b
  2421   0023D8                     
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2424   0023D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425   0023DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426   0023E0  CFDE F0E8          	movff	postinc2,vfpfcnvrt@cp
  2427   0023E4  CFDD F0E9          	movff	postdec2,vfpfcnvrt@cp+1
  2428   0023E8                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2431   0023E8  C0E8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2432   0023EC  C0E9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2433   0023F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2434   0023F0  6AF8               	clrf	tblptru,c
  2435   0023F2                     	endif
  2436   0023F2                     	if	0	;tblptru may be non-zero
  2437   0023F2                     	endif
  2438   0023F2  0008               	tblrd		*
  2439   0023F4  50F5               	movf	tablat,w,c
  2440   0023F6  0A64               	xorlw	100
  2441   0023F8  B4D8               	btfsc	status,2,c
  2442   0023FA  EF01  F012         	goto	u6881
  2443   0023FE  EF03  F012         	goto	u6880
  2444   002402                     u6881:
  2445   002402  EF12  F012         	goto	l7032
  2446   002406                     u6880:
  2447   002406                     
  2448                           ; BSR set to: 0
  2449   002406  C0E8  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2450   00240A  C0E9  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2451   00240E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2452   00240E  6AF8               	clrf	tblptru,c
  2453   002410                     	endif
  2454   002410                     	if	0	;tblptru may be non-zero
  2455   002410                     	endif
  2456   002410  0008               	tblrd		*
  2457   002412  50F5               	movf	tablat,w,c
  2458   002414  0A69               	xorlw	105
  2459   002416  A4D8               	btfss	status,2,c
  2460   002418  EF10  F012         	goto	u6891
  2461   00241C  EF12  F012         	goto	u6890
  2462   002420                     u6891:
  2463   002420  EF40  F012         	goto	l7038
  2464   002424                     u6890:
  2465   002424                     l7032:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2469   002424  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2470   002428  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2471   00242C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2472   002430  0E02               	movlw	2
  2473   002432  26DE               	addwf	postinc2,f,c
  2474   002434  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2475   002438  0E00               	movlw	0
  2476   00243A  22DD               	addwfc	postdec2,f,c
  2477   00243C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2478   002440  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2479   002444  CFDE F0E4          	movff	postinc2,vfpfcnvrt@convarg
  2480   002448  CFDD F0E5          	movff	postdec2,vfpfcnvrt@convarg+1
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2483   00244C  0E01               	movlw	1
  2484   00244E  25E8               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2485   002450  6E49               	movwf	??_vfpfcnvrt^0,c
  2486   002452  0E00               	movlw	0
  2487   002454  21E9               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2488   002456  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2489   002458  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490   00245C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491   002460  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2492   002464  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2493   002468                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2496   002468  C043  F036         	movff	vfpfcnvrt@fp,dtoa@fp
  2497   00246C  C044  F037         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2498   002470  C0E4  F038         	movff	vfpfcnvrt@convarg,dtoa@d
  2499   002474  C0E5  F039         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2500   002478  EC25  F00E         	call	_dtoa	;wreg free
  2501   00247C  EF5E  F012         	goto	l1836
  2502   002480                     l7038:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2505   002480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2506   002484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2507   002488  2ADE               	incf	postinc2,f,c
  2508   00248A  0E00               	movlw	0
  2509   00248C  22DD               	addwfc	postdec2,f,c
  2510   00248E  EF5E  F012         	goto	l1836
  2511   002492                     l7042:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2514   002492  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2515   002496  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2516   00249A  CFDE FFF6          	movff	postinc2,tblptrl
  2517   00249E  CFDD FFF7          	movff	postdec2,tblptrh
  2518   0024A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2519   0024A2  6AF8               	clrf	tblptru,c
  2520   0024A4                     	endif
  2521   0024A4                     	if	0	;tblptru may be non-zero
  2522   0024A4                     	endif
  2523   0024A4  0008               	tblrd		*
  2524   0024A6  50F5               	movf	tablat,w,c
  2525   0024A8  6E1B               	movwf	fputc@c^0,c
  2526   0024AA  6A1C               	clrf	(fputc@c+1)^0,c
  2527   0024AC  C043  F01D         	movff	vfpfcnvrt@fp,fputc@fp
  2528   0024B0  C044  F01E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2529   0024B4  EC7A  F015         	call	_fputc	;wreg free
  2530   0024B8  EF40  F012         	goto	l7038
  2531   0024BC                     l1836:
  2532   0024BC  0012               	return		;funcret
  2533   0024BE                     __end_of_vfpfcnvrt:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _dtoa *****************
  2537 ;; Defined at:
  2538 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  fp              2   53[COMRAM] PTR struct _IO_FILE
  2541 ;;		 -> sprintf@f(12), 
  2542 ;;  d               2   55[COMRAM] int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  i               2   64[COMRAM] int 
  2545 ;;  w               2   61[COMRAM] int 
  2546 ;;  p               2   59[COMRAM] int 
  2547 ;;  s               1   63[COMRAM] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;Total ram usage:       13 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 12
  2564 ;; This function calls:
  2565 ;;		___awdiv
  2566 ;;		___awmod
  2567 ;;		_abs
  2568 ;;		_pad
  2569 ;; This function is called by:
  2570 ;;		_vfpfcnvrt
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text11
  2575   001C4A                     __ptext11:
  2576                           	callstack 0
  2577   001C4A                     _dtoa:
  2578                           	callstack 14
  2579   001C4A                     
  2580                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2581   001C4A  BE39               	btfsc	(dtoa@d+1)^0,7,c
  2582   001C4C  EF2A  F00E         	goto	u6771
  2583   001C50  EF2D  F00E         	goto	u6770
  2584   001C54                     u6771:
  2585   001C54  0E01               	movlw	1
  2586   001C56  EF2E  F00E         	goto	u6780
  2587   001C5A                     u6770:
  2588   001C5A  0E00               	movlw	0
  2589   001C5C                     u6780:
  2590   001C5C  6E40               	movwf	dtoa@s^0,c
  2591   001C5E                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2593   001C5E  5040               	movf	dtoa@s^0,w,c
  2594   001C60  B4D8               	btfsc	status,2,c
  2595   001C62  EF35  F00E         	goto	u6791
  2596   001C66  EF37  F00E         	goto	u6790
  2597   001C6A                     u6791:
  2598   001C6A  EF3B  F00E         	goto	l6974
  2599   001C6E                     u6790:
  2600   001C6E                     
  2601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2602   001C6E  6C38               	negf	dtoa@d^0,c
  2603   001C70  1E39               	comf	(dtoa@d+1)^0,f,c
  2604   001C72  B0D8               	btfsc	status,0,c
  2605   001C74  2A39               	incf	(dtoa@d+1)^0,f,c
  2606   001C76                     l6974:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2609   001C76  0100               	movlb	0	; () banked
  2610   001C78  BF98               	btfsc	(_prec+1)& (0+255),7,b
  2611   001C7A  EF43  F00E         	goto	u6800
  2612   001C7E  EF41  F00E         	goto	u6801
  2613   001C82                     u6801:
  2614   001C82  EF49  F00E         	goto	l1815
  2615   001C86                     u6800:
  2616   001C86                     
  2617                           ; BSR set to: 0
  2618   001C86  0E00               	movlw	0
  2619   001C88  6E3D               	movwf	(dtoa@p+1)^0,c
  2620   001C8A  0E01               	movlw	1
  2621   001C8C  6E3C               	movwf	dtoa@p^0,c
  2622   001C8E  EF4D  F00E         	goto	l1817
  2623   001C92                     l1815:
  2624                           
  2625                           ; BSR set to: 0
  2626   001C92  C097  F03C         	movff	_prec,dtoa@p
  2627   001C96  C098  F03D         	movff	_prec+1,dtoa@p+1
  2628   001C9A                     l1817:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2632   001C9A  C095  F03E         	movff	_width,dtoa@w
  2633   001C9E  C096  F03F         	movff	_width+1,dtoa@w+1
  2634   001CA2                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2637   001CA2  5040               	movf	dtoa@s^0,w,c
  2638   001CA4  B4D8               	btfsc	status,2,c
  2639   001CA6  EF57  F00E         	goto	u6811
  2640   001CAA  EF59  F00E         	goto	u6810
  2641   001CAE                     u6811:
  2642   001CAE  EF70  F00E         	goto	l1818
  2643   001CB2                     u6810:
  2644   001CB2                     
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2647   001CB2  063E               	decf	dtoa@w^0,f,c
  2648   001CB4  A0D8               	btfss	status,0,c
  2649   001CB6  063F               	decf	(dtoa@w+1)^0,f,c
  2650   001CB8                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2653   001CB8  5040               	movf	dtoa@s^0,w,c
  2654   001CBA  A4D8               	btfss	status,2,c
  2655   001CBC  EF62  F00E         	goto	u6821
  2656   001CC0  EF64  F00E         	goto	u6820
  2657   001CC4                     u6821:
  2658   001CC4  EF6A  F00E         	goto	l6986
  2659   001CC8                     u6820:
  2660   001CC8                     
  2661                           ; BSR set to: 0
  2662   001CC8  0E00               	movlw	0
  2663   001CCA  6E3B               	movwf	(_dtoa$2407+1)^0,c
  2664   001CCC  0E2B               	movlw	43
  2665   001CCE  6E3A               	movwf	_dtoa$2407^0,c
  2666   001CD0  EF6E  F00E         	goto	l6988
  2667   001CD4                     l6986:
  2668                           
  2669                           ; BSR set to: 0
  2670   001CD4  0E00               	movlw	0
  2671   001CD6  6E3B               	movwf	(_dtoa$2407+1)^0,c
  2672   001CD8  0E2D               	movlw	45
  2673   001CDA  6E3A               	movwf	_dtoa$2407^0,c
  2674   001CDC                     l6988:
  2675                           
  2676                           ; BSR set to: 0
  2677   001CDC  C03A  F040         	movff	_dtoa$2407,dtoa@s
  2678   001CE0                     l1818:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2682   001CE0  0E00               	movlw	0
  2683   001CE2  6E42               	movwf	(dtoa@i+1)^0,c
  2684   001CE4  0E1F               	movlw	31
  2685   001CE6  6E41               	movwf	dtoa@i^0,c
  2686   001CE8                     
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2689   001CE8  0E00               	movlw	0
  2690   001CEA  0101               	movlb	1	; () banked
  2691   001CEC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2694   001CEE  EFA9  F00E         	goto	l7002
  2695   001CF2                     l6992:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2698   001CF2  0641               	decf	dtoa@i^0,f,c
  2699   001CF4  A0D8               	btfss	status,0,c
  2700   001CF6  0642               	decf	(dtoa@i+1)^0,f,c
  2701   001CF8                     
  2702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2703   001CF8  0E00               	movlw	low _dbuf
  2704   001CFA  2441               	addwf	dtoa@i^0,w,c
  2705   001CFC  6ED9               	movwf	fsr2l,c
  2706   001CFE  0E01               	movlw	high _dbuf
  2707   001D00  2042               	addwfc	(dtoa@i+1)^0,w,c
  2708   001D02  6EDA               	movwf	fsr2h,c
  2709   001D04  C038  F01B         	movff	dtoa@d,___awmod@dividend
  2710   001D08  C039  F01C         	movff	dtoa@d+1,___awmod@dividend+1
  2711   001D0C  0E00               	movlw	0
  2712   001D0E  6E1E               	movwf	(___awmod@divisor+1)^0,c
  2713   001D10  0E0A               	movlw	10
  2714   001D12  6E1D               	movwf	___awmod@divisor^0,c
  2715   001D14  EC99  F016         	call	___awmod	;wreg free
  2716   001D18  C01B  F021         	movff	?___awmod,abs@a
  2717   001D1C  C01C  F022         	movff	?___awmod+1,abs@a+1
  2718   001D20  EC5D  F01A         	call	_abs	;wreg free
  2719   001D24  5021               	movf	?_abs^0,w,c
  2720   001D26  0F30               	addlw	48
  2721   001D28  6EDF               	movwf	indf2,c
  2722   001D2A                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2724   001D2A  063C               	decf	dtoa@p^0,f,c
  2725   001D2C  A0D8               	btfss	status,0,c
  2726   001D2E  063D               	decf	(dtoa@p+1)^0,f,c
  2727   001D30                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2729   001D30  063E               	decf	dtoa@w^0,f,c
  2730   001D32  A0D8               	btfss	status,0,c
  2731   001D34  063F               	decf	(dtoa@w+1)^0,f,c
  2732   001D36                     
  2733                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2734   001D36  C038  F01B         	movff	dtoa@d,___awdiv@dividend
  2735   001D3A  C039  F01C         	movff	dtoa@d+1,___awdiv@dividend+1
  2736   001D3E  0E00               	movlw	0
  2737   001D40  6E1E               	movwf	(___awdiv@divisor+1)^0,c
  2738   001D42  0E0A               	movlw	10
  2739   001D44  6E1D               	movwf	___awdiv@divisor^0,c
  2740   001D46  ECDF  F015         	call	___awdiv	;wreg free
  2741   001D4A  C01B  F038         	movff	?___awdiv,dtoa@d
  2742   001D4E  C01C  F039         	movff	?___awdiv+1,dtoa@d+1
  2743   001D52                     l7002:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2746   001D52  BE42               	btfsc	(dtoa@i+1)^0,7,c
  2747   001D54  EFB4  F00E         	goto	u6831
  2748   001D58  5042               	movf	(dtoa@i+1)^0,w,c
  2749   001D5A  E108               	bnz	u6830
  2750   001D5C  0441               	decf	dtoa@i^0,w,c
  2751   001D5E  A0D8               	btfss	status,0,c
  2752   001D60  EFB4  F00E         	goto	u6831
  2753   001D64  EFB6  F00E         	goto	u6830
  2754   001D68                     u6831:
  2755   001D68  EFCC  F00E         	goto	l7008
  2756   001D6C                     u6830:
  2757   001D6C  5038               	movf	dtoa@d^0,w,c
  2758   001D6E  1039               	iorwf	(dtoa@d+1)^0,w,c
  2759   001D70  A4D8               	btfss	status,2,c
  2760   001D72  EFBD  F00E         	goto	u6841
  2761   001D76  EFBF  F00E         	goto	u6840
  2762   001D7A                     u6841:
  2763   001D7A  EF79  F00E         	goto	l6992
  2764   001D7E                     u6840:
  2765   001D7E  BE3D               	btfsc	(dtoa@p+1)^0,7,c
  2766   001D80  EFCC  F00E         	goto	u6850
  2767   001D84  503D               	movf	(dtoa@p+1)^0,w,c
  2768   001D86  E106               	bnz	u6851
  2769   001D88  043C               	decf	dtoa@p^0,w,c
  2770   001D8A  B0D8               	btfsc	status,0,c
  2771   001D8C  EFCA  F00E         	goto	u6851
  2772   001D90  EFCC  F00E         	goto	u6850
  2773   001D94                     u6851:
  2774   001D94  EF79  F00E         	goto	l6992
  2775   001D98                     u6850:
  2776   001D98                     l7008:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2779   001D98  5040               	movf	dtoa@s^0,w,c
  2780   001D9A  B4D8               	btfsc	status,2,c
  2781   001D9C  EFD2  F00E         	goto	u6861
  2782   001DA0  EFD4  F00E         	goto	u6860
  2783   001DA4                     u6861:
  2784   001DA4  EFDF  F00E         	goto	l7014
  2785   001DA8                     u6860:
  2786   001DA8                     
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2788   001DA8  0641               	decf	dtoa@i^0,f,c
  2789   001DAA  A0D8               	btfss	status,0,c
  2790   001DAC  0642               	decf	(dtoa@i+1)^0,f,c
  2791   001DAE                     
  2792                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2793   001DAE  0E00               	movlw	low _dbuf
  2794   001DB0  2441               	addwf	dtoa@i^0,w,c
  2795   001DB2  6ED9               	movwf	fsr2l,c
  2796   001DB4  0E01               	movlw	high _dbuf
  2797   001DB6  2042               	addwfc	(dtoa@i+1)^0,w,c
  2798   001DB8  6EDA               	movwf	fsr2h,c
  2799   001DBA  C040  FFDF         	movff	dtoa@s,indf2
  2800   001DBE                     l7014:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2803   001DBE  C036  F02B         	movff	dtoa@fp,pad@fp
  2804   001DC2  C037  F02C         	movff	dtoa@fp+1,pad@fp+1
  2805   001DC6  0E00               	movlw	low _dbuf
  2806   001DC8  2441               	addwf	dtoa@i^0,w,c
  2807   001DCA  6E2D               	movwf	pad@buf^0,c
  2808   001DCC  0E01               	movlw	high _dbuf
  2809   001DCE  2042               	addwfc	(dtoa@i+1)^0,w,c
  2810   001DD0  6E2E               	movwf	(pad@buf+1)^0,c
  2811   001DD2  C03E  F02F         	movff	dtoa@w,pad@p
  2812   001DD6  C03F  F030         	movff	dtoa@w+1,pad@p+1
  2813   001DDA  ECCB  F017         	call	_pad	;wreg free
  2814   001DDE  0012               	return		;funcret
  2815   001DE0                     __end_of_dtoa:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _pad *****************
  2819 ;; Defined at:
  2820 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  2823 ;;		 -> sprintf@f(12), 
  2824 ;;  buf             2   44[COMRAM] PTR unsigned char 
  2825 ;;		 -> dbuf(32), 
  2826 ;;  p               2   46[COMRAM] int 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  w               2   51[COMRAM] int 
  2829 ;;  i               2   49[COMRAM] int 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2839 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:       11 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 11
  2846 ;; This function calls:
  2847 ;;		_fputc
  2848 ;;		_fputs
  2849 ;; This function is called by:
  2850 ;;		_dtoa
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text12
  2855   002F96                     __ptext12:
  2856                           	callstack 0
  2857   002F96                     _pad:
  2858                           	callstack 14
  2859   002F96                     
  2860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2861   002F96  BE30               	btfsc	(pad@p+1)^0,7,c
  2862   002F98  EFD0  F017         	goto	u6741
  2863   002F9C  EFD2  F017         	goto	u6740
  2864   002FA0                     u6741:
  2865   002FA0  EFD8  F017         	goto	l6954
  2866   002FA4                     u6740:
  2867   002FA4  C02F  F034         	movff	pad@p,pad@w
  2868   002FA8  C030  F035         	movff	pad@p+1,pad@w+1
  2869   002FAC  EFDC  F017         	goto	l1806
  2870   002FB0                     l6954:
  2871   002FB0  0E00               	movlw	0
  2872   002FB2  6E35               	movwf	(pad@w+1)^0,c
  2873   002FB4  0E00               	movlw	0
  2874   002FB6  6E34               	movwf	pad@w^0,c
  2875   002FB8                     l1806:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2878   002FB8  0E00               	movlw	0
  2879   002FBA  6E33               	movwf	(pad@i+1)^0,c
  2880   002FBC  0E00               	movlw	0
  2881   002FBE  6E32               	movwf	pad@i^0,c
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2884   002FC0  EFEE  F017         	goto	l6960
  2885   002FC4                     l6956:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2888   002FC4  0E00               	movlw	0
  2889   002FC6  6E1C               	movwf	(fputc@c+1)^0,c
  2890   002FC8  0E20               	movlw	32
  2891   002FCA  6E1B               	movwf	fputc@c^0,c
  2892   002FCC  C02B  F01D         	movff	pad@fp,fputc@fp
  2893   002FD0  C02C  F01E         	movff	pad@fp+1,fputc@fp+1
  2894   002FD4  EC7A  F015         	call	_fputc	;wreg free
  2895   002FD8                     
  2896                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2897   002FD8  4A32               	infsnz	pad@i^0,f,c
  2898   002FDA  2A33               	incf	(pad@i+1)^0,f,c
  2899   002FDC                     l6960:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2902   002FDC  5034               	movf	pad@w^0,w,c
  2903   002FDE  5C32               	subwf	pad@i^0,w,c
  2904   002FE0  5033               	movf	(pad@i+1)^0,w,c
  2905   002FE2  0A80               	xorlw	128
  2906   002FE4  6E31               	movwf	??_pad^0,c
  2907   002FE6  5035               	movf	(pad@w+1)^0,w,c
  2908   002FE8  0A80               	xorlw	128
  2909   002FEA  5831               	subwfb	??_pad^0,w,c
  2910   002FEC  A0D8               	btfss	status,0,c
  2911   002FEE  EFFB  F017         	goto	u6751
  2912   002FF2  EFFD  F017         	goto	u6750
  2913   002FF6                     u6751:
  2914   002FF6  EFE2  F017         	goto	l6956
  2915   002FFA                     u6750:
  2916   002FFA                     
  2917                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2918   002FFA  C02D  F024         	movff	pad@buf,fputs@s
  2919   002FFE  C02E  F025         	movff	pad@buf+1,fputs@s+1
  2920   003002  C02B  F026         	movff	pad@fp,fputs@fp
  2921   003006  C02C  F027         	movff	pad@fp+1,fputs@fp+1
  2922   00300A  EC3B  F01A         	call	_fputs	;wreg free
  2923   00300E  0012               	return		;funcret
  2924   003010                     __end_of_pad:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _fputs *****************
  2928 ;; Defined at:
  2929 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  s               2   35[COMRAM] PTR const unsigned char 
  2932 ;;		 -> dbuf(32), 
  2933 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  2934 ;;		 -> sprintf@f(12), 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  i               2   40[COMRAM] int 
  2937 ;;  c               1   39[COMRAM] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2   35[COMRAM] int 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;Total ram usage:        7 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 10
  2954 ;; This function calls:
  2955 ;;		_fputc
  2956 ;; This function is called by:
  2957 ;;		_pad
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text13
  2962   003476                     __ptext13:
  2963                           	callstack 0
  2964   003476                     _fputs:
  2965                           	callstack 14
  2966   003476  0E00               	movlw	0
  2967   003478  6E2A               	movwf	(fputs@i+1)^0,c
  2968   00347A  0E00               	movlw	0
  2969   00347C  6E29               	movwf	fputs@i^0,c
  2970   00347E  EF4C  F01A         	goto	l6868
  2971   003482                     l6864:
  2972   003482  C028  F01B         	movff	fputs@c,fputc@c
  2973   003486  6A1C               	clrf	(fputc@c+1)^0,c
  2974   003488  C026  F01D         	movff	fputs@fp,fputc@fp
  2975   00348C  C027  F01E         	movff	fputs@fp+1,fputc@fp+1
  2976   003490  EC7A  F015         	call	_fputc	;wreg free
  2977   003494  4A29               	infsnz	fputs@i^0,f,c
  2978   003496  2A2A               	incf	(fputs@i+1)^0,f,c
  2979   003498                     l6868:
  2980   003498  5029               	movf	fputs@i^0,w,c
  2981   00349A  2424               	addwf	fputs@s^0,w,c
  2982   00349C  6ED9               	movwf	fsr2l,c
  2983   00349E  502A               	movf	(fputs@i+1)^0,w,c
  2984   0034A0  2025               	addwfc	(fputs@s+1)^0,w,c
  2985   0034A2  6EDA               	movwf	fsr2h,c
  2986   0034A4  50DF               	movf	indf2,w,c
  2987   0034A6  6E28               	movwf	fputs@c^0,c
  2988   0034A8  5028               	movf	fputs@c^0,w,c
  2989   0034AA  A4D8               	btfss	status,2,c
  2990   0034AC  EF5A  F01A         	goto	u6611
  2991   0034B0  EF5C  F01A         	goto	u6610
  2992   0034B4                     u6611:
  2993   0034B4  EF41  F01A         	goto	l6864
  2994   0034B8                     u6610:
  2995   0034B8  0012               	return		;funcret
  2996   0034BA                     __end_of_fputs:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _fputc *****************
  3000 ;; Defined at:
  3001 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  c               2   26[COMRAM] int 
  3004 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3005 ;;		 -> sprintf@f(12), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2   26[COMRAM] int 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        9 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 9
  3024 ;; This function calls:
  3025 ;;		_putch
  3026 ;; This function is called by:
  3027 ;;		_pad
  3028 ;;		_vfpfcnvrt
  3029 ;;		_fputs
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text14
  3034   002AF4                     __ptext14:
  3035                           	callstack 0
  3036   002AF4                     _fputc:
  3037                           	callstack 17
  3038   002AF4  501D               	movf	fputc@fp^0,w,c
  3039   002AF6  101E               	iorwf	(fputc@fp+1)^0,w,c
  3040   002AF8  B4D8               	btfsc	status,2,c
  3041   002AFA  EF81  F015         	goto	u6571
  3042   002AFE  EF83  F015         	goto	u6570
  3043   002B02                     u6571:
  3044   002B02  EF8C  F015         	goto	l6852
  3045   002B06                     u6570:
  3046   002B06  501D               	movf	fputc@fp^0,w,c
  3047   002B08  101E               	iorwf	(fputc@fp+1)^0,w,c
  3048   002B0A  A4D8               	btfss	status,2,c
  3049   002B0C  EF8A  F015         	goto	u6581
  3050   002B10  EF8C  F015         	goto	u6580
  3051   002B14                     u6581:
  3052   002B14  EF91  F015         	goto	l6854
  3053   002B18                     u6580:
  3054   002B18                     l6852:
  3055   002B18  501B               	movf	fputc@c^0,w,c
  3056   002B1A  EC69  F01B         	call	_putch
  3057   002B1E  EFDE  F015         	goto	l1861
  3058   002B22                     l6854:
  3059   002B22  EE20 F00A          	lfsr	2,10
  3060   002B26  501D               	movf	fputc@fp^0,w,c
  3061   002B28  26D9               	addwf	fsr2l,f,c
  3062   002B2A  501E               	movf	(fputc@fp+1)^0,w,c
  3063   002B2C  22DA               	addwfc	fsr2h,f,c
  3064   002B2E  50DE               	movf	postinc2,w,c
  3065   002B30  10DE               	iorwf	postinc2,w,c
  3066   002B32  B4D8               	btfsc	status,2,c
  3067   002B34  EF9E  F015         	goto	u6591
  3068   002B38  EFA0  F015         	goto	u6590
  3069   002B3C                     u6591:
  3070   002B3C  EFBB  F015         	goto	l6858
  3071   002B40                     u6590:
  3072   002B40  EE20 F00A          	lfsr	2,10
  3073   002B44  501D               	movf	fputc@fp^0,w,c
  3074   002B46  26D9               	addwf	fsr2l,f,c
  3075   002B48  501E               	movf	(fputc@fp+1)^0,w,c
  3076   002B4A  22DA               	addwfc	fsr2h,f,c
  3077   002B4C  EE10 F003          	lfsr	1,3
  3078   002B50  501D               	movf	fputc@fp^0,w,c
  3079   002B52  26E1               	addwf	fsr1l,f,c
  3080   002B54  501E               	movf	(fputc@fp+1)^0,w,c
  3081   002B56  22E2               	addwfc	fsr1h,f,c
  3082   002B58  50DE               	movf	postinc2,w,c
  3083   002B5A  5CE6               	subwf	postinc1,w,c
  3084   002B5C  50E6               	movf	postinc1,w,c
  3085   002B5E  0A80               	xorlw	128
  3086   002B60  6E23               	movwf	(??_fputc+4)^0,c
  3087   002B62  50DE               	movf	postinc2,w,c
  3088   002B64  0A80               	xorlw	128
  3089   002B66  5823               	subwfb	(??_fputc+4)^0,w,c
  3090   002B68  B0D8               	btfsc	status,0,c
  3091   002B6A  EFB9  F015         	goto	u6601
  3092   002B6E  EFBB  F015         	goto	u6600
  3093   002B72                     u6601:
  3094   002B72  EFDE  F015         	goto	l1861
  3095   002B76                     u6600:
  3096   002B76                     l6858:
  3097   002B76  EE20 F003          	lfsr	2,3
  3098   002B7A  501D               	movf	fputc@fp^0,w,c
  3099   002B7C  26D9               	addwf	fsr2l,f,c
  3100   002B7E  501E               	movf	(fputc@fp+1)^0,w,c
  3101   002B80  22DA               	addwfc	fsr2h,f,c
  3102   002B82  CFDE F01F          	movff	postinc2,??_fputc
  3103   002B86  CFDD F020          	movff	postdec2,??_fputc+1
  3104   002B8A  C01D  FFD9         	movff	fputc@fp,fsr2l
  3105   002B8E  C01E  FFDA         	movff	fputc@fp+1,fsr2h
  3106   002B92  CFDE F021          	movff	postinc2,??_fputc+2
  3107   002B96  CFDD F022          	movff	postdec2,??_fputc+3
  3108   002B9A  501F               	movf	??_fputc^0,w,c
  3109   002B9C  2421               	addwf	(??_fputc+2)^0,w,c
  3110   002B9E  6ED9               	movwf	fsr2l,c
  3111   002BA0  5020               	movf	(??_fputc+1)^0,w,c
  3112   002BA2  2022               	addwfc	(??_fputc+3)^0,w,c
  3113   002BA4  6EDA               	movwf	fsr2h,c
  3114   002BA6  C01B  FFDF         	movff	fputc@c,indf2
  3115   002BAA  EE20 F003          	lfsr	2,3
  3116   002BAE  501D               	movf	fputc@fp^0,w,c
  3117   002BB0  26D9               	addwf	fsr2l,f,c
  3118   002BB2  501E               	movf	(fputc@fp+1)^0,w,c
  3119   002BB4  22DA               	addwfc	fsr2h,f,c
  3120   002BB6  2ADE               	incf	postinc2,f,c
  3121   002BB8  0E00               	movlw	0
  3122   002BBA  22DD               	addwfc	postdec2,f,c
  3123   002BBC                     l1861:
  3124   002BBC  0012               	return		;funcret
  3125   002BBE                     __end_of_fputc:
  3126                           	callstack 0
  3127                           
  3128 ;; *************** function _putch *****************
  3129 ;; Defined at:
  3130 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  c               1    wreg     unsigned char 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  c               1    0[COMRAM] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 8
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_fputc
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text15
  3159   0036D2                     __ptext15:
  3160                           	callstack 0
  3161   0036D2                     _putch:
  3162                           	callstack 17
  3163   0036D2  0012               	return		;funcret
  3164   0036D4                     __end_of_putch:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _abs *****************
  3168 ;; Defined at:
  3169 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  a               2   32[COMRAM] int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2   32[COMRAM] int 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:        4 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 8
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_dtoa
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text16
  3198   0034BA                     __ptext16:
  3199                           	callstack 0
  3200   0034BA                     _abs:
  3201                           	callstack 17
  3202   0034BA  BE22               	btfsc	(abs@a+1)^0,7,c
  3203   0034BC  EF6A  F01A         	goto	u6760
  3204   0034C0  5022               	movf	(abs@a+1)^0,w,c
  3205   0034C2  E106               	bnz	u6761
  3206   0034C4  0421               	decf	abs@a^0,w,c
  3207   0034C6  B0D8               	btfsc	status,0,c
  3208   0034C8  EF68  F01A         	goto	u6761
  3209   0034CC  EF6A  F01A         	goto	u6760
  3210   0034D0                     u6761:
  3211   0034D0  EF78  F01A         	goto	l1846
  3212   0034D4                     u6760:
  3213   0034D4  C021  F023         	movff	abs@a,??_abs
  3214   0034D8  C022  F024         	movff	abs@a+1,??_abs+1
  3215   0034DC  1E23               	comf	??_abs^0,f,c
  3216   0034DE  1E24               	comf	(??_abs+1)^0,f,c
  3217   0034E0  4A23               	infsnz	??_abs^0,f,c
  3218   0034E2  2A24               	incf	(??_abs+1)^0,f,c
  3219   0034E4  C023  F021         	movff	??_abs,?_abs
  3220   0034E8  C024  F022         	movff	??_abs+1,?_abs+1
  3221   0034EC  EF7C  F01A         	goto	l1849
  3222   0034F0                     l1846:
  3223   0034F0  C021  F021         	movff	abs@a,?_abs
  3224   0034F4  C022  F022         	movff	abs@a+1,?_abs+1
  3225   0034F8                     l1849:
  3226   0034F8  0012               	return		;funcret
  3227   0034FA                     __end_of_abs:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function ___awmod *****************
  3231 ;; Defined at:
  3232 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  dividend        2   26[COMRAM] int 
  3235 ;;  divisor         2   28[COMRAM] int 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  sign            1   31[COMRAM] unsigned char 
  3238 ;;  counter         1   30[COMRAM] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  2   26[COMRAM] int 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;Total ram usage:        6 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 8
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_dtoa
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text17
  3263   002D32                     __ptext17:
  3264                           	callstack 0
  3265   002D32                     ___awmod:
  3266                           	callstack 17
  3267   002D32  0E00               	movlw	0
  3268   002D34  6E20               	movwf	___awmod@sign^0,c
  3269   002D36  BE1C               	btfsc	(___awmod@dividend+1)^0,7,c
  3270   002D38  EFA2  F016         	goto	u6680
  3271   002D3C  EFA0  F016         	goto	u6681
  3272   002D40                     u6681:
  3273   002D40  EFA8  F016         	goto	l6922
  3274   002D44                     u6680:
  3275   002D44  6C1B               	negf	___awmod@dividend^0,c
  3276   002D46  1E1C               	comf	(___awmod@dividend+1)^0,f,c
  3277   002D48  B0D8               	btfsc	status,0,c
  3278   002D4A  2A1C               	incf	(___awmod@dividend+1)^0,f,c
  3279   002D4C  0E01               	movlw	1
  3280   002D4E  6E20               	movwf	___awmod@sign^0,c
  3281   002D50                     l6922:
  3282   002D50  BE1E               	btfsc	(___awmod@divisor+1)^0,7,c
  3283   002D52  EFAF  F016         	goto	u6690
  3284   002D56  EFAD  F016         	goto	u6691
  3285   002D5A                     u6691:
  3286   002D5A  EFB3  F016         	goto	l6926
  3287   002D5E                     u6690:
  3288   002D5E  6C1D               	negf	___awmod@divisor^0,c
  3289   002D60  1E1E               	comf	(___awmod@divisor+1)^0,f,c
  3290   002D62  B0D8               	btfsc	status,0,c
  3291   002D64  2A1E               	incf	(___awmod@divisor+1)^0,f,c
  3292   002D66                     l6926:
  3293   002D66  501D               	movf	___awmod@divisor^0,w,c
  3294   002D68  101E               	iorwf	(___awmod@divisor+1)^0,w,c
  3295   002D6A  B4D8               	btfsc	status,2,c
  3296   002D6C  EFBA  F016         	goto	u6701
  3297   002D70  EFBC  F016         	goto	u6700
  3298   002D74                     u6701:
  3299   002D74  EFE0  F016         	goto	l6942
  3300   002D78                     u6700:
  3301   002D78  0E01               	movlw	1
  3302   002D7A  6E1F               	movwf	___awmod@counter^0,c
  3303   002D7C  EFC4  F016         	goto	l6932
  3304   002D80                     l6930:
  3305   002D80  90D8               	bcf	status,0,c
  3306   002D82  361D               	rlcf	___awmod@divisor^0,f,c
  3307   002D84  361E               	rlcf	(___awmod@divisor+1)^0,f,c
  3308   002D86  2A1F               	incf	___awmod@counter^0,f,c
  3309   002D88                     l6932:
  3310   002D88  AE1E               	btfss	(___awmod@divisor+1)^0,7,c
  3311   002D8A  EFC9  F016         	goto	u6711
  3312   002D8E  EFCB  F016         	goto	u6710
  3313   002D92                     u6711:
  3314   002D92  EFC0  F016         	goto	l6930
  3315   002D96                     u6710:
  3316   002D96                     l6934:
  3317   002D96  501D               	movf	___awmod@divisor^0,w,c
  3318   002D98  5C1B               	subwf	___awmod@dividend^0,w,c
  3319   002D9A  501E               	movf	(___awmod@divisor+1)^0,w,c
  3320   002D9C  581C               	subwfb	(___awmod@dividend+1)^0,w,c
  3321   002D9E  A0D8               	btfss	status,0,c
  3322   002DA0  EFD4  F016         	goto	u6721
  3323   002DA4  EFD6  F016         	goto	u6720
  3324   002DA8                     u6721:
  3325   002DA8  EFDA  F016         	goto	l6938
  3326   002DAC                     u6720:
  3327   002DAC  501D               	movf	___awmod@divisor^0,w,c
  3328   002DAE  5E1B               	subwf	___awmod@dividend^0,f,c
  3329   002DB0  501E               	movf	(___awmod@divisor+1)^0,w,c
  3330   002DB2  5A1C               	subwfb	(___awmod@dividend+1)^0,f,c
  3331   002DB4                     l6938:
  3332   002DB4  90D8               	bcf	status,0,c
  3333   002DB6  321E               	rrcf	(___awmod@divisor+1)^0,f,c
  3334   002DB8  321D               	rrcf	___awmod@divisor^0,f,c
  3335   002DBA  2E1F               	decfsz	___awmod@counter^0,f,c
  3336   002DBC  EFCB  F016         	goto	l6934
  3337   002DC0                     l6942:
  3338   002DC0  5020               	movf	___awmod@sign^0,w,c
  3339   002DC2  B4D8               	btfsc	status,2,c
  3340   002DC4  EFE6  F016         	goto	u6731
  3341   002DC8  EFE8  F016         	goto	u6730
  3342   002DCC                     u6731:
  3343   002DCC  EFEC  F016         	goto	l6946
  3344   002DD0                     u6730:
  3345   002DD0  6C1B               	negf	___awmod@dividend^0,c
  3346   002DD2  1E1C               	comf	(___awmod@dividend+1)^0,f,c
  3347   002DD4  B0D8               	btfsc	status,0,c
  3348   002DD6  2A1C               	incf	(___awmod@dividend+1)^0,f,c
  3349   002DD8                     l6946:
  3350   002DD8  C01B  F01B         	movff	___awmod@dividend,?___awmod
  3351   002DDC  C01C  F01C         	movff	___awmod@dividend+1,?___awmod+1
  3352   002DE0  0012               	return		;funcret
  3353   002DE2                     __end_of___awmod:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function ___awdiv *****************
  3357 ;; Defined at:
  3358 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  dividend        2   26[COMRAM] int 
  3361 ;;  divisor         2   28[COMRAM] int 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  quotient        2   32[COMRAM] int 
  3364 ;;  sign            1   31[COMRAM] unsigned char 
  3365 ;;  counter         1   30[COMRAM] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  2   26[COMRAM] int 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;Total ram usage:        8 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 8
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_dtoa
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text18
  3390   002BBE                     __ptext18:
  3391                           	callstack 0
  3392   002BBE                     ___awdiv:
  3393                           	callstack 17
  3394   002BBE  0E00               	movlw	0
  3395   002BC0  6E20               	movwf	___awdiv@sign^0,c
  3396   002BC2  BE1E               	btfsc	(___awdiv@divisor+1)^0,7,c
  3397   002BC4  EFE8  F015         	goto	u6620
  3398   002BC8  EFE6  F015         	goto	u6621
  3399   002BCC                     u6621:
  3400   002BCC  EFEE  F015         	goto	l6878
  3401   002BD0                     u6620:
  3402   002BD0  6C1D               	negf	___awdiv@divisor^0,c
  3403   002BD2  1E1E               	comf	(___awdiv@divisor+1)^0,f,c
  3404   002BD4  B0D8               	btfsc	status,0,c
  3405   002BD6  2A1E               	incf	(___awdiv@divisor+1)^0,f,c
  3406   002BD8  0E01               	movlw	1
  3407   002BDA  6E20               	movwf	___awdiv@sign^0,c
  3408   002BDC                     l6878:
  3409   002BDC  BE1C               	btfsc	(___awdiv@dividend+1)^0,7,c
  3410   002BDE  EFF5  F015         	goto	u6630
  3411   002BE2  EFF3  F015         	goto	u6631
  3412   002BE6                     u6631:
  3413   002BE6  EFFB  F015         	goto	l6884
  3414   002BEA                     u6630:
  3415   002BEA  6C1B               	negf	___awdiv@dividend^0,c
  3416   002BEC  1E1C               	comf	(___awdiv@dividend+1)^0,f,c
  3417   002BEE  B0D8               	btfsc	status,0,c
  3418   002BF0  2A1C               	incf	(___awdiv@dividend+1)^0,f,c
  3419   002BF2  0E01               	movlw	1
  3420   002BF4  1A20               	xorwf	___awdiv@sign^0,f,c
  3421   002BF6                     l6884:
  3422   002BF6  0E00               	movlw	0
  3423   002BF8  6E22               	movwf	(___awdiv@quotient+1)^0,c
  3424   002BFA  0E00               	movlw	0
  3425   002BFC  6E21               	movwf	___awdiv@quotient^0,c
  3426   002BFE  501D               	movf	___awdiv@divisor^0,w,c
  3427   002C00  101E               	iorwf	(___awdiv@divisor+1)^0,w,c
  3428   002C02  B4D8               	btfsc	status,2,c
  3429   002C04  EF06  F016         	goto	u6641
  3430   002C08  EF08  F016         	goto	u6640
  3431   002C0C                     u6641:
  3432   002C0C  EF30  F016         	goto	l6906
  3433   002C10                     u6640:
  3434   002C10  0E01               	movlw	1
  3435   002C12  6E1F               	movwf	___awdiv@counter^0,c
  3436   002C14  EF10  F016         	goto	l6892
  3437   002C18                     l6890:
  3438   002C18  90D8               	bcf	status,0,c
  3439   002C1A  361D               	rlcf	___awdiv@divisor^0,f,c
  3440   002C1C  361E               	rlcf	(___awdiv@divisor+1)^0,f,c
  3441   002C1E  2A1F               	incf	___awdiv@counter^0,f,c
  3442   002C20                     l6892:
  3443   002C20  AE1E               	btfss	(___awdiv@divisor+1)^0,7,c
  3444   002C22  EF15  F016         	goto	u6651
  3445   002C26  EF17  F016         	goto	u6650
  3446   002C2A                     u6651:
  3447   002C2A  EF0C  F016         	goto	l6890
  3448   002C2E                     u6650:
  3449   002C2E                     l6894:
  3450   002C2E  90D8               	bcf	status,0,c
  3451   002C30  3621               	rlcf	___awdiv@quotient^0,f,c
  3452   002C32  3622               	rlcf	(___awdiv@quotient+1)^0,f,c
  3453   002C34  501D               	movf	___awdiv@divisor^0,w,c
  3454   002C36  5C1B               	subwf	___awdiv@dividend^0,w,c
  3455   002C38  501E               	movf	(___awdiv@divisor+1)^0,w,c
  3456   002C3A  581C               	subwfb	(___awdiv@dividend+1)^0,w,c
  3457   002C3C  A0D8               	btfss	status,0,c
  3458   002C3E  EF23  F016         	goto	u6661
  3459   002C42  EF25  F016         	goto	u6660
  3460   002C46                     u6661:
  3461   002C46  EF2A  F016         	goto	l6902
  3462   002C4A                     u6660:
  3463   002C4A  501D               	movf	___awdiv@divisor^0,w,c
  3464   002C4C  5E1B               	subwf	___awdiv@dividend^0,f,c
  3465   002C4E  501E               	movf	(___awdiv@divisor+1)^0,w,c
  3466   002C50  5A1C               	subwfb	(___awdiv@dividend+1)^0,f,c
  3467   002C52  8021               	bsf	___awdiv@quotient^0,0,c
  3468   002C54                     l6902:
  3469   002C54  90D8               	bcf	status,0,c
  3470   002C56  321E               	rrcf	(___awdiv@divisor+1)^0,f,c
  3471   002C58  321D               	rrcf	___awdiv@divisor^0,f,c
  3472   002C5A  2E1F               	decfsz	___awdiv@counter^0,f,c
  3473   002C5C  EF17  F016         	goto	l6894
  3474   002C60                     l6906:
  3475   002C60  5020               	movf	___awdiv@sign^0,w,c
  3476   002C62  B4D8               	btfsc	status,2,c
  3477   002C64  EF36  F016         	goto	u6671
  3478   002C68  EF38  F016         	goto	u6670
  3479   002C6C                     u6671:
  3480   002C6C  EF3C  F016         	goto	l6910
  3481   002C70                     u6670:
  3482   002C70  6C21               	negf	___awdiv@quotient^0,c
  3483   002C72  1E22               	comf	(___awdiv@quotient+1)^0,f,c
  3484   002C74  B0D8               	btfsc	status,0,c
  3485   002C76  2A22               	incf	(___awdiv@quotient+1)^0,f,c
  3486   002C78                     l6910:
  3487   002C78  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  3488   002C7C  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  3489   002C80  0012               	return		;funcret
  3490   002C82                     __end_of___awdiv:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function _memset *****************
  3494 ;; Defined at:
  3495 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  dest            2   26[COMRAM] PTR void 
  3498 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3499 ;;  c               2   28[COMRAM] int 
  3500 ;;  n               2   30[COMRAM] unsigned int 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  s               2   36[COMRAM] PTR unsigned char 
  3503 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3504 ;;  k               2   34[COMRAM] unsigned int 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2   26[COMRAM] PTR void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3514 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;Total ram usage:       12 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 8
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_convert_uint16_to_string
  3525 ;;		_convert_uint8_to_string
  3526 ;;		_convert_uint32_to_string
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text19
  3531   001F70                     __ptext19:
  3532                           	callstack 0
  3533   001F70                     _memset:
  3534                           	callstack 21
  3535   001F70  C01B  F025         	movff	memset@dest,memset@s
  3536   001F74  C01C  F026         	movff	memset@dest+1,memset@s+1
  3537   001F78  501F               	movf	memset@n^0,w,c
  3538   001F7A  1020               	iorwf	(memset@n+1)^0,w,c
  3539   001F7C  A4D8               	btfss	status,2,c
  3540   001F7E  EFC3  F00F         	goto	u6911
  3541   001F82  EFC5  F00F         	goto	u6910
  3542   001F86                     u6911:
  3543   001F86  EFC7  F00F         	goto	l7062
  3544   001F8A                     u6910:
  3545   001F8A  EF72  F010         	goto	l1771
  3546   001F8E                     l7062:
  3547   001F8E  C025  FFD9         	movff	memset@s,fsr2l
  3548   001F92  C026  FFDA         	movff	memset@s+1,fsr2h
  3549   001F96  C01D  FFDF         	movff	memset@c,indf2
  3550   001F9A  501F               	movf	memset@n^0,w,c
  3551   001F9C  2425               	addwf	memset@s^0,w,c
  3552   001F9E  6E21               	movwf	??_memset^0,c
  3553   001FA0  5020               	movf	(memset@n+1)^0,w,c
  3554   001FA2  2026               	addwfc	(memset@s+1)^0,w,c
  3555   001FA4  6E22               	movwf	(??_memset+1)^0,c
  3556   001FA6  0EFF               	movlw	255
  3557   001FA8  2421               	addwf	??_memset^0,w,c
  3558   001FAA  6ED9               	movwf	fsr2l,c
  3559   001FAC  0EFF               	movlw	255
  3560   001FAE  2022               	addwfc	(??_memset+1)^0,w,c
  3561   001FB0  6EDA               	movwf	fsr2h,c
  3562   001FB2  C01D  FFDF         	movff	memset@c,indf2
  3563   001FB6  5020               	movf	(memset@n+1)^0,w,c
  3564   001FB8  E107               	bnz	u6921
  3565   001FBA  0E03               	movlw	3
  3566   001FBC  5C1F               	subwf	memset@n^0,w,c
  3567   001FBE  B0D8               	btfsc	status,0,c
  3568   001FC0  EFE4  F00F         	goto	u6921
  3569   001FC4  EFE6  F00F         	goto	u6920
  3570   001FC8                     u6921:
  3571   001FC8  EFE8  F00F         	goto	l7068
  3572   001FCC                     u6920:
  3573   001FCC  EF72  F010         	goto	l1771
  3574   001FD0                     l7068:
  3575   001FD0  EE20 F001          	lfsr	2,1
  3576   001FD4  5025               	movf	memset@s^0,w,c
  3577   001FD6  26D9               	addwf	fsr2l,f,c
  3578   001FD8  5026               	movf	(memset@s+1)^0,w,c
  3579   001FDA  22DA               	addwfc	fsr2h,f,c
  3580   001FDC  C01D  FFDF         	movff	memset@c,indf2
  3581   001FE0  EE20 F002          	lfsr	2,2
  3582   001FE4  5025               	movf	memset@s^0,w,c
  3583   001FE6  26D9               	addwf	fsr2l,f,c
  3584   001FE8  5026               	movf	(memset@s+1)^0,w,c
  3585   001FEA  22DA               	addwfc	fsr2h,f,c
  3586   001FEC  C01D  FFDF         	movff	memset@c,indf2
  3587   001FF0  501F               	movf	memset@n^0,w,c
  3588   001FF2  2425               	addwf	memset@s^0,w,c
  3589   001FF4  6E21               	movwf	??_memset^0,c
  3590   001FF6  5020               	movf	(memset@n+1)^0,w,c
  3591   001FF8  2026               	addwfc	(memset@s+1)^0,w,c
  3592   001FFA  6E22               	movwf	(??_memset+1)^0,c
  3593   001FFC  0EFE               	movlw	254
  3594   001FFE  2421               	addwf	??_memset^0,w,c
  3595   002000  6ED9               	movwf	fsr2l,c
  3596   002002  0EFF               	movlw	255
  3597   002004  2022               	addwfc	(??_memset+1)^0,w,c
  3598   002006  6EDA               	movwf	fsr2h,c
  3599   002008  C01D  FFDF         	movff	memset@c,indf2
  3600   00200C  501F               	movf	memset@n^0,w,c
  3601   00200E  2425               	addwf	memset@s^0,w,c
  3602   002010  6E21               	movwf	??_memset^0,c
  3603   002012  5020               	movf	(memset@n+1)^0,w,c
  3604   002014  2026               	addwfc	(memset@s+1)^0,w,c
  3605   002016  6E22               	movwf	(??_memset+1)^0,c
  3606   002018  0EFD               	movlw	253
  3607   00201A  2421               	addwf	??_memset^0,w,c
  3608   00201C  6ED9               	movwf	fsr2l,c
  3609   00201E  0EFF               	movlw	255
  3610   002020  2022               	addwfc	(??_memset+1)^0,w,c
  3611   002022  6EDA               	movwf	fsr2h,c
  3612   002024  C01D  FFDF         	movff	memset@c,indf2
  3613   002028  5020               	movf	(memset@n+1)^0,w,c
  3614   00202A  E107               	bnz	u6931
  3615   00202C  0E07               	movlw	7
  3616   00202E  5C1F               	subwf	memset@n^0,w,c
  3617   002030  B0D8               	btfsc	status,0,c
  3618   002032  EF1D  F010         	goto	u6931
  3619   002036  EF1F  F010         	goto	u6930
  3620   00203A                     u6931:
  3621   00203A  EF21  F010         	goto	l7074
  3622   00203E                     u6930:
  3623   00203E  EF72  F010         	goto	l1771
  3624   002042                     l7074:
  3625   002042  EE20 F003          	lfsr	2,3
  3626   002046  5025               	movf	memset@s^0,w,c
  3627   002048  26D9               	addwf	fsr2l,f,c
  3628   00204A  5026               	movf	(memset@s+1)^0,w,c
  3629   00204C  22DA               	addwfc	fsr2h,f,c
  3630   00204E  C01D  FFDF         	movff	memset@c,indf2
  3631   002052  501F               	movf	memset@n^0,w,c
  3632   002054  2425               	addwf	memset@s^0,w,c
  3633   002056  6E21               	movwf	??_memset^0,c
  3634   002058  5020               	movf	(memset@n+1)^0,w,c
  3635   00205A  2026               	addwfc	(memset@s+1)^0,w,c
  3636   00205C  6E22               	movwf	(??_memset+1)^0,c
  3637   00205E  0EFC               	movlw	252
  3638   002060  2421               	addwf	??_memset^0,w,c
  3639   002062  6ED9               	movwf	fsr2l,c
  3640   002064  0EFF               	movlw	255
  3641   002066  2022               	addwfc	(??_memset+1)^0,w,c
  3642   002068  6EDA               	movwf	fsr2h,c
  3643   00206A  C01D  FFDF         	movff	memset@c,indf2
  3644   00206E  5020               	movf	(memset@n+1)^0,w,c
  3645   002070  E107               	bnz	u6941
  3646   002072  0E09               	movlw	9
  3647   002074  5C1F               	subwf	memset@n^0,w,c
  3648   002076  B0D8               	btfsc	status,0,c
  3649   002078  EF40  F010         	goto	u6941
  3650   00207C  EF42  F010         	goto	u6940
  3651   002080                     u6941:
  3652   002080  EF44  F010         	goto	l7080
  3653   002084                     u6940:
  3654   002084  EF72  F010         	goto	l1771
  3655   002088                     l7080:
  3656   002088  C025  F021         	movff	memset@s,??_memset
  3657   00208C  C026  F022         	movff	memset@s+1,??_memset+1
  3658   002090  1E21               	comf	??_memset^0,f,c
  3659   002092  1E22               	comf	(??_memset+1)^0,f,c
  3660   002094  4A21               	infsnz	??_memset^0,f,c
  3661   002096  2A22               	incf	(??_memset+1)^0,f,c
  3662   002098  0E03               	movlw	3
  3663   00209A  1421               	andwf	??_memset^0,w,c
  3664   00209C  6E23               	movwf	memset@k^0,c
  3665   00209E  6A24               	clrf	(memset@k+1)^0,c
  3666   0020A0  5023               	movf	memset@k^0,w,c
  3667   0020A2  2625               	addwf	memset@s^0,f,c
  3668   0020A4  5024               	movf	(memset@k+1)^0,w,c
  3669   0020A6  2226               	addwfc	(memset@s+1)^0,f,c
  3670   0020A8  5023               	movf	memset@k^0,w,c
  3671   0020AA  5E1F               	subwf	memset@n^0,f,c
  3672   0020AC  5024               	movf	(memset@k+1)^0,w,c
  3673   0020AE  5A20               	subwfb	(memset@n+1)^0,f,c
  3674   0020B0  0EFC               	movlw	252
  3675   0020B2  161F               	andwf	memset@n^0,f,c
  3676   0020B4  0EFF               	movlw	255
  3677   0020B6  1620               	andwf	(memset@n+1)^0,f,c
  3678   0020B8  EF69  F010         	goto	l7088
  3679   0020BC                     l7082:
  3680   0020BC  C025  FFD9         	movff	memset@s,fsr2l
  3681   0020C0  C026  FFDA         	movff	memset@s+1,fsr2h
  3682   0020C4  C01D  FFDF         	movff	memset@c,indf2
  3683   0020C8  061F               	decf	memset@n^0,f,c
  3684   0020CA  A0D8               	btfss	status,0,c
  3685   0020CC  0620               	decf	(memset@n+1)^0,f,c
  3686   0020CE  4A25               	infsnz	memset@s^0,f,c
  3687   0020D0  2A26               	incf	(memset@s+1)^0,f,c
  3688   0020D2                     l7088:
  3689   0020D2  501F               	movf	memset@n^0,w,c
  3690   0020D4  1020               	iorwf	(memset@n+1)^0,w,c
  3691   0020D6  A4D8               	btfss	status,2,c
  3692   0020D8  EF70  F010         	goto	u6951
  3693   0020DC  EF72  F010         	goto	u6950
  3694   0020E0                     u6951:
  3695   0020E0  EF5E  F010         	goto	l7082
  3696   0020E4                     u6950:
  3697   0020E4                     l1771:
  3698   0020E4  0012               	return		;funcret
  3699   0020E6                     __end_of_memset:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _application_initialize *****************
  3703 ;; Defined at:
  3704 ;;		line 52 in file "application.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  ret             1    0        unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 13
  3725 ;; This function calls:
  3726 ;;		_ADC_Init
  3727 ;;		_ecu_layer_initialize
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text20
  3734   00368C                     __ptext20:
  3735                           	callstack 0
  3736   00368C                     _application_initialize:
  3737                           	callstack 17
  3738   00368C                     
  3739                           ;application.c: 54:     ecu_layer_initialize();
  3740   00368C  EC1E  F01B         	call	_ecu_layer_initialize	;wreg free
  3741   003690  0ED3               	movlw	low _adc_1
  3742   003692  6E1F               	movwf	ADC_Init@_adc^0,c
  3743   003694  0E00               	movlw	high _adc_1
  3744   003696  6E20               	movwf	(ADC_Init@_adc+1)^0,c
  3745   003698  ECE3  F012         	call	_ADC_Init	;wreg free
  3746   00369C  0012               	return		;funcret
  3747   00369E                     __end_of_application_initialize:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _ecu_layer_initialize *****************
  3751 ;; Defined at:
  3752 ;;		line 149 in file "ECU_Layer/ecu_layer_init.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  ret             1   50[COMRAM] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;Total ram usage:        1 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 12
  3773 ;; This function calls:
  3774 ;;		_dc_motor_initialize
  3775 ;;		_lcd_4bit_initialize
  3776 ;; This function is called by:
  3777 ;;		_application_initialize
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text21
  3782   00363C                     __ptext21:
  3783                           	callstack 0
  3784   00363C                     _ecu_layer_initialize:
  3785                           	callstack 17
  3786   00363C                     
  3787                           ;ECU_Layer/ecu_layer_init.c: 151:      ret = lcd_4bit_initialize(&lcd1);
  3788   00363C  0EDA               	movlw	low _lcd1
  3789   00363E  6E2D               	movwf	lcd_4bit_initialize@lcd^0,c
  3790   003640  0E00               	movlw	high _lcd1
  3791   003642  6E2E               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  3792   003644  EC65  F013         	call	_lcd_4bit_initialize	;wreg free
  3793   003648  6E33               	movwf	ecu_layer_initialize@ret^0,c
  3794   00364A                     
  3795                           ;ECU_Layer/ecu_layer_init.c: 152:      ret &= dc_motor_initialize(&dc_motor_1);
  3796   00364A  0EE2               	movlw	low _dc_motor_1
  3797   00364C  6E29               	movwf	dc_motor_initialize@_dc_motor^0,c
  3798   00364E  0E00               	movlw	high _dc_motor_1
  3799   003650  6E2A               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3800   003652  EC7D  F01A         	call	_dc_motor_initialize	;wreg free
  3801   003656  1633               	andwf	ecu_layer_initialize@ret^0,f,c
  3802   003658                     
  3803                           ;ECU_Layer/ecu_layer_init.c: 153:      ret &= dc_motor_initialize(&dc_motor_2);
  3804   003658  0EE0               	movlw	low _dc_motor_2
  3805   00365A  6E29               	movwf	dc_motor_initialize@_dc_motor^0,c
  3806   00365C  0E00               	movlw	high _dc_motor_2
  3807   00365E  6E2A               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3808   003660  EC7D  F01A         	call	_dc_motor_initialize	;wreg free
  3809   003664  1633               	andwf	ecu_layer_initialize@ret^0,f,c
  3810   003666  0012               	return		;funcret
  3811   003668                     __end_of_ecu_layer_initialize:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _lcd_4bit_initialize *****************
  3815 ;; Defined at:
  3816 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  lcd             2   44[COMRAM] PTR const struct .
  3819 ;;		 -> lcd1(6), 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  l_data_pins_    1   49[COMRAM] unsigned char 
  3822 ;;  ret             1   48[COMRAM] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      unsigned char 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;Total ram usage:        6 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; Hardware stack levels required when called: 11
  3839 ;; This function calls:
  3840 ;;		_gpio_pin_initialize
  3841 ;;		_lcd_4bit_send_command
  3842 ;; This function is called by:
  3843 ;;		_ecu_layer_initialize
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text22
  3848   0026CA                     __ptext22:
  3849                           	callstack 0
  3850   0026CA                     _lcd_4bit_initialize:
  3851                           	callstack 17
  3852   0026CA                     
  3853                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  3854   0026CA  0E00               	movlw	0
  3855   0026CC  6E32               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  3856   0026CE                     
  3857                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  3858   0026CE  502D               	movf	lcd_4bit_initialize@lcd^0,w,c
  3859   0026D0  102E               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  3860   0026D2  A4D8               	btfss	status,2,c
  3861   0026D4  EF6E  F013         	goto	u4021
  3862   0026D8  EF70  F013         	goto	u4020
  3863   0026DC                     u4021:
  3864   0026DC  EF74  F013         	goto	l4808
  3865   0026E0                     u4020:
  3866   0026E0                     
  3867                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  3868   0026E0  0E00               	movlw	0
  3869   0026E2  6E31               	movwf	lcd_4bit_initialize@ret^0,c
  3870                           
  3871                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  3872   0026E4  EFD1  F013         	goto	l4836
  3873   0026E8                     l4808:
  3874                           
  3875                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  3876   0026E8  C02D  F025         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  3877   0026EC  C02E  F026         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  3878   0026F0  EC42  F017         	call	_gpio_pin_initialize	;wreg free
  3879   0026F4  6E31               	movwf	lcd_4bit_initialize@ret^0,c
  3880                           
  3881                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  3882   0026F6  0E01               	movlw	1
  3883   0026F8  242D               	addwf	lcd_4bit_initialize@lcd^0,w,c
  3884   0026FA  6E25               	movwf	gpio_pin_initialize@pin_config^0,c
  3885   0026FC  0E00               	movlw	0
  3886   0026FE  202E               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  3887   002700  6E26               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  3888   002702  EC42  F017         	call	_gpio_pin_initialize	;wreg free
  3889   002706  6E31               	movwf	lcd_4bit_initialize@ret^0,c
  3890   002708                     
  3891                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  3892   002708  0E00               	movlw	0
  3893   00270A  6E32               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  3894   00270C                     l4816:
  3895   00270C  5032               	movf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  3896   00270E  242D               	addwf	lcd_4bit_initialize@lcd^0,w,c
  3897   002710  6E2F               	movwf	??_lcd_4bit_initialize^0,c
  3898   002712  0E00               	movlw	0
  3899   002714  202E               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  3900   002716  6E30               	movwf	(??_lcd_4bit_initialize+1)^0,c
  3901   002718  0E02               	movlw	2
  3902   00271A  242F               	addwf	??_lcd_4bit_initialize^0,w,c
  3903   00271C  6E25               	movwf	gpio_pin_initialize@pin_config^0,c
  3904   00271E  0E00               	movlw	0
  3905   002720  2030               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  3906   002722  6E26               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  3907   002724  EC42  F017         	call	_gpio_pin_initialize	;wreg free
  3908   002728                     
  3909                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  3910   002728  2A32               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  3911   00272A  0E03               	movlw	3
  3912   00272C  6432               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  3913   00272E  EF9B  F013         	goto	u4031
  3914   002732  EF9D  F013         	goto	u4030
  3915   002736                     u4031:
  3916   002736  EF86  F013         	goto	l4816
  3917   00273A                     u4030:
  3918   00273A  C02D  F029         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3919   00273E  C02E  F02A         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3920   002742  0E33               	movlw	51
  3921   002744  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  3922   002746  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  3923   00274A                     
  3924                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((150)*(4000000/4000
      +                          000.0)));
  3925   00274A  0E32               	movlw	50
  3926   00274C                     u7397:
  3927   00274C  2EE8               	decfsz	wreg,f,c
  3928   00274E  D7FE               	bra	u7397
  3929   002750  C02D  F029         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3930   002754  C02E  F02A         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3931   002758  0E32               	movlw	50
  3932   00275A  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  3933   00275C  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  3934   002760  C02D  F029         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3935   002764  C02E  F02A         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3936   002768  0E28               	movlw	40
  3937   00276A  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  3938   00276C  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  3939   002770  C02D  F029         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3940   002774  C02E  F02A         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3941   002778  0E01               	movlw	1
  3942   00277A  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  3943   00277C  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  3944   002780  C02D  F029         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3945   002784  C02E  F02A         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3946   002788  0E06               	movlw	6
  3947   00278A  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  3948   00278C  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  3949   002790                     
  3950                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret=lcd_4bit_send_command(lcd,0X0C);
  3951   002790  C02D  F029         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3952   002794  C02E  F02A         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3953   002798  0E0C               	movlw	12
  3954   00279A  6E2B               	movwf	lcd_4bit_send_command@command^0,c
  3955   00279C  EC41  F018         	call	_lcd_4bit_send_command	;wreg free
  3956   0027A0  6E31               	movwf	lcd_4bit_initialize@ret^0,c
  3957   0027A2                     l4836:
  3958                           
  3959                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     return ret;
  3960   0027A2  5031               	movf	lcd_4bit_initialize@ret^0,w,c
  3961   0027A4  0012               	return		;funcret
  3962   0027A6                     __end_of_lcd_4bit_initialize:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _lcd_4bit_send_command *****************
  3966 ;; Defined at:
  3967 ;;		line 43 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  lcd             2   40[COMRAM] PTR const struct .
  3970 ;;		 -> lcd1(6), 
  3971 ;;  command         1   42[COMRAM] unsigned char 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  ret             1   43[COMRAM] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      unsigned char 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:        4 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 10
  3990 ;; This function calls:
  3991 ;;		_gpio_pin_write_logic
  3992 ;;		_lcd_4bit_send_enable_signal
  3993 ;;		_lcd_send_4bits
  3994 ;; This function is called by:
  3995 ;;		_lcd_4bit_initialize
  3996 ;;		_lcd_4bit_set_cursor
  3997 ;;		_main
  3998 ;;		_lcd_4bit_send_custom_char
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text23
  4003   003082                     __ptext23:
  4004                           	callstack 0
  4005   003082                     _lcd_4bit_send_command:
  4006                           	callstack 18
  4007   003082                     
  4008                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:     if(lcd==((void*)0)){
  4009   003082  5029               	movf	lcd_4bit_send_command@lcd^0,w,c
  4010   003084  102A               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  4011   003086  A4D8               	btfss	status,2,c
  4012   003088  EF48  F018         	goto	u3981
  4013   00308C  EF4A  F018         	goto	u3980
  4014   003090                     u3981:
  4015   003090  EF4E  F018         	goto	l4766
  4016   003094                     u3980:
  4017   003094                     
  4018                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         ret=(Std_ReturnType)0x00;
  4019   003094  0E00               	movlw	0
  4020   003096  6E2C               	movwf	lcd_4bit_send_command@ret^0,c
  4021                           
  4022                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:     }
  4023   003098  EF78  F018         	goto	l4768
  4024   00309C                     l4766:
  4025                           
  4026                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  4027   00309C  C029  F01B         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  4028   0030A0  C02A  F01C         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  4029   0030A4  0E00               	movlw	0
  4030   0030A6  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4031   0030A8  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4032   0030AC  6E2C               	movwf	lcd_4bit_send_command@ret^0,c
  4033                           
  4034                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=lcd_send_4bits(lcd, command >> 4);
  4035   0030AE  C029  F025         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4036   0030B2  C02A  F026         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4037   0030B6  382B               	swapf	lcd_4bit_send_command@command^0,w,c
  4038   0030B8  0B0F               	andlw	15
  4039   0030BA  6E27               	movwf	lcd_send_4bits@_data_command^0,c
  4040   0030BC  EC87  F017         	call	_lcd_send_4bits	;wreg free
  4041   0030C0  6E2C               	movwf	lcd_4bit_send_command@ret^0,c
  4042                           
  4043                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_4bit_send_enable_signal(lcd);
  4044   0030C2  C029  F025         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4045   0030C6  C02A  F026         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4046   0030CA  ECAB  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  4047   0030CE  6E2C               	movwf	lcd_4bit_send_command@ret^0,c
  4048                           
  4049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_send_4bits(lcd, command);
  4050   0030D0  C029  F025         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4051   0030D4  C02A  F026         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4052   0030D8  C02B  F027         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  4053   0030DC  EC87  F017         	call	_lcd_send_4bits	;wreg free
  4054   0030E0  6E2C               	movwf	lcd_4bit_send_command@ret^0,c
  4055                           
  4056                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_4bit_send_enable_signal(lcd);
  4057   0030E2  C029  F025         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4058   0030E6  C02A  F026         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4059   0030EA  ECAB  F019         	call	_lcd_4bit_send_enable_signal	;wreg free
  4060   0030EE  6E2C               	movwf	lcd_4bit_send_command@ret^0,c
  4061   0030F0                     l4768:
  4062                           
  4063                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:     return ret;
  4064   0030F0  502C               	movf	lcd_4bit_send_command@ret^0,w,c
  4065   0030F2  0012               	return		;funcret
  4066   0030F4                     __end_of_lcd_4bit_send_command:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _lcd_send_4bits *****************
  4070 ;; Defined at:
  4071 ;;		line 396 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  lcd             2   36[COMRAM] PTR const struct .
  4074 ;;		 -> lcd1(6), 
  4075 ;;  _data_comman    1   38[COMRAM] unsigned char 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  ret             1   39[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      unsigned char 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4087 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;Total ram usage:        4 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 9
  4094 ;; This function calls:
  4095 ;;		_gpio_pin_write_logic
  4096 ;; This function is called by:
  4097 ;;		_lcd_4bit_send_command
  4098 ;;		_lcd_4bit_send_char_data
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text24
  4103   002F0E                     __ptext24:
  4104                           	callstack 0
  4105   002F0E                     _lcd_send_4bits:
  4106                           	callstack 18
  4107   002F0E                     
  4108                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:     if(lcd==((void*)0)){
  4109   002F0E  5025               	movf	lcd_send_4bits@lcd^0,w,c
  4110   002F10  1026               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  4111   002F12  A4D8               	btfss	status,2,c
  4112   002F14  EF8E  F017         	goto	u3831
  4113   002F18  EF90  F017         	goto	u3830
  4114   002F1C                     u3831:
  4115   002F1C  EF94  F017         	goto	l4674
  4116   002F20                     u3830:
  4117   002F20                     
  4118                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret=(Std_ReturnType)0x00;
  4119   002F20  0E00               	movlw	0
  4120   002F22  6E28               	movwf	lcd_send_4bits@ret^0,c
  4121                           
  4122                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:     }
  4123   002F24  EFC9  F017         	goto	l4676
  4124   002F28                     l4674:
  4125                           
  4126                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  4127   002F28  0E02               	movlw	2
  4128   002F2A  2425               	addwf	lcd_send_4bits@lcd^0,w,c
  4129   002F2C  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  4130   002F2E  0E00               	movlw	0
  4131   002F30  2026               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4132   002F32  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4133   002F34  5027               	movf	lcd_send_4bits@_data_command^0,w,c
  4134   002F36  0B01               	andlw	1
  4135   002F38  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4136   002F3A  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4137   002F3E  6E28               	movwf	lcd_send_4bits@ret^0,c
  4138                           
  4139                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  4140   002F40  0E03               	movlw	3
  4141   002F42  2425               	addwf	lcd_send_4bits@lcd^0,w,c
  4142   002F44  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  4143   002F46  0E00               	movlw	0
  4144   002F48  2026               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4145   002F4A  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4146   002F4C  90D8               	bcf	status,0,c
  4147   002F4E  3027               	rrcf	lcd_send_4bits@_data_command^0,w,c
  4148   002F50  0B01               	andlw	1
  4149   002F52  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4150   002F54  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4151   002F58  6E28               	movwf	lcd_send_4bits@ret^0,c
  4152                           
  4153                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  4154   002F5A  0E04               	movlw	4
  4155   002F5C  2425               	addwf	lcd_send_4bits@lcd^0,w,c
  4156   002F5E  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  4157   002F60  0E00               	movlw	0
  4158   002F62  2026               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4159   002F64  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4160   002F66  4027               	rrncf	lcd_send_4bits@_data_command^0,w,c
  4161   002F68  42E8               	rrncf	wreg,f,c
  4162   002F6A  0B3F               	andlw	63
  4163   002F6C  0B01               	andlw	1
  4164   002F6E  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4165   002F70  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4166   002F74  6E28               	movwf	lcd_send_4bits@ret^0,c
  4167                           
  4168                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  4169   002F76  0E05               	movlw	5
  4170   002F78  2425               	addwf	lcd_send_4bits@lcd^0,w,c
  4171   002F7A  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  4172   002F7C  0E00               	movlw	0
  4173   002F7E  2026               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4174   002F80  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4175   002F82  3827               	swapf	lcd_send_4bits@_data_command^0,w,c
  4176   002F84  46E8               	rlncf	wreg,f,c
  4177   002F86  0B1F               	andlw	31
  4178   002F88  0B01               	andlw	1
  4179   002F8A  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4180   002F8C  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4181   002F90  6E28               	movwf	lcd_send_4bits@ret^0,c
  4182   002F92                     l4676:
  4183                           
  4184                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:     return ret;
  4185   002F92  5028               	movf	lcd_send_4bits@ret^0,w,c
  4186   002F94  0012               	return		;funcret
  4187   002F96                     __end_of_lcd_send_4bits:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4191 ;; Defined at:
  4192 ;;		line 409 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  lcd             2   36[COMRAM] PTR const struct .
  4195 ;;		 -> lcd1(6), 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  ret             1   38[COMRAM] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      unsigned char 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;Total ram usage:        3 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 9
  4214 ;; This function calls:
  4215 ;;		_gpio_pin_write_logic
  4216 ;; This function is called by:
  4217 ;;		_lcd_4bit_send_command
  4218 ;;		_lcd_4bit_send_char_data
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text25
  4223   003356                     __ptext25:
  4224                           	callstack 0
  4225   003356                     _lcd_4bit_send_enable_signal:
  4226                           	callstack 18
  4227   003356                     
  4228                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 411:     if(lcd==((void*)0)){
  4229   003356  5025               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4230   003358  1026               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4231   00335A  A4D8               	btfss	status,2,c
  4232   00335C  EFB2  F019         	goto	u3841
  4233   003360  EFB4  F019         	goto	u3840
  4234   003364                     u3841:
  4235   003364  EFB8  F019         	goto	l4686
  4236   003368                     u3840:
  4237   003368                     
  4238                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 412:         ret=(Std_ReturnType)0x00;
  4239   003368  0E00               	movlw	0
  4240   00336A  6E27               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4241                           
  4242                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:     }
  4243   00336C  EFD0  F019         	goto	l4690
  4244   003370                     l4686:
  4245   003370  0E01               	movlw	1
  4246   003372  2425               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4247   003374  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  4248   003376  0E00               	movlw	0
  4249   003378  2026               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4250   00337A  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4251   00337C  0E01               	movlw	1
  4252   00337E  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4253   003380  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4254   003384                     
  4255                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  4256   003384  D000               	nop2		;2 cycle nop
  4257   003386  D000               	nop2		;2 cycle nop
  4258   003388  F000               	nop	
  4259                           
  4260                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  4261   00338A  0E01               	movlw	1
  4262   00338C  2425               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4263   00338E  6E1B               	movwf	gpio_pin_write_logic@pin_config^0,c
  4264   003390  0E00               	movlw	0
  4265   003392  2026               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4266   003394  6E1C               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4267   003396  0E00               	movlw	0
  4268   003398  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4269   00339A  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4270   00339E  6E27               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4271   0033A0                     l4690:
  4272                           
  4273                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:     return ret;
  4274   0033A0  5027               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4275   0033A2  0012               	return		;funcret
  4276   0033A4                     __end_of_lcd_4bit_send_enable_signal:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _dc_motor_initialize *****************
  4280 ;; Defined at:
  4281 ;;		line 7 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  _dc_motor       2   40[COMRAM] PTR const struct .
  4284 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  ret             1   42[COMRAM] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      unsigned char 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;Total ram usage:        3 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 10
  4303 ;; This function calls:
  4304 ;;		_gpio_pin_initialize
  4305 ;; This function is called by:
  4306 ;;		_ecu_layer_initialize
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text26
  4311   0034FA                     __ptext26:
  4312                           	callstack 0
  4313   0034FA                     _dc_motor_initialize:
  4314                           	callstack 18
  4315   0034FA                     
  4316                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 9:     if(_dc_motor==((void*)0)){
  4317   0034FA  5029               	movf	dc_motor_initialize@_dc_motor^0,w,c
  4318   0034FC  102A               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4319   0034FE  A4D8               	btfss	status,2,c
  4320   003500  EF84  F01A         	goto	u4041
  4321   003504  EF86  F01A         	goto	u4040
  4322   003508                     u4041:
  4323   003508  EF8A  F01A         	goto	l4846
  4324   00350C                     u4040:
  4325   00350C                     
  4326                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 10:         ret=(Std_ReturnType)0x00;
  4327   00350C  0E00               	movlw	0
  4328   00350E  6E2B               	movwf	dc_motor_initialize@ret^0,c
  4329                           
  4330                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 11:     }
  4331   003510  EF9A  F01A         	goto	l4848
  4332   003514                     l4846:
  4333                           
  4334                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 13:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0X00U]));
  4335   003514  C029  F025         	movff	dc_motor_initialize@_dc_motor,gpio_pin_initialize@pin_config
  4336   003518  C02A  F026         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_initialize@pin_config+1
  4337   00351C  EC42  F017         	call	_gpio_pin_initialize	;wreg free
  4338   003520  6E2B               	movwf	dc_motor_initialize@ret^0,c
  4339                           
  4340                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 14:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0X01U]));
  4341   003522  0E01               	movlw	1
  4342   003524  2429               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  4343   003526  6E25               	movwf	gpio_pin_initialize@pin_config^0,c
  4344   003528  0E00               	movlw	0
  4345   00352A  202A               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4346   00352C  6E26               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  4347   00352E  EC42  F017         	call	_gpio_pin_initialize	;wreg free
  4348   003532  6E2B               	movwf	dc_motor_initialize@ret^0,c
  4349   003534                     l4848:
  4350                           
  4351                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 16:     return ret;
  4352   003534  502B               	movf	dc_motor_initialize@ret^0,w,c
  4353   003536  0012               	return		;funcret
  4354   003538                     __end_of_dc_motor_initialize:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _gpio_pin_initialize *****************
  4358 ;; Defined at:
  4359 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  pin_config      2   36[COMRAM] PTR const struct .
  4362 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4363 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  ret             1   39[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      unsigned char 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;Total ram usage:        4 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 9
  4382 ;; This function calls:
  4383 ;;		_gpio_pin_direction_initialize
  4384 ;;		_gpio_pin_write_logic
  4385 ;; This function is called by:
  4386 ;;		_lcd_4bit_initialize
  4387 ;;		_dc_motor_initialize
  4388 ;;		_seven_segment_initialize
  4389 ;;		_lcd_8bit_initialize
  4390 ;;		_keypad_initialize
  4391 ;;		_led_initialize
  4392 ;;		_relay_initialize
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text27
  4397   002E84                     __ptext27:
  4398                           	callstack 0
  4399   002E84                     _gpio_pin_initialize:
  4400                           	callstack 18
  4401   002E84                     
  4402                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4403   002E84  5025               	movf	gpio_pin_initialize@pin_config^0,w,c
  4404   002E86  1026               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
  4405   002E88  B4D8               	btfsc	status,2,c
  4406   002E8A  EF49  F017         	goto	u3951
  4407   002E8E  EF4B  F017         	goto	u3950
  4408   002E92                     u3951:
  4409   002E92  EF6B  F017         	goto	l4752
  4410   002E96                     u3950:
  4411   002E96  C025  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4412   002E9A  C026  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4413   002E9E  30DF               	rrcf	223,w,c
  4414   002EA0  32E8               	rrcf	wreg,f,c
  4415   002EA2  32E8               	rrcf	wreg,f,c
  4416   002EA4  0B07               	andlw	7
  4417   002EA6  6E27               	movwf	??_gpio_pin_initialize^0,c
  4418   002EA8  0E08               	movlw	8
  4419   002EAA  6027               	cpfslt	??_gpio_pin_initialize^0,c
  4420   002EAC  EF5A  F017         	goto	u3961
  4421   002EB0  EF5C  F017         	goto	u3960
  4422   002EB4                     u3961:
  4423   002EB4  EF6B  F017         	goto	l4752
  4424   002EB8                     u3960:
  4425   002EB8  C025  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4426   002EBC  C026  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4427   002EC0  50DF               	movf	223,w,c
  4428   002EC2  0B07               	andlw	7
  4429   002EC4  6E27               	movwf	??_gpio_pin_initialize^0,c
  4430   002EC6  0E04               	movlw	4
  4431   002EC8  6427               	cpfsgt	??_gpio_pin_initialize^0,c
  4432   002ECA  EF69  F017         	goto	u3971
  4433   002ECE  EF6B  F017         	goto	u3970
  4434   002ED2                     u3971:
  4435   002ED2  EF6F  F017         	goto	l4754
  4436   002ED6                     u3970:
  4437   002ED6                     l4752:
  4438                           
  4439                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  4440   002ED6  0E00               	movlw	0
  4441   002ED8  6E28               	movwf	gpio_pin_initialize@ret^0,c
  4442                           
  4443                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  4444   002EDA  EF85  F017         	goto	l4756
  4445   002EDE                     l4754:
  4446                           
  4447                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  4448   002EDE  C025  F01B         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  4449   002EE2  C026  F01C         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  4450   002EE6  EC73  F010         	call	_gpio_pin_direction_initialize	;wreg free
  4451   002EEA  6E28               	movwf	gpio_pin_initialize@ret^0,c
  4452                           
  4453                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  4454   002EEC  C025  F01B         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  4455   002EF0  C026  F01C         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  4456   002EF4  C025  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4457   002EF8  C026  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4458   002EFC  0E00               	movlw	0
  4459   002EFE  BEDF               	btfsc	indf2,7,c
  4460   002F00  0E01               	movlw	1
  4461   002F02  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  4462   002F04  EC24  F011         	call	_gpio_pin_write_logic	;wreg free
  4463   002F08  6E28               	movwf	gpio_pin_initialize@ret^0,c
  4464   002F0A                     l4756:
  4465                           
  4466                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  4467   002F0A  5028               	movf	gpio_pin_initialize@ret^0,w,c
  4468   002F0C  0012               	return		;funcret
  4469   002F0E                     __end_of_gpio_pin_initialize:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _gpio_pin_write_logic *****************
  4473 ;; Defined at:
  4474 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  pin_config      2   26[COMRAM] PTR const struct .
  4477 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4478 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  4479 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4480 ;;  logic           1   28[COMRAM] enum E3153
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  ret             1   35[COMRAM] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      unsigned char 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4492 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;Total ram usage:       10 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 8
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_lcd_4bit_send_command
  4503 ;;		_lcd_4bit_send_char_data
  4504 ;;		_lcd_send_4bits
  4505 ;;		_lcd_4bit_send_enable_signal
  4506 ;;		_dc_motor_move_right
  4507 ;;		_dc_motor_move_left
  4508 ;;		_dc_motor_stop
  4509 ;;		_gpio_pin_initialize
  4510 ;;		_seven_segment_write_number
  4511 ;;		_lcd_8bit_send_command
  4512 ;;		_lcd_8bit_send_char_data
  4513 ;;		_lcd_8bit_send_enable_signal
  4514 ;;		_keypad_get_value
  4515 ;;		_led_turn_on
  4516 ;;		_led_turn_off
  4517 ;;		_relay_turn_on
  4518 ;;		_relay_turn_off
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text28
  4523   002248                     __ptext28:
  4524                           	callstack 0
  4525   002248                     _gpio_pin_write_logic:
  4526                           	callstack 18
  4527   002248                     
  4528                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  4529   002248  0E01               	movlw	1
  4530   00224A  6E24               	movwf	gpio_pin_write_logic@ret^0,c
  4531   00224C                     
  4532                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4533   00224C  501B               	movf	gpio_pin_write_logic@pin_config^0,w,c
  4534   00224E  101C               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  4535   002250  B4D8               	btfsc	status,2,c
  4536   002252  EF2D  F011         	goto	u3561
  4537   002256  EF2F  F011         	goto	u3560
  4538   00225A                     u3561:
  4539   00225A  EF4F  F011         	goto	l4526
  4540   00225E                     u3560:
  4541   00225E  C01B  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4542   002262  C01C  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4543   002266  30DF               	rrcf	223,w,c
  4544   002268  32E8               	rrcf	wreg,f,c
  4545   00226A  32E8               	rrcf	wreg,f,c
  4546   00226C  0B07               	andlw	7
  4547   00226E  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  4548   002270  0E08               	movlw	8
  4549   002272  601E               	cpfslt	??_gpio_pin_write_logic^0,c
  4550   002274  EF3E  F011         	goto	u3571
  4551   002278  EF40  F011         	goto	u3570
  4552   00227C                     u3571:
  4553   00227C  EF4F  F011         	goto	l4526
  4554   002280                     u3570:
  4555   002280  C01B  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4556   002284  C01C  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4557   002288  50DF               	movf	223,w,c
  4558   00228A  0B07               	andlw	7
  4559   00228C  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  4560   00228E  0E04               	movlw	4
  4561   002290  641E               	cpfsgt	??_gpio_pin_write_logic^0,c
  4562   002292  EF4D  F011         	goto	u3581
  4563   002296  EF4F  F011         	goto	u3580
  4564   00229A                     u3581:
  4565   00229A  EFB2  F011         	goto	l4534
  4566   00229E                     u3580:
  4567   00229E                     l4526:
  4568                           
  4569                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  4570   00229E  0E00               	movlw	0
  4571   0022A0  6E24               	movwf	gpio_pin_write_logic@ret^0,c
  4572                           
  4573                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  4574   0022A2  EFC7  F011         	goto	l4536
  4575   0022A6                     l4528:
  4576                           
  4577                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  4578   0022A6  C01B  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4579   0022AA  C01C  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4580   0022AE  30DF               	rrcf	223,w,c
  4581   0022B0  32E8               	rrcf	wreg,f,c
  4582   0022B2  32E8               	rrcf	wreg,f,c
  4583   0022B4  0B07               	andlw	7
  4584   0022B6  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  4585   0022B8  0E01               	movlw	1
  4586   0022BA  6E1F               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4587   0022BC  2A1E               	incf	??_gpio_pin_write_logic^0,f,c
  4588   0022BE  EF63  F011         	goto	u3594
  4589   0022C2                     u3595:
  4590   0022C2  90D8               	bcf	status,0,c
  4591   0022C4  361F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4592   0022C6                     u3594:
  4593   0022C6  2E1E               	decfsz	??_gpio_pin_write_logic^0,f,c
  4594   0022C8  EF61  F011         	goto	u3595
  4595   0022CC  C01B  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4596   0022D0  C01C  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4597   0022D4  50DF               	movf	223,w,c
  4598   0022D6  0B07               	andlw	7
  4599   0022D8  6E20               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4600   0022DA  5020               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4601   0022DC  0D02               	mullw	2
  4602   0022DE  0EBF               	movlw	low _lat_registers
  4603   0022E0  24F3               	addwf	243,w,c
  4604   0022E2  6ED9               	movwf	fsr2l,c
  4605   0022E4  0E00               	movlw	high _lat_registers
  4606   0022E6  20F4               	addwfc	prodh,w,c
  4607   0022E8  6EDA               	movwf	fsr2h,c
  4608   0022EA  CFDE F021          	movff	postinc2,??_gpio_pin_write_logic+3
  4609   0022EE  CFDD F022          	movff	postdec2,??_gpio_pin_write_logic+4
  4610   0022F2  C021  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4611   0022F6  C022  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4612   0022FA  501F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4613   0022FC  12DF               	iorwf	indf2,f,c
  4614                           
  4615                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  4616   0022FE  EFC7  F011         	goto	l4536
  4617   002302                     l4530:
  4618                           
  4619                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  4620   002302  C01B  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4621   002306  C01C  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4622   00230A  30DF               	rrcf	223,w,c
  4623   00230C  32E8               	rrcf	wreg,f,c
  4624   00230E  32E8               	rrcf	wreg,f,c
  4625   002310  0B07               	andlw	7
  4626   002312  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  4627   002314  0E01               	movlw	1
  4628   002316  6E1F               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4629   002318  2A1E               	incf	??_gpio_pin_write_logic^0,f,c
  4630   00231A  EF91  F011         	goto	u3604
  4631   00231E                     u3605:
  4632   00231E  90D8               	bcf	status,0,c
  4633   002320  361F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4634   002322                     u3604:
  4635   002322  2E1E               	decfsz	??_gpio_pin_write_logic^0,f,c
  4636   002324  EF8F  F011         	goto	u3605
  4637   002328  501F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4638   00232A  0AFF               	xorlw	255
  4639   00232C  6E20               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4640   00232E  C01B  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4641   002332  C01C  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4642   002336  50DF               	movf	223,w,c
  4643   002338  0B07               	andlw	7
  4644   00233A  6E21               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4645   00233C  5021               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4646   00233E  0D02               	mullw	2
  4647   002340  0EBF               	movlw	low _lat_registers
  4648   002342  24F3               	addwf	243,w,c
  4649   002344  6ED9               	movwf	fsr2l,c
  4650   002346  0E00               	movlw	high _lat_registers
  4651   002348  20F4               	addwfc	prodh,w,c
  4652   00234A  6EDA               	movwf	fsr2h,c
  4653   00234C  CFDE F022          	movff	postinc2,??_gpio_pin_write_logic+4
  4654   002350  CFDD F023          	movff	postdec2,??_gpio_pin_write_logic+5
  4655   002354  C022  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4656   002358  C023  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4657   00235C  5020               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4658   00235E  16DF               	andwf	indf2,f,c
  4659                           
  4660                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  4661   002360  EFC7  F011         	goto	l4536
  4662   002364                     l4534:
  4663   002364  501D               	movf	gpio_pin_write_logic@logic^0,w,c
  4664   002366  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  4665   002368  6A1F               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4666                           
  4667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4668                           ; Switch size 1, requested type "simple"
  4669                           ; Number of cases is 1, Range of values is 0 to 0
  4670                           ; switch strategies available:
  4671                           ; Name         Instructions Cycles
  4672                           ; simple_byte            4     3 (average)
  4673                           ;	Chosen strategy is simple_byte
  4674   00236A  501F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4675   00236C  0A00               	xorlw	0	; case 0
  4676   00236E  B4D8               	btfsc	status,2,c
  4677   002370  EFBC  F011         	goto	l7560
  4678   002374  EF4F  F011         	goto	l4526
  4679   002378                     l7560:
  4680                           
  4681                           ; Switch size 1, requested type "simple"
  4682                           ; Number of cases is 2, Range of values is 0 to 1
  4683                           ; switch strategies available:
  4684                           ; Name         Instructions Cycles
  4685                           ; simple_byte            7     4 (average)
  4686                           ;	Chosen strategy is simple_byte
  4687   002378  501E               	movf	??_gpio_pin_write_logic^0,w,c
  4688   00237A  0A00               	xorlw	0	; case 0
  4689   00237C  B4D8               	btfsc	status,2,c
  4690   00237E  EF81  F011         	goto	l4530
  4691   002382  0A01               	xorlw	1	; case 1
  4692   002384  B4D8               	btfsc	status,2,c
  4693   002386  EF53  F011         	goto	l4528
  4694   00238A  EF4F  F011         	goto	l4526
  4695   00238E                     l4536:
  4696                           
  4697                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  4698   00238E  5024               	movf	gpio_pin_write_logic@ret^0,w,c
  4699   002390  0012               	return		;funcret
  4700   002392                     __end_of_gpio_pin_write_logic:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _gpio_pin_direction_initialize *****************
  4704 ;; Defined at:
  4705 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  pin_config      2   26[COMRAM] PTR const struct .
  4708 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4709 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  ret             1   34[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      unsigned char 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        9 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 8
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_gpio_pin_initialize
  4732 ;;		_button_initialize
  4733 ;;		_keypad_initialize
  4734 ;;		_Interrupt_INTx_Pin_Init
  4735 ;;		_Interrupt_RBx_Pin_Init
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text29
  4740   0020E6                     __ptext29:
  4741                           	callstack 0
  4742   0020E6                     _gpio_pin_direction_initialize:
  4743                           	callstack 18
  4744   0020E6                     
  4745                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  4746   0020E6  0E01               	movlw	1
  4747   0020E8  6E23               	movwf	gpio_pin_direction_initialize@ret^0,c
  4748   0020EA                     
  4749                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4750   0020EA  501B               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  4751   0020EC  101C               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  4752   0020EE  B4D8               	btfsc	status,2,c
  4753   0020F0  EF7C  F010         	goto	u3761
  4754   0020F4  EF7E  F010         	goto	u3760
  4755   0020F8                     u3761:
  4756   0020F8  EF9E  F010         	goto	l4650
  4757   0020FC                     u3760:
  4758   0020FC  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4759   002100  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4760   002104  30DF               	rrcf	223,w,c
  4761   002106  32E8               	rrcf	wreg,f,c
  4762   002108  32E8               	rrcf	wreg,f,c
  4763   00210A  0B07               	andlw	7
  4764   00210C  6E1D               	movwf	??_gpio_pin_direction_initialize^0,c
  4765   00210E  0E08               	movlw	8
  4766   002110  601D               	cpfslt	??_gpio_pin_direction_initialize^0,c
  4767   002112  EF8D  F010         	goto	u3771
  4768   002116  EF8F  F010         	goto	u3770
  4769   00211A                     u3771:
  4770   00211A  EF9E  F010         	goto	l4650
  4771   00211E                     u3770:
  4772   00211E  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4773   002122  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4774   002126  50DF               	movf	223,w,c
  4775   002128  0B07               	andlw	7
  4776   00212A  6E1D               	movwf	??_gpio_pin_direction_initialize^0,c
  4777   00212C  0E04               	movlw	4
  4778   00212E  641D               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4779   002130  EF9C  F010         	goto	u3781
  4780   002134  EF9E  F010         	goto	u3780
  4781   002138                     u3781:
  4782   002138  EF01  F011         	goto	l4658
  4783   00213C                     u3780:
  4784   00213C                     l4650:
  4785                           
  4786                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  4787   00213C  0E00               	movlw	0
  4788   00213E  6E23               	movwf	gpio_pin_direction_initialize@ret^0,c
  4789                           
  4790                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  4791   002140  EF22  F011         	goto	l4660
  4792   002144                     l4652:
  4793                           
  4794                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  4795   002144  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4796   002148  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4797   00214C  30DF               	rrcf	223,w,c
  4798   00214E  32E8               	rrcf	wreg,f,c
  4799   002150  32E8               	rrcf	wreg,f,c
  4800   002152  0B07               	andlw	7
  4801   002154  6E1D               	movwf	??_gpio_pin_direction_initialize^0,c
  4802   002156  0E01               	movlw	1
  4803   002158  6E1E               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4804   00215A  2A1D               	incf	??_gpio_pin_direction_initialize^0,f,c
  4805   00215C  EFB2  F010         	goto	u3794
  4806   002160                     u3795:
  4807   002160  90D8               	bcf	status,0,c
  4808   002162  361E               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4809   002164                     u3794:
  4810   002164  2E1D               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4811   002166  EFB0  F010         	goto	u3795
  4812   00216A  501E               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4813   00216C  0AFF               	xorlw	255
  4814   00216E  6E1F               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4815   002170  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4816   002174  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4817   002178  50DF               	movf	223,w,c
  4818   00217A  0B07               	andlw	7
  4819   00217C  6E20               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4820   00217E  5020               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4821   002180  0D02               	mullw	2
  4822   002182  0EC9               	movlw	low _tris_registers
  4823   002184  24F3               	addwf	243,w,c
  4824   002186  6ED9               	movwf	fsr2l,c
  4825   002188  0E00               	movlw	high _tris_registers
  4826   00218A  20F4               	addwfc	prodh,w,c
  4827   00218C  6EDA               	movwf	fsr2h,c
  4828   00218E  CFDE F021          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4829   002192  CFDD F022          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4830   002196  C021  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4831   00219A  C022  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4832   00219E  501F               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4833   0021A0  16DF               	andwf	indf2,f,c
  4834                           
  4835                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  4836   0021A2  EF22  F011         	goto	l4660
  4837   0021A6                     l4654:
  4838                           
  4839                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  4840   0021A6  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4841   0021AA  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4842   0021AE  30DF               	rrcf	223,w,c
  4843   0021B0  32E8               	rrcf	wreg,f,c
  4844   0021B2  32E8               	rrcf	wreg,f,c
  4845   0021B4  0B07               	andlw	7
  4846   0021B6  6E1D               	movwf	??_gpio_pin_direction_initialize^0,c
  4847   0021B8  0E01               	movlw	1
  4848   0021BA  6E1E               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4849   0021BC  2A1D               	incf	??_gpio_pin_direction_initialize^0,f,c
  4850   0021BE  EFE3  F010         	goto	u3804
  4851   0021C2                     u3805:
  4852   0021C2  90D8               	bcf	status,0,c
  4853   0021C4  361E               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4854   0021C6                     u3804:
  4855   0021C6  2E1D               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4856   0021C8  EFE1  F010         	goto	u3805
  4857   0021CC  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4858   0021D0  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4859   0021D4  50DF               	movf	223,w,c
  4860   0021D6  0B07               	andlw	7
  4861   0021D8  6E1F               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4862   0021DA  501F               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4863   0021DC  0D02               	mullw	2
  4864   0021DE  0EC9               	movlw	low _tris_registers
  4865   0021E0  24F3               	addwf	243,w,c
  4866   0021E2  6ED9               	movwf	fsr2l,c
  4867   0021E4  0E00               	movlw	high _tris_registers
  4868   0021E6  20F4               	addwfc	prodh,w,c
  4869   0021E8  6EDA               	movwf	fsr2h,c
  4870   0021EA  CFDE F020          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4871   0021EE  CFDD F021          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4872   0021F2  C020  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4873   0021F6  C021  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4874   0021FA  501E               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4875   0021FC  12DF               	iorwf	indf2,f,c
  4876                           
  4877                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  4878   0021FE  EF22  F011         	goto	l4660
  4879   002202                     l4658:
  4880   002202  C01B  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4881   002206  C01C  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4882   00220A  BCDF               	btfsc	indf2,6,c
  4883   00220C  EF0A  F011         	goto	u3811
  4884   002210  EF0D  F011         	goto	u3810
  4885   002214                     u3811:
  4886   002214  0E01               	movlw	1
  4887   002216  EF0E  F011         	goto	u3820
  4888   00221A                     u3810:
  4889   00221A  0E00               	movlw	0
  4890   00221C                     u3820:
  4891   00221C  6E1D               	movwf	??_gpio_pin_direction_initialize^0,c
  4892   00221E  6A1E               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4893                           
  4894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4895                           ; Switch size 1, requested type "simple"
  4896                           ; Number of cases is 1, Range of values is 0 to 0
  4897                           ; switch strategies available:
  4898                           ; Name         Instructions Cycles
  4899                           ; simple_byte            4     3 (average)
  4900                           ;	Chosen strategy is simple_byte
  4901   002220  501E               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4902   002222  0A00               	xorlw	0	; case 0
  4903   002224  B4D8               	btfsc	status,2,c
  4904   002226  EF17  F011         	goto	l7562
  4905   00222A  EF9E  F010         	goto	l4650
  4906   00222E                     l7562:
  4907                           
  4908                           ; Switch size 1, requested type "simple"
  4909                           ; Number of cases is 2, Range of values is 0 to 1
  4910                           ; switch strategies available:
  4911                           ; Name         Instructions Cycles
  4912                           ; simple_byte            7     4 (average)
  4913                           ;	Chosen strategy is simple_byte
  4914   00222E  501D               	movf	??_gpio_pin_direction_initialize^0,w,c
  4915   002230  0A00               	xorlw	0	; case 0
  4916   002232  B4D8               	btfsc	status,2,c
  4917   002234  EFA2  F010         	goto	l4652
  4918   002238  0A01               	xorlw	1	; case 1
  4919   00223A  B4D8               	btfsc	status,2,c
  4920   00223C  EFD3  F010         	goto	l4654
  4921   002240  EF9E  F010         	goto	l4650
  4922   002244                     l4660:
  4923                           
  4924                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  4925   002244  5023               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4926   002246  0012               	return		;funcret
  4927   002248                     __end_of_gpio_pin_direction_initialize:
  4928                           	callstack 0
  4929                           
  4930 ;; *************** function _ADC_Init *****************
  4931 ;; Defined at:
  4932 ;;		line 23 in file "MCAL_Layer/ADC/hal_adc.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  _adc            2   30[COMRAM] PTR const struct .
  4935 ;;		 -> adc_1(7), 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  ret             1   33[COMRAM] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      unsigned char 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;Total ram usage:        4 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 9
  4954 ;; This function calls:
  4955 ;;		_adc_input_channel_port_configure
  4956 ;;		_configure_voltage_reference
  4957 ;;		_select_result_format
  4958 ;; This function is called by:
  4959 ;;		_application_initialize
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text30
  4964   0025C6                     __ptext30:
  4965                           	callstack 0
  4966   0025C6                     _ADC_Init:
  4967                           	callstack 20
  4968   0025C6                     
  4969                           ;MCAL_Layer/ADC/hal_adc.c: 24:       Std_ReturnType ret=(Std_ReturnType)0x01;
  4970   0025C6  0E01               	movlw	1
  4971   0025C8  6E22               	movwf	ADC_Init@ret^0,c
  4972   0025CA                     
  4973                           ;MCAL_Layer/ADC/hal_adc.c: 25:     if(_adc==((void*)0)){
  4974   0025CA  501F               	movf	ADC_Init@_adc^0,w,c
  4975   0025CC  1020               	iorwf	(ADC_Init@_adc+1)^0,w,c
  4976   0025CE  A4D8               	btfss	status,2,c
  4977   0025D0  EFEC  F012         	goto	u4311
  4978   0025D4  EFEE  F012         	goto	u4310
  4979   0025D8                     u4311:
  4980   0025D8  EFF2  F012         	goto	l373
  4981   0025DC                     u4310:
  4982   0025DC                     
  4983                           ;MCAL_Layer/ADC/hal_adc.c: 26:         ret=(Std_ReturnType)0x00;
  4984   0025DC  0E00               	movlw	0
  4985   0025DE  6E22               	movwf	ADC_Init@ret^0,c
  4986                           
  4987                           ;MCAL_Layer/ADC/hal_adc.c: 27:     }
  4988   0025E0  EF63  F013         	goto	l5130
  4989   0025E4                     l373:
  4990                           
  4991                           ;MCAL_Layer/ADC/hal_adc.c: 30:         ((*((volatile ADCON0_t *)(0xFC2))).ADON=0);
  4992   0025E4  90C2               	bcf	194,0,c	;volatile
  4993   0025E6                     
  4994                           ;MCAL_Layer/ADC/hal_adc.c: 32:         (*((volatile ADCON2_t *)(0xFC0))).ACQT = _adc->ac
      +                          quisition_time;
  4995   0025E6  EE20 F003          	lfsr	2,3
  4996   0025EA  501F               	movf	ADC_Init@_adc^0,w,c
  4997   0025EC  26D9               	addwf	fsr2l,f,c
  4998   0025EE  5020               	movf	(ADC_Init@_adc+1)^0,w,c
  4999   0025F0  22DA               	addwfc	fsr2h,f,c
  5000   0025F2  50DF               	movf	indf2,w,c
  5001   0025F4  6E21               	movwf	??_ADC_Init^0,c
  5002   0025F6  4621               	rlncf	??_ADC_Init^0,f,c
  5003   0025F8  4621               	rlncf	??_ADC_Init^0,f,c
  5004   0025FA  4621               	rlncf	??_ADC_Init^0,f,c
  5005   0025FC  50C0               	movf	192,w,c	;volatile
  5006   0025FE  1821               	xorwf	??_ADC_Init^0,w,c
  5007   002600  0BC7               	andlw	-57
  5008   002602  1821               	xorwf	??_ADC_Init^0,w,c
  5009   002604  6EC0               	movwf	192,c	;volatile
  5010                           
  5011                           ;MCAL_Layer/ADC/hal_adc.c: 34:         (*((volatile ADCON2_t *)(0xFC0))).ADCS = _adc->co
      +                          nversion_clock;
  5012   002606  EE20 F004          	lfsr	2,4
  5013   00260A  501F               	movf	ADC_Init@_adc^0,w,c
  5014   00260C  26D9               	addwf	fsr2l,f,c
  5015   00260E  5020               	movf	(ADC_Init@_adc+1)^0,w,c
  5016   002610  22DA               	addwfc	fsr2h,f,c
  5017   002612  50DF               	movf	indf2,w,c
  5018   002614  6E21               	movwf	??_ADC_Init^0,c
  5019   002616  50C0               	movf	192,w,c	;volatile
  5020   002618  1821               	xorwf	??_ADC_Init^0,w,c
  5021   00261A  0BF8               	andlw	-8
  5022   00261C  1821               	xorwf	??_ADC_Init^0,w,c
  5023   00261E  6EC0               	movwf	192,c	;volatile
  5024                           
  5025                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (*((volatile ADCON0_t *)(0xFC2))).CHS =_adc->adc_
      +                          channel;
  5026   002620  EE20 F005          	lfsr	2,5
  5027   002624  501F               	movf	ADC_Init@_adc^0,w,c
  5028   002626  26D9               	addwf	fsr2l,f,c
  5029   002628  5020               	movf	(ADC_Init@_adc+1)^0,w,c
  5030   00262A  22DA               	addwfc	fsr2h,f,c
  5031   00262C  50DF               	movf	indf2,w,c
  5032   00262E  6E21               	movwf	??_ADC_Init^0,c
  5033   002630  4621               	rlncf	??_ADC_Init^0,f,c
  5034   002632  4621               	rlncf	??_ADC_Init^0,f,c
  5035   002634  50C2               	movf	194,w,c	;volatile
  5036   002636  1821               	xorwf	??_ADC_Init^0,w,c
  5037   002638  0BC3               	andlw	-61
  5038   00263A  1821               	xorwf	??_ADC_Init^0,w,c
  5039   00263C  6EC2               	movwf	194,c	;volatile
  5040   00263E                     
  5041                           ;MCAL_Layer/ADC/hal_adc.c: 37:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  5042   00263E  EE20 F005          	lfsr	2,5
  5043   002642  501F               	movf	ADC_Init@_adc^0,w,c
  5044   002644  26D9               	addwf	fsr2l,f,c
  5045   002646  5020               	movf	(ADC_Init@_adc+1)^0,w,c
  5046   002648  22DA               	addwfc	fsr2h,f,c
  5047   00264A  50DF               	movf	indf2,w,c
  5048   00264C  EC40  F014         	call	_adc_input_channel_port_configure
  5049   002650                     
  5050                           ;MCAL_Layer/ADC/hal_adc.c: 40:             ADC_InterruptHandler = _adc->ADC_InterruptHan
      +                          dler;
  5051   002650  C01F  FFD9         	movff	ADC_Init@_adc,fsr2l
  5052   002654  C020  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  5053   002658  CFDE F051          	movff	postinc2,_ADC_InterruptHandler
  5054   00265C  CFDD F052          	movff	postdec2,_ADC_InterruptHandler+1
  5055   002660                     
  5056                           ;MCAL_Layer/ADC/hal_adc.c: 45:             ((*((volatile PIE1_t *)(0xF9D))).ADIE=1);
  5057   002660  8C9D               	bsf	157,6,c	;volatile
  5058   002662                     
  5059                           ;MCAL_Layer/ADC/hal_adc.c: 46:             ((*((volatile PIR1_t *)(0xF9E))).ADIF=0);
  5060   002662  9C9E               	bcf	158,6,c	;volatile
  5061   002664                     
  5062                           ;MCAL_Layer/ADC/hal_adc.c: 48:                 ((*((volatile RCON_t *)(0xFD0))).IPEN=1);
  5063   002664  8ED0               	bsf	208,7,c	;volatile
  5064   002666                     
  5065                           ;MCAL_Layer/ADC/hal_adc.c: 49:                 if(INTERRUPT_HIGH_PRIORITY == _adc->prior
      +                          ity){
  5066   002666  EE20 F002          	lfsr	2,2
  5067   00266A  501F               	movf	ADC_Init@_adc^0,w,c
  5068   00266C  26D9               	addwf	fsr2l,f,c
  5069   00266E  5020               	movf	(ADC_Init@_adc+1)^0,w,c
  5070   002670  22DA               	addwfc	fsr2h,f,c
  5071   002672  04DE               	decf	postinc2,w,c
  5072   002674  A4D8               	btfss	status,2,c
  5073   002676  EF3F  F013         	goto	u4321
  5074   00267A  EF41  F013         	goto	u4320
  5075   00267E                     u4321:
  5076   00267E  EF45  F013         	goto	l5122
  5077   002682                     u4320:
  5078   002682                     
  5079                           ;MCAL_Layer/ADC/hal_adc.c: 50:                     ((*((volatile IPR1_t *)(0xF9F))).ADIP
      +                          =1);
  5080   002682  8C9F               	bsf	159,6,c	;volatile
  5081                           
  5082                           ;MCAL_Layer/ADC/hal_adc.c: 51:                     ((*((volatile INTCON_t *)(0xFF2))).GI
      +                          EH = 1);
  5083   002684  8EF2               	bsf	242,7,c	;volatile
  5084                           
  5085                           ;MCAL_Layer/ADC/hal_adc.c: 52:                 }
  5086   002686  EF56  F013         	goto	l5126
  5087   00268A                     l5122:
  5088   00268A  EE20 F002          	lfsr	2,2
  5089   00268E  501F               	movf	ADC_Init@_adc^0,w,c
  5090   002690  26D9               	addwf	fsr2l,f,c
  5091   002692  5020               	movf	(ADC_Init@_adc+1)^0,w,c
  5092   002694  22DA               	addwfc	fsr2h,f,c
  5093   002696  50DF               	movf	indf2,w,c
  5094   002698  A4D8               	btfss	status,2,c
  5095   00269A  EF51  F013         	goto	u4331
  5096   00269E  EF53  F013         	goto	u4330
  5097   0026A2                     u4331:
  5098   0026A2  EF56  F013         	goto	l5126
  5099   0026A6                     u4330:
  5100   0026A6                     
  5101                           ;MCAL_Layer/ADC/hal_adc.c: 54:                     ((*((volatile IPR1_t *)(0xF9F))).ADIP
      +                          =0);
  5102   0026A6  9C9F               	bcf	159,6,c	;volatile
  5103                           
  5104                           ;MCAL_Layer/ADC/hal_adc.c: 55:                     ((*((volatile INTCON_t *)(0xFF2))).GI
      +                          EH = 1);
  5105   0026A8  8EF2               	bsf	242,7,c	;volatile
  5106                           
  5107                           ;MCAL_Layer/ADC/hal_adc.c: 56:                     ((*((volatile INTCON_t *)(0xFF2))).GI
      +                          EL = 1);
  5108   0026AA  8CF2               	bsf	242,6,c	;volatile
  5109   0026AC                     l5126:
  5110                           
  5111                           ;MCAL_Layer/ADC/hal_adc.c: 62:         select_result_format(_adc);
  5112   0026AC  C01F  F01B         	movff	ADC_Init@_adc,select_result_format@_adc
  5113   0026B0  C020  F01C         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  5114   0026B4  EC04  F019         	call	_select_result_format	;wreg free
  5115                           
  5116                           ;MCAL_Layer/ADC/hal_adc.c: 64:         configure_voltage_reference(_adc);
  5117   0026B8  C01F  F01B         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5118   0026BC  C020  F01C         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  5119   0026C0  ECAA  F018         	call	_configure_voltage_reference	;wreg free
  5120   0026C4                     
  5121                           ;MCAL_Layer/ADC/hal_adc.c: 66:         ((*((volatile ADCON0_t *)(0xFC2))).ADON=1);
  5122   0026C4  80C2               	bsf	194,0,c	;volatile
  5123   0026C6                     l5130:
  5124                           
  5125                           ;MCAL_Layer/ADC/hal_adc.c: 68:     return ret;
  5126   0026C6  5022               	movf	ADC_Init@ret^0,w,c
  5127   0026C8  0012               	return		;funcret
  5128   0026CA                     __end_of_ADC_Init:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function _select_result_format *****************
  5132 ;; Defined at:
  5133 ;;		line 253 in file "MCAL_Layer/ADC/hal_adc.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  _adc            2   26[COMRAM] PTR const struct .
  5136 ;;		 -> adc_1(7), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;Total ram usage:        4 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 8
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_ADC_Init
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text31
  5163   003208                     __ptext31:
  5164                           	callstack 0
  5165   003208                     _select_result_format:
  5166                           	callstack 20
  5167   003208                     
  5168                           ;MCAL_Layer/ADC/hal_adc.c: 254:     switch (_adc->result_format){
  5169   003208  EF0C  F019         	goto	l4892
  5170   00320C                     l451:
  5171   00320C  9EC0               	bcf	192,7,c	;volatile
  5172   00320E  EF2F  F019         	goto	l455
  5173   003212                     l453:
  5174   003212  8EC0               	bsf	192,7,c	;volatile
  5175   003214  EF2F  F019         	goto	l455
  5176   003218                     l4892:
  5177   003218  EE20 F006          	lfsr	2,6
  5178   00321C  501B               	movf	select_result_format@_adc^0,w,c
  5179   00321E  26D9               	addwf	fsr2l,f,c
  5180   003220  501C               	movf	(select_result_format@_adc+1)^0,w,c
  5181   003222  22DA               	addwfc	fsr2h,f,c
  5182   003224  B2DF               	btfsc	indf2,1,c
  5183   003226  EF17  F019         	goto	u4051
  5184   00322A  EF1A  F019         	goto	u4050
  5185   00322E                     u4051:
  5186   00322E  0E01               	movlw	1
  5187   003230  EF1B  F019         	goto	u4060
  5188   003234                     u4050:
  5189   003234  0E00               	movlw	0
  5190   003236                     u4060:
  5191   003236  6E1D               	movwf	??_select_result_format^0,c
  5192   003238  6A1E               	clrf	(??_select_result_format+1)^0,c
  5193                           
  5194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5195                           ; Switch size 1, requested type "simple"
  5196                           ; Number of cases is 1, Range of values is 0 to 0
  5197                           ; switch strategies available:
  5198                           ; Name         Instructions Cycles
  5199                           ; simple_byte            4     3 (average)
  5200                           ;	Chosen strategy is simple_byte
  5201   00323A  501E               	movf	(??_select_result_format+1)^0,w,c
  5202   00323C  0A00               	xorlw	0	; case 0
  5203   00323E  B4D8               	btfsc	status,2,c
  5204   003240  EF24  F019         	goto	l7564
  5205   003244  EF09  F019         	goto	l453
  5206   003248                     l7564:
  5207                           
  5208                           ; Switch size 1, requested type "simple"
  5209                           ; Number of cases is 2, Range of values is 0 to 1
  5210                           ; switch strategies available:
  5211                           ; Name         Instructions Cycles
  5212                           ; simple_byte            7     4 (average)
  5213                           ;	Chosen strategy is simple_byte
  5214   003248  501D               	movf	??_select_result_format^0,w,c
  5215   00324A  0A00               	xorlw	0	; case 0
  5216   00324C  B4D8               	btfsc	status,2,c
  5217   00324E  EF06  F019         	goto	l451
  5218   003252  0A01               	xorlw	1	; case 1
  5219   003254  B4D8               	btfsc	status,2,c
  5220   003256  EF09  F019         	goto	l453
  5221   00325A  EF09  F019         	goto	l453
  5222   00325E                     l455:
  5223   00325E  0012               	return		;funcret
  5224   003260                     __end_of_select_result_format:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _configure_voltage_reference *****************
  5228 ;; Defined at:
  5229 ;;		line 260 in file "MCAL_Layer/ADC/hal_adc.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  _adc            2   26[COMRAM] PTR const struct .
  5232 ;;		 -> adc_1(7), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;Total ram usage:        4 bytes
  5249 ;; Hardware stack levels used: 1
  5250 ;; Hardware stack levels required when called: 8
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_ADC_Init
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text32
  5259   003154                     __ptext32:
  5260                           	callstack 0
  5261   003154                     _configure_voltage_reference:
  5262                           	callstack 20
  5263   003154                     
  5264                           ;MCAL_Layer/ADC/hal_adc.c: 261:     switch (_adc->voltage_reference){
  5265   003154  EFB4  F018         	goto	l4908
  5266   003158                     l4900:
  5267   003158  0E30               	movlw	48
  5268   00315A  12C1               	iorwf	193,f,c	;volatile
  5269   00315C  EFD7  F018         	goto	l463
  5270   003160                     l4902:
  5271   003160  0ECF               	movlw	-49
  5272   003162  16C1               	andwf	193,f,c	;volatile
  5273   003164  EFD7  F018         	goto	l463
  5274   003168                     l4908:
  5275   003168  EE20 F006          	lfsr	2,6
  5276   00316C  501B               	movf	configure_voltage_reference@_adc^0,w,c
  5277   00316E  26D9               	addwf	fsr2l,f,c
  5278   003170  501C               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5279   003172  22DA               	addwfc	fsr2h,f,c
  5280   003174  B0DF               	btfsc	indf2,0,c
  5281   003176  EFBF  F018         	goto	u4071
  5282   00317A  EFC2  F018         	goto	u4070
  5283   00317E                     u4071:
  5284   00317E  0E01               	movlw	1
  5285   003180  EFC3  F018         	goto	u4080
  5286   003184                     u4070:
  5287   003184  0E00               	movlw	0
  5288   003186                     u4080:
  5289   003186  6E1D               	movwf	??_configure_voltage_reference^0,c
  5290   003188  6A1E               	clrf	(??_configure_voltage_reference+1)^0,c
  5291                           
  5292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5293                           ; Switch size 1, requested type "simple"
  5294                           ; Number of cases is 1, Range of values is 0 to 0
  5295                           ; switch strategies available:
  5296                           ; Name         Instructions Cycles
  5297                           ; simple_byte            4     3 (average)
  5298                           ;	Chosen strategy is simple_byte
  5299   00318A  501E               	movf	(??_configure_voltage_reference+1)^0,w,c
  5300   00318C  0A00               	xorlw	0	; case 0
  5301   00318E  B4D8               	btfsc	status,2,c
  5302   003190  EFCC  F018         	goto	l7566
  5303   003194  EFB0  F018         	goto	l4902
  5304   003198                     l7566:
  5305                           
  5306                           ; Switch size 1, requested type "simple"
  5307                           ; Number of cases is 2, Range of values is 0 to 1
  5308                           ; switch strategies available:
  5309                           ; Name         Instructions Cycles
  5310                           ; simple_byte            7     4 (average)
  5311                           ;	Chosen strategy is simple_byte
  5312   003198  501D               	movf	??_configure_voltage_reference^0,w,c
  5313   00319A  0A00               	xorlw	0	; case 0
  5314   00319C  B4D8               	btfsc	status,2,c
  5315   00319E  EFB0  F018         	goto	l4902
  5316   0031A2  0A01               	xorlw	1	; case 1
  5317   0031A4  B4D8               	btfsc	status,2,c
  5318   0031A6  EFAC  F018         	goto	l4900
  5319   0031AA  EFB0  F018         	goto	l4902
  5320   0031AE                     l463:
  5321   0031AE  0012               	return		;funcret
  5322   0031B0                     __end_of_configure_voltage_reference:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function ___xxtofl *****************
  5326 ;; Defined at:
  5327 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  sign            1    wreg     unsigned char 
  5330 ;;  val             4   26[COMRAM] long 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  sign            1   34[COMRAM] unsigned char 
  5333 ;;  arg             4   36[COMRAM] unsigned long 
  5334 ;;  exp             1   35[COMRAM] unsigned char 
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  4   26[COMRAM] unsigned char 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;Total ram usage:       14 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 8
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_main
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text33
  5359   001A96                     __ptext33:
  5360                           	callstack 0
  5361   001A96                     ___xxtofl:
  5362                           	callstack 22
  5363                           
  5364                           ;incstack = 0
  5365                           ;___xxtofl@sign stored from wreg
  5366   001A96  6E23               	movwf	___xxtofl@sign^0,c
  5367   001A98  5023               	movf	___xxtofl@sign^0,w,c
  5368   001A9A  B4D8               	btfsc	status,2,c
  5369   001A9C  EF52  F00D         	goto	u5081
  5370   001AA0  EF54  F00D         	goto	u5080
  5371   001AA4                     u5081:
  5372   001AA4  EF76  F00D         	goto	l1751
  5373   001AA8                     u5080:
  5374   001AA8  BE1E               	btfsc	(___xxtofl@val+3)^0,7,c
  5375   001AAA  EF5B  F00D         	goto	u5090
  5376   001AAE  EF59  F00D         	goto	u5091
  5377   001AB2                     u5091:
  5378   001AB2  EF76  F00D         	goto	l1751
  5379   001AB6                     u5090:
  5380   001AB6  C01B  F01F         	movff	___xxtofl@val,??___xxtofl
  5381   001ABA  C01C  F020         	movff	___xxtofl@val+1,??___xxtofl+1
  5382   001ABE  C01D  F021         	movff	___xxtofl@val+2,??___xxtofl+2
  5383   001AC2  C01E  F022         	movff	___xxtofl@val+3,??___xxtofl+3
  5384   001AC6  1E1F               	comf	??___xxtofl^0,f,c
  5385   001AC8  1E20               	comf	(??___xxtofl+1)^0,f,c
  5386   001ACA  1E21               	comf	(??___xxtofl+2)^0,f,c
  5387   001ACC  1E22               	comf	(??___xxtofl+3)^0,f,c
  5388   001ACE  2A1F               	incf	??___xxtofl^0,f,c
  5389   001AD0  0E00               	movlw	0
  5390   001AD2  2220               	addwfc	(??___xxtofl+1)^0,f,c
  5391   001AD4  2221               	addwfc	(??___xxtofl+2)^0,f,c
  5392   001AD6  2222               	addwfc	(??___xxtofl+3)^0,f,c
  5393   001AD8  C01F  F025         	movff	??___xxtofl,___xxtofl@arg
  5394   001ADC  C020  F026         	movff	??___xxtofl+1,___xxtofl@arg+1
  5395   001AE0  C021  F027         	movff	??___xxtofl+2,___xxtofl@arg+2
  5396   001AE4  C022  F028         	movff	??___xxtofl+3,___xxtofl@arg+3
  5397   001AE8  EF7E  F00D         	goto	l5682
  5398   001AEC                     l1751:
  5399   001AEC  C01B  F025         	movff	___xxtofl@val,___xxtofl@arg
  5400   001AF0  C01C  F026         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5401   001AF4  C01D  F027         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5402   001AF8  C01E  F028         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5403   001AFC                     l5682:
  5404   001AFC  501B               	movf	___xxtofl@val^0,w,c
  5405   001AFE  101C               	iorwf	(___xxtofl@val+1)^0,w,c
  5406   001B00  101D               	iorwf	(___xxtofl@val+2)^0,w,c
  5407   001B02  101E               	iorwf	(___xxtofl@val+3)^0,w,c
  5408   001B04  A4D8               	btfss	status,2,c
  5409   001B06  EF87  F00D         	goto	u5101
  5410   001B0A  EF89  F00D         	goto	u5100
  5411   001B0E                     u5101:
  5412   001B0E  EF93  F00D         	goto	l5688
  5413   001B12                     u5100:
  5414   001B12  0E00               	movlw	0
  5415   001B14  6E1B               	movwf	?___xxtofl^0,c
  5416   001B16  0E00               	movlw	0
  5417   001B18  6E1C               	movwf	(?___xxtofl+1)^0,c
  5418   001B1A  0E00               	movlw	0
  5419   001B1C  6E1D               	movwf	(?___xxtofl+2)^0,c
  5420   001B1E  0E00               	movlw	0
  5421   001B20  6E1E               	movwf	(?___xxtofl+3)^0,c
  5422   001B22  EF24  F00E         	goto	l1754
  5423   001B26                     l5688:
  5424   001B26  0E96               	movlw	150
  5425   001B28  6E24               	movwf	___xxtofl@exp^0,c
  5426   001B2A  EF9D  F00D         	goto	l5692
  5427   001B2E                     l5690:
  5428   001B2E  2A24               	incf	___xxtofl@exp^0,f,c
  5429   001B30  90D8               	bcf	status,0,c
  5430   001B32  3228               	rrcf	(___xxtofl@arg+3)^0,f,c
  5431   001B34  3227               	rrcf	(___xxtofl@arg+2)^0,f,c
  5432   001B36  3226               	rrcf	(___xxtofl@arg+1)^0,f,c
  5433   001B38  3225               	rrcf	___xxtofl@arg^0,f,c
  5434   001B3A                     l5692:
  5435   001B3A  0E00               	movlw	0
  5436   001B3C  1425               	andwf	___xxtofl@arg^0,w,c
  5437   001B3E  6E1F               	movwf	??___xxtofl^0,c
  5438   001B40  0E00               	movlw	0
  5439   001B42  1426               	andwf	(___xxtofl@arg+1)^0,w,c
  5440   001B44  6E20               	movwf	(??___xxtofl+1)^0,c
  5441   001B46  0E00               	movlw	0
  5442   001B48  1427               	andwf	(___xxtofl@arg+2)^0,w,c
  5443   001B4A  6E21               	movwf	(??___xxtofl+2)^0,c
  5444   001B4C  0EFE               	movlw	254
  5445   001B4E  1428               	andwf	(___xxtofl@arg+3)^0,w,c
  5446   001B50  6E22               	movwf	(??___xxtofl+3)^0,c
  5447   001B52  501F               	movf	??___xxtofl^0,w,c
  5448   001B54  1020               	iorwf	(??___xxtofl+1)^0,w,c
  5449   001B56  1021               	iorwf	(??___xxtofl+2)^0,w,c
  5450   001B58  1022               	iorwf	(??___xxtofl+3)^0,w,c
  5451   001B5A  A4D8               	btfss	status,2,c
  5452   001B5C  EFB2  F00D         	goto	u5111
  5453   001B60  EFB4  F00D         	goto	u5110
  5454   001B64                     u5111:
  5455   001B64  EF97  F00D         	goto	l5690
  5456   001B68                     u5110:
  5457   001B68  EFC2  F00D         	goto	l1758
  5458   001B6C                     l5694:
  5459   001B6C  2A24               	incf	___xxtofl@exp^0,f,c
  5460   001B6E  0E01               	movlw	1
  5461   001B70  2625               	addwf	___xxtofl@arg^0,f,c
  5462   001B72  0E00               	movlw	0
  5463   001B74  2226               	addwfc	(___xxtofl@arg+1)^0,f,c
  5464   001B76  2227               	addwfc	(___xxtofl@arg+2)^0,f,c
  5465   001B78  2228               	addwfc	(___xxtofl@arg+3)^0,f,c
  5466   001B7A  90D8               	bcf	status,0,c
  5467   001B7C  3228               	rrcf	(___xxtofl@arg+3)^0,f,c
  5468   001B7E  3227               	rrcf	(___xxtofl@arg+2)^0,f,c
  5469   001B80  3226               	rrcf	(___xxtofl@arg+1)^0,f,c
  5470   001B82  3225               	rrcf	___xxtofl@arg^0,f,c
  5471   001B84                     l1758:
  5472   001B84  0E00               	movlw	0
  5473   001B86  1425               	andwf	___xxtofl@arg^0,w,c
  5474   001B88  6E1F               	movwf	??___xxtofl^0,c
  5475   001B8A  0E00               	movlw	0
  5476   001B8C  1426               	andwf	(___xxtofl@arg+1)^0,w,c
  5477   001B8E  6E20               	movwf	(??___xxtofl+1)^0,c
  5478   001B90  0E00               	movlw	0
  5479   001B92  1427               	andwf	(___xxtofl@arg+2)^0,w,c
  5480   001B94  6E21               	movwf	(??___xxtofl+2)^0,c
  5481   001B96  0EFF               	movlw	255
  5482   001B98  1428               	andwf	(___xxtofl@arg+3)^0,w,c
  5483   001B9A  6E22               	movwf	(??___xxtofl+3)^0,c
  5484   001B9C  501F               	movf	??___xxtofl^0,w,c
  5485   001B9E  1020               	iorwf	(??___xxtofl+1)^0,w,c
  5486   001BA0  1021               	iorwf	(??___xxtofl+2)^0,w,c
  5487   001BA2  1022               	iorwf	(??___xxtofl+3)^0,w,c
  5488   001BA4  A4D8               	btfss	status,2,c
  5489   001BA6  EFD7  F00D         	goto	u5121
  5490   001BAA  EFD9  F00D         	goto	u5120
  5491   001BAE                     u5121:
  5492   001BAE  EFB6  F00D         	goto	l5694
  5493   001BB2                     u5120:
  5494   001BB2  EFE1  F00D         	goto	l5702
  5495   001BB6                     l5700:
  5496   001BB6  0624               	decf	___xxtofl@exp^0,f,c
  5497   001BB8  90D8               	bcf	status,0,c
  5498   001BBA  3625               	rlcf	___xxtofl@arg^0,f,c
  5499   001BBC  3626               	rlcf	(___xxtofl@arg+1)^0,f,c
  5500   001BBE  3627               	rlcf	(___xxtofl@arg+2)^0,f,c
  5501   001BC0  3628               	rlcf	(___xxtofl@arg+3)^0,f,c
  5502   001BC2                     l5702:
  5503   001BC2  BE27               	btfsc	(___xxtofl@arg+2)^0,7,c
  5504   001BC4  EFE6  F00D         	goto	u5131
  5505   001BC8  EFE8  F00D         	goto	u5130
  5506   001BCC                     u5131:
  5507   001BCC  EFF0  F00D         	goto	l1765
  5508   001BD0                     u5130:
  5509   001BD0  0E02               	movlw	2
  5510   001BD2  6024               	cpfslt	___xxtofl@exp^0,c
  5511   001BD4  EFEE  F00D         	goto	u5141
  5512   001BD8  EFF0  F00D         	goto	u5140
  5513   001BDC                     u5141:
  5514   001BDC  EFDB  F00D         	goto	l5700
  5515   001BE0                     u5140:
  5516   001BE0                     l1765:
  5517   001BE0  B024               	btfsc	___xxtofl@exp^0,0,c
  5518   001BE2  EFF5  F00D         	goto	u5151
  5519   001BE6  EFF7  F00D         	goto	u5150
  5520   001BEA                     u5151:
  5521   001BEA  EFF8  F00D         	goto	l5708
  5522   001BEE                     u5150:
  5523   001BEE  9E27               	bcf	(___xxtofl@arg+2)^0,7,c
  5524   001BF0                     l5708:
  5525   001BF0  90D8               	bcf	status,0,c
  5526   001BF2  3224               	rrcf	___xxtofl@exp^0,f,c
  5527   001BF4  C024  F01F         	movff	___xxtofl@exp,??___xxtofl
  5528   001BF8  6A20               	clrf	(??___xxtofl+1)^0,c
  5529   001BFA  6A21               	clrf	(??___xxtofl+2)^0,c
  5530   001BFC  6A22               	clrf	(??___xxtofl+3)^0,c
  5531   001BFE  C01F  F022         	movff	??___xxtofl,??___xxtofl+3
  5532   001C02  6A21               	clrf	(??___xxtofl+2)^0,c
  5533   001C04  6A20               	clrf	(??___xxtofl+1)^0,c
  5534   001C06  6A1F               	clrf	??___xxtofl^0,c
  5535   001C08  501F               	movf	??___xxtofl^0,w,c
  5536   001C0A  1225               	iorwf	___xxtofl@arg^0,f,c
  5537   001C0C  5020               	movf	(??___xxtofl+1)^0,w,c
  5538   001C0E  1226               	iorwf	(___xxtofl@arg+1)^0,f,c
  5539   001C10  5021               	movf	(??___xxtofl+2)^0,w,c
  5540   001C12  1227               	iorwf	(___xxtofl@arg+2)^0,f,c
  5541   001C14  5022               	movf	(??___xxtofl+3)^0,w,c
  5542   001C16  1228               	iorwf	(___xxtofl@arg+3)^0,f,c
  5543   001C18  5023               	movf	___xxtofl@sign^0,w,c
  5544   001C1A  B4D8               	btfsc	status,2,c
  5545   001C1C  EF12  F00E         	goto	u5161
  5546   001C20  EF14  F00E         	goto	u5160
  5547   001C24                     u5161:
  5548   001C24  EF1C  F00E         	goto	l5718
  5549   001C28                     u5160:
  5550   001C28  BE1E               	btfsc	(___xxtofl@val+3)^0,7,c
  5551   001C2A  EF1B  F00E         	goto	u5170
  5552   001C2E  EF19  F00E         	goto	u5171
  5553   001C32                     u5171:
  5554   001C32  EF1C  F00E         	goto	l5718
  5555   001C36                     u5170:
  5556   001C36  8E28               	bsf	(___xxtofl@arg+3)^0,7,c
  5557   001C38                     l5718:
  5558   001C38  C025  F01B         	movff	___xxtofl@arg,?___xxtofl
  5559   001C3C  C026  F01C         	movff	___xxtofl@arg+1,?___xxtofl+1
  5560   001C40  C027  F01D         	movff	___xxtofl@arg+2,?___xxtofl+2
  5561   001C44  C028  F01E         	movff	___xxtofl@arg+3,?___xxtofl+3
  5562   001C48                     l1754:
  5563   001C48  0012               	return		;funcret
  5564   001C4A                     __end_of___xxtofl:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function ___fltol *****************
  5568 ;; Defined at:
  5569 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  f1              4   17[BANK0 ] unsigned char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  exp1            1   26[BANK0 ] unsigned char 
  5574 ;;  sign1           1   25[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  4   17[BANK0 ] long 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:       10 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 8
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text34
  5599   0024BE                     __ptext34:
  5600                           	callstack 0
  5601   0024BE                     ___fltol:
  5602                           	callstack 22
  5603   0024BE  0100               	movlb	0	; () banked
  5604   0024C0  35F7               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5605   0024C2  35F8               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5606   0024C4  6FFE               	movwf	___fltol@exp1& (0+255),b
  5607   0024C6  51FE               	movf	___fltol@exp1& (0+255),w,b
  5608   0024C8  A4D8               	btfss	status,2,c
  5609   0024CA  EF69  F012         	goto	u7221
  5610   0024CE  EF6B  F012         	goto	u7220
  5611   0024D2                     u7221:
  5612   0024D2  EF75  F012         	goto	l7272
  5613   0024D6                     u7220:
  5614   0024D6                     l7268:
  5615                           
  5616                           ; BSR set to: 0
  5617   0024D6  0E00               	movlw	0
  5618   0024D8  6FF5               	movwf	?___fltol& (0+255),b
  5619   0024DA  0E00               	movlw	0
  5620   0024DC  6FF6               	movwf	(?___fltol+1)& (0+255),b
  5621   0024DE  0E00               	movlw	0
  5622   0024E0  6FF7               	movwf	(?___fltol+2)& (0+255),b
  5623   0024E2  0E00               	movlw	0
  5624   0024E4  6FF8               	movwf	(?___fltol+3)& (0+255),b
  5625   0024E6  EFE2  F012         	goto	l1393
  5626   0024EA                     l7272:
  5627                           
  5628                           ; BSR set to: 0
  5629   0024EA  C0F5  F0F9         	movff	___fltol@f1,??___fltol
  5630   0024EE  C0F6  F0FA         	movff	___fltol@f1+1,??___fltol+1
  5631   0024F2  C0F7  F0FB         	movff	___fltol@f1+2,??___fltol+2
  5632   0024F6  C0F8  F0FC         	movff	___fltol@f1+3,??___fltol+3
  5633   0024FA  0E20               	movlw	32
  5634   0024FC  EF85  F012         	goto	u7230
  5635   002500                     u7235:
  5636   002500  90D8               	bcf	status,0,c
  5637   002502  33FC               	rrcf	(??___fltol+3)& (0+255),f,b
  5638   002504  33FB               	rrcf	(??___fltol+2)& (0+255),f,b
  5639   002506  33FA               	rrcf	(??___fltol+1)& (0+255),f,b
  5640   002508  33F9               	rrcf	??___fltol& (0+255),f,b
  5641   00250A                     u7230:
  5642   00250A  2EE8               	decfsz	wreg,f,c
  5643   00250C  EF80  F012         	goto	u7235
  5644   002510  51F9               	movf	??___fltol& (0+255),w,b
  5645   002512  6FFD               	movwf	___fltol@sign1& (0+255),b
  5646   002514                     
  5647                           ; BSR set to: 0
  5648   002514  8FF7               	bsf	(___fltol@f1+2)& (0+255),7,b
  5649   002516                     
  5650                           ; BSR set to: 0
  5651   002516  0EFF               	movlw	255
  5652   002518  17F5               	andwf	___fltol@f1& (0+255),f,b
  5653   00251A  0EFF               	movlw	255
  5654   00251C  17F6               	andwf	(___fltol@f1+1)& (0+255),f,b
  5655   00251E  0EFF               	movlw	255
  5656   002520  17F7               	andwf	(___fltol@f1+2)& (0+255),f,b
  5657   002522  0E00               	movlw	0
  5658   002524  17F8               	andwf	(___fltol@f1+3)& (0+255),f,b
  5659   002526                     
  5660                           ; BSR set to: 0
  5661   002526  0E96               	movlw	150
  5662   002528  5FFE               	subwf	___fltol@exp1& (0+255),f,b
  5663   00252A                     
  5664                           ; BSR set to: 0
  5665   00252A  BFFE               	btfsc	___fltol@exp1& (0+255),7,b
  5666   00252C  EF9C  F012         	goto	u7240
  5667   002530  EF9A  F012         	goto	u7241
  5668   002534                     u7241:
  5669   002534  EFB2  F012         	goto	l7292
  5670   002538                     u7240:
  5671   002538                     
  5672                           ; BSR set to: 0
  5673   002538  51FE               	movf	___fltol@exp1& (0+255),w,b
  5674   00253A  0A80               	xorlw	128
  5675   00253C  0F97               	addlw	151
  5676   00253E  B0D8               	btfsc	status,0,c
  5677   002540  EFA4  F012         	goto	u7251
  5678   002544  EFA6  F012         	goto	u7250
  5679   002548                     u7251:
  5680   002548  EFA8  F012         	goto	l7288
  5681   00254C                     u7250:
  5682   00254C  EF6B  F012         	goto	l7268
  5683   002550                     l7288:
  5684                           
  5685                           ; BSR set to: 0
  5686   002550  90D8               	bcf	status,0,c
  5687   002552  33F8               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5688   002554  33F7               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5689   002556  33F6               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5690   002558  33F5               	rrcf	___fltol@f1& (0+255),f,b
  5691   00255A                     
  5692                           ; BSR set to: 0
  5693   00255A  3FFE               	incfsz	___fltol@exp1& (0+255),f,b
  5694   00255C  EFA8  F012         	goto	l7288
  5695   002560  EFCA  F012         	goto	l7302
  5696   002564                     l7292:
  5697                           
  5698                           ; BSR set to: 0
  5699   002564  0E1F               	movlw	31
  5700   002566  65FE               	cpfsgt	___fltol@exp1& (0+255),b
  5701   002568  EFB8  F012         	goto	u7261
  5702   00256C  EFBA  F012         	goto	u7260
  5703   002570                     u7261:
  5704   002570  EFC2  F012         	goto	l7300
  5705   002574                     u7260:
  5706   002574  EF6B  F012         	goto	l7268
  5707   002578                     l7298:
  5708                           
  5709                           ; BSR set to: 0
  5710   002578  90D8               	bcf	status,0,c
  5711   00257A  37F5               	rlcf	___fltol@f1& (0+255),f,b
  5712   00257C  37F6               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5713   00257E  37F7               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5714   002580  37F8               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5715   002582  07FE               	decf	___fltol@exp1& (0+255),f,b
  5716   002584                     l7300:
  5717                           
  5718                           ; BSR set to: 0
  5719   002584  51FE               	movf	___fltol@exp1& (0+255),w,b
  5720   002586  A4D8               	btfss	status,2,c
  5721   002588  EFC8  F012         	goto	u7271
  5722   00258C  EFCA  F012         	goto	u7270
  5723   002590                     u7271:
  5724   002590  EFBC  F012         	goto	l7298
  5725   002594                     u7270:
  5726   002594                     l7302:
  5727                           
  5728                           ; BSR set to: 0
  5729   002594  51FD               	movf	___fltol@sign1& (0+255),w,b
  5730   002596  B4D8               	btfsc	status,2,c
  5731   002598  EFD0  F012         	goto	u7281
  5732   00259C  EFD2  F012         	goto	u7280
  5733   0025A0                     u7281:
  5734   0025A0  EFDA  F012         	goto	l7306
  5735   0025A4                     u7280:
  5736   0025A4                     
  5737                           ; BSR set to: 0
  5738   0025A4  1FF8               	comf	(___fltol@f1+3)& (0+255),f,b
  5739   0025A6  1FF7               	comf	(___fltol@f1+2)& (0+255),f,b
  5740   0025A8  1FF6               	comf	(___fltol@f1+1)& (0+255),f,b
  5741   0025AA  6DF5               	negf	___fltol@f1& (0+255),b
  5742   0025AC  0E00               	movlw	0
  5743   0025AE  23F6               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5744   0025B0  23F7               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5745   0025B2  23F8               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5746   0025B4                     l7306:
  5747                           
  5748                           ; BSR set to: 0
  5749   0025B4  C0F5  F0F5         	movff	___fltol@f1,?___fltol
  5750   0025B8  C0F6  F0F6         	movff	___fltol@f1+1,?___fltol+1
  5751   0025BC  C0F7  F0F7         	movff	___fltol@f1+2,?___fltol+2
  5752   0025C0  C0F8  F0F8         	movff	___fltol@f1+3,?___fltol+3
  5753   0025C4                     l1393:
  5754                           
  5755                           ; BSR set to: 0
  5756   0025C4  0012               	return		;funcret
  5757   0025C6                     __end_of___fltol:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function ___flmul *****************
  5761 ;; Defined at:
  5762 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  b               4   40[COMRAM] long 
  5765 ;;  a               4   44[COMRAM] long 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  prod            4   59[COMRAM] struct .
  5768 ;;  grs             4   53[COMRAM] unsigned long 
  5769 ;;  temp            2   63[COMRAM] struct .
  5770 ;;  bexp            1   58[COMRAM] unsigned char 
  5771 ;;  aexp            1   57[COMRAM] unsigned char 
  5772 ;;  sign            1   52[COMRAM] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  4   40[COMRAM] unsigned char 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, prodl, prodh
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5782 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;Total ram usage:       25 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; Hardware stack levels required when called: 8
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text35
  5797   001034                     __ptext35:
  5798                           	callstack 0
  5799   001034                     ___flmul:
  5800                           	callstack 22
  5801   001034  502C               	movf	(___flmul@b+3)^0,w,c
  5802   001036  0B80               	andlw	128
  5803   001038  6E35               	movwf	___flmul@sign^0,c
  5804   00103A  502C               	movf	(___flmul@b+3)^0,w,c
  5805   00103C  242C               	addwf	(___flmul@b+3)^0,w,c
  5806   00103E  6E3B               	movwf	___flmul@bexp^0,c
  5807   001040  AE2B               	btfss	(___flmul@b+2)^0,7,c
  5808   001042  EF25  F008         	goto	u4821
  5809   001046  EF27  F008         	goto	u4820
  5810   00104A                     u4821:
  5811   00104A  EF28  F008         	goto	l5508
  5812   00104E                     u4820:
  5813   00104E  803B               	bsf	___flmul@bexp^0,0,c
  5814   001050                     l5508:
  5815   001050  503B               	movf	___flmul@bexp^0,w,c
  5816   001052  B4D8               	btfsc	status,2,c
  5817   001054  EF2E  F008         	goto	u4831
  5818   001058  EF30  F008         	goto	u4830
  5819   00105C                     u4831:
  5820   00105C  EF43  F008         	goto	l5516
  5821   001060                     u4830:
  5822   001060  283B               	incf	___flmul@bexp^0,w,c
  5823   001062  A4D8               	btfss	status,2,c
  5824   001064  EF36  F008         	goto	u4841
  5825   001068  EF38  F008         	goto	u4840
  5826   00106C                     u4841:
  5827   00106C  EF40  F008         	goto	l5514
  5828   001070                     u4840:
  5829   001070  0E00               	movlw	0
  5830   001072  6E29               	movwf	___flmul@b^0,c
  5831   001074  0E00               	movlw	0
  5832   001076  6E2A               	movwf	(___flmul@b+1)^0,c
  5833   001078  0E00               	movlw	0
  5834   00107A  6E2B               	movwf	(___flmul@b+2)^0,c
  5835   00107C  0E00               	movlw	0
  5836   00107E  6E2C               	movwf	(___flmul@b+3)^0,c
  5837   001080                     l5514:
  5838   001080  8E2B               	bsf	(___flmul@b+2)^0,7,c
  5839   001082  EF4B  F008         	goto	l5518
  5840   001086                     l5516:
  5841   001086  0E00               	movlw	0
  5842   001088  6E29               	movwf	___flmul@b^0,c
  5843   00108A  0E00               	movlw	0
  5844   00108C  6E2A               	movwf	(___flmul@b+1)^0,c
  5845   00108E  0E00               	movlw	0
  5846   001090  6E2B               	movwf	(___flmul@b+2)^0,c
  5847   001092  0E00               	movlw	0
  5848   001094  6E2C               	movwf	(___flmul@b+3)^0,c
  5849   001096                     l5518:
  5850   001096  5030               	movf	(___flmul@a+3)^0,w,c
  5851   001098  0B80               	andlw	128
  5852   00109A  1A35               	xorwf	___flmul@sign^0,f,c
  5853   00109C  5030               	movf	(___flmul@a+3)^0,w,c
  5854   00109E  2430               	addwf	(___flmul@a+3)^0,w,c
  5855   0010A0  6E3A               	movwf	___flmul@aexp^0,c
  5856   0010A2  AE2F               	btfss	(___flmul@a+2)^0,7,c
  5857   0010A4  EF56  F008         	goto	u4851
  5858   0010A8  EF58  F008         	goto	u4850
  5859   0010AC                     u4851:
  5860   0010AC  EF59  F008         	goto	l5526
  5861   0010B0                     u4850:
  5862   0010B0  803A               	bsf	___flmul@aexp^0,0,c
  5863   0010B2                     l5526:
  5864   0010B2  503A               	movf	___flmul@aexp^0,w,c
  5865   0010B4  B4D8               	btfsc	status,2,c
  5866   0010B6  EF5F  F008         	goto	u4861
  5867   0010BA  EF61  F008         	goto	u4860
  5868   0010BE                     u4861:
  5869   0010BE  EF74  F008         	goto	l5534
  5870   0010C2                     u4860:
  5871   0010C2  283A               	incf	___flmul@aexp^0,w,c
  5872   0010C4  A4D8               	btfss	status,2,c
  5873   0010C6  EF67  F008         	goto	u4871
  5874   0010CA  EF69  F008         	goto	u4870
  5875   0010CE                     u4871:
  5876   0010CE  EF71  F008         	goto	l5532
  5877   0010D2                     u4870:
  5878   0010D2  0E00               	movlw	0
  5879   0010D4  6E2D               	movwf	___flmul@a^0,c
  5880   0010D6  0E00               	movlw	0
  5881   0010D8  6E2E               	movwf	(___flmul@a+1)^0,c
  5882   0010DA  0E00               	movlw	0
  5883   0010DC  6E2F               	movwf	(___flmul@a+2)^0,c
  5884   0010DE  0E00               	movlw	0
  5885   0010E0  6E30               	movwf	(___flmul@a+3)^0,c
  5886   0010E2                     l5532:
  5887   0010E2  8E2F               	bsf	(___flmul@a+2)^0,7,c
  5888   0010E4  EF7C  F008         	goto	l1710
  5889   0010E8                     l5534:
  5890   0010E8  0E00               	movlw	0
  5891   0010EA  6E2D               	movwf	___flmul@a^0,c
  5892   0010EC  0E00               	movlw	0
  5893   0010EE  6E2E               	movwf	(___flmul@a+1)^0,c
  5894   0010F0  0E00               	movlw	0
  5895   0010F2  6E2F               	movwf	(___flmul@a+2)^0,c
  5896   0010F4  0E00               	movlw	0
  5897   0010F6  6E30               	movwf	(___flmul@a+3)^0,c
  5898   0010F8                     l1710:
  5899   0010F8  503A               	movf	___flmul@aexp^0,w,c
  5900   0010FA  B4D8               	btfsc	status,2,c
  5901   0010FC  EF82  F008         	goto	u4881
  5902   001100  EF84  F008         	goto	u4880
  5903   001104                     u4881:
  5904   001104  EF8C  F008         	goto	l5538
  5905   001108                     u4880:
  5906   001108  503B               	movf	___flmul@bexp^0,w,c
  5907   00110A  A4D8               	btfss	status,2,c
  5908   00110C  EF8A  F008         	goto	u4891
  5909   001110  EF8C  F008         	goto	u4890
  5910   001114                     u4891:
  5911   001114  EF96  F008         	goto	l5542
  5912   001118                     u4890:
  5913   001118                     l5538:
  5914   001118  0E00               	movlw	0
  5915   00111A  6E29               	movwf	?___flmul^0,c
  5916   00111C  0E00               	movlw	0
  5917   00111E  6E2A               	movwf	(?___flmul+1)^0,c
  5918   001120  0E00               	movlw	0
  5919   001122  6E2B               	movwf	(?___flmul+2)^0,c
  5920   001124  0E00               	movlw	0
  5921   001126  6E2C               	movwf	(?___flmul+3)^0,c
  5922   001128  EF2E  F00A         	goto	l1714
  5923   00112C                     l5542:
  5924   00112C  502F               	movf	(___flmul@a+2)^0,w,c
  5925   00112E  0229               	mulwf	___flmul@b^0,c
  5926   001130  CFF3 F040          	movff	prodl,___flmul@temp
  5927   001134  CFF4 F041          	movff	prodh,___flmul@temp+1
  5928   001138  5040               	movf	___flmul@temp^0,w,c
  5929   00113A  6E36               	movwf	___flmul@grs^0,c
  5930   00113C  6A37               	clrf	(___flmul@grs+1)^0,c
  5931   00113E  6A38               	clrf	(___flmul@grs+2)^0,c
  5932   001140  6A39               	clrf	(___flmul@grs+3)^0,c
  5933   001142  5041               	movf	(___flmul@temp+1)^0,w,c
  5934   001144  6E3C               	movwf	___flmul@prod^0,c
  5935   001146  6A3D               	clrf	(___flmul@prod+1)^0,c
  5936   001148  6A3E               	clrf	(___flmul@prod+2)^0,c
  5937   00114A  6A3F               	clrf	(___flmul@prod+3)^0,c
  5938   00114C  502E               	movf	(___flmul@a+1)^0,w,c
  5939   00114E  022A               	mulwf	(___flmul@b+1)^0,c
  5940   001150  CFF3 F040          	movff	prodl,___flmul@temp
  5941   001154  CFF4 F041          	movff	prodh,___flmul@temp+1
  5942   001158  5040               	movf	___flmul@temp^0,w,c
  5943   00115A  2636               	addwf	___flmul@grs^0,f,c
  5944   00115C  0E00               	movlw	0
  5945   00115E  2237               	addwfc	(___flmul@grs+1)^0,f,c
  5946   001160  2238               	addwfc	(___flmul@grs+2)^0,f,c
  5947   001162  2239               	addwfc	(___flmul@grs+3)^0,f,c
  5948   001164  5041               	movf	(___flmul@temp+1)^0,w,c
  5949   001166  263C               	addwf	___flmul@prod^0,f,c
  5950   001168  0E00               	movlw	0
  5951   00116A  223D               	addwfc	(___flmul@prod+1)^0,f,c
  5952   00116C  223E               	addwfc	(___flmul@prod+2)^0,f,c
  5953   00116E  223F               	addwfc	(___flmul@prod+3)^0,f,c
  5954   001170  502D               	movf	___flmul@a^0,w,c
  5955   001172  022B               	mulwf	(___flmul@b+2)^0,c
  5956   001174  CFF3 F040          	movff	prodl,___flmul@temp
  5957   001178  CFF4 F041          	movff	prodh,___flmul@temp+1
  5958   00117C  5040               	movf	___flmul@temp^0,w,c
  5959   00117E  2636               	addwf	___flmul@grs^0,f,c
  5960   001180  0E00               	movlw	0
  5961   001182  2237               	addwfc	(___flmul@grs+1)^0,f,c
  5962   001184  2238               	addwfc	(___flmul@grs+2)^0,f,c
  5963   001186  2239               	addwfc	(___flmul@grs+3)^0,f,c
  5964   001188  5041               	movf	(___flmul@temp+1)^0,w,c
  5965   00118A  263C               	addwf	___flmul@prod^0,f,c
  5966   00118C  0E00               	movlw	0
  5967   00118E  223D               	addwfc	(___flmul@prod+1)^0,f,c
  5968   001190  223E               	addwfc	(___flmul@prod+2)^0,f,c
  5969   001192  223F               	addwfc	(___flmul@prod+3)^0,f,c
  5970   001194  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  5971   001198  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  5972   00119C  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  5973   0011A0  6A36               	clrf	___flmul@grs^0,c
  5974   0011A2  502D               	movf	___flmul@a^0,w,c
  5975   0011A4  022A               	mulwf	(___flmul@b+1)^0,c
  5976   0011A6  CFF3 F040          	movff	prodl,___flmul@temp
  5977   0011AA  CFF4 F041          	movff	prodh,___flmul@temp+1
  5978   0011AE  5040               	movf	___flmul@temp^0,w,c
  5979   0011B0  2636               	addwf	___flmul@grs^0,f,c
  5980   0011B2  5041               	movf	(___flmul@temp+1)^0,w,c
  5981   0011B4  2237               	addwfc	(___flmul@grs+1)^0,f,c
  5982   0011B6  0E00               	movlw	0
  5983   0011B8  2238               	addwfc	(___flmul@grs+2)^0,f,c
  5984   0011BA  0E00               	movlw	0
  5985   0011BC  2239               	addwfc	(___flmul@grs+3)^0,f,c
  5986   0011BE  502E               	movf	(___flmul@a+1)^0,w,c
  5987   0011C0  0229               	mulwf	___flmul@b^0,c
  5988   0011C2  CFF3 F040          	movff	prodl,___flmul@temp
  5989   0011C6  CFF4 F041          	movff	prodh,___flmul@temp+1
  5990   0011CA  5040               	movf	___flmul@temp^0,w,c
  5991   0011CC  2636               	addwf	___flmul@grs^0,f,c
  5992   0011CE  5041               	movf	(___flmul@temp+1)^0,w,c
  5993   0011D0  2237               	addwfc	(___flmul@grs+1)^0,f,c
  5994   0011D2  0E00               	movlw	0
  5995   0011D4  2238               	addwfc	(___flmul@grs+2)^0,f,c
  5996   0011D6  0E00               	movlw	0
  5997   0011D8  2239               	addwfc	(___flmul@grs+3)^0,f,c
  5998   0011DA  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  5999   0011DE  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  6000   0011E2  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  6001   0011E6  6A36               	clrf	___flmul@grs^0,c
  6002   0011E8  502D               	movf	___flmul@a^0,w,c
  6003   0011EA  0229               	mulwf	___flmul@b^0,c
  6004   0011EC  CFF3 F040          	movff	prodl,___flmul@temp
  6005   0011F0  CFF4 F041          	movff	prodh,___flmul@temp+1
  6006   0011F4  5040               	movf	___flmul@temp^0,w,c
  6007   0011F6  2636               	addwf	___flmul@grs^0,f,c
  6008   0011F8  5041               	movf	(___flmul@temp+1)^0,w,c
  6009   0011FA  2237               	addwfc	(___flmul@grs+1)^0,f,c
  6010   0011FC  0E00               	movlw	0
  6011   0011FE  2238               	addwfc	(___flmul@grs+2)^0,f,c
  6012   001200  0E00               	movlw	0
  6013   001202  2239               	addwfc	(___flmul@grs+3)^0,f,c
  6014   001204  502F               	movf	(___flmul@a+2)^0,w,c
  6015   001206  022A               	mulwf	(___flmul@b+1)^0,c
  6016   001208  CFF3 F040          	movff	prodl,___flmul@temp
  6017   00120C  CFF4 F041          	movff	prodh,___flmul@temp+1
  6018   001210  5040               	movf	___flmul@temp^0,w,c
  6019   001212  263C               	addwf	___flmul@prod^0,f,c
  6020   001214  5041               	movf	(___flmul@temp+1)^0,w,c
  6021   001216  223D               	addwfc	(___flmul@prod+1)^0,f,c
  6022   001218  0E00               	movlw	0
  6023   00121A  223E               	addwfc	(___flmul@prod+2)^0,f,c
  6024   00121C  0E00               	movlw	0
  6025   00121E  223F               	addwfc	(___flmul@prod+3)^0,f,c
  6026   001220  502E               	movf	(___flmul@a+1)^0,w,c
  6027   001222  022B               	mulwf	(___flmul@b+2)^0,c
  6028   001224  CFF3 F040          	movff	prodl,___flmul@temp
  6029   001228  CFF4 F041          	movff	prodh,___flmul@temp+1
  6030   00122C  5040               	movf	___flmul@temp^0,w,c
  6031   00122E  263C               	addwf	___flmul@prod^0,f,c
  6032   001230  5041               	movf	(___flmul@temp+1)^0,w,c
  6033   001232  223D               	addwfc	(___flmul@prod+1)^0,f,c
  6034   001234  0E00               	movlw	0
  6035   001236  223E               	addwfc	(___flmul@prod+2)^0,f,c
  6036   001238  0E00               	movlw	0
  6037   00123A  223F               	addwfc	(___flmul@prod+3)^0,f,c
  6038   00123C  502F               	movf	(___flmul@a+2)^0,w,c
  6039   00123E  022B               	mulwf	(___flmul@b+2)^0,c
  6040   001240  CFF3 F040          	movff	prodl,___flmul@temp
  6041   001244  CFF4 F041          	movff	prodh,___flmul@temp+1
  6042   001248  5040               	movf	___flmul@temp^0,w,c
  6043   00124A  6E31               	movwf	??___flmul^0,c
  6044   00124C  5041               	movf	(___flmul@temp+1)^0,w,c
  6045   00124E  6E32               	movwf	(??___flmul+1)^0,c
  6046   001250  6A33               	clrf	(??___flmul+2)^0,c
  6047   001252  6A34               	clrf	(??___flmul+3)^0,c
  6048   001254  C033  F034         	movff	??___flmul+2,??___flmul+3
  6049   001258  C032  F033         	movff	??___flmul+1,??___flmul+2
  6050   00125C  C031  F032         	movff	??___flmul,??___flmul+1
  6051   001260  6A31               	clrf	??___flmul^0,c
  6052   001262  5031               	movf	??___flmul^0,w,c
  6053   001264  263C               	addwf	___flmul@prod^0,f,c
  6054   001266  5032               	movf	(??___flmul+1)^0,w,c
  6055   001268  223D               	addwfc	(___flmul@prod+1)^0,f,c
  6056   00126A  5033               	movf	(??___flmul+2)^0,w,c
  6057   00126C  223E               	addwfc	(___flmul@prod+2)^0,f,c
  6058   00126E  5034               	movf	(??___flmul+3)^0,w,c
  6059   001270  223F               	addwfc	(___flmul@prod+3)^0,f,c
  6060   001272  C036  F031         	movff	___flmul@grs,??___flmul
  6061   001276  C037  F032         	movff	___flmul@grs+1,??___flmul+1
  6062   00127A  C038  F033         	movff	___flmul@grs+2,??___flmul+2
  6063   00127E  C039  F034         	movff	___flmul@grs+3,??___flmul+3
  6064   001282  0E19               	movlw	25
  6065   001284  EF49  F009         	goto	u4900
  6066   001288                     u4905:
  6067   001288  90D8               	bcf	status,0,c
  6068   00128A  3234               	rrcf	(??___flmul+3)^0,f,c
  6069   00128C  3233               	rrcf	(??___flmul+2)^0,f,c
  6070   00128E  3232               	rrcf	(??___flmul+1)^0,f,c
  6071   001290  3231               	rrcf	??___flmul^0,f,c
  6072   001292                     u4900:
  6073   001292  2EE8               	decfsz	wreg,f,c
  6074   001294  EF44  F009         	goto	u4905
  6075   001298  5031               	movf	??___flmul^0,w,c
  6076   00129A  263C               	addwf	___flmul@prod^0,f,c
  6077   00129C  5032               	movf	(??___flmul+1)^0,w,c
  6078   00129E  223D               	addwfc	(___flmul@prod+1)^0,f,c
  6079   0012A0  5033               	movf	(??___flmul+2)^0,w,c
  6080   0012A2  223E               	addwfc	(___flmul@prod+2)^0,f,c
  6081   0012A4  5034               	movf	(??___flmul+3)^0,w,c
  6082   0012A6  223F               	addwfc	(___flmul@prod+3)^0,f,c
  6083   0012A8  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  6084   0012AC  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  6085   0012B0  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  6086   0012B4  6A36               	clrf	___flmul@grs^0,c
  6087   0012B6  503A               	movf	___flmul@aexp^0,w,c
  6088   0012B8  C03B  F031         	movff	___flmul@bexp,??___flmul
  6089   0012BC  6A32               	clrf	(??___flmul+1)^0,c
  6090   0012BE  2631               	addwf	??___flmul^0,f,c
  6091   0012C0  0E00               	movlw	0
  6092   0012C2  2232               	addwfc	(??___flmul+1)^0,f,c
  6093   0012C4  0E82               	movlw	130
  6094   0012C6  2431               	addwf	??___flmul^0,w,c
  6095   0012C8  6E40               	movwf	___flmul@temp^0,c
  6096   0012CA  0EFF               	movlw	255
  6097   0012CC  2032               	addwfc	(??___flmul+1)^0,w,c
  6098   0012CE  6E41               	movwf	(___flmul@temp+1)^0,c
  6099   0012D0  EF7F  F009         	goto	l5590
  6100   0012D4                     l5584:
  6101   0012D4  90D8               	bcf	status,0,c
  6102   0012D6  363C               	rlcf	___flmul@prod^0,f,c
  6103   0012D8  363D               	rlcf	(___flmul@prod+1)^0,f,c
  6104   0012DA  363E               	rlcf	(___flmul@prod+2)^0,f,c
  6105   0012DC  363F               	rlcf	(___flmul@prod+3)^0,f,c
  6106   0012DE  AE39               	btfss	(___flmul@grs+3)^0,7,c
  6107   0012E0  EF74  F009         	goto	u4911
  6108   0012E4  EF76  F009         	goto	u4910
  6109   0012E8                     u4911:
  6110   0012E8  EF77  F009         	goto	l1717
  6111   0012EC                     u4910:
  6112   0012EC  803C               	bsf	___flmul@prod^0,0,c
  6113   0012EE                     l1717:
  6114   0012EE  90D8               	bcf	status,0,c
  6115   0012F0  3636               	rlcf	___flmul@grs^0,f,c
  6116   0012F2  3637               	rlcf	(___flmul@grs+1)^0,f,c
  6117   0012F4  3638               	rlcf	(___flmul@grs+2)^0,f,c
  6118   0012F6  3639               	rlcf	(___flmul@grs+3)^0,f,c
  6119   0012F8  0640               	decf	___flmul@temp^0,f,c
  6120   0012FA  A0D8               	btfss	status,0,c
  6121   0012FC  0641               	decf	(___flmul@temp+1)^0,f,c
  6122   0012FE                     l5590:
  6123   0012FE  AE3E               	btfss	(___flmul@prod+2)^0,7,c
  6124   001300  EF84  F009         	goto	u4921
  6125   001304  EF86  F009         	goto	u4920
  6126   001308                     u4921:
  6127   001308  EF6A  F009         	goto	l5584
  6128   00130C                     u4920:
  6129   00130C  0E00               	movlw	0
  6130   00130E  6E3A               	movwf	___flmul@aexp^0,c
  6131   001310  AE39               	btfss	(___flmul@grs+3)^0,7,c
  6132   001312  EF8D  F009         	goto	u4931
  6133   001316  EF8F  F009         	goto	u4930
  6134   00131A                     u4931:
  6135   00131A  EFB3  F009         	goto	l1719
  6136   00131E                     u4930:
  6137   00131E  0EFF               	movlw	255
  6138   001320  1436               	andwf	___flmul@grs^0,w,c
  6139   001322  6E31               	movwf	??___flmul^0,c
  6140   001324  0EFF               	movlw	255
  6141   001326  1437               	andwf	(___flmul@grs+1)^0,w,c
  6142   001328  6E32               	movwf	(??___flmul+1)^0,c
  6143   00132A  0EFF               	movlw	255
  6144   00132C  1438               	andwf	(___flmul@grs+2)^0,w,c
  6145   00132E  6E33               	movwf	(??___flmul+2)^0,c
  6146   001330  0E7F               	movlw	127
  6147   001332  1439               	andwf	(___flmul@grs+3)^0,w,c
  6148   001334  6E34               	movwf	(??___flmul+3)^0,c
  6149   001336  5031               	movf	??___flmul^0,w,c
  6150   001338  1032               	iorwf	(??___flmul+1)^0,w,c
  6151   00133A  1033               	iorwf	(??___flmul+2)^0,w,c
  6152   00133C  1034               	iorwf	(??___flmul+3)^0,w,c
  6153   00133E  B4D8               	btfsc	status,2,c
  6154   001340  EFA4  F009         	goto	u4941
  6155   001344  EFA6  F009         	goto	u4940
  6156   001348                     u4941:
  6157   001348  EFAA  F009         	goto	l1720
  6158   00134C                     u4940:
  6159   00134C                     l5598:
  6160   00134C  0E01               	movlw	1
  6161   00134E  6E3A               	movwf	___flmul@aexp^0,c
  6162   001350  EFB3  F009         	goto	l1719
  6163   001354                     l1720:
  6164   001354  A03C               	btfss	___flmul@prod^0,0,c
  6165   001356  EFAF  F009         	goto	u4951
  6166   00135A  EFB1  F009         	goto	u4950
  6167   00135E                     u4951:
  6168   00135E  EFB3  F009         	goto	l1719
  6169   001362                     u4950:
  6170   001362  EFA6  F009         	goto	l5598
  6171   001366                     l1719:
  6172   001366  503A               	movf	___flmul@aexp^0,w,c
  6173   001368  B4D8               	btfsc	status,2,c
  6174   00136A  EFB9  F009         	goto	u4961
  6175   00136E  EFBB  F009         	goto	u4960
  6176   001372                     u4961:
  6177   001372  EFDF  F009         	goto	l5610
  6178   001376                     u4960:
  6179   001376  0E01               	movlw	1
  6180   001378  263C               	addwf	___flmul@prod^0,f,c
  6181   00137A  0E00               	movlw	0
  6182   00137C  223D               	addwfc	(___flmul@prod+1)^0,f,c
  6183   00137E  223E               	addwfc	(___flmul@prod+2)^0,f,c
  6184   001380  223F               	addwfc	(___flmul@prod+3)^0,f,c
  6185   001382  A03F               	btfss	(___flmul@prod+3)^0,0,c
  6186   001384  EFC6  F009         	goto	u4971
  6187   001388  EFC8  F009         	goto	u4970
  6188   00138C                     u4971:
  6189   00138C  EFDF  F009         	goto	l5610
  6190   001390                     u4970:
  6191   001390  C03C  F031         	movff	___flmul@prod,??___flmul
  6192   001394  C03D  F032         	movff	___flmul@prod+1,??___flmul+1
  6193   001398  C03E  F033         	movff	___flmul@prod+2,??___flmul+2
  6194   00139C  C03F  F034         	movff	___flmul@prod+3,??___flmul+3
  6195   0013A0  3434               	rlcf	(??___flmul+3)^0,w,c
  6196   0013A2  3234               	rrcf	(??___flmul+3)^0,f,c
  6197   0013A4  3233               	rrcf	(??___flmul+2)^0,f,c
  6198   0013A6  3232               	rrcf	(??___flmul+1)^0,f,c
  6199   0013A8  3231               	rrcf	??___flmul^0,f,c
  6200   0013AA  C031  F03C         	movff	??___flmul,___flmul@prod
  6201   0013AE  C032  F03D         	movff	??___flmul+1,___flmul@prod+1
  6202   0013B2  C033  F03E         	movff	??___flmul+2,___flmul@prod+2
  6203   0013B6  C034  F03F         	movff	??___flmul+3,___flmul@prod+3
  6204   0013BA  4A40               	infsnz	___flmul@temp^0,f,c
  6205   0013BC  2A41               	incf	(___flmul@temp+1)^0,f,c
  6206   0013BE                     l5610:
  6207   0013BE  BE41               	btfsc	(___flmul@temp+1)^0,7,c
  6208   0013C0  EFEA  F009         	goto	u4981
  6209   0013C4  5041               	movf	(___flmul@temp+1)^0,w,c
  6210   0013C6  E108               	bnz	u4980
  6211   0013C8  2840               	incf	___flmul@temp^0,w,c
  6212   0013CA  A0D8               	btfss	status,0,c
  6213   0013CC  EFEA  F009         	goto	u4981
  6214   0013D0  EFEC  F009         	goto	u4980
  6215   0013D4                     u4981:
  6216   0013D4  EFF6  F009         	goto	l5614
  6217   0013D8                     u4980:
  6218   0013D8  0E00               	movlw	0
  6219   0013DA  6E3C               	movwf	___flmul@prod^0,c
  6220   0013DC  0E00               	movlw	0
  6221   0013DE  6E3D               	movwf	(___flmul@prod+1)^0,c
  6222   0013E0  0E80               	movlw	128
  6223   0013E2  6E3E               	movwf	(___flmul@prod+2)^0,c
  6224   0013E4  0E7F               	movlw	127
  6225   0013E6  6E3F               	movwf	(___flmul@prod+3)^0,c
  6226   0013E8  EF24  F00A         	goto	l5626
  6227   0013EC                     l5614:
  6228   0013EC  BE41               	btfsc	(___flmul@temp+1)^0,7,c
  6229   0013EE  EF03  F00A         	goto	u4990
  6230   0013F2  5041               	movf	(___flmul@temp+1)^0,w,c
  6231   0013F4  E106               	bnz	u4991
  6232   0013F6  0440               	decf	___flmul@temp^0,w,c
  6233   0013F8  B0D8               	btfsc	status,0,c
  6234   0013FA  EF01  F00A         	goto	u4991
  6235   0013FE  EF03  F00A         	goto	u4990
  6236   001402                     u4991:
  6237   001402  EF0F  F00A         	goto	l1727
  6238   001406                     u4990:
  6239   001406  0E00               	movlw	0
  6240   001408  6E3C               	movwf	___flmul@prod^0,c
  6241   00140A  0E00               	movlw	0
  6242   00140C  6E3D               	movwf	(___flmul@prod+1)^0,c
  6243   00140E  0E00               	movlw	0
  6244   001410  6E3E               	movwf	(___flmul@prod+2)^0,c
  6245   001412  0E00               	movlw	0
  6246   001414  6E3F               	movwf	(___flmul@prod+3)^0,c
  6247   001416  0E00               	movlw	0
  6248   001418  6E35               	movwf	___flmul@sign^0,c
  6249   00141A  EF24  F00A         	goto	l5626
  6250   00141E                     l1727:
  6251   00141E  C040  F03B         	movff	___flmul@temp,___flmul@bexp
  6252   001422  0EFF               	movlw	255
  6253   001424  163C               	andwf	___flmul@prod^0,f,c
  6254   001426  0EFF               	movlw	255
  6255   001428  163D               	andwf	(___flmul@prod+1)^0,f,c
  6256   00142A  0E7F               	movlw	127
  6257   00142C  163E               	andwf	(___flmul@prod+2)^0,f,c
  6258   00142E  0E00               	movlw	0
  6259   001430  163F               	andwf	(___flmul@prod+3)^0,f,c
  6260   001432  A03B               	btfss	___flmul@bexp^0,0,c
  6261   001434  EF1E  F00A         	goto	u5001
  6262   001438  EF20  F00A         	goto	u5000
  6263   00143C                     u5001:
  6264   00143C  EF21  F00A         	goto	l5624
  6265   001440                     u5000:
  6266   001440  8E3E               	bsf	(___flmul@prod+2)^0,7,c
  6267   001442                     l5624:
  6268   001442  90D8               	bcf	status,0,c
  6269   001444  303B               	rrcf	___flmul@bexp^0,w,c
  6270   001446  6E3F               	movwf	(___flmul@prod+3)^0,c
  6271   001448                     l5626:
  6272   001448  5035               	movf	___flmul@sign^0,w,c
  6273   00144A  123F               	iorwf	(___flmul@prod+3)^0,f,c
  6274   00144C  C03C  F029         	movff	___flmul@prod,?___flmul
  6275   001450  C03D  F02A         	movff	___flmul@prod+1,?___flmul+1
  6276   001454  C03E  F02B         	movff	___flmul@prod+2,?___flmul+2
  6277   001458  C03F  F02C         	movff	___flmul@prod+3,?___flmul+3
  6278   00145C                     l1714:
  6279   00145C  0012               	return		;funcret
  6280   00145E                     __end_of___flmul:
  6281                           	callstack 0
  6282                           
  6283 ;; *************** function ___fldiv *****************
  6284 ;; Defined at:
  6285 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  b               4   65[COMRAM] unsigned char 
  6288 ;;  a               4   69[COMRAM] unsigned char 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  grs             4   11[BANK0 ] unsigned long 
  6291 ;;  rem             4    4[BANK0 ] unsigned long 
  6292 ;;  new_exp         2    9[BANK0 ] short 
  6293 ;;  aexp            1   16[BANK0 ] unsigned char 
  6294 ;;  bexp            1   15[BANK0 ] unsigned char 
  6295 ;;  sign            1    8[BANK0 ] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  4   65[COMRAM] unsigned char 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6305 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Totals:         8      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;Total ram usage:       25 bytes
  6310 ;; Hardware stack levels used: 1
  6311 ;; Hardware stack levels required when called: 8
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_main
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text36
  6320   00145E                     __ptext36:
  6321                           	callstack 0
  6322   00145E                     ___fldiv:
  6323                           	callstack 22
  6324   00145E  5045               	movf	(___fldiv@b+3)^0,w,c
  6325   001460  0B80               	andlw	128
  6326   001462  0100               	movlb	0	; () banked
  6327   001464  6FEC               	movwf	___fldiv@sign& (0+255),b
  6328   001466  5045               	movf	(___fldiv@b+3)^0,w,c
  6329   001468  2445               	addwf	(___fldiv@b+3)^0,w,c
  6330   00146A  6FF3               	movwf	___fldiv@bexp& (0+255),b
  6331   00146C                     
  6332                           ; BSR set to: 0
  6333   00146C  AE44               	btfss	(___fldiv@b+2)^0,7,c
  6334   00146E  EF3B  F00A         	goto	u6991
  6335   001472  EF3D  F00A         	goto	u6990
  6336   001476                     u6991:
  6337   001476  EF3E  F00A         	goto	l7134
  6338   00147A                     u6990:
  6339   00147A                     
  6340                           ; BSR set to: 0
  6341   00147A  81F3               	bsf	___fldiv@bexp& (0+255),0,b
  6342   00147C                     l7134:
  6343                           
  6344                           ; BSR set to: 0
  6345   00147C  51F3               	movf	___fldiv@bexp& (0+255),w,b
  6346   00147E  B4D8               	btfsc	status,2,c
  6347   001480  EF44  F00A         	goto	u7001
  6348   001484  EF46  F00A         	goto	u7000
  6349   001488                     u7001:
  6350   001488  EF5B  F00A         	goto	l7144
  6351   00148C                     u7000:
  6352   00148C                     
  6353                           ; BSR set to: 0
  6354   00148C  29F3               	incf	___fldiv@bexp& (0+255),w,b
  6355   00148E  A4D8               	btfss	status,2,c
  6356   001490  EF4C  F00A         	goto	u7011
  6357   001494  EF4E  F00A         	goto	u7010
  6358   001498                     u7011:
  6359   001498  EF56  F00A         	goto	l7140
  6360   00149C                     u7010:
  6361   00149C                     
  6362                           ; BSR set to: 0
  6363   00149C  0E00               	movlw	0
  6364   00149E  6E42               	movwf	___fldiv@b^0,c
  6365   0014A0  0E00               	movlw	0
  6366   0014A2  6E43               	movwf	(___fldiv@b+1)^0,c
  6367   0014A4  0E00               	movlw	0
  6368   0014A6  6E44               	movwf	(___fldiv@b+2)^0,c
  6369   0014A8  0E00               	movlw	0
  6370   0014AA  6E45               	movwf	(___fldiv@b+3)^0,c
  6371   0014AC                     l7140:
  6372                           
  6373                           ; BSR set to: 0
  6374   0014AC  8E44               	bsf	(___fldiv@b+2)^0,7,c
  6375   0014AE                     
  6376                           ; BSR set to: 0
  6377   0014AE  0E00               	movlw	0
  6378   0014B0  6E45               	movwf	(___fldiv@b+3)^0,c
  6379   0014B2  EF63  F00A         	goto	l7146
  6380   0014B6                     l7144:
  6381                           
  6382                           ; BSR set to: 0
  6383   0014B6  0E00               	movlw	0
  6384   0014B8  6E42               	movwf	___fldiv@b^0,c
  6385   0014BA  0E00               	movlw	0
  6386   0014BC  6E43               	movwf	(___fldiv@b+1)^0,c
  6387   0014BE  0E00               	movlw	0
  6388   0014C0  6E44               	movwf	(___fldiv@b+2)^0,c
  6389   0014C2  0E00               	movlw	0
  6390   0014C4  6E45               	movwf	(___fldiv@b+3)^0,c
  6391   0014C6                     l7146:
  6392                           
  6393                           ; BSR set to: 0
  6394   0014C6  5049               	movf	(___fldiv@a+3)^0,w,c
  6395   0014C8  0B80               	andlw	128
  6396   0014CA  1BEC               	xorwf	___fldiv@sign& (0+255),f,b
  6397   0014CC                     
  6398                           ; BSR set to: 0
  6399   0014CC  5049               	movf	(___fldiv@a+3)^0,w,c
  6400   0014CE  2449               	addwf	(___fldiv@a+3)^0,w,c
  6401   0014D0  6FF4               	movwf	___fldiv@aexp& (0+255),b
  6402   0014D2                     
  6403                           ; BSR set to: 0
  6404   0014D2  AE48               	btfss	(___fldiv@a+2)^0,7,c
  6405   0014D4  EF6E  F00A         	goto	u7021
  6406   0014D8  EF70  F00A         	goto	u7020
  6407   0014DC                     u7021:
  6408   0014DC  EF71  F00A         	goto	l7154
  6409   0014E0                     u7020:
  6410   0014E0                     
  6411                           ; BSR set to: 0
  6412   0014E0  81F4               	bsf	___fldiv@aexp& (0+255),0,b
  6413   0014E2                     l7154:
  6414                           
  6415                           ; BSR set to: 0
  6416   0014E2  51F4               	movf	___fldiv@aexp& (0+255),w,b
  6417   0014E4  B4D8               	btfsc	status,2,c
  6418   0014E6  EF77  F00A         	goto	u7031
  6419   0014EA  EF79  F00A         	goto	u7030
  6420   0014EE                     u7031:
  6421   0014EE  EF8E  F00A         	goto	l7164
  6422   0014F2                     u7030:
  6423   0014F2                     
  6424                           ; BSR set to: 0
  6425   0014F2  29F4               	incf	___fldiv@aexp& (0+255),w,b
  6426   0014F4  A4D8               	btfss	status,2,c
  6427   0014F6  EF7F  F00A         	goto	u7041
  6428   0014FA  EF81  F00A         	goto	u7040
  6429   0014FE                     u7041:
  6430   0014FE  EF89  F00A         	goto	l7160
  6431   001502                     u7040:
  6432   001502                     
  6433                           ; BSR set to: 0
  6434   001502  0E00               	movlw	0
  6435   001504  6E46               	movwf	___fldiv@a^0,c
  6436   001506  0E00               	movlw	0
  6437   001508  6E47               	movwf	(___fldiv@a+1)^0,c
  6438   00150A  0E00               	movlw	0
  6439   00150C  6E48               	movwf	(___fldiv@a+2)^0,c
  6440   00150E  0E00               	movlw	0
  6441   001510  6E49               	movwf	(___fldiv@a+3)^0,c
  6442   001512                     l7160:
  6443                           
  6444                           ; BSR set to: 0
  6445   001512  8E48               	bsf	(___fldiv@a+2)^0,7,c
  6446   001514                     
  6447                           ; BSR set to: 0
  6448   001514  0E00               	movlw	0
  6449   001516  6E49               	movwf	(___fldiv@a+3)^0,c
  6450   001518  EF96  F00A         	goto	l7166
  6451   00151C                     l7164:
  6452                           
  6453                           ; BSR set to: 0
  6454   00151C  0E00               	movlw	0
  6455   00151E  6E46               	movwf	___fldiv@a^0,c
  6456   001520  0E00               	movlw	0
  6457   001522  6E47               	movwf	(___fldiv@a+1)^0,c
  6458   001524  0E00               	movlw	0
  6459   001526  6E48               	movwf	(___fldiv@a+2)^0,c
  6460   001528  0E00               	movlw	0
  6461   00152A  6E49               	movwf	(___fldiv@a+3)^0,c
  6462   00152C                     l7166:
  6463                           
  6464                           ; BSR set to: 0
  6465   00152C  5046               	movf	___fldiv@a^0,w,c
  6466   00152E  1047               	iorwf	(___fldiv@a+1)^0,w,c
  6467   001530  1048               	iorwf	(___fldiv@a+2)^0,w,c
  6468   001532  1049               	iorwf	(___fldiv@a+3)^0,w,c
  6469   001534  A4D8               	btfss	status,2,c
  6470   001536  EF9F  F00A         	goto	u7051
  6471   00153A  EFA1  F00A         	goto	u7050
  6472   00153E                     u7051:
  6473   00153E  EFB9  F00A         	goto	l7178
  6474   001542                     u7050:
  6475   001542                     
  6476                           ; BSR set to: 0
  6477   001542  0E00               	movlw	0
  6478   001544  6E42               	movwf	___fldiv@b^0,c
  6479   001546  0E00               	movlw	0
  6480   001548  6E43               	movwf	(___fldiv@b+1)^0,c
  6481   00154A  0E00               	movlw	0
  6482   00154C  6E44               	movwf	(___fldiv@b+2)^0,c
  6483   00154E  0E00               	movlw	0
  6484   001550  6E45               	movwf	(___fldiv@b+3)^0,c
  6485   001552                     
  6486                           ; BSR set to: 0
  6487   001552  0E80               	movlw	128
  6488   001554  1244               	iorwf	(___fldiv@b+2)^0,f,c
  6489   001556  0E7F               	movlw	127
  6490   001558  1245               	iorwf	(___fldiv@b+3)^0,f,c
  6491   00155A                     l7172:
  6492                           
  6493                           ; BSR set to: 0
  6494   00155A  51EC               	movf	___fldiv@sign& (0+255),w,b
  6495   00155C  1245               	iorwf	(___fldiv@b+3)^0,f,c
  6496   00155E                     
  6497                           ; BSR set to: 0
  6498   00155E  C042  F042         	movff	___fldiv@b,?___fldiv
  6499   001562  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
  6500   001566  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
  6501   00156A  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
  6502   00156E  EFFC  F00B         	goto	l1678
  6503   001572                     l7178:
  6504                           
  6505                           ; BSR set to: 0
  6506   001572  51F3               	movf	___fldiv@bexp& (0+255),w,b
  6507   001574  A4D8               	btfss	status,2,c
  6508   001576  EFBF  F00A         	goto	u7061
  6509   00157A  EFC1  F00A         	goto	u7060
  6510   00157E                     u7061:
  6511   00157E  EFCB  F00A         	goto	l7186
  6512   001582                     u7060:
  6513   001582                     
  6514                           ; BSR set to: 0
  6515   001582  0E00               	movlw	0
  6516   001584  6E42               	movwf	?___fldiv^0,c
  6517   001586  0E00               	movlw	0
  6518   001588  6E43               	movwf	(?___fldiv+1)^0,c
  6519   00158A  0E00               	movlw	0
  6520   00158C  6E44               	movwf	(?___fldiv+2)^0,c
  6521   00158E  0E00               	movlw	0
  6522   001590  6E45               	movwf	(?___fldiv+3)^0,c
  6523   001592  EFFC  F00B         	goto	l1678
  6524   001596                     l7186:
  6525                           
  6526                           ; BSR set to: 0
  6527   001596  51F4               	movf	___fldiv@aexp& (0+255),w,b
  6528   001598  C0F3  F0E4         	movff	___fldiv@bexp,??___fldiv
  6529   00159C  6BE5               	clrf	(??___fldiv+1)& (0+255),b
  6530   00159E  5FE4               	subwf	??___fldiv& (0+255),f,b
  6531   0015A0  0E00               	movlw	0
  6532   0015A2  5BE5               	subwfb	(??___fldiv+1)& (0+255),f,b
  6533   0015A4  0E7F               	movlw	127
  6534   0015A6  25E4               	addwf	??___fldiv& (0+255),w,b
  6535   0015A8  6FED               	movwf	___fldiv@new_exp& (0+255),b
  6536   0015AA  0E00               	movlw	0
  6537   0015AC  21E5               	addwfc	(??___fldiv+1)& (0+255),w,b
  6538   0015AE  6FEE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6539   0015B0                     
  6540                           ; BSR set to: 0
  6541   0015B0  C042  F0E8         	movff	___fldiv@b,___fldiv@rem
  6542   0015B4  C043  F0E9         	movff	___fldiv@b+1,___fldiv@rem+1
  6543   0015B8  C044  F0EA         	movff	___fldiv@b+2,___fldiv@rem+2
  6544   0015BC  C045  F0EB         	movff	___fldiv@b+3,___fldiv@rem+3
  6545   0015C0                     
  6546                           ; BSR set to: 0
  6547   0015C0  0E00               	movlw	0
  6548   0015C2  6E42               	movwf	___fldiv@b^0,c
  6549   0015C4  0E00               	movlw	0
  6550   0015C6  6E43               	movwf	(___fldiv@b+1)^0,c
  6551   0015C8  0E00               	movlw	0
  6552   0015CA  6E44               	movwf	(___fldiv@b+2)^0,c
  6553   0015CC  0E00               	movlw	0
  6554   0015CE  6E45               	movwf	(___fldiv@b+3)^0,c
  6555   0015D0                     
  6556                           ; BSR set to: 0
  6557   0015D0  0E00               	movlw	0
  6558   0015D2  6FEF               	movwf	___fldiv@grs& (0+255),b
  6559   0015D4  0E00               	movlw	0
  6560   0015D6  6FF0               	movwf	(___fldiv@grs+1)& (0+255),b
  6561   0015D8  0E00               	movlw	0
  6562   0015DA  6FF1               	movwf	(___fldiv@grs+2)& (0+255),b
  6563   0015DC  0E00               	movlw	0
  6564   0015DE  6FF2               	movwf	(___fldiv@grs+3)& (0+255),b
  6565   0015E0                     
  6566                           ; BSR set to: 0
  6567   0015E0  0E00               	movlw	0
  6568   0015E2  6FF4               	movwf	___fldiv@aexp& (0+255),b
  6569   0015E4  EF2C  F00B         	goto	l1680
  6570   0015E8                     l7196:
  6571                           
  6572                           ; BSR set to: 0
  6573   0015E8  51F4               	movf	___fldiv@aexp& (0+255),w,b
  6574   0015EA  B4D8               	btfsc	status,2,c
  6575   0015EC  EFFA  F00A         	goto	u7071
  6576   0015F0  EFFC  F00A         	goto	u7070
  6577   0015F4                     u7071:
  6578   0015F4  EF13  F00B         	goto	l7204
  6579   0015F8                     u7070:
  6580   0015F8                     
  6581                           ; BSR set to: 0
  6582   0015F8  90D8               	bcf	status,0,c
  6583   0015FA  37E8               	rlcf	___fldiv@rem& (0+255),f,b
  6584   0015FC  37E9               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6585   0015FE  37EA               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6586   001600  37EB               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6587   001602  90D8               	bcf	status,0,c
  6588   001604  3642               	rlcf	___fldiv@b^0,f,c
  6589   001606  3643               	rlcf	(___fldiv@b+1)^0,f,c
  6590   001608  3644               	rlcf	(___fldiv@b+2)^0,f,c
  6591   00160A  3645               	rlcf	(___fldiv@b+3)^0,f,c
  6592   00160C                     
  6593                           ; BSR set to: 0
  6594   00160C  AFF2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6595   00160E  EF0B  F00B         	goto	u7081
  6596   001612  EF0D  F00B         	goto	u7080
  6597   001616                     u7081:
  6598   001616  EF0E  F00B         	goto	l1683
  6599   00161A                     u7080:
  6600   00161A                     
  6601                           ; BSR set to: 0
  6602   00161A  8042               	bsf	___fldiv@b^0,0,c
  6603   00161C                     l1683:
  6604                           
  6605                           ; BSR set to: 0
  6606   00161C  90D8               	bcf	status,0,c
  6607   00161E  37EF               	rlcf	___fldiv@grs& (0+255),f,b
  6608   001620  37F0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6609   001622  37F1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6610   001624  37F2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6611   001626                     l7204:
  6612                           
  6613                           ; BSR set to: 0
  6614   001626  5046               	movf	___fldiv@a^0,w,c
  6615   001628  5DE8               	subwf	___fldiv@rem& (0+255),w,b
  6616   00162A  5047               	movf	(___fldiv@a+1)^0,w,c
  6617   00162C  59E9               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6618   00162E  5048               	movf	(___fldiv@a+2)^0,w,c
  6619   001630  59EA               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6620   001632  5049               	movf	(___fldiv@a+3)^0,w,c
  6621   001634  59EB               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6622   001636  A0D8               	btfss	status,0,c
  6623   001638  EF20  F00B         	goto	u7091
  6624   00163C  EF22  F00B         	goto	u7090
  6625   001640                     u7091:
  6626   001640  EF2B  F00B         	goto	l7210
  6627   001644                     u7090:
  6628   001644                     
  6629                           ; BSR set to: 0
  6630   001644  8DF2               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6631   001646                     
  6632                           ; BSR set to: 0
  6633   001646  5046               	movf	___fldiv@a^0,w,c
  6634   001648  5FE8               	subwf	___fldiv@rem& (0+255),f,b
  6635   00164A  5047               	movf	(___fldiv@a+1)^0,w,c
  6636   00164C  5BE9               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6637   00164E  5048               	movf	(___fldiv@a+2)^0,w,c
  6638   001650  5BEA               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6639   001652  5049               	movf	(___fldiv@a+3)^0,w,c
  6640   001654  5BEB               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6641   001656                     l7210:
  6642                           
  6643                           ; BSR set to: 0
  6644   001656  2BF4               	incf	___fldiv@aexp& (0+255),f,b
  6645   001658                     l1680:
  6646                           
  6647                           ; BSR set to: 0
  6648   001658  0E19               	movlw	25
  6649   00165A  65F4               	cpfsgt	___fldiv@aexp& (0+255),b
  6650   00165C  EF32  F00B         	goto	u7101
  6651   001660  EF34  F00B         	goto	u7100
  6652   001664                     u7101:
  6653   001664  EFF4  F00A         	goto	l7196
  6654   001668                     u7100:
  6655   001668                     
  6656                           ; BSR set to: 0
  6657   001668  51E8               	movf	___fldiv@rem& (0+255),w,b
  6658   00166A  11E9               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6659   00166C  11EA               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6660   00166E  11EB               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6661   001670  B4D8               	btfsc	status,2,c
  6662   001672  EF3D  F00B         	goto	u7111
  6663   001676  EF3F  F00B         	goto	u7110
  6664   00167A                     u7111:
  6665   00167A  EF57  F00B         	goto	l7222
  6666   00167E                     u7110:
  6667   00167E                     
  6668                           ; BSR set to: 0
  6669   00167E  81EF               	bsf	___fldiv@grs& (0+255),0,b
  6670   001680  EF57  F00B         	goto	l7222
  6671   001684                     l7216:
  6672                           
  6673                           ; BSR set to: 0
  6674   001684  90D8               	bcf	status,0,c
  6675   001686  3642               	rlcf	___fldiv@b^0,f,c
  6676   001688  3643               	rlcf	(___fldiv@b+1)^0,f,c
  6677   00168A  3644               	rlcf	(___fldiv@b+2)^0,f,c
  6678   00168C  3645               	rlcf	(___fldiv@b+3)^0,f,c
  6679   00168E                     
  6680                           ; BSR set to: 0
  6681   00168E  AFF2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6682   001690  EF4C  F00B         	goto	u7121
  6683   001694  EF4E  F00B         	goto	u7120
  6684   001698                     u7121:
  6685   001698  EF4F  F00B         	goto	l1689
  6686   00169C                     u7120:
  6687   00169C                     
  6688                           ; BSR set to: 0
  6689   00169C  8042               	bsf	___fldiv@b^0,0,c
  6690   00169E                     l1689:
  6691                           
  6692                           ; BSR set to: 0
  6693   00169E  90D8               	bcf	status,0,c
  6694   0016A0  37EF               	rlcf	___fldiv@grs& (0+255),f,b
  6695   0016A2  37F0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6696   0016A4  37F1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6697   0016A6  37F2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6698   0016A8  07ED               	decf	___fldiv@new_exp& (0+255),f,b
  6699   0016AA  A0D8               	btfss	status,0,c
  6700   0016AC  07EE               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6701   0016AE                     l7222:
  6702                           
  6703                           ; BSR set to: 0
  6704   0016AE  AE44               	btfss	(___fldiv@b+2)^0,7,c
  6705   0016B0  EF5C  F00B         	goto	u7131
  6706   0016B4  EF5E  F00B         	goto	u7130
  6707   0016B8                     u7131:
  6708   0016B8  EF42  F00B         	goto	l7216
  6709   0016BC                     u7130:
  6710   0016BC                     
  6711                           ; BSR set to: 0
  6712   0016BC  0E00               	movlw	0
  6713   0016BE  6FF4               	movwf	___fldiv@aexp& (0+255),b
  6714   0016C0                     
  6715                           ; BSR set to: 0
  6716   0016C0  AFF2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6717   0016C2  EF65  F00B         	goto	u7141
  6718   0016C6  EF67  F00B         	goto	u7140
  6719   0016CA                     u7141:
  6720   0016CA  EF8B  F00B         	goto	l1691
  6721   0016CE                     u7140:
  6722   0016CE                     
  6723                           ; BSR set to: 0
  6724   0016CE  0EFF               	movlw	255
  6725   0016D0  15EF               	andwf	___fldiv@grs& (0+255),w,b
  6726   0016D2  6FE4               	movwf	??___fldiv& (0+255),b
  6727   0016D4  0EFF               	movlw	255
  6728   0016D6  15F0               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6729   0016D8  6FE5               	movwf	(??___fldiv+1)& (0+255),b
  6730   0016DA  0EFF               	movlw	255
  6731   0016DC  15F1               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6732   0016DE  6FE6               	movwf	(??___fldiv+2)& (0+255),b
  6733   0016E0  0E7F               	movlw	127
  6734   0016E2  15F2               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6735   0016E4  6FE7               	movwf	(??___fldiv+3)& (0+255),b
  6736   0016E6  51E4               	movf	??___fldiv& (0+255),w,b
  6737   0016E8  11E5               	iorwf	(??___fldiv+1)& (0+255),w,b
  6738   0016EA  11E6               	iorwf	(??___fldiv+2)& (0+255),w,b
  6739   0016EC  11E7               	iorwf	(??___fldiv+3)& (0+255),w,b
  6740   0016EE  B4D8               	btfsc	status,2,c
  6741   0016F0  EF7C  F00B         	goto	u7151
  6742   0016F4  EF7E  F00B         	goto	u7150
  6743   0016F8                     u7151:
  6744   0016F8  EF82  F00B         	goto	l1692
  6745   0016FC                     u7150:
  6746   0016FC                     l7230:
  6747                           
  6748                           ; BSR set to: 0
  6749   0016FC  0E01               	movlw	1
  6750   0016FE  6FF4               	movwf	___fldiv@aexp& (0+255),b
  6751   001700  EF8B  F00B         	goto	l1691
  6752   001704                     l1692:
  6753                           
  6754                           ; BSR set to: 0
  6755   001704  A042               	btfss	___fldiv@b^0,0,c
  6756   001706  EF87  F00B         	goto	u7161
  6757   00170A  EF89  F00B         	goto	u7160
  6758   00170E                     u7161:
  6759   00170E  EF8B  F00B         	goto	l1691
  6760   001712                     u7160:
  6761   001712  EF7E  F00B         	goto	l7230
  6762   001716                     l1691:
  6763                           
  6764                           ; BSR set to: 0
  6765   001716  51F4               	movf	___fldiv@aexp& (0+255),w,b
  6766   001718  B4D8               	btfsc	status,2,c
  6767   00171A  EF91  F00B         	goto	u7171
  6768   00171E  EF93  F00B         	goto	u7170
  6769   001722                     u7171:
  6770   001722  EFB7  F00B         	goto	l7242
  6771   001726                     u7170:
  6772   001726                     
  6773                           ; BSR set to: 0
  6774   001726  0E01               	movlw	1
  6775   001728  2642               	addwf	___fldiv@b^0,f,c
  6776   00172A  0E00               	movlw	0
  6777   00172C  2243               	addwfc	(___fldiv@b+1)^0,f,c
  6778   00172E  2244               	addwfc	(___fldiv@b+2)^0,f,c
  6779   001730  2245               	addwfc	(___fldiv@b+3)^0,f,c
  6780   001732                     
  6781                           ; BSR set to: 0
  6782   001732  A045               	btfss	(___fldiv@b+3)^0,0,c
  6783   001734  EF9E  F00B         	goto	u7181
  6784   001738  EFA0  F00B         	goto	u7180
  6785   00173C                     u7181:
  6786   00173C  EFB7  F00B         	goto	l7242
  6787   001740                     u7180:
  6788   001740                     
  6789                           ; BSR set to: 0
  6790   001740  C042  F0E4         	movff	___fldiv@b,??___fldiv
  6791   001744  C043  F0E5         	movff	___fldiv@b+1,??___fldiv+1
  6792   001748  C044  F0E6         	movff	___fldiv@b+2,??___fldiv+2
  6793   00174C  C045  F0E7         	movff	___fldiv@b+3,??___fldiv+3
  6794   001750  35E7               	rlcf	(??___fldiv+3)& (0+255),w,b
  6795   001752  33E7               	rrcf	(??___fldiv+3)& (0+255),f,b
  6796   001754  33E6               	rrcf	(??___fldiv+2)& (0+255),f,b
  6797   001756  33E5               	rrcf	(??___fldiv+1)& (0+255),f,b
  6798   001758  33E4               	rrcf	??___fldiv& (0+255),f,b
  6799   00175A  C0E4  F042         	movff	??___fldiv,___fldiv@b
  6800   00175E  C0E5  F043         	movff	??___fldiv+1,___fldiv@b+1
  6801   001762  C0E6  F044         	movff	??___fldiv+2,___fldiv@b+2
  6802   001766  C0E7  F045         	movff	??___fldiv+3,___fldiv@b+3
  6803   00176A                     
  6804                           ; BSR set to: 0
  6805   00176A  4BED               	infsnz	___fldiv@new_exp& (0+255),f,b
  6806   00176C  2BEE               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6807   00176E                     l7242:
  6808                           
  6809                           ; BSR set to: 0
  6810   00176E  BFEE               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6811   001770  EFC2  F00B         	goto	u7191
  6812   001774  51EE               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6813   001776  E108               	bnz	u7190
  6814   001778  29ED               	incf	___fldiv@new_exp& (0+255),w,b
  6815   00177A  A0D8               	btfss	status,0,c
  6816   00177C  EFC2  F00B         	goto	u7191
  6817   001780  EFC4  F00B         	goto	u7190
  6818   001784                     u7191:
  6819   001784  EFCF  F00B         	goto	l7246
  6820   001788                     u7190:
  6821   001788                     
  6822                           ; BSR set to: 0
  6823   001788  0E00               	movlw	0
  6824   00178A  6FEE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6825   00178C  69ED               	setf	___fldiv@new_exp& (0+255),b
  6826   00178E  0E00               	movlw	0
  6827   001790  6E42               	movwf	___fldiv@b^0,c
  6828   001792  0E00               	movlw	0
  6829   001794  6E43               	movwf	(___fldiv@b+1)^0,c
  6830   001796  0E00               	movlw	0
  6831   001798  6E44               	movwf	(___fldiv@b+2)^0,c
  6832   00179A  0E00               	movlw	0
  6833   00179C  6E45               	movwf	(___fldiv@b+3)^0,c
  6834   00179E                     l7246:
  6835                           
  6836                           ; BSR set to: 0
  6837   00179E  BFEE               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6838   0017A0  EFDC  F00B         	goto	u7200
  6839   0017A4  51EE               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6840   0017A6  E106               	bnz	u7201
  6841   0017A8  05ED               	decf	___fldiv@new_exp& (0+255),w,b
  6842   0017AA  B0D8               	btfsc	status,0,c
  6843   0017AC  EFDA  F00B         	goto	u7201
  6844   0017B0  EFDC  F00B         	goto	u7200
  6845   0017B4                     u7201:
  6846   0017B4  EFEA  F00B         	goto	l7250
  6847   0017B8                     u7200:
  6848   0017B8                     
  6849                           ; BSR set to: 0
  6850   0017B8  0E00               	movlw	0
  6851   0017BA  6FEE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6852   0017BC  0E00               	movlw	0
  6853   0017BE  6FED               	movwf	___fldiv@new_exp& (0+255),b
  6854   0017C0  0E00               	movlw	0
  6855   0017C2  6E42               	movwf	___fldiv@b^0,c
  6856   0017C4  0E00               	movlw	0
  6857   0017C6  6E43               	movwf	(___fldiv@b+1)^0,c
  6858   0017C8  0E00               	movlw	0
  6859   0017CA  6E44               	movwf	(___fldiv@b+2)^0,c
  6860   0017CC  0E00               	movlw	0
  6861   0017CE  6E45               	movwf	(___fldiv@b+3)^0,c
  6862   0017D0  0E00               	movlw	0
  6863   0017D2  6FEC               	movwf	___fldiv@sign& (0+255),b
  6864   0017D4                     l7250:
  6865                           
  6866                           ; BSR set to: 0
  6867   0017D4  C0ED  F0F3         	movff	___fldiv@new_exp,___fldiv@bexp
  6868   0017D8                     
  6869                           ; BSR set to: 0
  6870   0017D8  A1F3               	btfss	___fldiv@bexp& (0+255),0,b
  6871   0017DA  EFF1  F00B         	goto	u7211
  6872   0017DE  EFF3  F00B         	goto	u7210
  6873   0017E2                     u7211:
  6874   0017E2  EFF6  F00B         	goto	l7256
  6875   0017E6                     u7210:
  6876   0017E6                     
  6877                           ; BSR set to: 0
  6878   0017E6  8E44               	bsf	(___fldiv@b+2)^0,7,c
  6879   0017E8  EFF7  F00B         	goto	l7258
  6880   0017EC                     l7256:
  6881                           
  6882                           ; BSR set to: 0
  6883   0017EC  9E44               	bcf	(___fldiv@b+2)^0,7,c
  6884   0017EE                     l7258:
  6885                           
  6886                           ; BSR set to: 0
  6887   0017EE  90D8               	bcf	status,0,c
  6888   0017F0  31F3               	rrcf	___fldiv@bexp& (0+255),w,b
  6889   0017F2  6E45               	movwf	(___fldiv@b+3)^0,c
  6890   0017F4  EFAD  F00A         	goto	l7172
  6891   0017F8                     l1678:
  6892                           
  6893                           ; BSR set to: 0
  6894   0017F8  0012               	return		;funcret
  6895   0017FA                     __end_of___fldiv:
  6896                           	callstack 0
  6897                           
  6898 ;; *************** function _ADC_StartConversion_Interrupt *****************
  6899 ;; Defined at:
  6900 ;;		line 222 in file "MCAL_Layer/ADC/hal_adc.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  _adc            2   34[COMRAM] PTR const struct .
  6903 ;;		 -> adc_1(7), 
  6904 ;;  channel         1   36[COMRAM] enum E3255
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  ret             1   37[COMRAM] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      unsigned char 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;Total ram usage:        4 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 10
  6923 ;; This function calls:
  6924 ;;		_ADC_SelectChannel
  6925 ;;		_ADC_StartConversion
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text37
  6932   003538                     __ptext37:
  6933                           	callstack 0
  6934   003538                     _ADC_StartConversion_Interrupt:
  6935                           	callstack 20
  6936   003538                     
  6937                           ;MCAL_Layer/ADC/hal_adc.c: 224:      if(_adc==((void*)0)){
  6938   003538  5023               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  6939   00353A  1024               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)^0,w,c
  6940   00353C  A4D8               	btfss	status,2,c
  6941   00353E  EFA3  F01A         	goto	u4551
  6942   003542  EFA5  F01A         	goto	u4550
  6943   003546                     u4551:
  6944   003546  EFA9  F01A         	goto	l5318
  6945   00354A                     u4550:
  6946   00354A                     
  6947                           ;MCAL_Layer/ADC/hal_adc.c: 225:         ret=(Std_ReturnType)0x00;
  6948   00354A  0E00               	movlw	0
  6949   00354C  6E26               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  6950                           
  6951                           ;MCAL_Layer/ADC/hal_adc.c: 226:     }
  6952   00354E  EFB9  F01A         	goto	l5320
  6953   003552                     l5318:
  6954                           
  6955                           ;MCAL_Layer/ADC/hal_adc.c: 229:          ret = ADC_SelectChannel(_adc ,channel);
  6956   003552  C023  F01E         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  6957   003556  C024  F01F         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  6958   00355A  C025  F020         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  6959   00355E  ECBB  F01A         	call	_ADC_SelectChannel	;wreg free
  6960   003562  6E26               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  6961                           
  6962                           ;MCAL_Layer/ADC/hal_adc.c: 231:          ret&= ADC_StartConversion(_adc);
  6963   003564  C023  F01B         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  6964   003568  C024  F01C         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  6965   00356C  EC34  F01B         	call	_ADC_StartConversion	;wreg free
  6966   003570  1626               	andwf	ADC_StartConversion_Interrupt@ret^0,f,c
  6967   003572                     l5320:
  6968                           
  6969                           ;MCAL_Layer/ADC/hal_adc.c: 233:     return ret;
  6970   003572  5026               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  6971   003574  0012               	return		;funcret
  6972   003576                     __end_of_ADC_StartConversion_Interrupt:
  6973                           	callstack 0
  6974                           
  6975 ;; *************** function _ADC_StartConversion *****************
  6976 ;; Defined at:
  6977 ;;		line 122 in file "MCAL_Layer/ADC/hal_adc.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  _adc            2   26[COMRAM] PTR const struct .
  6980 ;;		 -> adc_1(7), 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  ret             1   28[COMRAM] unsigned char 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      unsigned char 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;Total ram usage:        3 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 8
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_ADC_StartConversion_Interrupt
  7003 ;;		_ADC_GetConversion_Blocking
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text38
  7008   003668                     __ptext38:
  7009                           	callstack 0
  7010   003668                     _ADC_StartConversion:
  7011                           	callstack 21
  7012   003668                     
  7013                           ;MCAL_Layer/ADC/hal_adc.c: 123:     Std_ReturnType ret=(Std_ReturnType)0x01;
  7014   003668  0E01               	movlw	1
  7015   00366A  6E1D               	movwf	ADC_StartConversion@ret^0,c
  7016   00366C                     
  7017                           ;MCAL_Layer/ADC/hal_adc.c: 124:     if(_adc==((void*)0)){
  7018   00366C  501B               	movf	ADC_StartConversion@_adc^0,w,c
  7019   00366E  101C               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  7020   003670  A4D8               	btfss	status,2,c
  7021   003672  EF3D  F01B         	goto	u4351
  7022   003676  EF3F  F01B         	goto	u4350
  7023   00367A                     u4351:
  7024   00367A  EF43  F01B         	goto	l392
  7025   00367E                     u4350:
  7026   00367E                     
  7027                           ;MCAL_Layer/ADC/hal_adc.c: 125:         ret=(Std_ReturnType)0x00;
  7028   00367E  0E00               	movlw	0
  7029   003680  6E1D               	movwf	ADC_StartConversion@ret^0,c
  7030                           
  7031                           ;MCAL_Layer/ADC/hal_adc.c: 126:     }
  7032   003682  EF44  F01B         	goto	l5154
  7033   003686                     l392:
  7034                           
  7035                           ;MCAL_Layer/ADC/hal_adc.c: 128:         ((*((volatile ADCON0_t *)(0xFC2))).GO_DONE=1);
  7036   003686  82C2               	bsf	194,1,c	;volatile
  7037   003688                     l5154:
  7038                           
  7039                           ;MCAL_Layer/ADC/hal_adc.c: 130:     return ret;
  7040   003688  501D               	movf	ADC_StartConversion@ret^0,w,c
  7041   00368A  0012               	return		;funcret
  7042   00368C                     __end_of_ADC_StartConversion:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _ADC_SelectChannel *****************
  7046 ;; Defined at:
  7047 ;;		line 102 in file "MCAL_Layer/ADC/hal_adc.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  _adc            2   29[COMRAM] PTR const struct .
  7050 ;;		 -> adc_1(7), 
  7051 ;;  channel         1   31[COMRAM] enum E3255
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  ret             1   33[COMRAM] unsigned char 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      unsigned char 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;Total ram usage:        5 bytes
  7068 ;; Hardware stack levels used: 1
  7069 ;; Hardware stack levels required when called: 9
  7070 ;; This function calls:
  7071 ;;		_adc_input_channel_port_configure
  7072 ;; This function is called by:
  7073 ;;		_ADC_StartConversion_Interrupt
  7074 ;;		_ADC_GetConversion_Blocking
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text39
  7079   003576                     __ptext39:
  7080                           	callstack 0
  7081   003576                     _ADC_SelectChannel:
  7082                           	callstack 20
  7083   003576                     
  7084                           ;MCAL_Layer/ADC/hal_adc.c: 103:      Std_ReturnType ret=(Std_ReturnType)0x01;
  7085   003576  0E01               	movlw	1
  7086   003578  6E22               	movwf	ADC_SelectChannel@ret^0,c
  7087   00357A                     
  7088                           ;MCAL_Layer/ADC/hal_adc.c: 104:     if(_adc==((void*)0)){
  7089   00357A  501E               	movf	ADC_SelectChannel@_adc^0,w,c
  7090   00357C  101F               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  7091   00357E  A4D8               	btfss	status,2,c
  7092   003580  EFC4  F01A         	goto	u4341
  7093   003584  EFC6  F01A         	goto	u4340
  7094   003588                     u4341:
  7095   003588  EFCA  F01A         	goto	l5140
  7096   00358C                     u4340:
  7097   00358C                     
  7098                           ;MCAL_Layer/ADC/hal_adc.c: 105:         ret=(Std_ReturnType)0x00;
  7099   00358C  0E00               	movlw	0
  7100   00358E  6E22               	movwf	ADC_SelectChannel@ret^0,c
  7101                           
  7102                           ;MCAL_Layer/ADC/hal_adc.c: 106:     }
  7103   003590  EFD6  F01A         	goto	l5144
  7104   003594                     l5140:
  7105                           
  7106                           ;MCAL_Layer/ADC/hal_adc.c: 108:          (*((volatile ADCON0_t *)(0xFC2))).CHS =channel;
  7107   003594  C020  F021         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7108   003598  4621               	rlncf	??_ADC_SelectChannel^0,f,c
  7109   00359A  4621               	rlncf	??_ADC_SelectChannel^0,f,c
  7110   00359C  50C2               	movf	194,w,c	;volatile
  7111   00359E  1821               	xorwf	??_ADC_SelectChannel^0,w,c
  7112   0035A0  0BC3               	andlw	-61
  7113   0035A2  1821               	xorwf	??_ADC_SelectChannel^0,w,c
  7114   0035A4  6EC2               	movwf	194,c	;volatile
  7115   0035A6                     
  7116                           ;MCAL_Layer/ADC/hal_adc.c: 109:         adc_input_channel_port_configure(channel);
  7117   0035A6  5020               	movf	ADC_SelectChannel@channel^0,w,c
  7118   0035A8  EC40  F014         	call	_adc_input_channel_port_configure
  7119   0035AC                     l5144:
  7120                           
  7121                           ;MCAL_Layer/ADC/hal_adc.c: 111:     return ret;
  7122   0035AC  5022               	movf	ADC_SelectChannel@ret^0,w,c
  7123   0035AE  0012               	return		;funcret
  7124   0035B0                     __end_of_ADC_SelectChannel:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _adc_input_channel_port_configure *****************
  7128 ;; Defined at:
  7129 ;;		line 235 in file "MCAL_Layer/ADC/hal_adc.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  channel         1    wreg     enum E3255
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  channel         1   28[COMRAM] enum E3255
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  1    wreg      void 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;Total ram usage:        3 bytes
  7148 ;; Hardware stack levels used: 1
  7149 ;; Hardware stack levels required when called: 8
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_ADC_Init
  7154 ;;		_ADC_SelectChannel
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text40
  7159   002880                     __ptext40:
  7160                           	callstack 0
  7161   002880                     _adc_input_channel_port_configure:
  7162                           	callstack 20
  7163                           
  7164                           ;incstack = 0
  7165                           ;adc_input_channel_port_configure@channel stored from wreg
  7166   002880  6E1D               	movwf	adc_input_channel_port_configure@channel^0,c
  7167   002882                     
  7168                           ;MCAL_Layer/ADC/hal_adc.c: 236:       switch(channel){
  7169   002882  EF6A  F014         	goto	l4882
  7170   002886                     l4854:
  7171   002886  8092               	bsf	146,0,c	;volatile
  7172   002888  EFAB  F014         	goto	l447
  7173   00288C                     l4856:
  7174   00288C  8292               	bsf	146,1,c	;volatile
  7175   00288E  EFAB  F014         	goto	l447
  7176   002892                     l4858:
  7177   002892  8492               	bsf	146,2,c	;volatile
  7178   002894  EFAB  F014         	goto	l447
  7179   002898                     l4860:
  7180   002898  8692               	bsf	146,3,c	;volatile
  7181   00289A  EFAB  F014         	goto	l447
  7182   00289E                     l4862:
  7183   00289E  8A92               	bsf	146,5,c	;volatile
  7184   0028A0  EFAB  F014         	goto	l447
  7185   0028A4                     l4864:
  7186   0028A4  8096               	bsf	150,0,c	;volatile
  7187   0028A6  EFAB  F014         	goto	l447
  7188   0028AA                     l4866:
  7189   0028AA  8296               	bsf	150,1,c	;volatile
  7190   0028AC  EFAB  F014         	goto	l447
  7191   0028B0                     l4868:
  7192   0028B0  8496               	bsf	150,2,c	;volatile
  7193   0028B2  EFAB  F014         	goto	l447
  7194   0028B6                     l4870:
  7195   0028B6  8493               	bsf	147,2,c	;volatile
  7196   0028B8  EFAB  F014         	goto	l447
  7197   0028BC                     l4872:
  7198   0028BC  8693               	bsf	147,3,c	;volatile
  7199   0028BE  EFAB  F014         	goto	l447
  7200   0028C2                     l4874:
  7201   0028C2  8293               	bsf	147,1,c	;volatile
  7202   0028C4  EFAB  F014         	goto	l447
  7203   0028C8                     l4876:
  7204   0028C8  8893               	bsf	147,4,c	;volatile
  7205   0028CA  EFAB  F014         	goto	l447
  7206   0028CE                     l4878:
  7207   0028CE  8093               	bsf	147,0,c	;volatile
  7208   0028D0  EFAB  F014         	goto	l447
  7209   0028D4                     l4882:
  7210   0028D4  501D               	movf	adc_input_channel_port_configure@channel^0,w,c
  7211   0028D6  6E1B               	movwf	??_adc_input_channel_port_configure^0,c
  7212   0028D8  6A1C               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  7213                           
  7214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7215                           ; Switch size 1, requested type "simple"
  7216                           ; Number of cases is 1, Range of values is 0 to 0
  7217                           ; switch strategies available:
  7218                           ; Name         Instructions Cycles
  7219                           ; simple_byte            4     3 (average)
  7220                           ;	Chosen strategy is simple_byte
  7221   0028DA  501C               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  7222   0028DC  0A00               	xorlw	0	; case 0
  7223   0028DE  B4D8               	btfsc	status,2,c
  7224   0028E0  EF74  F014         	goto	l7568
  7225   0028E4  EFAB  F014         	goto	l447
  7226   0028E8                     l7568:
  7227                           
  7228                           ; Switch size 1, requested type "simple"
  7229                           ; Number of cases is 13, Range of values is 0 to 12
  7230                           ; switch strategies available:
  7231                           ; Name         Instructions Cycles
  7232                           ; simple_byte           40    21 (average)
  7233                           ;	Chosen strategy is simple_byte
  7234   0028E8  501B               	movf	??_adc_input_channel_port_configure^0,w,c
  7235   0028EA  0A00               	xorlw	0	; case 0
  7236   0028EC  B4D8               	btfsc	status,2,c
  7237   0028EE  EF43  F014         	goto	l4854
  7238   0028F2  0A01               	xorlw	1	; case 1
  7239   0028F4  B4D8               	btfsc	status,2,c
  7240   0028F6  EF46  F014         	goto	l4856
  7241   0028FA  0A03               	xorlw	3	; case 2
  7242   0028FC  B4D8               	btfsc	status,2,c
  7243   0028FE  EF49  F014         	goto	l4858
  7244   002902  0A01               	xorlw	1	; case 3
  7245   002904  B4D8               	btfsc	status,2,c
  7246   002906  EF4C  F014         	goto	l4860
  7247   00290A  0A07               	xorlw	7	; case 4
  7248   00290C  B4D8               	btfsc	status,2,c
  7249   00290E  EF4F  F014         	goto	l4862
  7250   002912  0A01               	xorlw	1	; case 5
  7251   002914  B4D8               	btfsc	status,2,c
  7252   002916  EF52  F014         	goto	l4864
  7253   00291A  0A03               	xorlw	3	; case 6
  7254   00291C  B4D8               	btfsc	status,2,c
  7255   00291E  EF55  F014         	goto	l4866
  7256   002922  0A01               	xorlw	1	; case 7
  7257   002924  B4D8               	btfsc	status,2,c
  7258   002926  EF58  F014         	goto	l4868
  7259   00292A  0A0F               	xorlw	15	; case 8
  7260   00292C  B4D8               	btfsc	status,2,c
  7261   00292E  EF5B  F014         	goto	l4870
  7262   002932  0A01               	xorlw	1	; case 9
  7263   002934  B4D8               	btfsc	status,2,c
  7264   002936  EF5E  F014         	goto	l4872
  7265   00293A  0A03               	xorlw	3	; case 10
  7266   00293C  B4D8               	btfsc	status,2,c
  7267   00293E  EF61  F014         	goto	l4874
  7268   002942  0A01               	xorlw	1	; case 11
  7269   002944  B4D8               	btfsc	status,2,c
  7270   002946  EF64  F014         	goto	l4876
  7271   00294A  0A07               	xorlw	7	; case 12
  7272   00294C  B4D8               	btfsc	status,2,c
  7273   00294E  EF67  F014         	goto	l4878
  7274   002952  EFAB  F014         	goto	l447
  7275   002956                     l447:
  7276   002956  0012               	return		;funcret
  7277   002958                     __end_of_adc_input_channel_port_configure:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _InterruptManagerLow *****************
  7281 ;; Defined at:
  7282 ;;		line 41 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;Total ram usage:        7 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; Hardware stack levels required when called: 7
  7303 ;; This function calls:
  7304 ;;		_ADC_ISR
  7305 ;;		_INT1_ISR
  7306 ;;		_INT2_ISR
  7307 ;;		_RB4_ISR
  7308 ;;		_RB5_ISR
  7309 ;;		_RB6_ISR
  7310 ;;		_RB7_ISR
  7311 ;; This function is called by:
  7312 ;;		Interrupt level 1
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	intcodelo
  7317   000018                     __pintcodelo:
  7318                           	callstack 0
  7319   000018                     _InterruptManagerLow:
  7320                           	callstack 14
  7321                           
  7322                           ;incstack = 0
  7323   000018  8065               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7324   00001A  CFD8 F014          	movff	status,??_InterruptManagerLow
  7325   00001E  CFE8 F015          	movff	wreg,??_InterruptManagerLow+1
  7326   000022  CFE0 F016          	movff	bsr,??_InterruptManagerLow+2
  7327   000026  CFFA F017          	movff	pclath,??_InterruptManagerLow+3
  7328   00002A  CFFB F018          	movff	pclatu,??_InterruptManagerLow+4
  7329   00002E  CFD9 F019          	movff	fsr2l,??_InterruptManagerLow+5
  7330   000032  CFDA F01A          	movff	fsr2h,??_InterruptManagerLow+6
  7331   000036                     
  7332                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:       if((0 == (*((volatile INTCON3_
      +                          t *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  7333   000036  BCF0               	btfsc	240,6,c	;volatile
  7334   000038  EF20  F000         	goto	i1u624_21
  7335   00003C  EF22  F000         	goto	i1u624_20
  7336   000040                     i1u624_21:
  7337   000040  EF2B  F000         	goto	i1l946
  7338   000044                     i1u624_20:
  7339   000044  A0F0               	btfss	240,0,c	;volatile
  7340   000046  EF27  F000         	goto	i1u625_21
  7341   00004A  EF29  F000         	goto	i1u625_20
  7342   00004E                     i1u625_21:
  7343   00004E  EF2B  F000         	goto	i1l946
  7344   000052                     i1u625_20:
  7345   000052                     
  7346                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT1_ISR();
  7347   000052  EC59  F01B         	call	_INT1_ISR	;wreg free
  7348   000056                     i1l946:
  7349                           
  7350                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 46:     if((0 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  7351   000056  BEF0               	btfsc	240,7,c	;volatile
  7352   000058  EF30  F000         	goto	i1u626_21
  7353   00005C  EF32  F000         	goto	i1u626_20
  7354   000060                     i1u626_21:
  7355   000060  EF3B  F000         	goto	i1l948
  7356   000064                     i1u626_20:
  7357   000064  A2F0               	btfss	240,1,c	;volatile
  7358   000066  EF37  F000         	goto	i1u627_21
  7359   00006A  EF39  F000         	goto	i1u627_20
  7360   00006E                     i1u627_21:
  7361   00006E  EF3B  F000         	goto	i1l948
  7362   000072                     i1u627_20:
  7363   000072                     
  7364                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 47:         INT2_ISR();
  7365   000072  EC57  F01B         	call	_INT2_ISR	;wreg free
  7366   000076                     i1l948:
  7367                           
  7368                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:      if((0 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  7369   000076  B0F1               	btfsc	241,0,c	;volatile
  7370   000078  EF40  F000         	goto	i1u628_21
  7371   00007C  EF42  F000         	goto	i1u628_20
  7372   000080                     i1u628_21:
  7373   000080  EF58  F000         	goto	i1l950
  7374   000084                     i1u628_20:
  7375   000084  A0F2               	btfss	242,0,c	;volatile
  7376   000086  EF47  F000         	goto	i1u629_21
  7377   00008A  EF49  F000         	goto	i1u629_20
  7378   00008E                     i1u629_21:
  7379   00008E  EF58  F000         	goto	i1l950
  7380   000092                     i1u629_20:
  7381   000092  3881               	swapf	129,w,c	;volatile
  7382   000094  0B0F               	andlw	15
  7383   000096  0B01               	andlw	1
  7384   000098  1858               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  7385   00009A  B4D8               	btfsc	status,2,c
  7386   00009C  EF52  F000         	goto	i1u630_21
  7387   0000A0  EF54  F000         	goto	i1u630_20
  7388   0000A4                     i1u630_21:
  7389   0000A4  EF58  F000         	goto	i1l950
  7390   0000A8                     i1u630_20:
  7391   0000A8                     
  7392                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_pin_init_value^=1;
  7393   0000A8  0E01               	movlw	1
  7394   0000AA  1A58               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  7395   0000AC                     
  7396                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR();
  7397   0000AC  EC55  F01B         	call	_RB4_ISR	;wreg free
  7398   0000B0                     i1l950:
  7399                           
  7400                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  7401   0000B0  B0F1               	btfsc	241,0,c	;volatile
  7402   0000B2  EF5D  F000         	goto	i1u631_21
  7403   0000B6  EF5F  F000         	goto	i1u631_20
  7404   0000BA                     i1u631_21:
  7405   0000BA  EF76  F000         	goto	i1l952
  7406   0000BE                     i1u631_20:
  7407   0000BE  A0F2               	btfss	242,0,c	;volatile
  7408   0000C0  EF64  F000         	goto	i1u632_21
  7409   0000C4  EF66  F000         	goto	i1u632_20
  7410   0000C8                     i1u632_21:
  7411   0000C8  EF76  F000         	goto	i1l952
  7412   0000CC                     i1u632_20:
  7413   0000CC  3881               	swapf	129,w,c	;volatile
  7414   0000CE  42E8               	rrncf	wreg,f,c
  7415   0000D0  0B07               	andlw	7
  7416   0000D2  0B01               	andlw	1
  7417   0000D4  1857               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  7418   0000D6  B4D8               	btfsc	status,2,c
  7419   0000D8  EF70  F000         	goto	i1u633_21
  7420   0000DC  EF72  F000         	goto	i1u633_20
  7421   0000E0                     i1u633_21:
  7422   0000E0  EF76  F000         	goto	i1l952
  7423   0000E4                     i1u633_20:
  7424   0000E4                     
  7425                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:         RB5_pin_init_value^=1;
  7426   0000E4  0E01               	movlw	1
  7427   0000E6  1A57               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  7428   0000E8                     
  7429                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB5_ISR();
  7430   0000E8  EC53  F01B         	call	_RB5_ISR	;wreg free
  7431   0000EC                     i1l952:
  7432                           
  7433                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  7434   0000EC  B0F1               	btfsc	241,0,c	;volatile
  7435   0000EE  EF7B  F000         	goto	i1u634_21
  7436   0000F2  EF7D  F000         	goto	i1u634_20
  7437   0000F6                     i1u634_21:
  7438   0000F6  EF94  F000         	goto	i1l954
  7439   0000FA                     i1u634_20:
  7440   0000FA  A0F2               	btfss	242,0,c	;volatile
  7441   0000FC  EF82  F000         	goto	i1u635_21
  7442   000100  EF84  F000         	goto	i1u635_20
  7443   000104                     i1u635_21:
  7444   000104  EF94  F000         	goto	i1l954
  7445   000108                     i1u635_20:
  7446   000108  4481               	rlncf	129,w,c	;volatile
  7447   00010A  46E8               	rlncf	wreg,f,c
  7448   00010C  0B03               	andlw	3
  7449   00010E  0B01               	andlw	1
  7450   000110  1856               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  7451   000112  B4D8               	btfsc	status,2,c
  7452   000114  EF8E  F000         	goto	i1u636_21
  7453   000118  EF90  F000         	goto	i1u636_20
  7454   00011C                     i1u636_21:
  7455   00011C  EF94  F000         	goto	i1l954
  7456   000120                     i1u636_20:
  7457   000120                     
  7458                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:         RB6_pin_init_value^=1;
  7459   000120  0E01               	movlw	1
  7460   000122  1A56               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  7461   000124                     
  7462                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:         RB6_ISR();
  7463   000124  EC51  F01B         	call	_RB6_ISR	;wreg free
  7464   000128                     i1l954:
  7465                           
  7466                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  7467   000128  B0F1               	btfsc	241,0,c	;volatile
  7468   00012A  EF99  F000         	goto	i1u637_21
  7469   00012E  EF9B  F000         	goto	i1u637_20
  7470   000132                     i1u637_21:
  7471   000132  EFB0  F000         	goto	i1l956
  7472   000136                     i1u637_20:
  7473   000136  A0F2               	btfss	242,0,c	;volatile
  7474   000138  EFA0  F000         	goto	i1u638_21
  7475   00013C  EFA2  F000         	goto	i1u638_20
  7476   000140                     i1u638_21:
  7477   000140  EFB0  F000         	goto	i1l956
  7478   000144                     i1u638_20:
  7479   000144  4481               	rlncf	129,w,c	;volatile
  7480   000146  0B01               	andlw	1
  7481   000148  1855               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  7482   00014A  B4D8               	btfsc	status,2,c
  7483   00014C  EFAA  F000         	goto	i1u639_21
  7484   000150  EFAC  F000         	goto	i1u639_20
  7485   000154                     i1u639_21:
  7486   000154  EFB0  F000         	goto	i1l956
  7487   000158                     i1u639_20:
  7488   000158                     
  7489                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:         RB7_pin_init_value^=1;
  7490   000158  0E01               	movlw	1
  7491   00015A  1A55               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  7492   00015C                     
  7493                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:         RB7_ISR();
  7494   00015C  EC4F  F01B         	call	_RB7_ISR	;wreg free
  7495   000160                     i1l956:
  7496                           
  7497                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:      if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  7498   000160  BC9F               	btfsc	159,6,c	;volatile
  7499   000162  EFB5  F000         	goto	i1u640_21
  7500   000166  EFB7  F000         	goto	i1u640_20
  7501   00016A                     i1u640_21:
  7502   00016A  EFC0  F000         	goto	i1l959
  7503   00016E                     i1u640_20:
  7504   00016E  AC9E               	btfss	158,6,c	;volatile
  7505   000170  EFBC  F000         	goto	i1u641_21
  7506   000174  EFBE  F000         	goto	i1u641_20
  7507   000178                     i1u641_21:
  7508   000178  EFC0  F000         	goto	i1l959
  7509   00017C                     i1u641_20:
  7510   00017C                     
  7511                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         ADC_ISR();
  7512   00017C  ECF0  F01A         	call	_ADC_ISR	;wreg free
  7513   000180                     i1l959:
  7514   000180  C01A  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  7515   000184  C019  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  7516   000188  C018  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  7517   00018C  C017  FFFA         	movff	??_InterruptManagerLow+3,pclath
  7518   000190  C016  FFE0         	movff	??_InterruptManagerLow+2,bsr
  7519   000194  C015  FFE8         	movff	??_InterruptManagerLow+1,wreg
  7520   000198  C014  FFD8         	movff	??_InterruptManagerLow,status
  7521   00019C  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7522   00019E  0010               	retfie	
  7523   0001A0                     __end_of_InterruptManagerLow:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function _RB7_ISR *****************
  7527 ;; Defined at:
  7528 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		None
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used: 1
  7548 ;; Hardware stack levels required when called: 4
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_InterruptManagerLow
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text42
  7557   00369E                     __ptext42:
  7558                           	callstack 0
  7559   00369E                     _RB7_ISR:
  7560                           	callstack 16
  7561   00369E                     
  7562                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7563   00369E  90F2               	bcf	242,0,c	;volatile
  7564   0036A0  0012               	return		;funcret
  7565   0036A2                     __end_of_RB7_ISR:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function _RB6_ISR *****************
  7569 ;; Defined at:
  7570 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		None
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 4
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_InterruptManagerLow
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text43
  7599   0036A2                     __ptext43:
  7600                           	callstack 0
  7601   0036A2                     _RB6_ISR:
  7602                           	callstack 16
  7603   0036A2                     
  7604                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7605   0036A2  90F2               	bcf	242,0,c	;volatile
  7606   0036A4  0012               	return		;funcret
  7607   0036A6                     __end_of_RB6_ISR:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function _RB5_ISR *****************
  7611 ;; Defined at:
  7612 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		None
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 4
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_InterruptManagerLow
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text44
  7641   0036A6                     __ptext44:
  7642                           	callstack 0
  7643   0036A6                     _RB5_ISR:
  7644                           	callstack 16
  7645   0036A6                     
  7646                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7647   0036A6  90F2               	bcf	242,0,c	;volatile
  7648   0036A8  0012               	return		;funcret
  7649   0036AA                     __end_of_RB5_ISR:
  7650                           	callstack 0
  7651                           
  7652 ;; *************** function _RB4_ISR *****************
  7653 ;; Defined at:
  7654 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;		None
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		None
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;Total ram usage:        0 bytes
  7673 ;; Hardware stack levels used: 1
  7674 ;; Hardware stack levels required when called: 4
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_InterruptManagerLow
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text45
  7683   0036AA                     __ptext45:
  7684                           	callstack 0
  7685   0036AA                     _RB4_ISR:
  7686                           	callstack 16
  7687   0036AA                     
  7688                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7689   0036AA  90F2               	bcf	242,0,c	;volatile
  7690   0036AC  0012               	return		;funcret
  7691   0036AE                     __end_of_RB4_ISR:
  7692                           	callstack 0
  7693                           
  7694 ;; *************** function _INT2_ISR *****************
  7695 ;; Defined at:
  7696 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		None
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;Total ram usage:        0 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 4
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_InterruptManagerLow
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text46
  7725   0036AE                     __ptext46:
  7726                           	callstack 0
  7727   0036AE                     _INT2_ISR:
  7728                           	callstack 16
  7729   0036AE                     
  7730                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  7731   0036AE  92F0               	bcf	240,1,c	;volatile
  7732   0036B0  0012               	return		;funcret
  7733   0036B2                     __end_of_INT2_ISR:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function _INT1_ISR *****************
  7737 ;; Defined at:
  7738 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;		None
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      void 
  7745 ;; Registers used:
  7746 ;;		None
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;Total ram usage:        0 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 4
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_InterruptManagerLow
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text47
  7767   0036B2                     __ptext47:
  7768                           	callstack 0
  7769   0036B2                     _INT1_ISR:
  7770                           	callstack 16
  7771   0036B2                     
  7772                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  7773   0036B2  90F0               	bcf	240,0,c	;volatile
  7774   0036B4  0012               	return		;funcret
  7775   0036B6                     __end_of_INT1_ISR:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function _ADC_ISR *****************
  7779 ;; Defined at:
  7780 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; Hardware stack levels required when called: 6
  7801 ;; This function calls:
  7802 ;;		NULL
  7803 ;;		_ADC_ISR_HANDLER
  7804 ;; This function is called by:
  7805 ;;		_InterruptManagerLow
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text48
  7810   0035E0                     __ptext48:
  7811                           	callstack 0
  7812   0035E0                     _ADC_ISR:
  7813                           	callstack 14
  7814   0035E0                     
  7815                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
  7816   0035E0  9C9E               	bcf	158,6,c	;volatile
  7817   0035E2                     
  7818                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 6:       if(ADC_InterruptHandler){
  7819   0035E2  5051               	movf	_ADC_InterruptHandler^0,w,c
  7820   0035E4  1052               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  7821   0035E6  B4D8               	btfsc	status,2,c
  7822   0035E8  EFF8  F01A         	goto	i1u456_21
  7823   0035EC  EFFA  F01A         	goto	i1u456_20
  7824   0035F0                     i1u456_21:
  7825   0035F0  EF06  F01B         	goto	i1l599
  7826   0035F4                     i1u456_20:
  7827   0035F4                     
  7828                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 7:        ADC_InterruptHandler();
  7829   0035F4  D802               	call	i1u457_28
  7830   0035F6  EF06  F01B         	goto	i1u457_29
  7831   0035FA                     i1u457_28:
  7832   0035FA  0005               	push	
  7833   0035FC  6EFA               	movwf	pclath,c
  7834   0035FE  5051               	movf	_ADC_InterruptHandler^0,w,c
  7835   003600  6EFD               	movwf	tosl,c
  7836   003602  5052               	movf	(_ADC_InterruptHandler+1)^0,w,c
  7837   003604  6EFE               	movwf	tosh,c
  7838   003606  6AFF               	clrf	tosu,c
  7839   003608  50FA               	movf	pclath,w,c
  7840   00360A  0012               	return		;indir
  7841   00360C                     i1u457_29:
  7842   00360C                     i1l599:
  7843   00360C  0012               	return		;funcret
  7844   00360E                     __end_of_ADC_ISR:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function _ADC_ISR_HANDLER *****************
  7848 ;; Defined at:
  7849 ;;		line 65 in file "application.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used: 1
  7869 ;; Hardware stack levels required when called: 5
  7870 ;; This function calls:
  7871 ;;		_ADC_GetConversionResult
  7872 ;; This function is called by:
  7873 ;;		_ADC_ISR
  7874 ;;		i2_ADC_ISR
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text49
  7879   0030F4                     __ptext49:
  7880                           	callstack 0
  7881   0030F4                     _ADC_ISR_HANDLER:
  7882                           	callstack 0
  7883                           
  7884                           ;Skip over the trampoline to the duplicate function for level 2
  7885   0030F4  A265               	btfss	int$flags,1,c
  7886   0030F6  EF7F  F018         	goto	_ADC_ISR_HANDLER$intlevel1
  7887   0030FA  EF30  F019         	goto	i2_ADC_ISR_HANDLER
  7888   0030FE                     _ADC_ISR_HANDLER$intlevel1:
  7889                           	callstack 14
  7890   0030FE                     
  7891                           ;application.c: 66:        if (ADC_Flag == 1){
  7892   0030FE  0454               	decf	_ADC_Flag^0,w,c
  7893   003100  A4D8               	btfss	status,2,c
  7894   003102  EF85  F018         	goto	i1u436_21
  7895   003106  EF87  F018         	goto	i1u436_20
  7896   00310A                     i1u436_21:
  7897   00310A  EF95  F018         	goto	i1l5164
  7898   00310E                     i1u436_20:
  7899   00310E                     
  7900                           ;application.c: 67:            ADC_Flag = 0;
  7901   00310E  0E00               	movlw	0
  7902   003110  6E54               	movwf	_ADC_Flag^0,c
  7903   003112                     
  7904                           ;application.c: 68:            ADC_GetConversionResult(&adc_1,&lm35_res_2);
  7905   003112  0ED3               	movlw	low _adc_1
  7906   003114  6E0C               	movwf	ADC_GetConversionResult@_adc^0,c
  7907   003116  0E00               	movlw	high _adc_1
  7908   003118  6E0D               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7909   00311A  0E60               	movlw	low _lm35_res_2
  7910   00311C  6E0E               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7911   00311E  0E00               	movlw	high _lm35_res_2
  7912   003120  6E0F               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7913   003122  ECD3  F013         	call	_ADC_GetConversionResult	;wreg free
  7914                           
  7915                           ;application.c: 69:        }
  7916   003126  EFA9  F018         	goto	i1l1034
  7917   00312A                     i1l5164:
  7918   00312A  5054               	movf	_ADC_Flag^0,w,c
  7919   00312C  A4D8               	btfss	status,2,c
  7920   00312E  EF9B  F018         	goto	i1u437_21
  7921   003132  EF9D  F018         	goto	i1u437_20
  7922   003136                     i1u437_21:
  7923   003136  EFA9  F018         	goto	i1l1034
  7924   00313A                     i1u437_20:
  7925   00313A                     
  7926                           ;application.c: 71:            ADC_Flag=1;
  7927   00313A  0E01               	movlw	1
  7928   00313C  6E54               	movwf	_ADC_Flag^0,c
  7929   00313E                     
  7930                           ;application.c: 72:            ADC_GetConversionResult(&adc_1,&lm35_res_1);
  7931   00313E  0ED3               	movlw	low _adc_1
  7932   003140  6E0C               	movwf	ADC_GetConversionResult@_adc^0,c
  7933   003142  0E00               	movlw	high _adc_1
  7934   003144  6E0D               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7935   003146  0E62               	movlw	low _lm35_res_1
  7936   003148  6E0E               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7937   00314A  0E00               	movlw	high _lm35_res_1
  7938   00314C  6E0F               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7939   00314E  ECD3  F013         	call	_ADC_GetConversionResult	;wreg free
  7940   003152                     i1l1034:
  7941   003152  0012               	return		;funcret
  7942   003154                     __end_of_ADC_ISR_HANDLER:
  7943                           	callstack 0
  7944                           
  7945 ;; *************** function _ADC_GetConversionResult *****************
  7946 ;; Defined at:
  7947 ;;		line 168 in file "MCAL_Layer/ADC/hal_adc.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  _adc            2   11[COMRAM] PTR const struct .
  7950 ;;		 -> adc_1(7), 
  7951 ;;  conversion_r    2   13[COMRAM] PTR unsigned int 
  7952 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  ret             1   18[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;Total ram usage:        8 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 4
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_ADC_ISR_HANDLER
  7975 ;;		_ADC_GetConversion_Blocking
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           	psect	text50
  7980   0027A6                     __ptext50:
  7981                           	callstack 0
  7982   0027A6                     _ADC_GetConversionResult:
  7983                           	callstack 14
  7984   0027A6                     
  7985                           ;MCAL_Layer/ADC/hal_adc.c: 169:     Std_ReturnType ret=(Std_ReturnType)0x01;
  7986   0027A6  0E01               	movlw	1
  7987   0027A8  6E13               	movwf	ADC_GetConversionResult@ret^0,c
  7988   0027AA                     
  7989                           ;MCAL_Layer/ADC/hal_adc.c: 170:      if((_adc==((void*)0))||(conversion_result==((void*)
      +                          0))){
  7990   0027AA  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  7991   0027AC  100D               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7992   0027AE  B4D8               	btfsc	status,2,c
  7993   0027B0  EFDC  F013         	goto	i1u409_21
  7994   0027B4  EFDE  F013         	goto	i1u409_20
  7995   0027B8                     i1u409_21:
  7996   0027B8  EFE7  F013         	goto	i1l4920
  7997   0027BC                     i1u409_20:
  7998   0027BC  500E               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7999   0027BE  100F               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  8000   0027C0  A4D8               	btfss	status,2,c
  8001   0027C2  EFE5  F013         	goto	i1u410_21
  8002   0027C6  EFE7  F013         	goto	i1u410_20
  8003   0027CA                     i1u410_21:
  8004   0027CA  EF1B  F014         	goto	i1l4930
  8005   0027CE                     i1u410_20:
  8006   0027CE                     i1l4920:
  8007                           
  8008                           ;MCAL_Layer/ADC/hal_adc.c: 171:         ret=(Std_ReturnType)0x00;
  8009   0027CE  0E00               	movlw	0
  8010   0027D0  6E13               	movwf	ADC_GetConversionResult@ret^0,c
  8011                           
  8012                           ;MCAL_Layer/ADC/hal_adc.c: 172:     }
  8013   0027D2  EF3E  F014         	goto	i1l4932
  8014   0027D6                     i1l4922:
  8015   0027D6  50C3               	movf	195,w,c	;volatile
  8016   0027D8  CFC4 F010          	movff	4036,??_ADC_GetConversionResult	;volatile
  8017   0027DC  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
  8018   0027DE  C010  F011         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  8019   0027E2  6A10               	clrf	??_ADC_GetConversionResult^0,c
  8020   0027E4  2610               	addwf	??_ADC_GetConversionResult^0,f,c
  8021   0027E6  0E00               	movlw	0
  8022   0027E8  2211               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  8023   0027EA  0E06               	movlw	6
  8024   0027EC  6E12               	movwf	(??_ADC_GetConversionResult+2)^0,c
  8025   0027EE                     i1u411_25:
  8026   0027EE  3411               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  8027   0027F0  3211               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  8028   0027F2  3210               	rrcf	??_ADC_GetConversionResult^0,f,c
  8029   0027F4  2E12               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  8030   0027F6  EFF7  F013         	goto	i1u411_25
  8031   0027FA  C00E  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  8032   0027FE  C00F  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  8033   002802  C010  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  8034   002806  C011  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  8035   00280A  EF3E  F014         	goto	i1l4932
  8036   00280E                     i1l4924:
  8037   00280E  50C3               	movf	195,w,c	;volatile
  8038   002810  CFC4 F010          	movff	4036,??_ADC_GetConversionResult	;volatile
  8039   002814  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
  8040   002816  C010  F011         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  8041   00281A  6A10               	clrf	??_ADC_GetConversionResult^0,c
  8042   00281C  2610               	addwf	??_ADC_GetConversionResult^0,f,c
  8043   00281E  0E00               	movlw	0
  8044   002820  2211               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  8045   002822  C00E  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  8046   002826  C00F  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  8047   00282A  C010  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  8048   00282E  C011  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  8049   002832  EF3E  F014         	goto	i1l4932
  8050   002836                     i1l4930:
  8051   002836  EE20 F006          	lfsr	2,6
  8052   00283A  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  8053   00283C  26D9               	addwf	fsr2l,f,c
  8054   00283E  500D               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  8055   002840  22DA               	addwfc	fsr2h,f,c
  8056   002842  B2DF               	btfsc	indf2,1,c
  8057   002844  EF26  F014         	goto	i1u412_21
  8058   002848  EF29  F014         	goto	i1u412_20
  8059   00284C                     i1u412_21:
  8060   00284C  0E01               	movlw	1
  8061   00284E  EF2A  F014         	goto	i1u413_20
  8062   002852                     i1u412_20:
  8063   002852  0E00               	movlw	0
  8064   002854                     i1u413_20:
  8065   002854  6E10               	movwf	??_ADC_GetConversionResult^0,c
  8066   002856  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
  8067                           
  8068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8069                           ; Switch size 1, requested type "simple"
  8070                           ; Number of cases is 1, Range of values is 0 to 0
  8071                           ; switch strategies available:
  8072                           ; Name         Instructions Cycles
  8073                           ; simple_byte            4     3 (average)
  8074                           ;	Chosen strategy is simple_byte
  8075   002858  5011               	movf	(??_ADC_GetConversionResult+1)^0,w,c
  8076   00285A  0A00               	xorlw	0	; case 0
  8077   00285C  B4D8               	btfsc	status,2,c
  8078   00285E  EF33  F014         	goto	i1l7570
  8079   002862  EF07  F014         	goto	i1l4924
  8080   002866                     i1l7570:
  8081                           
  8082                           ; Switch size 1, requested type "simple"
  8083                           ; Number of cases is 2, Range of values is 0 to 1
  8084                           ; switch strategies available:
  8085                           ; Name         Instructions Cycles
  8086                           ; simple_byte            7     4 (average)
  8087                           ;	Chosen strategy is simple_byte
  8088   002866  5010               	movf	??_ADC_GetConversionResult^0,w,c
  8089   002868  0A00               	xorlw	0	; case 0
  8090   00286A  B4D8               	btfsc	status,2,c
  8091   00286C  EFEB  F013         	goto	i1l4922
  8092   002870  0A01               	xorlw	1	; case 1
  8093   002872  B4D8               	btfsc	status,2,c
  8094   002874  EF07  F014         	goto	i1l4924
  8095   002878  EF07  F014         	goto	i1l4924
  8096   00287C                     i1l4932:
  8097                           
  8098                           ;MCAL_Layer/ADC/hal_adc.c: 180:     return ret;
  8099   00287C  5013               	movf	ADC_GetConversionResult@ret^0,w,c
  8100   00287E  0012               	return		;funcret
  8101   002880                     __end_of_ADC_GetConversionResult:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function _InterruptManagerHigh *****************
  8105 ;; Defined at:
  8106 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;Total ram usage:        4 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; Hardware stack levels required when called: 3
  8127 ;; This function calls:
  8128 ;;		_INT0_ISR
  8129 ;;		i2_ADC_ISR
  8130 ;;		i2_INT1_ISR
  8131 ;;		i2_INT2_ISR
  8132 ;;		i2_RB4_ISR
  8133 ;;		i2_RB5_ISR
  8134 ;;		i2_RB6_ISR
  8135 ;;		i2_RB7_ISR
  8136 ;; This function is called by:
  8137 ;;		Interrupt level 2
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	intcode
  8142   000008                     __pintcode:
  8143                           	callstack 0
  8144   000008                     _InterruptManagerHigh:
  8145                           	callstack 14
  8146                           
  8147                           ;incstack = 0
  8148   000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8149   00000A  EDF0  F00E         	call	int_func,f	;refresh shadow registers
  8150                           
  8151                           	psect	intcode_body
  8152   001DE0                     __pintcode_body:
  8153                           	callstack 14
  8154   001DE0                     int_func:
  8155                           	callstack 14
  8156   001DE0  0006               	pop		; remove dummy address from shadow register refresh
  8157   001DE2  CFFA F008          	movff	pclath,??_InterruptManagerHigh
  8158   001DE6  CFFB F009          	movff	pclatu,??_InterruptManagerHigh+1
  8159   001DEA  CFD9 F00A          	movff	fsr2l,??_InterruptManagerHigh+2
  8160   001DEE  CFDA F00B          	movff	fsr2h,??_InterruptManagerHigh+3
  8161   001DF2                     
  8162                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 4:     if((1 == (*((volatile INTCON_t *)
      +                          (0xFF2))).INT0IE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).INT0IF)){
  8163   001DF2  A8F2               	btfss	242,4,c	;volatile
  8164   001DF4  EFFE  F00E         	goto	i2u604_41
  8165   001DF8  EF00  F00F         	goto	i2u604_40
  8166   001DFC                     i2u604_41:
  8167   001DFC  EF09  F00F         	goto	i2l925
  8168   001E00                     i2u604_40:
  8169   001E00  A2F2               	btfss	242,1,c	;volatile
  8170   001E02  EF05  F00F         	goto	i2u605_41
  8171   001E06  EF07  F00F         	goto	i2u605_40
  8172   001E0A                     i2u605_41:
  8173   001E0A  EF09  F00F         	goto	i2l925
  8174   001E0E                     i2u605_40:
  8175   001E0E                     
  8176                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 5:         INT0_ISR();
  8177   001E0E  EC67  F01B         	call	_INT0_ISR	;wreg free
  8178   001E12                     i2l925:
  8179                           
  8180                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 8:      if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  8181   001E12  ACF0               	btfss	240,6,c	;volatile
  8182   001E14  EF0E  F00F         	goto	i2u606_41
  8183   001E18  EF10  F00F         	goto	i2u606_40
  8184   001E1C                     i2u606_41:
  8185   001E1C  EF19  F00F         	goto	i2l927
  8186   001E20                     i2u606_40:
  8187   001E20  A0F0               	btfss	240,0,c	;volatile
  8188   001E22  EF15  F00F         	goto	i2u607_41
  8189   001E26  EF17  F00F         	goto	i2u607_40
  8190   001E2A                     i2u607_41:
  8191   001E2A  EF19  F00F         	goto	i2l927
  8192   001E2E                     i2u607_40:
  8193   001E2E                     
  8194                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 9:         INT1_ISR();
  8195   001E2E  EC65  F01B         	call	i2_INT1_ISR	;wreg free
  8196   001E32                     i2l927:
  8197                           
  8198                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 12:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  8199   001E32  AEF0               	btfss	240,7,c	;volatile
  8200   001E34  EF1E  F00F         	goto	i2u608_41
  8201   001E38  EF20  F00F         	goto	i2u608_40
  8202   001E3C                     i2u608_41:
  8203   001E3C  EF29  F00F         	goto	i2l929
  8204   001E40                     i2u608_40:
  8205   001E40  A2F0               	btfss	240,1,c	;volatile
  8206   001E42  EF25  F00F         	goto	i2u609_41
  8207   001E46  EF27  F00F         	goto	i2u609_40
  8208   001E4A                     i2u609_41:
  8209   001E4A  EF29  F00F         	goto	i2l929
  8210   001E4E                     i2u609_40:
  8211   001E4E                     
  8212                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 13:         INT2_ISR();
  8213   001E4E  EC63  F01B         	call	i2_INT2_ISR	;wreg free
  8214   001E52                     i2l929:
  8215                           
  8216                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 16:      if((1 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  8217   001E52  A0F1               	btfss	241,0,c	;volatile
  8218   001E54  EF2E  F00F         	goto	i2u610_41
  8219   001E58  EF30  F00F         	goto	i2u610_40
  8220   001E5C                     i2u610_41:
  8221   001E5C  EF46  F00F         	goto	i2l931
  8222   001E60                     i2u610_40:
  8223   001E60  A0F2               	btfss	242,0,c	;volatile
  8224   001E62  EF35  F00F         	goto	i2u611_41
  8225   001E66  EF37  F00F         	goto	i2u611_40
  8226   001E6A                     i2u611_41:
  8227   001E6A  EF46  F00F         	goto	i2l931
  8228   001E6E                     i2u611_40:
  8229   001E6E  3881               	swapf	129,w,c	;volatile
  8230   001E70  0B0F               	andlw	15
  8231   001E72  0B01               	andlw	1
  8232   001E74  1858               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  8233   001E76  B4D8               	btfsc	status,2,c
  8234   001E78  EF40  F00F         	goto	i2u612_41
  8235   001E7C  EF42  F00F         	goto	i2u612_40
  8236   001E80                     i2u612_41:
  8237   001E80  EF46  F00F         	goto	i2l931
  8238   001E84                     i2u612_40:
  8239   001E84                     
  8240                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 17:         RB4_pin_init_value^=1;
  8241   001E84  0E01               	movlw	1
  8242   001E86  1A58               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  8243   001E88                     
  8244                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 18:         RB4_ISR();
  8245   001E88  EC61  F01B         	call	i2_RB4_ISR	;wreg free
  8246   001E8C                     i2l931:
  8247                           
  8248                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 21:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  8249   001E8C  A0F1               	btfss	241,0,c	;volatile
  8250   001E8E  EF4B  F00F         	goto	i2u613_41
  8251   001E92  EF4D  F00F         	goto	i2u613_40
  8252   001E96                     i2u613_41:
  8253   001E96  EF64  F00F         	goto	i2l933
  8254   001E9A                     i2u613_40:
  8255   001E9A  A0F2               	btfss	242,0,c	;volatile
  8256   001E9C  EF52  F00F         	goto	i2u614_41
  8257   001EA0  EF54  F00F         	goto	i2u614_40
  8258   001EA4                     i2u614_41:
  8259   001EA4  EF64  F00F         	goto	i2l933
  8260   001EA8                     i2u614_40:
  8261   001EA8  3881               	swapf	129,w,c	;volatile
  8262   001EAA  42E8               	rrncf	wreg,f,c
  8263   001EAC  0B07               	andlw	7
  8264   001EAE  0B01               	andlw	1
  8265   001EB0  1857               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  8266   001EB2  B4D8               	btfsc	status,2,c
  8267   001EB4  EF5E  F00F         	goto	i2u615_41
  8268   001EB8  EF60  F00F         	goto	i2u615_40
  8269   001EBC                     i2u615_41:
  8270   001EBC  EF64  F00F         	goto	i2l933
  8271   001EC0                     i2u615_40:
  8272   001EC0                     
  8273                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 22:         RB5_pin_init_value^=1;
  8274   001EC0  0E01               	movlw	1
  8275   001EC2  1A57               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  8276   001EC4                     
  8277                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 23:         RB5_ISR();
  8278   001EC4  EC5F  F01B         	call	i2_RB5_ISR	;wreg free
  8279   001EC8                     i2l933:
  8280                           
  8281                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 26:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  8282   001EC8  A0F1               	btfss	241,0,c	;volatile
  8283   001ECA  EF69  F00F         	goto	i2u616_41
  8284   001ECE  EF6B  F00F         	goto	i2u616_40
  8285   001ED2                     i2u616_41:
  8286   001ED2  EF82  F00F         	goto	i2l935
  8287   001ED6                     i2u616_40:
  8288   001ED6  A0F2               	btfss	242,0,c	;volatile
  8289   001ED8  EF70  F00F         	goto	i2u617_41
  8290   001EDC  EF72  F00F         	goto	i2u617_40
  8291   001EE0                     i2u617_41:
  8292   001EE0  EF82  F00F         	goto	i2l935
  8293   001EE4                     i2u617_40:
  8294   001EE4  4481               	rlncf	129,w,c	;volatile
  8295   001EE6  46E8               	rlncf	wreg,f,c
  8296   001EE8  0B03               	andlw	3
  8297   001EEA  0B01               	andlw	1
  8298   001EEC  1856               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  8299   001EEE  B4D8               	btfsc	status,2,c
  8300   001EF0  EF7C  F00F         	goto	i2u618_41
  8301   001EF4  EF7E  F00F         	goto	i2u618_40
  8302   001EF8                     i2u618_41:
  8303   001EF8  EF82  F00F         	goto	i2l935
  8304   001EFC                     i2u618_40:
  8305   001EFC                     
  8306                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 27:         RB6_pin_init_value^=1;
  8307   001EFC  0E01               	movlw	1
  8308   001EFE  1A56               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  8309   001F00                     
  8310                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 28:         RB6_ISR();
  8311   001F00  EC5D  F01B         	call	i2_RB6_ISR	;wreg free
  8312   001F04                     i2l935:
  8313                           
  8314                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 31:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  8315   001F04  A0F1               	btfss	241,0,c	;volatile
  8316   001F06  EF87  F00F         	goto	i2u619_41
  8317   001F0A  EF89  F00F         	goto	i2u619_40
  8318   001F0E                     i2u619_41:
  8319   001F0E  EF9E  F00F         	goto	i2l937
  8320   001F12                     i2u619_40:
  8321   001F12  A0F2               	btfss	242,0,c	;volatile
  8322   001F14  EF8E  F00F         	goto	i2u620_41
  8323   001F18  EF90  F00F         	goto	i2u620_40
  8324   001F1C                     i2u620_41:
  8325   001F1C  EF9E  F00F         	goto	i2l937
  8326   001F20                     i2u620_40:
  8327   001F20  4481               	rlncf	129,w,c	;volatile
  8328   001F22  0B01               	andlw	1
  8329   001F24  1855               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  8330   001F26  B4D8               	btfsc	status,2,c
  8331   001F28  EF98  F00F         	goto	i2u621_41
  8332   001F2C  EF9A  F00F         	goto	i2u621_40
  8333   001F30                     i2u621_41:
  8334   001F30  EF9E  F00F         	goto	i2l937
  8335   001F34                     i2u621_40:
  8336   001F34                     
  8337                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:         RB7_pin_init_value^=1;
  8338   001F34  0E01               	movlw	1
  8339   001F36  1A55               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  8340   001F38                     
  8341                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:         RB7_ISR();
  8342   001F38  EC5B  F01B         	call	i2_RB7_ISR	;wreg free
  8343   001F3C                     i2l937:
  8344                           
  8345                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 36:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  8346   001F3C  AC9F               	btfss	159,6,c	;volatile
  8347   001F3E  EFA3  F00F         	goto	i2u622_41
  8348   001F42  EFA5  F00F         	goto	i2u622_40
  8349   001F46                     i2u622_41:
  8350   001F46  EFAE  F00F         	goto	i2l940
  8351   001F4A                     i2u622_40:
  8352   001F4A  AC9E               	btfss	158,6,c	;volatile
  8353   001F4C  EFAA  F00F         	goto	i2u623_41
  8354   001F50  EFAC  F00F         	goto	i2u623_40
  8355   001F54                     i2u623_41:
  8356   001F54  EFAE  F00F         	goto	i2l940
  8357   001F58                     i2u623_40:
  8358   001F58                     
  8359                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 37:         ADC_ISR();
  8360   001F58  EC07  F01B         	call	i2_ADC_ISR	;wreg free
  8361   001F5C                     i2l940:
  8362   001F5C  C00B  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  8363   001F60  C00A  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  8364   001F64  C009  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  8365   001F68  C008  FFFA         	movff	??_InterruptManagerHigh,pclath
  8366   001F6C  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8367   001F6E  0011               	retfie		f
  8368   001F70                     __end_of_InterruptManagerHigh:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function i2_RB7_ISR *****************
  8372 ;; Defined at:
  8373 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		None
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_InterruptManagerHigh
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text52
  8401   0036B6                     __ptext52:
  8402                           	callstack 0
  8403   0036B6                     i2_RB7_ISR:
  8404                           	callstack 16
  8405   0036B6                     
  8406                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  8407   0036B6  90F2               	bcf	242,0,c	;volatile
  8408   0036B8  0012               	return		;funcret
  8409   0036BA                     __end_ofi2_RB7_ISR:
  8410                           	callstack 0
  8411                           
  8412 ;; *************** function i2_RB6_ISR *****************
  8413 ;; Defined at:
  8414 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;		None
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;		None
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		None
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;Total ram usage:        0 bytes
  8433 ;; Hardware stack levels used: 1
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_InterruptManagerHigh
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text53
  8442   0036BA                     __ptext53:
  8443                           	callstack 0
  8444   0036BA                     i2_RB6_ISR:
  8445                           	callstack 16
  8446   0036BA                     
  8447                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  8448   0036BA  90F2               	bcf	242,0,c	;volatile
  8449   0036BC  0012               	return		;funcret
  8450   0036BE                     __end_ofi2_RB6_ISR:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function i2_RB5_ISR *****************
  8454 ;; Defined at:
  8455 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		None
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;Total ram usage:        0 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_InterruptManagerHigh
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text54
  8483   0036BE                     __ptext54:
  8484                           	callstack 0
  8485   0036BE                     i2_RB5_ISR:
  8486                           	callstack 16
  8487   0036BE                     
  8488                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  8489   0036BE  90F2               	bcf	242,0,c	;volatile
  8490   0036C0  0012               	return		;funcret
  8491   0036C2                     __end_ofi2_RB5_ISR:
  8492                           	callstack 0
  8493                           
  8494 ;; *************** function i2_RB4_ISR *****************
  8495 ;; Defined at:
  8496 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;		None
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;		None
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  1    wreg      void 
  8503 ;; Registers used:
  8504 ;;		None
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;Total ram usage:        0 bytes
  8515 ;; Hardware stack levels used: 1
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_InterruptManagerHigh
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text55
  8524   0036C2                     __ptext55:
  8525                           	callstack 0
  8526   0036C2                     i2_RB4_ISR:
  8527                           	callstack 16
  8528   0036C2                     
  8529                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  8530   0036C2  90F2               	bcf	242,0,c	;volatile
  8531   0036C4  0012               	return		;funcret
  8532   0036C6                     __end_ofi2_RB4_ISR:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function i2_INT2_ISR *****************
  8536 ;; Defined at:
  8537 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		None
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used: 1
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_InterruptManagerHigh
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text56
  8565   0036C6                     __ptext56:
  8566                           	callstack 0
  8567   0036C6                     i2_INT2_ISR:
  8568                           	callstack 16
  8569   0036C6                     
  8570                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  8571   0036C6  92F0               	bcf	240,1,c	;volatile
  8572   0036C8  0012               	return		;funcret
  8573   0036CA                     __end_ofi2_INT2_ISR:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function i2_INT1_ISR *****************
  8577 ;; Defined at:
  8578 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		None
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_InterruptManagerHigh
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text57
  8606   0036CA                     __ptext57:
  8607                           	callstack 0
  8608   0036CA                     i2_INT1_ISR:
  8609                           	callstack 16
  8610   0036CA                     
  8611                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  8612   0036CA  90F0               	bcf	240,0,c	;volatile
  8613   0036CC  0012               	return		;funcret
  8614   0036CE                     __end_ofi2_INT1_ISR:
  8615                           	callstack 0
  8616                           
  8617 ;; *************** function i2_ADC_ISR *****************
  8618 ;; Defined at:
  8619 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 2
  8640 ;; This function calls:
  8641 ;;		NULL
  8642 ;;		i2_ADC_ISR_HANDLER
  8643 ;; This function is called by:
  8644 ;;		_InterruptManagerHigh
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           	psect	text58
  8649   00360E                     __ptext58:
  8650                           	callstack 0
  8651   00360E                     i2_ADC_ISR:
  8652                           	callstack 14
  8653   00360E                     
  8654                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
  8655   00360E  9C9E               	bcf	158,6,c	;volatile
  8656   003610                     
  8657                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 6:       if(ADC_InterruptHandler){
  8658   003610  5051               	movf	_ADC_InterruptHandler^0,w,c
  8659   003612  1052               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  8660   003614  B4D8               	btfsc	status,2,c
  8661   003616  EF0F  F01B         	goto	i2u518_41
  8662   00361A  EF11  F01B         	goto	i2u518_40
  8663   00361E                     i2u518_41:
  8664   00361E  EF1D  F01B         	goto	i2l599
  8665   003622                     i2u518_40:
  8666   003622                     
  8667                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 7:        ADC_InterruptHandler();
  8668   003622  D802               	call	i2u519_48
  8669   003624  EF1D  F01B         	goto	i2u519_49
  8670   003628                     i2u519_48:
  8671   003628  0005               	push	
  8672   00362A  6EFA               	movwf	pclath,c
  8673   00362C  5051               	movf	_ADC_InterruptHandler^0,w,c
  8674   00362E  6EFD               	movwf	tosl,c
  8675   003630  5052               	movf	(_ADC_InterruptHandler+1)^0,w,c
  8676   003632  6EFE               	movwf	tosh,c
  8677   003634  6AFF               	clrf	tosu,c
  8678   003636  50FA               	movf	pclath,w,c
  8679   003638  0012               	return		;indir
  8680   00363A                     i2u519_49:
  8681   00363A                     i2l599:
  8682   00363A  0012               	return		;funcret
  8683   00363C                     __end_ofi2_ADC_ISR:
  8684                           	callstack 0
  8685                           
  8686 ;; *************** function i2_ADC_ISR_HANDLER *****************
  8687 ;; Defined at:
  8688 ;;		line 65 in file "application.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;		None
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;		None
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      void 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;Total ram usage:        0 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 1
  8709 ;; This function calls:
  8710 ;;		i2_ADC_GetConversionResult
  8711 ;; This function is called by:
  8712 ;;		_ADC_ISR
  8713 ;;		i2_ADC_ISR
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text59
  8718   003260                     __ptext59:
  8719                           	callstack 0
  8720   003260                     i2_ADC_ISR_HANDLER:
  8721                           	callstack 14
  8722   003260                     
  8723                           ;application.c: 66:        if (ADC_Flag == 1){
  8724   003260  0454               	decf	_ADC_Flag^0,w,c
  8725   003262  A4D8               	btfss	status,2,c
  8726   003264  EF36  F019         	goto	i2u438_41
  8727   003268  EF38  F019         	goto	i2u438_40
  8728   00326C                     i2u438_41:
  8729   00326C  EF46  F019         	goto	i2l5176
  8730   003270                     i2u438_40:
  8731   003270                     
  8732                           ;application.c: 67:            ADC_Flag = 0;
  8733   003270  0E00               	movlw	0
  8734   003272  6E54               	movwf	_ADC_Flag^0,c
  8735   003274                     
  8736                           ;application.c: 68:            ADC_GetConversionResult(&adc_1,&lm35_res_2);
  8737   003274  0ED3               	movlw	low _adc_1
  8738   003276  6E01               	movwf	i2ADC_GetConversionResult@_adc^0,c
  8739   003278  0E00               	movlw	high _adc_1
  8740   00327A  6E02               	movwf	(i2ADC_GetConversionResult@_adc+1)^0,c
  8741   00327C  0E60               	movlw	low _lm35_res_2
  8742   00327E  6E03               	movwf	i2ADC_GetConversionResult@conversion_result^0,c
  8743   003280  0E00               	movlw	high _lm35_res_2
  8744   003282  6E04               	movwf	(i2ADC_GetConversionResult@conversion_result+1)^0,c
  8745   003284  ECAC  F014         	call	i2_ADC_GetConversionResult	;wreg free
  8746                           
  8747                           ;application.c: 69:        }
  8748   003288  EF5A  F019         	goto	i2l1034
  8749   00328C                     i2l5176:
  8750   00328C  5054               	movf	_ADC_Flag^0,w,c
  8751   00328E  A4D8               	btfss	status,2,c
  8752   003290  EF4C  F019         	goto	i2u439_41
  8753   003294  EF4E  F019         	goto	i2u439_40
  8754   003298                     i2u439_41:
  8755   003298  EF5A  F019         	goto	i2l1034
  8756   00329C                     i2u439_40:
  8757   00329C                     
  8758                           ;application.c: 71:            ADC_Flag=1;
  8759   00329C  0E01               	movlw	1
  8760   00329E  6E54               	movwf	_ADC_Flag^0,c
  8761   0032A0                     
  8762                           ;application.c: 72:            ADC_GetConversionResult(&adc_1,&lm35_res_1);
  8763   0032A0  0ED3               	movlw	low _adc_1
  8764   0032A2  6E01               	movwf	i2ADC_GetConversionResult@_adc^0,c
  8765   0032A4  0E00               	movlw	high _adc_1
  8766   0032A6  6E02               	movwf	(i2ADC_GetConversionResult@_adc+1)^0,c
  8767   0032A8  0E62               	movlw	low _lm35_res_1
  8768   0032AA  6E03               	movwf	i2ADC_GetConversionResult@conversion_result^0,c
  8769   0032AC  0E00               	movlw	high _lm35_res_1
  8770   0032AE  6E04               	movwf	(i2ADC_GetConversionResult@conversion_result+1)^0,c
  8771   0032B0  ECAC  F014         	call	i2_ADC_GetConversionResult	;wreg free
  8772   0032B4                     i2l1034:
  8773   0032B4  0012               	return		;funcret
  8774   0032B6                     __end_ofi2_ADC_ISR_HANDLER:
  8775                           	callstack 0
  8776                           
  8777 ;; *************** function i2_ADC_GetConversionResult *****************
  8778 ;; Defined at:
  8779 ;;		line 168 in file "MCAL_Layer/ADC/hal_adc.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  _adc            2    0[COMRAM] PTR const struct .
  8782 ;;		 -> adc_1(7), 
  8783 ;;  conversion_r    2    2[COMRAM] PTR unsigned int 
  8784 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  ret             1    0        unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      unsigned char 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        7 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		i2_ADC_ISR_HANDLER
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text60
  8810   002958                     __ptext60:
  8811                           	callstack 0
  8812   002958                     i2_ADC_GetConversionResult:
  8813                           	callstack 14
  8814   002958                     
  8815                           ;MCAL_Layer/ADC/hal_adc.c: 170:      if((_adc==((void*)0))||(conversion_result==((void*)
      +                          0))){
  8816   002958  5001               	movf	i2ADC_GetConversionResult@_adc^0,w,c
  8817   00295A  1002               	iorwf	(i2ADC_GetConversionResult@_adc+1)^0,w,c
  8818   00295C  B4D8               	btfsc	status,2,c
  8819   00295E  EFB3  F014         	goto	i2u415_41
  8820   002962  EFB5  F014         	goto	i2u415_40
  8821   002966                     i2u415_41:
  8822   002966  EFBE  F014         	goto	i2l4956
  8823   00296A                     i2u415_40:
  8824   00296A  5003               	movf	i2ADC_GetConversionResult@conversion_result^0,w,c
  8825   00296C  1004               	iorwf	(i2ADC_GetConversionResult@conversion_result+1)^0,w,c
  8826   00296E  A4D8               	btfss	status,2,c
  8827   002970  EFBC  F014         	goto	i2u416_41
  8828   002974  EFBE  F014         	goto	i2u416_40
  8829   002978                     i2u416_41:
  8830   002978  EFF0  F014         	goto	i2l4966
  8831   00297C                     i2u416_40:
  8832   00297C                     i2l4956:
  8833                           
  8834                           ;MCAL_Layer/ADC/hal_adc.c: 172:     }
  8835   00297C  EF13  F015         	goto	i2l413
  8836   002980                     i2l4958:
  8837   002980  50C3               	movf	195,w,c	;volatile
  8838   002982  CFC4 F005          	movff	4036,??i2_ADC_GetConversionResult	;volatile
  8839   002986  6A06               	clrf	(??i2_ADC_GetConversionResult+1)^0,c
  8840   002988  C005  F006         	movff	??i2_ADC_GetConversionResult,??i2_ADC_GetConversionResult+1
  8841   00298C  6A05               	clrf	??i2_ADC_GetConversionResult^0,c
  8842   00298E  2605               	addwf	??i2_ADC_GetConversionResult^0,f,c
  8843   002990  0E00               	movlw	0
  8844   002992  2206               	addwfc	(??i2_ADC_GetConversionResult+1)^0,f,c
  8845   002994  0E06               	movlw	6
  8846   002996  6E07               	movwf	(??i2_ADC_GetConversionResult+2)^0,c
  8847   002998                     i2u417_45:
  8848   002998  3406               	rlcf	(??i2_ADC_GetConversionResult+1)^0,w,c
  8849   00299A  3206               	rrcf	(??i2_ADC_GetConversionResult+1)^0,f,c
  8850   00299C  3205               	rrcf	??i2_ADC_GetConversionResult^0,f,c
  8851   00299E  2E07               	decfsz	(??i2_ADC_GetConversionResult+2)^0,f,c
  8852   0029A0  EFCC  F014         	goto	i2u417_45
  8853   0029A4  C003  FFD9         	movff	i2ADC_GetConversionResult@conversion_result,fsr2l
  8854   0029A8  C004  FFDA         	movff	i2ADC_GetConversionResult@conversion_result+1,fsr2h
  8855   0029AC  C005  FFDE         	movff	??i2_ADC_GetConversionResult,postinc2
  8856   0029B0  C006  FFDD         	movff	??i2_ADC_GetConversionResult+1,postdec2
  8857   0029B4  EF13  F015         	goto	i2l413
  8858   0029B8                     i2l4960:
  8859   0029B8  50C3               	movf	195,w,c	;volatile
  8860   0029BA  CFC4 F005          	movff	4036,??i2_ADC_GetConversionResult	;volatile
  8861   0029BE  6A06               	clrf	(??i2_ADC_GetConversionResult+1)^0,c
  8862   0029C0  C005  F006         	movff	??i2_ADC_GetConversionResult,??i2_ADC_GetConversionResult+1
  8863   0029C4  6A05               	clrf	??i2_ADC_GetConversionResult^0,c
  8864   0029C6  2605               	addwf	??i2_ADC_GetConversionResult^0,f,c
  8865   0029C8  0E00               	movlw	0
  8866   0029CA  2206               	addwfc	(??i2_ADC_GetConversionResult+1)^0,f,c
  8867   0029CC  C003  FFD9         	movff	i2ADC_GetConversionResult@conversion_result,fsr2l
  8868   0029D0  C004  FFDA         	movff	i2ADC_GetConversionResult@conversion_result+1,fsr2h
  8869   0029D4  C005  FFDE         	movff	??i2_ADC_GetConversionResult,postinc2
  8870   0029D8  C006  FFDD         	movff	??i2_ADC_GetConversionResult+1,postdec2
  8871   0029DC  EF13  F015         	goto	i2l413
  8872   0029E0                     i2l4966:
  8873   0029E0  EE20 F006          	lfsr	2,6
  8874   0029E4  5001               	movf	i2ADC_GetConversionResult@_adc^0,w,c
  8875   0029E6  26D9               	addwf	fsr2l,f,c
  8876   0029E8  5002               	movf	(i2ADC_GetConversionResult@_adc+1)^0,w,c
  8877   0029EA  22DA               	addwfc	fsr2h,f,c
  8878   0029EC  B2DF               	btfsc	indf2,1,c
  8879   0029EE  EFFB  F014         	goto	i2u418_41
  8880   0029F2  EFFE  F014         	goto	i2u418_40
  8881   0029F6                     i2u418_41:
  8882   0029F6  0E01               	movlw	1
  8883   0029F8  EFFF  F014         	goto	i2u419_40
  8884   0029FC                     i2u418_40:
  8885   0029FC  0E00               	movlw	0
  8886   0029FE                     i2u419_40:
  8887   0029FE  6E05               	movwf	??i2_ADC_GetConversionResult^0,c
  8888   002A00  6A06               	clrf	(??i2_ADC_GetConversionResult+1)^0,c
  8889                           
  8890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8891                           ; Switch size 1, requested type "simple"
  8892                           ; Number of cases is 1, Range of values is 0 to 0
  8893                           ; switch strategies available:
  8894                           ; Name         Instructions Cycles
  8895                           ; simple_byte            4     3 (average)
  8896                           ;	Chosen strategy is simple_byte
  8897   002A02  5006               	movf	(??i2_ADC_GetConversionResult+1)^0,w,c
  8898   002A04  0A00               	xorlw	0	; case 0
  8899   002A06  B4D8               	btfsc	status,2,c
  8900   002A08  EF08  F015         	goto	i2l7572
  8901   002A0C  EFDC  F014         	goto	i2l4960
  8902   002A10                     i2l7572:
  8903                           
  8904                           ; Switch size 1, requested type "simple"
  8905                           ; Number of cases is 2, Range of values is 0 to 1
  8906                           ; switch strategies available:
  8907                           ; Name         Instructions Cycles
  8908                           ; simple_byte            7     4 (average)
  8909                           ;	Chosen strategy is simple_byte
  8910   002A10  5005               	movf	??i2_ADC_GetConversionResult^0,w,c
  8911   002A12  0A00               	xorlw	0	; case 0
  8912   002A14  B4D8               	btfsc	status,2,c
  8913   002A16  EFC0  F014         	goto	i2l4958
  8914   002A1A  0A01               	xorlw	1	; case 1
  8915   002A1C  B4D8               	btfsc	status,2,c
  8916   002A1E  EFDC  F014         	goto	i2l4960
  8917   002A22  EFDC  F014         	goto	i2l4960
  8918   002A26                     i2l413:
  8919   002A26  0012               	return		;funcret
  8920   002A28                     __end_ofi2_ADC_GetConversionResult:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function _INT0_ISR *****************
  8924 ;; Defined at:
  8925 ;;		line 132 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		None
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_InterruptManagerHigh
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           	psect	text61
  8953   0036CE                     __ptext61:
  8954                           	callstack 0
  8955   0036CE                     _INT0_ISR:
  8956                           	callstack 16
  8957   0036CE                     
  8958                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).INT0IF=0);
  8959   0036CE  92F2               	bcf	242,1,c	;volatile
  8960   0036D0  0012               	return		;funcret
  8961   0036D2                     __end_of_INT0_ISR:
  8962                           	callstack 0
  8963                           
  8964                           	psect	text62
  8965   000000                     __ptext62:
  8966                           	callstack 0
  8967   000000                     
  8968                           	psect	rparam
  8969   000000                     
  8970                           	psect	temp
  8971   000065                     btemp:
  8972                           	callstack 0
  8973   000065                     	ds	1
  8974   000000                     int$flags	set	btemp
  8975   000000                     wtemp8	set	btemp+1
  8976   000000                     ttemp5	set	btemp+1
  8977   000000                     ttemp6	set	btemp+4
  8978   000000                     ttemp7	set	btemp+8
  8979                           
  8980                           	psect	config
  8981                           
  8982                           ; Padding undefined space
  8983   300000                     	org	3145728
  8984   300000  FF                 	db	255
  8985                           
  8986                           ;Config register CONFIG1H @ 0x300001
  8987                           ;	Oscillator Selection bits
  8988                           ;	OSC = HS, HS oscillator
  8989                           ;	Fail-Safe Clock Monitor Enable bit
  8990                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8991                           ;	Internal/External Oscillator Switchover bit
  8992                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8993   300001                     	org	3145729
  8994   300001  02                 	db	2
  8995                           
  8996                           ;Config register CONFIG2L @ 0x300002
  8997                           ;	Power-up Timer Enable bit
  8998                           ;	PWRT = OFF, PWRT disabled
  8999                           ;	Brown-out Reset Enable bits
  9000                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  9001                           ;	Brown Out Reset Voltage bits
  9002                           ;	BORV = 1, 
  9003   300002                     	org	3145730
  9004   300002  09                 	db	9
  9005                           
  9006                           ;Config register CONFIG2H @ 0x300003
  9007                           ;	Watchdog Timer Enable bit
  9008                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9009                           ;	Watchdog Timer Postscale Select bits
  9010                           ;	WDTPS = 32768, 1:32768
  9011   300003                     	org	3145731
  9012   300003  1E                 	db	30
  9013                           
  9014                           ; Padding undefined space
  9015   300004                     	org	3145732
  9016   300004  FF                 	db	255
  9017                           
  9018                           ;Config register CONFIG3H @ 0x300005
  9019                           ;	CCP2 MUX bit
  9020                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9021                           ;	PORTB A/D Enable bit
  9022                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9023                           ;	Low-Power Timer1 Oscillator Enable bit
  9024                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9025                           ;	MCLR Pin Enable bit
  9026                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9027   300005                     	org	3145733
  9028   300005  81                 	db	129
  9029                           
  9030                           ;Config register CONFIG4L @ 0x300006
  9031                           ;	Stack Full/Underflow Reset Enable bit
  9032                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9033                           ;	Single-Supply ICSP Enable bit
  9034                           ;	LVP = OFF, Single-Supply ICSP disabled
  9035                           ;	Extended Instruction Set Enable bit
  9036                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9037                           ;	Background Debugger Enable bit
  9038                           ;	DEBUG = 0x1, unprogrammed default
  9039   300006                     	org	3145734
  9040   300006  81                 	db	129
  9041                           
  9042                           ; Padding undefined space
  9043   300007                     	org	3145735
  9044   300007  FF                 	db	255
  9045                           
  9046                           ;Config register CONFIG5L @ 0x300008
  9047                           ;	Code Protection bit
  9048                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  9049                           ;	Code Protection bit
  9050                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9051                           ;	Code Protection bit
  9052                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9053                           ;	Code Protection bit
  9054                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9055   300008                     	org	3145736
  9056   300008  0F                 	db	15
  9057                           
  9058                           ;Config register CONFIG5H @ 0x300009
  9059                           ;	Boot Block Code Protection bit
  9060                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9061                           ;	Data EEPROM Code Protection bit
  9062                           ;	CPD = OFF, Data EEPROM not code-protected
  9063   300009                     	org	3145737
  9064   300009  C0                 	db	192
  9065                           
  9066                           ;Config register CONFIG6L @ 0x30000A
  9067                           ;	Write Protection bit
  9068                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9069                           ;	Write Protection bit
  9070                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9071                           ;	Write Protection bit
  9072                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9073                           ;	Write Protection bit
  9074                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9075   30000A                     	org	3145738
  9076   30000A  0F                 	db	15
  9077                           
  9078                           ;Config register CONFIG6H @ 0x30000B
  9079                           ;	Configuration Register Write Protection bit
  9080                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9081                           ;	Boot Block Write Protection bit
  9082                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9083                           ;	Data EEPROM Write Protection bit
  9084                           ;	WRTD = OFF, Data EEPROM not write-protected
  9085   30000B                     	org	3145739
  9086   30000B  E0                 	db	224
  9087                           
  9088                           ;Config register CONFIG7L @ 0x30000C
  9089                           ;	Table Read Protection bit
  9090                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9091                           ;	Table Read Protection bit
  9092                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9093                           ;	Table Read Protection bit
  9094                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9095                           ;	Table Read Protection bit
  9096                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9097   30000C                     	org	3145740
  9098   30000C  0F                 	db	15
  9099                           
  9100                           ;Config register CONFIG7H @ 0x30000D
  9101                           ;	Boot Block Table Read Protection bit
  9102                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9103   30000D                     	org	3145741
  9104   30000D  40                 	db	64
  9105                           tosu	equ	0xFFF
  9106                           tosh	equ	0xFFE
  9107                           tosl	equ	0xFFD
  9108                           stkptr	equ	0xFFC
  9109                           pclatu	equ	0xFFB
  9110                           pclath	equ	0xFFA
  9111                           pcl	equ	0xFF9
  9112                           tblptru	equ	0xFF8
  9113                           tblptrh	equ	0xFF7
  9114                           tblptrl	equ	0xFF6
  9115                           tablat	equ	0xFF5
  9116                           prodh	equ	0xFF4
  9117                           prodl	equ	0xFF3
  9118                           indf0	equ	0xFEF
  9119                           postinc0	equ	0xFEE
  9120                           postdec0	equ	0xFED
  9121                           preinc0	equ	0xFEC
  9122                           plusw0	equ	0xFEB
  9123                           fsr0h	equ	0xFEA
  9124                           fsr0l	equ	0xFE9
  9125                           wreg	equ	0xFE8
  9126                           indf1	equ	0xFE7
  9127                           postinc1	equ	0xFE6
  9128                           postdec1	equ	0xFE5
  9129                           preinc1	equ	0xFE4
  9130                           plusw1	equ	0xFE3
  9131                           fsr1h	equ	0xFE2
  9132                           fsr1l	equ	0xFE1
  9133                           bsr	equ	0xFE0
  9134                           indf2	equ	0xFDF
  9135                           postinc2	equ	0xFDE
  9136                           postdec2	equ	0xFDD
  9137                           preinc2	equ	0xFDC
  9138                           plusw2	equ	0xFDB
  9139                           fsr2h	equ	0xFDA
  9140                           fsr2l	equ	0xFD9
  9141                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    16
    Data        47
    BSS         110
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     74     100
    BANK0           128     27     127
    BANK1           256     24      56
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2380$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_str(COMRAM[11]), convert_uint16_to_string@Temp_str(BANK1[6]), convert_uint8_to_string@Temp_str(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2327$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2327$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1747$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_ADC_ISR_HANDLER(), ADC_ISR_HANDLER(), 

    Interrupt_RBx_set_pin_init_value@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1190$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1148$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned int  size(2) Largest target is 2
		 -> lm35_res_2(COMRAM[2]), lm35_res_1(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_ADC_ISR_HANDLER(), ADC_ISR_HANDLER(), NULL(), 

    S718$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK0[7]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 10
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), STR_8(CODE[10]), STR_6(CODE[10]), 
		 -> STR_4(CODE[10]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _application_initialize->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_Init->_configure_voltage_reference
    _ADC_Init->_select_result_format
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManagerLow in COMRAM

    _ADC_ISR_HANDLER->_ADC_GetConversionResult

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_ADC_ISR_HANDLER->i2_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->___fltol
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    ___fltol->___fldiv

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string
    _convert_uint16_to_string->_sprintf

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  119591
                                             22 BANK1      2     2      0
      _ADC_StartConversion_Interrupt
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _application_initialize
           _convert_uint16_to_string
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   37170
                                             50 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   18688
                                             44 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16782
                                             40 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5157
                                             36 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5081
                                             36 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    5081
                                             36 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10234
                                             22 BANK0      4     0      4
                                             14 BANK1      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             14 BANK0      8     0      8
                                              0 BANK1     14    14      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                              6 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             66 COMRAM     8     2      6
                                              0 BANK0      6     6      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             53 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             42 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             35 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             26 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             32 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   32768
                           _ADC_Init
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   32228
                                             50 COMRAM     1     1      0
                _dc_motor_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   25188
                                             44 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   17998
                                             40 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5747
                                             36 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5309
                                             36 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7036
                                             40 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6792
                                             36 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4913
                                             26 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     581
                                             26 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     538
                                             30 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 4     2      2      98
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          4     2      2      98
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             26 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                             17 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             40 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             65 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3    1032
                                             34 COMRAM     4     1      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     198
                                             26 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     416
                                             29 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                             26 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerLow                                 7     7      0     612
                                             19 COMRAM     7     7      0
                            _ADC_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     612
                                NULL *
                    _ADC_ISR_HANDLER *
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR_HANDLER                                     0     0      0     612
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversionResult                             8     4      4     612
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _InterruptManagerHigh                                4     4      0     244
                                              7 COMRAM     4     4      0
                           _INT0_ISR
                          i2_ADC_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB4_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
 ---------------------------------------------------------------------------------
 (15) i2_RB7_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_RB6_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_RB5_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_RB4_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_INT2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_INT1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_ADC_ISR                                           0     0      0     244
                                NULL *
                  i2_ADC_ISR_HANDLER *
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ISR_HANDLER                                   0     0      0     244
          i2_ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (17) i2_ADC_GetConversionResult                           8     4      4     244
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _application_initialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _ecu_layer_initialize
       _dc_motor_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManagerLow (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_ISR_HANDLER *
       _ADC_GetConversionResult
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   i2_ADC_ISR
     NULL(Fake) *
     i2_ADC_ISR_HANDLER *
       i2_ADC_GetConversionResult
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB4_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      39        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     18      38       7       21.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1B      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4A      64       1       79.4%
BITBIGSFRl          43      0       0      38        0.0%
BITBIGSFRh          3B      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      12        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Oct 05 00:23:12 2023

                              ___fldiv@aexp 00F4                                ___fldiv@bexp 00F3  
                              ___fldiv@sign 00EC                             ?_lcd_send_4bits 0025  
                                        l71 27A4                                          l81 3080  
                                        l76 30F2                                ___awdiv@sign 0020  
                                        bsr 0FE0                       ??_InterruptManagerLow 0014  
                                       l102 2E82                                         l241 342E  
                                       l251 33E8                                         l227 2D30  
                                       l236 3536                                         l246 3474  
                                       l193 2F94                                         l178 2AF2  
                                       l451 320C                                         l428 3574  
                                       l516 2F0C                                         l453 3212  
                                       l373 25E4                                         l198 33A2  
                                       l358 3666                                         l447 2956  
                                       l463 31AE                                         l455 325E  
                                       l392 3686                                         l528 2246  
                                       l394 368A                                         l379 26C8  
                                       l547 2390                                         l389 35AE  
       __end_of_configure_voltage_reference 31B0                 _configure_voltage_reference 3154  
             gpio_pin_initialize@pin_config 0025                                         _abs 34BA  
                    ??_InterruptManagerHigh 0008                                         _pad 2F96  
                           __end_of_ADC_ISR 360E                                         _ret 0064  
       __end_of_lcd_4bit_send_enable_signal 33A4                 _lcd_4bit_send_enable_signal 3356  
                              ___awmod@sign 0020                         led_initialize@F3233 005F  
                                       prod 0FF3                                         tosl 0FFD  
                                       wreg 0FE8                       relay_initialize@F3227 005B  
                              ___flmul@aexp 003A                                ___flmul@bexp 003B  
               lcd_send_4bits@_data_command 0027              ?_ADC_StartConversion_Interrupt 0023  
                              ___flmul@sign 0035                                ___flmul@temp 0040  
                              ___flmul@prod 003C                   ?_convert_uint16_to_string 00FA  
                           __end_of_RB4_ISR 36AE                             __end_of_RB5_ISR 36AA  
                           __end_of_RB6_ISR 36A6                             __end_of_RB7_ISR 36A2  
                              ___fltol@exp1 00FE                                        l1026 369C  
                                      ?_abs 0021                                        l1340 2DE0  
                                      l1327 2C80                                        l1710 10F8  
                                      l1720 1354                                        l1393 25C4  
                                      l1714 145C                                        l1810 300E  
                                      l5100 25C6                                        l5004 2CF6  
                                      l1717 12EE                                        l5110 2650  
                                      l5102 25CA                                        l1806 2FB8  
                                      l1727 141E                                        l1719 1366  
                                      l1751 1AEC                                        l1815 1C92  
                                      l1680 1658                                        l5120 2682  
                                      l5112 2660                                        l5104 25DC  
                                      l5200 2E00                                        l1817 1C9A  
                                      l1754 1C48                                        l5122 268A  
                                      l5114 2662                                        l5106 25E6  
                                      l5130 26C6                                        l1818 1CE0  
                                      l1842 3306                                        l5202 2E18  
                                      l1691 1716                                        l1683 161C  
                                      l1771 20E4                                        l5140 3594  
                                      l1692 1704                                        l5124 26A6  
                                      l5116 2664                                        l5108 263E  
                                      l1836 24BC                                        l5300 33A4  
                                      l5204 2E4A                                        l1765 1BE0  
                                      l1861 2BBC                                        l1829 1DDE  
                                      l5142 35A6                                        l5134 3576  
                                      l5150 366C                                        l1678 17F8  
                                      l1758 1B84                                        l5126 26AC  
                                      l5118 2666                                        l1846 34F0  
                                      l5302 33A4                                        l5206 2E4E  
                                      l5144 35AC                                        l5136 357A  
                                      l5152 367E                                        l5320 3572  
                                      l5312 3538                                        l5128 26C4  
                                      l4520 224C                                        l1872 36D2  
                                      l7000 1D36                                        l1784 3206  
                                      l5304 33B6                                        l5208 2E80  
                                      l1689 169E                                        l1849 34F8  
                                      l5138 358C                                        l5154 3688  
                                      l5314 3538                                        l4530 2302  
                                      l4522 225E                                        l7010 1DA8  
                                      l7002 1D52                                        l5306 33BE  
                                      l5148 3668                                        l5316 354A  
                                      l4524 2280                                        l5092 363C  
                                      l7012 1DAE                                        l7004 1D6C  
                                      l7020 23B8                                        l5308 33E6  
                                      l1869 34B8                                        l5318 3552  
                                      l5510 1060                                        l5502 1034  
                                      l4534 2364                                        l4526 229E  
                                      l4518 2248                                        l5094 363C  
                                      l7014 1DBE                                        l7006 1D7E  
                                      l7030 2406                                        l7022 23C6  
                                      l7110 2A52                                        l7102 2A28  
                                      ?_pad 002B                                        l7200 160C  
                                      l5520 109C                                        l5512 1070  
                                      l5504 1040                                        l4528 22A6  
                                      l4536 238E                                        l5096 364A  
                                      l5360 368C                                        l7008 1D98  
                                      l7032 2424                                        l7024 23D4  
                                      l7120 2AC0                                        l7112 2A5C  
                                      l7104 2A2E                                        l5280 33FC  
                                      l7210 1656                                        l7202 161A  
                                      l7130 146C                                        l5602 1376  
                                      l5610 13BE                                        l5530 10D2  
                                      l5522 10A2                                        l5514 1080  
                                      l5506 104E                                        l4650 213C  
                                      l4642 20E6                                        l4810 2708  
                                      l4802 26CA                                        l5098 3658  
                                      l5362 3690                                        l7034 2468  
                                      l7026 23D8                                        l7042 2492  
                                      l7018 2392                                        l7050 32C2  
                                      l7122 2ADE                                        l7114 2A78  
                                      l7106 2A3A                                        l5290 3430  
                                      l5282 3404                                        l5194 2DE2  
                                      l7220 169C                                        l7212 1668  
                                      l7204 1626                                        l7140 14AC  
                                      l7132 147A                                        l5620 1432  
                                      l5612 13D8                                        l5604 1382  
                                      l5532 10E2                                        l5524 10B0  
                                      l5516 1086                                        l5508 1050  
                                      l7300 2584                                        l5700 1BB6  
                                      l4900 3158                                        l4652 2144  
                                      l4660 2244                                        l4644 20EA  
                                      l4820 272A                                        l4804 26CE  
                                      l7028 23E8                                        l7052 32DE  
                                      l7116 2A9A                                        l7124 2AEE  
                                      l7108 2A3E                                        l5292 3442  
                                      l5284 342C                                        l5276 33EA  
                                      l5196 2DE6                                        l7230 16FC  
                                      l7214 167E                                        l7222 16AE  
                                      l7206 1644                                        l7150 14D2  
                                      l7142 14AE                                        l7134 147C  
                                      l5622 1440                                        l5614 13EC  
                                      l5606 1390                                        l5550 1164  
                                      l5542 112C                                        l5534 10E8  
                                      l5526 10B2                                        l5518 1096  
                                      l7302 2594                                        l5710 1BF4  
                                      l5702 1BC2                                        l4902 3160  
                                      l4654 21A6                                        l4646 20FC  
                                      l4750 2EB8                                        l4670 2F0E  
                                      l4830 2770                                        l4822 273A  
                                      l4806 26E0                                        l5358 368C  
                                      l7070 2028                                        l7062 1F8E  
                                      l7038 2480                                        l7054 32FC  
                                      l7118 2ABC                                        l5294 344A  
                                      l5278 33EA                                        l5198 2DF8  
                                      l7240 176A                                        l7224 16BC  
                                      l7216 1684                                        l7208 1646  
                                      l7160 1512                                        l7152 14E0  
                                      l7136 148C                                        l7144 14B6  
                                      l7128 145E                                        l5624 1442  
                                      l5616 1406                                        l5608 13BA  
                                      l5560 11AE                                        l5552 117C  
                                      l5544 1138                                        l5536 1108  
                                      l5528 10C2                                        l7304 25A4  
                                      l5712 1C18                                        l5704 1BD0  
                                      l4648 211E                                        l4752 2ED6  
                                      l4744 2E84                                        l4840 34FA  
                                      l4680 3356                                        l4672 2F20  
                                      l4760 3082                                        l4832 2780  
                                      l4824 274A                                        l4816 270C  
                                      l4808 26E8                                        l7080 2088  
                                      l7064 1F9A                                        l7048 32B6  
                                      l5296 3472                                        l5288 3430  
                                      l7250 17D4                                        l7234 1726  
                                      l7242 176E                                        l7226 16C0  
                                      l7218 168E                                        l7170 1552  
                                      l7162 1514                                        l7154 14E2  
                                      l7146 14C6                                        l7138 149C  
                                      l5618 1422                                        l5626 1448  
                                      l5570 1204                                        l5562 11BE  
                                      l5554 1188                                        l5546 1142  
                                      l5538 1118                                        l7306 25B4  
                                      l5714 1C28                                        l5706 1BEE  
                                      l4658 2202                                        l4754 2EDE  
                                      l4746 2E84                                        l4842 34FA  
                                      l4690 33A0                                        l4682 3356  
                                      l4674 2F28                                        l4762 3082  
                                      l4834 2790                                        l4826 2750  
                                      l4818 2728                                        l7082 20BC  
                                      l7074 2042                                        l7058 1F70  
                                      l7090 31B0                                        l4860 2898  
                                      l4852 2882                                        l7252 17D8  
                                      l7244 1788                                        l7236 1732  
                                      l7228 16CE                                        l7180 1582  
                                      l7172 155A                                        l7156 14F2  
                                      l7164 151C                                        l7148 14CC  
                                      l5628 144C                                        l5580 12A8  
                                      l5572 1220                                        l5564 11CA  
                                      l5556 1194                                        l5548 1158  
                                      l5716 1C36                                        l5708 1BF0  
                                      l4908 3168                                        l4756 2F0A  
                                      l4748 2E96                                        l4844 350C  
                                      l4684 3368                                        l4676 2F92  
                                      l4668 2F0E                                        l4764 3094  
                                      l4828 2760                                        l4836 27A2  
                                      l7084 20C8                                        l7076 206E  
                                      l7068 1FD0                                        l7092 31C2  
                                      l4870 28B6                                        l4862 289E  
                                      l4854 2886                                        l7254 17E6  
                                      l7246 179E                                        l7238 1740  
                                      l7190 15C0                                        l7182 1582  
                                      l7174 155E                                        l7166 152C  
                                      l7158 1502                                        l5590 12FE  
                                      l5582 12B6                                        l5574 122C  
                                      l5566 11DA                                        l5558 11A2  
                                      l5718 1C38                                        l4846 3514  
                                      l4686 3370                                        l4766 309C  
                                      l7086 20CE                                        l7094 31CA  
                                      l4872 28BC                                        l4864 28A4  
                                      l4856 288C                                        l7256 17EC  
                                      l7248 17B8                                        l7192 15D0  
                                      l7168 1542                                        l5592 130C  
                                      l5584 12D4                                        l5576 1248  
                                      l5568 11F4                                        l7280 252A  
                                      l7272 24EA                                        l5680 1AB6  
                                      l4848 3534                                        l4688 3384  
                                      l4768 30F0                                        l7088 20D2  
                                      l7096 31D2                                        l7360 1834  
                                      l4874 28C2                                        l4866 28AA  
                                      l4858 2892                                        l4882 28D4  
                                      l7258 17EE                                        l7194 15E0  
                                      l7186 1596                                        l7178 1572  
                                      l5594 1310                                        l5586 12DE  
                                      l5578 1272                                        l7290 255A  
                                      l7282 2538                                        l7274 2514  
                                      l7266 24BE                                        l5690 1B2E  
                                      l5682 1AFC                                        l7098 31F0  
                                      l7370 18A4                                        l7362 1846  
                                      l7354 17FA                                        l4876 28C8  
                                      l4868 28B0                                        l7196 15E8  
                                      l7188 15B0                                        l5596 131E  
                                      l5588 12EC                                        l7292 2564  
                                      l7276 2516                                        l7268 24D6  
                                      l5692 1B3A                                        l5684 1B12  
                                      l5676 1A98                                        l4892 3218  
                                      l6900 2C52                                        l4980 307E  
                                      l4972 3010                                        l7380 19CA  
                                      l7372 18B4                                        l7364 1864  
                                      l7356 17FE                                        l4878 28CE  
                                      l7198 15F8                                        l5598 134C  
                                      l7278 2526                                        l5694 1B6C  
                                      l5678 1AA8                                        l6910 2C78  
                                      l6902 2C54                                        l4974 3010  
                                      l4990 2C98                                        l7390 1A48  
                                      l7382 19E2                                        l7374 18C6  
                                      l7366 1882                                        l7358 181C  
                                      l7288 2550                                        l5696 1B6E  
                                      l5688 1B26                                        l4888 3208  
                                      l7560 2378                                        l6904 2C5A  
                                      l6920 2D4C                                        l4976 3022  
                                      l4992 2C9E                                        l4984 2C82  
                                      l7392 1A56                                        l7384 1A00  
                                      l7376 193C                                        l7368 1892  
                                      l7298 2578                                        l5698 1B7A  
                                      l4898 3154                                        l7562 222E  
                                      l6906 2C60                                        l6930 2D80  
                                      l6922 2D50                                        l6914 2D32  
                                      l6850 2B06                                        l4978 302A  
                                      l4994 2CB4                                        l4986 2C82  
                                      l7394 1A6E                                        l7386 1A1E  
                                      l7378 19B2                                        l7564 3248  
                                      l6908 2C70                                        l6940 2DBA  
                                      l6932 2D88                                        l6924 2D5E  
                                      l6916 2D36                                        l6852 2B18  
                                      l4996 2CCA                                        l4988 2C94  
                                      l7396 1A80                                        l7388 1A36  
                                      l7566 3198                                        l6870 2BBE  
                                      l6934 2D96                                        l6942 2DC0  
                                      l6926 2D66                                        l6918 2D44  
                                      l6854 2B22                                        l6862 3476  
                                      l6950 2F96                                        l7558 2D0A  
                                      l4998 2CE0                                        l7568 28E8  
                                      l6880 2BEA                                        l6872 2BC2  
                                      l6944 2DD0                                        l6936 2DAC  
                                      l6928 2D78                                        l6856 2B40  
                                      l6848 2AF4                                        l6864 3482  
                                      l6960 2FDC                                        l6952 2FA4  
                                      l6890 2C18                                        l6882 2BF2  
                                      l6874 2BD0                                        l6946 2DD8  
                                      l6938 2DB4                                        l6858 2B76  
                                      l6866 3494                                        l6962 2FFA  
                                      l6954 2FB0                                        l6970 1C5E  
                                      l6892 2C20                                        l6884 2BF6  
                                      l6876 2BD8                                        l6964 34BA  
                                      l6868 3498                                        l6956 2FC4  
                                      l6980 1CB2                                        l6972 1C6E  
                                      l6894 2C2E                                        l6886 2BFE  
                                      l6878 2BDC                                        l6966 34D4  
                                      l6958 2FD8                                        l6990 1CE8  
                                      l6982 1CB8                                        l6974 1C76  
                                      l6896 2C34                                        l6888 2C10  
                                      l6992 1CF2                                        l6984 1CC8  
                                      l6976 1C86                                        l6968 1C4A  
                                      l6898 2C4A                                        l6994 1CF8  
                                      l6986 1CD4                                        l6978 1CA2  
                                      l6996 1D2A                                        l6988 1CDC  
                                      l6998 1D30                                        STR_1 102F  
                                      STR_2 102F                                        STR_4 1025  
                                      STR_5 1011                                        STR_6 1011  
                                      STR_7 101B                                        STR_8 101B  
                                      u4020 26E0                                        u4021 26DC  
                                      u4030 273A                                        u4031 2736  
                                      u5000 1440                                        u4040 350C  
                                      u4200 3022                                        u5001 143C  
                                      u4041 3508                                        u4201 301E  
                                      u4050 3234                                        u4210 2C94  
                                      u4051 322E                                        u4211 2C90  
                                      u5100 1B12                                        u4060 3236  
                                      u5101 1B0E                                        u5110 1B68  
                                      u4070 3184                                        u4310 25DC  
                                      u5111 1B64                                        u4071 317E  
                                      u4311 25D8                                        u5120 1BB2  
                                      u4080 3186                                        u4320 2682  
                                      u5121 1BAE                                        u4321 267E  
                                      u5130 1BD0                                        u4330 26A6  
                                      u4410 2DF8                                        u5131 1BCC  
                                      u4331 26A2                                        u4411 2DF4  
                                      u4340 358C                                        u5140 1BE0  
                                      u3604 2322                                        u4420 2E42  
                                      u4341 3588                                        u5141 1BDC  
                                      u3605 231E                                        u4350 367E  
                                      u5150 1BEE                                        u4430 2E70  
                                      u4351 367A                                        u5151 1BEA  
                                      u7000 148C                                        u5160 1C28  
                                      u5080 1AA8                                        u3560 225E  
                                      u4520 33FC                                        u4440 2E80  
                                      u7001 1488                                        u5161 1C24  
                                      u5081 1AA4                                        u3561 225A  
                                      u4521 33F8                                        u4441 2E7C  
                                      u7010 149C                                        u5170 1C36  
                                      u5090 1AB6                                        u3810 221A  
                                      u3570 2280                                        u4530 3442  
                                      u7011 1498                                        u5171 1C32  
                                      u5091 1AB2                                        u3811 2214  
                                      u3571 227C                                        u4531 343E  
                                      u4427 2E38                                        u7100 1668  
                                      u7020 14E0                                        u3820 221C  
                                      u3804 21C6                                        u3580 229E  
                                      u4540 33B6                                        u7101 1664  
                                      u7021 14DC                                        u3805 21C2  
                                      u3581 229A                                        u4541 33B2  
                                      u4437 2E66                                        u4550 354A  
                                      u7110 167E                                        u7030 14F2  
                                      u3830 2F20                                        u4551 3546  
                                      u7111 167A                                        u7031 14EE  
                                      u3831 2F1C                                        u7200 17B8  
                                      u7120 169C                                        u7040 1502  
                                      u3760 20FC                                        u3840 3368  
                                      u7201 17B4                                        u7121 1698  
                                      u7041 14FE                                        u3761 20F8  
                                      u3841 3364                                        u7210 17E6  
                                      u7130 16BC                                        u7050 1542  
                                      u3770 211E                                        u3594 22C6  
                                      u7211 17E2                                        u7131 16B8  
                                      u7051 153E                                        u3771 211A  
                                      u3595 22C2                                        u7140 16CE  
                                      u7060 1582                                        u4900 1292  
                                      u4820 104E                                        u7220 24D6  
                                      u3780 213C                                        u7141 16CA  
                                      u7061 157E                                        u4821 104A  
                                      u7221 24D2                                        u3781 2138  
                                      u7150 16FC                                        u7070 15F8  
                                      u4910 12EC                                        u4830 1060  
                                      u7230 250A                                        u3950 2E96  
                                      u7151 16F8                                        u7071 15F4  
                                      u4911 12E8                                        u4831 105C  
                                      u3951 2E92                                        u7160 1712  
                                      u7080 161A                                        u4920 130C  
                                      u4840 1070                                        u7240 2538  
                                      u3960 2EB8                                        u6600 2B76  
                                      u7161 170E                                        u7081 1616  
                                      u4921 1308                                        u4905 1288  
                                      u4841 106C                                        u7241 2534  
                                      u3961 2EB4                                        u6601 2B72  
                                      u7170 1726                                        u7090 1644  
                                      u4930 131E                                        u4850 10B0  
                                      u7250 254C                                        u3794 2164  
                                      u3970 2ED6                                        u6610 34B8  
                                      u7171 1722                                        u7091 1640  
                                      u4931 131A                                        u4851 10AC  
                                      u7251 2548                                        u7235 2500  
                                      u3795 2160                                        u3971 2ED2  
                                      u6611 34B4                                        u7180 1740  
                                      u4940 134C                                        u4860 10C2  
                                      u7260 2574                                        u3980 3094  
                                      u6620 2BD0                                        u6700 2D78  
                                      u7340 1892                                        u7181 173C  
                                      u4941 1348                                        u4861 10BE  
                                      u7261 2570                                        u3981 3090  
                                      u6621 2BCC                                        u6701 2D74  
                                      u7341 188E                                        u7190 1788  
                                      u4950 1362                                        u4870 10D2  
                                      u7270 2594                                        u6630 2BEA  
                                      u6710 2D96                                        u7350 18B4  
                                      u7191 1784                                        u4951 135E  
                                      u4871 10CE                                        u7271 2590  
                                      u6631 2BE6                                        u6711 2D92  
                                      u7351 18B0                                        u4960 1376  
                                      u4880 1108                                        u7280 25A4  
                                      u6640 2C10                                        u6720 2DAC  
                                      u6800 1C86                                        u7360 1A36  
                                      u4961 1372                                        u4881 1104  
                                      u7281 25A0                                        u6641 2C0C  
                                      u6721 2DA8                                        u6801 1C82  
                                      u7361 1A32                                        u4970 1390  
                                      u4890 1118                                        u6650 2C2E  
                                      u6730 2DD0                                        u6570 2B06  
                                      u6810 1CB2                                        u7370 1A6E  
                                      u4971 138C                                        u4891 1114  
                                      u6651 2C2A                                        u6731 2DCC  
                                      u6571 2B02                                        u6811 1CAE  
                                      u7371 1A6A                                        u4980 13D8  
                                      u6660 2C4A                                        u6580 2B18  
                                      u6740 2FA4                                        u6820 1CC8  
                                      u6900 32FC                                        u4981 13D4  
                                      u6661 2C46                                        u6581 2B14  
                                      u6741 2FA0                                        u6821 1CC4  
                                      u6901 32F8                                        u4990 1406  
                                      u6910 1F8A                                        u6670 2C70  
                                      u6590 2B40                                        u6750 2FFA  
                                      u6830 1D6C                                        u4991 1402  
                                      u6911 1F86                                        u6671 2C6C  
                                      u6591 2B3C                                        u6751 2FF6  
                                      u6831 1D68                                        u6920 1FCC  
                                      u6680 2D44                                        u6760 34D4  
                                      u6840 1D7E                                        u6921 1FC8  
                                      u6681 2D40                                        u6761 34D0  
                                      u6841 1D7A                                        u6930 203E  
                                      u6690 2D5E                                        u6850 1D98  
                                      u6770 1C5A                                        u6931 203A  
                                      u6691 2D5A                                        u6851 1D94  
                                      u6771 1C54                                        u7387 1828  
                                      u6940 2084                                        u6860 1DA8  
                                      u6780 1C5C                                        u7397 274C  
                                      u6941 2080                                        u6861 1DA4  
                                      u6950 20E4                                        u6790 1C6E  
                                      u6870 23B8                                        u6951 20E0  
                                      u6791 1C6A                                        u6871 23B4  
                                      u6880 2406                                        u6881 2402  
                                      u6961 2A34                                        u6890 2424  
                                      u6970 2A52                                        u6891 2420  
                                      u6971 2A4E                                        u6980 2ADE  
                                      u6981 2ADA                                        u6990 147A  
                                      u6991 1476               ??_lcd_4bit_send_enable_signal 0027  
                                      abs@a 0021                                        _lcd1 00DA  
                                      _dbuf 0100                                        _main 17FA  
                                      _dtoa 1C4A                                 ?i2_INT1_ISR 0001  
                               ?i2_INT2_ISR 0001                                        _prec 0097  
                                      pad@i 0032                                        pad@p 002F  
                                      fsr0h 0FEA                                        fsr1h 0FE2  
                                      indf0 0FEF                                        fsr2h 0FDA  
                                      fsr0l 0FE9                                        indf1 0FE7  
                                      indf2 0FDF                                        fsr1l 0FE1  
                                      pad@w 0034                                        fsr2l 0FD9  
                                      btemp 0065                            __end_of_ADC_Init 26CA  
                                      prodh 0FF4                                        prodl 0FF3  
                                      start 01A0                             ___fldiv@new_exp 00ED  
                      _RB7_InterruptHandler 009D                                ___param_bank 0000  
                            _lm35_res_1_txt 00AE                       _lcd_4bit_send_command 3082  
                            _lm35_res_2_txt 00A7                      dc_motor_initialize@ret 002B  
                                     ??_abs 0023                        _gpio_pin_write_logic 2248  
            lcd_4bit_send_string_pos@column 0036                                       ??_pad 0031  
                          __end_of_INT0_ISR 36D2                            __end_of_INT1_ISR 36B6  
                          __end_of_INT2_ISR 36B2                               ___fltol@sign1 00FD  
                                     ?_main 0001                                       ?_dtoa 0036  
                  ??_application_initialize 0034                             __end_of___fldiv 17FA  
                           __end_of___awdiv 2C82                             __end_of___awmod 2DE2  
                           __end_of___flmul 145E                             __end_of___fltol 25C6  
                           ___awdiv@divisor 001D                                       i1l413 287E  
                                     i1l702 36A8                                       i1l710 36A0  
                                     i1l706 36A4                                       i2l413 2A26  
                                     i1l690 36B4                                       i2l702 36C0  
                                     i2l710 36B8                                       i1l694 36B0  
                                     i1l950 00B0                                       i1l599 360C  
                                     i1l952 00EC                                       i2l706 36BC  
                                     i1l698 36AC                                       i1l954 0128  
                                     i1l946 0056                                       i1l956 0160  
                                     i1l948 0076                                       i1l959 0180  
                                     i2l690 36CC                                       i2l931 1E8C  
                                     i2l940 1F5C                                       i2l933 1EC8  
                                     i2l925 1E12                                       i2l686 36D0  
                                     i2l694 36C8                                       i2l599 363A  
                                     i2l935 1F04                                       i2l927 1E32  
                                     i2l937 1F3C                                       i2l929 1E52  
                                     i2l698 36C4                             ___awdiv@counter 001F  
                       relay_turn_off@F3237 0059                                vfpfcnvrt@fmt 0045  
                 lcd_4bit_set_cursor@column 0030                                       _adc_1 00D3  
                                     _flags 0053                                       _fputc 2AF4  
                                     _fputs 3476                                       pad@fp 002B  
                                     _width 0095                                       _putch 36D2  
                                     dtoa@d 0038                                       dtoa@i 0041  
                                     dtoa@p 003C                                       dtoa@s 0040  
                                     dtoa@w 003E                                       pclath 0FFA  
                                     pclatu 0FFB                                       tablat 0FF5  
                                     ttemp5 0066                                       ttemp6 0069  
                                     ttemp7 006D                                       status 0FD8  
                                     wtemp8 0066                             __end_of_sprintf 3208  
            ?_gpio_pin_direction_initialize 001B                             __initialization 3308  
                              __end_of_main 1A96                                __end_of_dtoa 1DE0  
                     ?_gpio_pin_write_logic 001B                                   ??_ADC_ISR 0014  
                             _lat_registers 00BF                 __end_of_dc_motor_initialize 3538  
                                    ??_main 0136                                      ??_dtoa 003A  
                             __activetblptr 0003                            led_turn_on@F3238 005E  
                                 ??_RB4_ISR 000C                                   ??_RB5_ISR 000C  
                                 ??_RB6_ISR 000C                                   ??_RB7_ISR 000C  
                   ecu_layer_initialize@ret 0033                          _RB4_pin_init_value 0058  
                         __end_ofi2_ADC_ISR 363C                                      ?_fputc 001B  
                                    ?_fputs 0024                                      _ADRESH 0FC4  
                                    _ADRESL 0FC3                            ___awdiv@dividend 001B  
                                    ?_putch 0001                                      i1l1034 3152  
                                    i2l1034 32B4                                      i1l2714 36B2  
                                    i1l2722 36AA                                      i1l2718 36AE  
                                    i1l5160 310E                                      i1l5162 3112  
                                    i1l5164 312A                                      i1l5324 35E0  
                                    i1l5166 313A                                      i1l5158 30FE  
                                    i1l5326 35E2                                      i1l5334 36A6  
                                    i1l5342 369E                                      i1l5168 313E  
                                    i1l5328 35F4                                      i1l5338 36A2  
                                    i2l3144 36CA                                      i2l3152 36C2  
                                    i1l4920 27CE                                      i1l4922 27D6  
                                    i1l4930 2836                                      i1l4914 27A6  
                                    i2l3148 36C6                                      i1l4924 280E  
                                    i1l4932 287C                                      i1l4916 27AA  
                                    i1l6540 0052                                      i1l4918 27BC  
                                    i1l6550 00A8                                      i1l6542 0064  
                         __end_ofi2_RB4_ISR 36C6                                      i1l6560 00E8  
                                    i1l6552 00AC                                      i1l6544 0072  
                                    i1l6536 0036                                      i1l6570 0136  
                                    i1l6562 00FA                                      i1l6554 00BE  
                                    i1l6546 0084                                      i1l6538 0044  
                                    i1l6580 017C                                      i1l6572 0144  
                                    i1l6564 0108                                      i1l6556 00CC  
                                    i1l6548 0092                                      i1l6574 0158  
                                    i1l6566 0120                                      i1l6558 00E4  
                                    i1l6576 015C                                      i1l6568 0124  
                                    i2l5330 36CE                                      i2l5170 3260  
                                    i1l7570 2866                                      i1l6578 016E  
                                    i2l5180 32A0                                      i2l5172 3270  
                                    i2l5174 3274                                      i2l5176 328C  
                         __end_ofi2_RB5_ISR 36C2                                      i2l5178 329C  
                                    i2l6500 1E60                                      i2l6510 1EA8  
                                    i2l6502 1E6E                                      i2l6520 1EFC  
                                    i2l6512 1EC0                                      i2l6504 1E84  
                                    i2l5722 360E                                      i2l6530 1F38  
                                    i2l6522 1F00                                      i2l6514 1EC4  
                                    i2l6506 1E88                                      i2l5724 3610  
                                    i2l5732 36BA                                      i2l6532 1F4A  
                                    i2l6524 1F12                                      i2l6516 1ED6  
                                    i2l6508 1E9A                                      i2l4950 2958  
                                    i2l5726 3622                                      i2l6534 1F58  
                                    i2l6526 1F20                                      i2l6518 1EE4  
                                    i2l4960 29B8                                      i2l4952 2958  
                                    i2l5728 36BE                           __end_ofi2_RB6_ISR 36BE  
                                    i2l5736 36B6                                      i2l6528 1F34  
                                    i2l4954 296A                                      i2l6490 1E0E  
                                    i2l4956 297C                                      i2l6492 1E20  
                                    i2l4958 2980                                      i2l4966 29E0  
                                    i2l6494 1E2E                                      i2l6486 1DF2  
                                    i2l6496 1E40                                      i2l6488 1E00  
                                    i2l6498 1E4E                                      i2l7572 2A10  
                         __end_ofi2_RB7_ISR 36BA                            __end_of___xxtofl 1C4A  
          __end_of_lcd_4bit_send_string_pos 2E84                 __end_of_dc_motor_move_right 3430  
                    ?_lcd_4bit_send_command 0029                                vfprintf@cfmt 00F0  
                                 ??___fldiv 00E4                                   ??___awdiv 001F  
                                 ??___awmod 001F                                   ??___flmul 0031  
                                 ??___fltol 00F9                                      _memset 1F70  
                                    clear_0 332E                                      clear_1 333A  
                                    clear_2 3346                            ___awdiv@quotient 0021  
                           ___awmod@divisor 001D                                      isa$std 0001  
                           ___awmod@counter 001F                                      pad@buf 002D  
                                    dtoa@fp 0036                                      fputc@c 001B  
                                    fputs@c 0028                                      fputs@i 0029  
                                    fputs@s 0024                                   ?_ADC_Init 001F  
                              __mediumconst 0000                                      tblptrh 0FF7  
                                    tblptrl 0FF6                                      tblptru 0FF8  
                                    putch@c 0001                            __end_of_vfprintf 3308  
                                 ??_sprintf 004B                __end_of_select_result_format 3260  
                              ___xxtofl@arg 0025                                ___xxtofl@exp 0024  
                              ___xxtofl@val 001B                          _RB6_pin_init_value 0056  
                                __accesstop 0080                     __end_of__initialization 334C  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                                 ?_INT2_ISR 0001                                  _lm35_res_1 0062  
                                _lm35_res_2 0060                               ___rparam_used 0001  
                                ___fltol@f1 00F5                            ??_lcd_send_4bits 0028  
               dc_motor_move_left@_dc_motor 0025                     _lcd_4bit_send_char_data 3010  
                    ??_gpio_pin_write_logic 001E                              __pcstackCOMRAM 0001  
                        fp__ADC_ISR_HANDLER 0000                                __pidataBANK0 35B0  
                             __end_of_fputc 2BBE                               __end_of_fputs 34BA  
                             __end_of_putch 36D4                    lcd_4bit_send_command@lcd 0029  
                  lcd_4bit_send_command@ret 002C                  ?i2_ADC_GetConversionResult 0001  
                   _ADC_GetConversionResult 27A6                                  ??_ADC_Init 0021  
                      ADC_SelectChannel@ret 0022                                     ??_fputc 001F  
                                _dc_motor_1 00E2                                  _dc_motor_2 00E0  
                                   ??_fputs 0028                                     ??_putch 001B  
                    ADC_StartConversion@ret 001D                                  __pbssBANK0 0080  
                                __pbssBANK1 0100                                ??i2_INT1_ISR 0001  
                     _INT0_InterruptHandler 00A3                                  ??_INT0_ISR 0001  
                              ??i2_INT2_ISR 0001                                  ??_INT1_ISR 000C  
                                ??_INT2_ISR 000C                      _application_initialize 368C  
                                __pnvCOMRAM 0064                  ADC_GetConversionResult@ret 0013  
               __end_of_InterruptManagerLow 01A0                           i2_ADC_ISR_HANDLER 3260  
                         led_turn_off@F3243 005D                          ?i2_ADC_ISR_HANDLER 0001  
               convert_uint16_to_string@cnt 0135                 convert_uint16_to_string@ret 0134  
                                   _ADC_ISR 35E0                 convert_uint16_to_string@str 00FC  
                                   ?_memset 001B                             led_toggle@F3248 005C  
                                   _RB4_ISR 36AA                                     _RB5_ISR 36A6  
                                   _RB6_ISR 36A2                                     _RB7_ISR 369E  
         __end_ofi2_ADC_GetConversionResult 2A28                          __end_ofi2_INT1_ISR 36CE  
                                 ?___xxtofl 001B                         ??i2_ADC_ISR_HANDLER 0008  
                        __end_ofi2_INT2_ISR 36CA                   ?_lcd_4bit_send_string_pos 0033  
                                _btn_values 1001                              _tris_registers 00C9  
                 ??_lcd_4bit_send_char_data 002C      lcd_4bit_initialize@l_data_pins_counter 0032  
                 __end_ofi2_ADC_ISR_HANDLER 32B6                        _ADC_InterruptHandler 0051  
                                   __Hparam 0000                                ADC_Init@_adc 001F  
                                   __Lparam 0000                       dc_motor_move_left@ret 0027  
                       _gpio_pin_initialize 2E84                                     ___fldiv 145E  
                                   ___awdiv 2BBE                                     ___awmod 2D32  
                                   ___flmul 1034                                     ___fltol 24BE  
                                 ?_vfprintf 00EA                                __psmallconst 1000  
                 ??_ADC_GetConversionResult 0010                                     __pcinit 3308  
                      _select_result_format 3208                                     __ramtop 1000  
                         ??_ADC_ISR_HANDLER 0014                                     __ptext0 17FA  
                                   __ptext1 2DE2                                     __ptext2 2C82  
                                   __ptext3 3010                                     __ptext4 33A4  
                                   __ptext5 33EA                                     __ptext6 3430  
                                   __ptext7 2A28                                     __ptext8 31B0  
                                   __ptext9 32B6             ??_gpio_pin_direction_initialize 001D  
                  _convert_uint16_to_string 2A28                                  ??___xxtofl 001F  
                          ___awmod@dividend 001B                        ?_gpio_pin_initialize 0025  
                                   _sprintf 31B0                              __pintcode_body 1DE0  
                      end_of_initialization 334C                           lcd_send_4bits@lcd 0025  
                         lcd_send_4bits@ret 0028                    select_result_format@_adc 001B  
                                 i2_ADC_ISR 360E                                     fputc@fp 001D  
                                   memset@c 001D                                     memset@k 0023  
                                   memset@n 001F                                     memset@s 0025  
                                   int_func 1DE0                                     fputs@fp 0026  
                   ??_lcd_4bit_send_command 002C                                   i2_RB4_ISR 36C2  
                                 i2_RB5_ISR 36BE                                   i2_RB6_ISR 36BA  
                                 i2_RB7_ISR 36B6                               _dc_motor_stop 33A4  
                         __end_of_vfpfcnvrt 24BE                                     postdec1 0FE5  
                                   postdec2 0FDD                                     postinc0 0FEE  
                                   postinc1 0FE6                                     postinc2 0FDE  
                          vfpfcnvrt@convarg 00E4                                  ??_vfprintf 004B  
                     ?_select_result_format 001B            ADC_StartConversion_Interrupt@ret 0026  
                       _lcd_4bit_initialize 26CA             __end_of_lcd_4bit_send_char_data 3082  
                     _INT1_InterruptHandler 004F                  lcd_4bit_send_char_data@lcd 0029  
             i2ADC_GetConversionResult@_adc 0001                  lcd_4bit_send_char_data@ret 002C  
                             ___xxtofl@sign 0023                       ??_gpio_pin_initialize 0027  
                       _ADC_StartConversion 3668                                 ___fldiv@grs 00EF  
                               ___fldiv@rem 00E8                                  ?i2_ADC_ISR 0001  
                      ?_lcd_4bit_initialize 002D                                 ___flmul@grs 0036  
                                ?i2_RB4_ISR 0001                                  ?i2_RB5_ISR 0001  
                                ?i2_RB6_ISR 0001                                  ?i2_RB7_ISR 0001  
                            ?_dc_motor_stop 0025                         _lcd_4bit_set_cursor 2C82  
                        relay_turn_on@F3232 005A                        ?_ADC_StartConversion 001B  
               lcd_4bit_send_string_pos@lcd 0033                 lcd_4bit_send_string_pos@ret 0039  
               lcd_4bit_send_string_pos@row 0035                 lcd_4bit_send_string_pos@str 0037  
             convert_uint32_to_string@F3393 0080               convert_uint16_to_string@F3386 008B  
                               vfpfcnvrt@ap 0047                                 vfpfcnvrt@cp 00E8  
                               vfpfcnvrt@fp 0043     adc_input_channel_port_configure@channel 001D  
         ADC_StartConversion_Interrupt@_adc 0023                              __end_of_memset 20E6  
               ??i2_ADC_GetConversionResult 0005                ?_configure_voltage_reference 001B  
                       start_initialization 3308                ?_lcd_4bit_send_enable_signal 0025  
                      ?_lcd_4bit_set_cursor 002D                        _RB4_InterruptHandler 004B  
             convert_uint16_to_string@value 00FA                                 __end_of_abs 34FA  
                               __end_of_pad 3010       __end_of_gpio_pin_direction_initialize 2248  
             _gpio_pin_direction_initialize 20E6                     ?_application_initialize 0001  
  ADC_GetConversionResult@conversion_result 000E  i2ADC_GetConversionResult@conversion_result 0003  
                     ??_lcd_4bit_initialize 002F                      dc_motor_stop@_dc_motor 0025  
                     ADC_SelectChannel@_adc 001E        ADC_StartConversion_Interrupt@channel 0025  
                     ??_ADC_StartConversion 001D                  __end_of_dc_motor_move_left 3476  
                               vfprintf@fmt 00EC                      ??_select_result_format 001D  
                               __pdataBANK0 00B5                convert_uint8_to_string@F3379 0091  
                                  ?_ADC_ISR 0001                                    ??_memset 0021  
              __end_of_ecu_layer_initialize 3668                                  memset@dest 001B  
              lcd_4bit_send_command@command 002B                            dc_motor_stop@ret 0027  
                   ADC_StartConversion@_adc 001B                                   ___fldiv@a 0046  
                                 ___fldiv@b 0042                                    ?_RB4_ISR 0001  
                                  ?_RB5_ISR 0001                                    ?_RB6_ISR 0001  
                                  ?_RB7_ISR 0001                                   ___flmul@a 002D  
                                 ___flmul@b 0029                                 __pbssCOMRAM 004B  
                     ??_lcd_4bit_set_cursor 0031                               __pcstackBANK0 00E4  
                             __pcstackBANK1 0120               ??_configure_voltage_reference 001D  
            __end_of_application_initialize 369E                 ADC_GetConversionResult@_adc 000C  
                               ??i2_ADC_ISR 0008            convert_uint16_to_string@Temp_str 012E  
                     _INT2_InterruptHandler 004D              gpio_pin_write_logic@pin_config 001B  
                           ??_dc_motor_stop 0027                   i2_ADC_GetConversionResult 2958  
                     _TMR0_InterruptHandler 00A5                                 ??i2_RB4_ISR 0001  
                               ??i2_RB5_ISR 0001                                 ??i2_RB6_ISR 0001  
                               ??i2_RB7_ISR 0001                             _ADC_ISR_HANDLER 30F4  
              __end_of_InterruptManagerHigh 1F70                                   _dtoa$2407 003A  
                                 __pintcode 0008    __end_of_adc_input_channel_port_configure 2958  
        ??_adc_input_channel_port_configure 001B           ?_adc_input_channel_port_configure 0001  
          _adc_input_channel_port_configure 2880                           _ADC_SelectChannel 3576  
                ??_convert_uint16_to_string 004B                                    ?___fldiv 0042  
                                  ?___awdiv 001B                                    ?___awmod 001B  
                                  ?___flmul 0029                                    ?___fltol 00F5  
                        ?_ADC_SelectChannel 001E                                 __pintcodelo 0018  
                 gpio_pin_write_logic@logic 001D                                 __smallconst 1000  
                       ??_ADC_SelectChannel 0021                                    _ADC_Flag 0054  
                                  _ADC_Init 25C6                                 ADC_Init@ret 0022  
                 _ADC_ISR_HANDLER$intlevel1 30FE                                    ?_sprintf 00F2  
                        _RB5_pin_init_value 0057                                    _INT0_ISR 36CE  
                                  _INT1_ISR 36B2                                    _INT2_ISR 36AE  
                                  i1u410_20 27CE                                    i1u410_21 27CA  
                                  i1u411_25 27EE                   __end_of_ADC_SelectChannel 35B0  
                                  i1u412_20 2852                                    i1u412_21 284C  
                                  i1u413_20 2854                                    i1u409_20 27BC  
                                  i1u409_21 27B8                                    i1u436_20 310E  
                                  i1u436_21 310A               __end_of_lcd_4bit_send_command 30F4  
                                  i1u437_20 313A                                    i1u437_21 3136  
                                  i1u630_20 00A8                                    i1u630_21 00A4  
                                  i1u631_20 00BE                                    i1u631_21 00BA  
                                  i1u456_20 35F4                                    i1u640_20 016E  
                                  i1u632_20 00CC                                    i1u624_20 0044  
                                  i1u456_21 35F0                                    i1u640_21 016A  
                                  i1u632_21 00C8                                    i1u624_21 0040  
                                  i1u641_20 017C                                    i1u633_20 00E4  
                                  i1u625_20 0052                                    i1u641_21 0178  
                                  i1u633_21 00E0                                    i1u625_21 004E  
                                  i1u457_28 35FA                                    i1u634_20 00FA  
                                  i1u626_20 0064                                    i1u457_29 360C  
                                  i1u634_21 00F6                                    i1u626_21 0060  
                                  i1u635_20 0108                                    i1u627_20 0072  
                                  i1u635_21 0104                                    i1u627_21 006E  
                                  i1u636_20 0120                                    i1u628_20 0084  
                                  i1u636_21 011C                                    i1u628_21 0080  
                                  i1u637_20 0136                                    i1u629_20 0092  
                                  i1u637_21 0132                                    i1u629_21 008E  
                                  i1u638_20 0144                                    i1u638_21 0140  
                                  i1u639_20 0158                                    i1u639_21 0154  
                                  i2u415_40 296A                                    i2u415_41 2966  
                                  i2u416_40 297C                                    i2u416_41 2978  
                                  i2u417_45 2998                                    i2u418_40 29FC  
                                  i2u610_40 1E60                                    i2u418_41 29F6  
                                  i2u610_41 1E5C                                    i2u419_40 29FE  
                                  i2u611_40 1E6E                                    i2u611_41 1E6A  
                                  i2u620_40 1F20                                    i2u612_40 1E84  
                                  i2u604_40 1E00                                    i2u620_41 1F1C  
                                  i2u612_41 1E80                                    i2u604_41 1DFC  
                                  i2u621_40 1F34                                    i2u613_40 1E9A  
                                  i2u605_40 1E0E                        _RB5_InterruptHandler 00A1  
                                  i2u621_41 1F30                                    i2u613_41 1E96  
                                  i2u605_41 1E0A                                    i2u438_40 3270  
                                  i2u518_40 3622                                    i2u622_40 1F4A  
                                  i2u614_40 1EA8                                    i2u606_40 1E20  
                                  i2u438_41 326C                                    i2u518_41 361E  
                                  i2u622_41 1F46                                    i2u614_41 1EA4  
                                  i2u606_41 1E1C                                    i2u439_40 329C  
                                  i2u623_40 1F58                                    i2u615_40 1EC0  
                                  i2u607_40 1E2E                                    i2u439_41 3298  
                                  i2u623_41 1F54                                    i2u615_41 1EBC  
                                  i2u607_41 1E2A                                    i2u519_48 3628  
                                  i2u616_40 1ED6                                    i2u608_40 1E40  
                                  i2u519_49 363A                                    i2u616_41 1ED2  
                                  i2u608_41 1E3C                                    i2u617_40 1EE4  
                                  i2u609_40 1E4E                                    i2u617_41 1EE0  
                                  i2u609_41 1E4A                                    i2u618_40 1EFC  
                                  i2u618_41 1EF8                                    i2u619_40 1F12  
                                  i2u619_41 1F0E                         _dc_motor_initialize 34FA  
              dc_motor_initialize@_dc_motor 0029             ??_ADC_StartConversion_Interrupt 0026  
          gpio_pin_direction_initialize@ret 0023                                   _vfpfcnvrt 2392  
                  _lcd_4bit_send_string_pos 2DE2                    ADC_SelectChannel@channel 0020  
   gpio_pin_direction_initialize@pin_config 001B                        fp_i2_ADC_ISR_HANDLER 0000  
                    gpio_pin_initialize@ret 0028                        ?_dc_motor_initialize 0029  
                   gpio_pin_write_logic@ret 0024                    ?_lcd_4bit_send_char_data 0029  
                                 copy_data0 331C                     __end_of_ADC_ISR_HANDLER 3154  
                     _lm35_res_1_Celsius_mv 009B                         _dc_motor_move_right 33EA  
                      _ecu_layer_initialize 363C                          _RB7_pin_init_value 0055  
                                  __Hrparam 0000                                  vfprintf@ap 00EE  
                                  __Lrparam 0000                                  vfprintf@fp 00EA  
                  ?_ADC_GetConversionResult 000C                      lcd_4bit_set_cursor@lcd 002D  
                                ?_vfpfcnvrt 0043                      lcd_4bit_set_cursor@row 002F  
                     _lm35_res_2_Celsius_mv 0099                        ?_dc_motor_move_right 0025  
               __end_of_gpio_pin_initialize 2F0E                          __end_of_btn_values 1011  
                                sprintf@fmt 00F4                                    ___xxtofl 1A96  
                     ??_dc_motor_initialize 002B                        _InterruptManagerHigh 0008  
                                  __ptext10 2392                                    __ptext11 1C4A  
                                  __ptext20 368C                                    __ptext12 2F96  
                                  __ptext21 363C                                    __ptext13 3476  
                                  __ptext30 25C6                                    __ptext22 26CA  
                                  __ptext14 2AF4                                    __ptext31 3208  
                                  __ptext23 3082                                    __ptext15 36D2  
                                  __ptext40 2880                                    __ptext32 3154  
                                  __ptext24 2F0E                                    __ptext16 34BA  
                                  __ptext33 1A96                                    __ptext25 3356  
                                  __ptext17 2D32                                    __ptext50 27A6  
                                  __ptext42 369E                                    __ptext34 24BE  
                                  __ptext26 34FA                                    __ptext18 2BBE  
                                  __ptext43 36A2                                    __ptext35 1034  
                                  __ptext27 2E84                                    __ptext19 1F70  
                                  __ptext60 2958                                    __ptext52 36B6  
                                  __ptext44 36A6                                    __ptext36 145E  
                                  __ptext28 2248                                    __ptext61 36CE  
                                  __ptext53 36BA                                    __ptext45 36AA  
                                  __ptext37 3538                                    __ptext29 20E6  
                                  __ptext62 0000                                    __ptext54 36BE  
                                  __ptext46 36AE                                    __ptext38 3668  
                                  __ptext55 36C2                                    __ptext47 36B2  
                                  __ptext39 3576                                    __ptext56 36C6  
                                  __ptext48 35E0                                    __ptext57 36CA  
                                  __ptext49 30F4                                    __ptext58 360E  
                                  __ptext59 3260             configure_voltage_reference@_adc 001B  
                    dc_motor_move_right@ret 0027                       ?_ecu_layer_initialize 0001  
          __end_of_convert_uint16_to_string 2AF4                                    isa$xinst 0000  
                                  int$flags 0065                                    _vfprintf 32B6  
                     ??_dc_motor_move_right 0027                              _lcd_send_4bits 2F0E  
     __end_of_ADC_StartConversion_Interrupt 3576               _ADC_StartConversion_Interrupt 3538  
                        _dc_motor_move_left 3430                 __end_of_lcd_4bit_initialize 27A6  
                     ?_InterruptManagerHigh 0001                        _RB6_InterruptHandler 009F  
              __end_of_gpio_pin_write_logic 2392                         ?_dc_motor_move_left 0025  
                                  intlevel1 0000                                    intlevel2 0000  
                                 sprintf@ap 0120                            ?_ADC_ISR_HANDLER 0001  
               __end_of_ADC_StartConversion 368C                         _InterruptManagerLow 0018  
            lcd_4bit_send_enable_signal@lcd 0025              lcd_4bit_send_enable_signal@ret 0027  
                                i2_INT1_ISR 36CA                                  i2_INT2_ISR 36C6  
           __end_of_ADC_GetConversionResult 2880                        ??_dc_motor_move_left 0027  
                    __end_of_lcd_send_4bits 2F96                dc_motor_move_right@_dc_motor 0025  
                               ??_vfpfcnvrt 0049                 __end_of_lcd_4bit_set_cursor 2D32  
                      ?_InterruptManagerLow 0001                                    sprintf@f 0122  
                                  sprintf@s 00F2                              _port_registers 00B5  
                    ??_ecu_layer_initialize 0033                 lcd_4bit_send_char_data@data 002B  
                     __end_of_dc_motor_stop 33EA                  ??_lcd_4bit_send_string_pos 0039  
                    lcd_4bit_initialize@lcd 002D                      lcd_4bit_initialize@ret 0031  
