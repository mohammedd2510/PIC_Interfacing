

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 29 17:11:17 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 23/03/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4620 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104                           	psect	idataCOMRAM
   105   00201A                     __pidataCOMRAM:
   106                           	callstack 0
   107                           
   108                           ;initializer for _lcd1
   109   00201A  03                 	db	3
   110   00201B  0B                 	db	11
   111   00201C  13                 	db	19
   112   00201D  1B                 	db	27
   113   00201E  23                 	db	35
   114   00201F  2B                 	db	43
   115                           
   116                           ;initializer for _led1
   117   002020  71                 	db	113
   118                           
   119                           	psect	idataBANK0
   120   001FB4                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _port_registers
   124   001FB4  80                 	db	128
   125   001FB5  0F                 	db	15
   126   001FB6  81                 	db	129
   127   001FB7  0F                 	db	15
   128   001FB8  82                 	db	130
   129   001FB9  0F                 	db	15
   130   001FBA  83                 	db	131
   131   001FBB  0F                 	db	15
   132   001FBC  84                 	db	132
   133   001FBD  0F                 	db	15
   134                           
   135                           ;initializer for _lat_registers
   136   001FBE  89                 	db	137
   137   001FBF  0F                 	db	15
   138   001FC0  8A                 	db	138
   139   001FC1  0F                 	db	15
   140   001FC2  8B                 	db	139
   141   001FC3  0F                 	db	15
   142   001FC4  8C                 	db	140
   143   001FC5  0F                 	db	15
   144   001FC6  8D                 	db	141
   145   001FC7  0F                 	db	15
   146                           
   147                           ;initializer for _tris_registers
   148   001FC8  92                 	db	146
   149   001FC9  0F                 	db	15
   150   001FCA  93                 	db	147
   151   001FCB  0F                 	db	15
   152   001FCC  94                 	db	148
   153   001FCD  0F                 	db	15
   154   001FCE  95                 	db	149
   155   001FCF  0F                 	db	15
   156   001FD0  96                 	db	150
   157   001FD1  0F                 	db	15
   158                           
   159                           	psect	smallconst
   160   001000                     __psmallconst:
   161                           	callstack 0
   162   001000  00                 	db	0
   163   001001                     _btn_values:
   164                           	callstack 0
   165   001001  37                 	db	55
   166   001002  38                 	db	56
   167   001003  39                 	db	57
   168   001004  2F                 	db	47
   169   001005  34                 	db	52
   170   001006  35                 	db	53
   171   001007  36                 	db	54
   172   001008  2A                 	db	42
   173   001009  31                 	db	49
   174   00100A  32                 	db	50
   175   00100B  33                 	db	51
   176   00100C  2D                 	db	45
   177   00100D  23                 	db	35
   178   00100E  30                 	db	48
   179   00100F  3D                 	db	61
   180   001010  2B                 	db	43
   181   001011                     __end_of_btn_values:
   182                           	callstack 0
   183   001011                     STR_4:
   184   001011  43                 	db	67	;'C'
   185   001012  6F                 	db	111	;'o'
   186   001013  75                 	db	117	;'u'
   187   001014  6E                 	db	110	;'n'
   188   001015  74                 	db	116	;'t'
   189   001016  65                 	db	101	;'e'
   190   001017  72                 	db	114	;'r'
   191   001018  20                 	db	32
   192   001019  3D                 	db	61	;'='
   193   00101A  20                 	db	32
   194   00101B  20                 	db	32
   195   00101C  00                 	db	0
   196   00101D                     STR_1:
   197   00101D  25                 	db	37
   198   00101E  69                 	db	105	;'i'
   199   00101F  00                 	db	0
   200   001020  00                 	db	0	; dummy byte at the end
   201   000000                     
   202                           	psect	nvCOMRAM
   203   00005F                     __pnvCOMRAM:
   204                           	callstack 0
   205   00005F                     _ret:
   206                           	callstack 0
   207   00005F                     	ds	1
   208   000000                     _ADRESL	set	4035
   209   000000                     _ADRESH	set	4036
   210   000000                     _TMR0H	set	4055
   211                           
   212                           ; #config settings
   213                           
   214                           	psect	cinit
   215   001D38                     __pcinit:
   216                           	callstack 0
   217   001D38                     start_initialization:
   218                           	callstack 0
   219   001D38                     __initialization:
   220                           	callstack 0
   221                           
   222                           ; Initialize objects allocated to BANK0 (30 bytes)
   223                           ; load TBLPTR registers with __pidataBANK0
   224   001D38  0EB4               	movlw	low __pidataBANK0
   225   001D3A  6EF6               	movwf	tblptrl,c
   226   001D3C  0E1F               	movlw	high __pidataBANK0
   227   001D3E  6EF7               	movwf	tblptrh,c
   228   001D40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   229   001D42  6EF8               	movwf	tblptru,c
   230   001D44  EE00  F080         	lfsr	0,__pdataBANK0
   231   001D48  EE10 F01E          	lfsr	1,30
   232   001D4C                     copy_data0:
   233   001D4C  0009               	tblrd		*+
   234   001D4E  CFF5 FFEE          	movff	tablat,postinc0
   235   001D52  50E5               	movf	postdec1,w,c
   236   001D54  50E1               	movf	fsr1l,w,c
   237   001D56  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (7 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241   001D58  0E1A               	movlw	low __pidataCOMRAM
   242   001D5A  6EF6               	movwf	tblptrl,c
   243   001D5C  0E20               	movlw	high __pidataCOMRAM
   244   001D5E  6EF7               	movwf	tblptrh,c
   245   001D60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246   001D62  6EF8               	movwf	tblptru,c
   247   001D64  EE00  F058         	lfsr	0,__pdataCOMRAM
   248   001D68  EE10 F007          	lfsr	1,7
   249   001D6C                     copy_data1:
   250   001D6C  0009               	tblrd		*+
   251   001D6E  CFF5 FFEE          	movff	tablat,postinc0
   252   001D72  50E5               	movf	postdec1,w,c
   253   001D74  50E1               	movf	fsr1l,w,c
   254   001D76  E1FA               	bnz	copy_data1
   255                           
   256                           ; Clear objects allocated to BANK0 (21 bytes)
   257   001D78  EE00  F0BC         	lfsr	0,__pbssBANK0
   258   001D7C  0E15               	movlw	21
   259   001D7E                     clear_0:
   260   001D7E  6AEE               	clrf	postinc0,c
   261   001D80  06E8               	decf	wreg,f,c
   262   001D82  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to COMRAM (48 bytes)
   265   001D84  EE00  F001         	lfsr	0,__pbssCOMRAM
   266   001D88  0E30               	movlw	48
   267   001D8A                     clear_1:
   268   001D8A  6AEE               	clrf	postinc0,c
   269   001D8C  06E8               	decf	wreg,f,c
   270   001D8E  E1FD               	bnz	clear_1
   271   001D90                     end_of_initialization:
   272                           	callstack 0
   273   001D90                     __end_of__initialization:
   274                           	callstack 0
   275   001D90  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276   001D92  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277   001D94  0100               	movlb	0
   278   001D96  EFFD  F00E         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281   000001                     __pbssCOMRAM:
   282                           	callstack 0
   283   000001                     _timer1_preload:
   284                           	callstack 0
   285   000001                     	ds	2
   286   000003                     _TMR1_InterruptHandler:
   287                           	callstack 0
   288   000003                     	ds	2
   289   000005                     _timer0_preload:
   290                           	callstack 0
   291   000005                     	ds	2
   292   000007                     _TMR0_InterruptHandler:
   293                           	callstack 0
   294   000007                     	ds	2
   295   000009                     _RB7_InterruptHandler:
   296                           	callstack 0
   297   000009                     	ds	2
   298   00000B                     _RB6_InterruptHandler:
   299                           	callstack 0
   300   00000B                     	ds	2
   301   00000D                     _RB5_InterruptHandler:
   302                           	callstack 0
   303   00000D                     	ds	2
   304   00000F                     _RB4_InterruptHandler:
   305                           	callstack 0
   306   00000F                     	ds	2
   307   000011                     _INT2_InterruptHandler:
   308                           	callstack 0
   309   000011                     	ds	2
   310   000013                     _INT1_InterruptHandler:
   311                           	callstack 0
   312   000013                     	ds	2
   313   000015                     _INT0_InterruptHandler:
   314                           	callstack 0
   315   000015                     	ds	2
   316   000017                     _ADC_InterruptHandler:
   317                           	callstack 0
   318   000017                     	ds	2
   319   000019                     _RB7_pin_init_value:
   320                           	callstack 0
   321   000019                     	ds	1
   322   00001A                     _RB6_pin_init_value:
   323                           	callstack 0
   324   00001A                     	ds	1
   325   00001B                     _RB5_pin_init_value:
   326                           	callstack 0
   327   00001B                     	ds	1
   328   00001C                     _RB4_pin_init_value:
   329                           	callstack 0
   330   00001C                     	ds	1
   331   00001D                     relay_turn_off@F3254:
   332                           	callstack 0
   333   00001D                     	ds	1
   334   00001E                     relay_turn_on@F3249:
   335                           	callstack 0
   336   00001E                     	ds	1
   337   00001F                     relay_initialize@F3244:
   338                           	callstack 0
   339   00001F                     	ds	1
   340   000020                     led_toggle@F3265:
   341                           	callstack 0
   342   000020                     	ds	1
   343   000021                     led_turn_off@F3260:
   344                           	callstack 0
   345   000021                     	ds	1
   346   000022                     led_turn_on@F3255:
   347                           	callstack 0
   348   000022                     	ds	1
   349   000023                     led_initialize@F3250:
   350                           	callstack 0
   351   000023                     	ds	1
   352   000024                     _counter_obj:
   353                           	callstack 0
   354   000024                     	ds	6
   355   00002A                     _timer_obj:
   356                           	callstack 0
   357   00002A                     	ds	6
   358   000030                     _Counter_Val:
   359                           	callstack 0
   360   000030                     	ds	1
   361                           
   362                           	psect	dataCOMRAM
   363   000058                     __pdataCOMRAM:
   364                           	callstack 0
   365   000058                     _lcd1:
   366                           	callstack 0
   367   000058                     	ds	6
   368   00005E                     _led1:
   369                           	callstack 0
   370   00005E                     	ds	1
   371                           
   372                           	psect	bssBANK0
   373   0000BC                     __pbssBANK0:
   374                           	callstack 0
   375   0000BC                     	ds	11
   376   0000C7                     	ds	6
   377   0000CD                     	ds	4
   378                           
   379                           	psect	dataBANK0
   380   000080                     __pdataBANK0:
   381                           	callstack 0
   382   000080                     _port_registers:
   383                           	callstack 0
   384   000080                     	ds	10
   385   00008A                     _lat_registers:
   386                           	callstack 0
   387   00008A                     	ds	10
   388   000094                     _tris_registers:
   389                           	callstack 0
   390   000094                     	ds	10
   391                           
   392                           	psect	cstackBANK0
   393   00009E                     __pcstackBANK0:
   394                           	callstack 0
   395   00009E                     gpio_pin_direction_initialize@pin_config:
   396                           	callstack 0
   397   00009E                     gpio_pin_write_logic@pin_config:
   398                           	callstack 0
   399   00009E                     Timer1_Read_Value@_timer:
   400                           	callstack 0
   401   00009E                     Timer1_Mode_Select@_timer:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x0
   405   00009E                     	ds	2
   406   0000A0                     ??_gpio_pin_direction_initialize:
   407   0000A0                     gpio_pin_write_logic@logic:
   408                           	callstack 0
   409   0000A0                     Timer1_Init@_timer:
   410                           	callstack 0
   411   0000A0                     Timer1_Read_Value@_value:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x2
   415   0000A0                     	ds	1
   416   0000A1                     ??_gpio_pin_write_logic:
   417                           
   418                           ; 1 bytes @ 0x3
   419   0000A1                     	ds	1
   420   0000A2                     ??_Timer1_Read_Value:
   421   0000A2                     ??_Timer1_Init:
   422                           
   423                           ; 1 bytes @ 0x4
   424   0000A2                     	ds	2
   425   0000A4                     Timer1_Init@ret:
   426                           	callstack 0
   427   0000A4                     Timer1_Read_Value@tmr1_L:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x6
   431   0000A4                     	ds	1
   432   0000A5                     Timer1_Read_Value@tmr1_H:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436   0000A5                     	ds	1
   437   0000A6                     gpio_pin_direction_initialize@ret:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x8
   441   0000A6                     	ds	1
   442   0000A7                     gpio_pin_write_logic@ret:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x9
   446   0000A7                     	ds	1
   447   0000A8                     lcd_send_4bits@lcd:
   448                           	callstack 0
   449   0000A8                     lcd_4bit_send_enable_signal@lcd:
   450                           	callstack 0
   451   0000A8                     gpio_pin_initialize@pin_config:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xA
   455   0000A8                     	ds	2
   456   0000AA                     ??_gpio_pin_initialize:
   457   0000AA                     lcd_send_4bits@_data_command:
   458                           	callstack 0
   459   0000AA                     lcd_4bit_send_enable_signal@ret:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xC
   463   0000AA                     	ds	1
   464   0000AB                     lcd_send_4bits@ret:
   465                           	callstack 0
   466   0000AB                     gpio_pin_initialize@ret:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xD
   470   0000AB                     	ds	1
   471   0000AC                     lcd_4bit_send_command@lcd:
   472                           	callstack 0
   473   0000AC                     lcd_4bit_send_char_data@lcd:
   474                           	callstack 0
   475   0000AC                     led_initialize@led:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xE
   479   0000AC                     	ds	2
   480   0000AE                     ??_led_initialize:
   481   0000AE                     lcd_4bit_send_command@command:
   482                           	callstack 0
   483   0000AE                     lcd_4bit_send_char_data@data:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x10
   487   0000AE                     	ds	1
   488   0000AF                     lcd_4bit_send_command@ret:
   489                           	callstack 0
   490   0000AF                     lcd_4bit_send_char_data@ret:
   491                           	callstack 0
   492   0000AF                     led_initialize@ret:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x11
   496   0000AF                     	ds	1
   497   0000B0                     led_initialize@pin_obj:
   498                           	callstack 0
   499   0000B0                     lcd_4bit_initialize@lcd:
   500                           	callstack 0
   501   0000B0                     lcd_4bit_set_cursor@lcd:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x12
   505   0000B0                     	ds	2
   506   0000B2                     ??_lcd_4bit_initialize:
   507   0000B2                     lcd_4bit_set_cursor@row:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x14
   511   0000B2                     	ds	1
   512   0000B3                     lcd_4bit_set_cursor@column:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x15
   516   0000B3                     	ds	1
   517   0000B4                     ??_lcd_4bit_set_cursor:
   518   0000B4                     lcd_4bit_initialize@l_data_pins_counter:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x16
   522   0000B4                     	ds	1
   523   0000B5                     lcd_4bit_initialize@ret:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x17
   527   0000B5                     	ds	1
   528   0000B6                     ecu_layer_initialize@ret:
   529                           	callstack 0
   530   0000B6                     lcd_4bit_send_char_data_pos@lcd:
   531                           	callstack 0
   532   0000B6                     lcd_4bit_send_string_pos@lcd:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x18
   536   0000B6                     	ds	1
   537   0000B7                     
   538                           ; 1 bytes @ 0x19
   539   0000B7                     	ds	1
   540   0000B8                     lcd_4bit_send_char_data_pos@row:
   541                           	callstack 0
   542   0000B8                     lcd_4bit_send_string_pos@row:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x1A
   546   0000B8                     	ds	1
   547   0000B9                     lcd_4bit_send_char_data_pos@column:
   548                           	callstack 0
   549   0000B9                     lcd_4bit_send_string_pos@column:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x1B
   553   0000B9                     	ds	1
   554   0000BA                     lcd_4bit_send_char_data_pos@data:
   555                           	callstack 0
   556   0000BA                     lcd_4bit_send_string_pos@str:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1C
   560   0000BA                     	ds	1
   561   0000BB                     lcd_4bit_send_char_data_pos@ret:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x1D
   565   0000BB                     	ds	1
   566   0000BC                     
   567                           ; 1 bytes @ 0x1E
   568                           
   569                           	psect	cstackCOMRAM
   570   000031                     __pcstackCOMRAM:
   571                           	callstack 0
   572   000031                     i2gpio_pin_toggle_logic@pin_config:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x0
   576   000031                     	ds	2
   577   000033                     ??i2_gpio_pin_toggle_logic:
   578                           
   579                           ; 1 bytes @ 0x2
   580   000033                     	ds	5
   581   000038                     i2gpio_pin_toggle_logic@ret:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x7
   585   000038                     	ds	1
   586   000039                     i2led_toggle@led:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x8
   590   000039                     	ds	2
   591   00003B                     ??i2_led_toggle:
   592                           
   593                           ; 1 bytes @ 0xA
   594   00003B                     	ds	1
   595   00003C                     i2led_toggle@pin_obj:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0xB
   599   00003C                     	ds	1
   600   00003D                     ??_InterruptManagerHigh:
   601   00003D                     
   602                           ; 1 bytes @ 0xC
   603   00003D                     	ds	6
   604   000043                     gpio_pin_toggle_logic@pin_config:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x12
   608   000043                     	ds	2
   609   000045                     ??_gpio_pin_toggle_logic:
   610                           
   611                           ; 1 bytes @ 0x14
   612   000045                     	ds	5
   613   00004A                     gpio_pin_toggle_logic@ret:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x19
   617   00004A                     	ds	1
   618   00004B                     led_toggle@led:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x1A
   622   00004B                     	ds	2
   623   00004D                     ??_led_toggle:
   624                           
   625                           ; 1 bytes @ 0x1C
   626   00004D                     	ds	1
   627   00004E                     led_toggle@pin_obj:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x1D
   631   00004E                     	ds	1
   632   00004F                     ??_InterruptManagerLow:
   633   00004F                     
   634                           ; 1 bytes @ 0x1E
   635   00004F                     	ds	9
   636                           
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 18 in file "application.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  2  994[None  ] int 
   649 ;; Registers used:
   650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels required when called: 16
   662 ;; This function calls:
   663 ;;		_Timer1_Read_Value
   664 ;;		_application_initialize
   665 ;;		_lcd_4bit_send_char_data_pos
   666 ;;		_lcd_4bit_send_string_pos
   667 ;; This function is called by:
   668 ;;		Startup code after reset
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text0
   673   001DFA                     __ptext0:
   674                           	callstack 0
   675   001DFA                     _main:
   676                           	callstack 15
   677   001DFA                     
   678                           ;application.c: 20:     application_initialize();
   679   001DFA  EC08  F010         	call	_application_initialize	;wreg free
   680   001DFE                     l6128:
   681                           
   682                           ;application.c: 22:     {;application.c: 23:         Timer1_Read_Value(&counter_obj,&Cou
      +                          nter_Val);
   683   001DFE  0E24               	movlw	low _counter_obj
   684   001E00  0100               	movlb	0	; () banked
   685   001E02  6F9E               	movwf	Timer1_Read_Value@_timer& (0+255),b
   686   001E04  0E00               	movlw	high _counter_obj
   687   001E06  6F9F               	movwf	(Timer1_Read_Value@_timer+1)& (0+255),b
   688   001E08  0E30               	movlw	low _Counter_Val
   689   001E0A  6FA0               	movwf	Timer1_Read_Value@_value& (0+255),b
   690   001E0C  0E00               	movlw	high _Counter_Val
   691   001E0E  6FA1               	movwf	(Timer1_Read_Value@_value+1)& (0+255),b
   692   001E10  ECCD  F00E         	call	_Timer1_Read_Value	;wreg free
   693   001E14                     
   694                           ;application.c: 24:         lcd_4bit_send_string_pos(&lcd1,1,1,"Counter =  ");
   695   001E14  0E58               	movlw	low _lcd1
   696   001E16  0100               	movlb	0	; () banked
   697   001E18  6FB6               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
   698   001E1A  0E00               	movlw	high _lcd1
   699   001E1C  6FB7               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
   700   001E1E  0E01               	movlw	1
   701   001E20  6FB8               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
   702   001E22  0E01               	movlw	1
   703   001E24  6FB9               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
   704   001E26  0E11               	movlw	low STR_4
   705   001E28  6FBA               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
   706   001E2A  0E10               	movlw	high STR_4
   707   001E2C  6FBB               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
   708   001E2E  ECF1  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   709   001E32                     
   710                           ;application.c: 25:         lcd_4bit_send_char_data_pos(&lcd1,1,11,(Counter_Val+0x30));
   711   001E32  0E58               	movlw	low _lcd1
   712   001E34  0100               	movlb	0	; () banked
   713   001E36  6FB6               	movwf	lcd_4bit_send_char_data_pos@lcd& (0+255),b
   714   001E38  0E00               	movlw	high _lcd1
   715   001E3A  6FB7               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),b
   716   001E3C  0E01               	movlw	1
   717   001E3E  6FB8               	movwf	lcd_4bit_send_char_data_pos@row& (0+255),b
   718   001E40  0E0B               	movlw	11
   719   001E42  6FB9               	movwf	lcd_4bit_send_char_data_pos@column& (0+255),b
   720   001E44  5030               	movf	_Counter_Val^0,w,c
   721   001E46  0F30               	addlw	48
   722   001E48  6FBA               	movwf	lcd_4bit_send_char_data_pos@data& (0+255),b
   723   001E4A  EC56  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
   724   001E4E  EFFF  F00E         	goto	l6128
   725   001E52  EFF8  F000         	goto	start
   726   001E56                     __end_of_main:
   727                           	callstack 0
   728                           
   729 ;; *************** function _lcd_4bit_send_string_pos *****************
   730 ;; Defined at:
   731 ;;		line 122 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  lcd             2   24[BANK0 ] PTR const struct .
   734 ;;		 -> lcd1(6), 
   735 ;;  row             1   26[BANK0 ] unsigned char 
   736 ;;  column          1   27[BANK0 ] unsigned char 
   737 ;;  str             2   28[BANK0 ] PTR unsigned char 
   738 ;;		 -> STR_4(12), 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  ret             1    0        unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   750 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;Total ram usage:        6 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 14
   757 ;; This function calls:
   758 ;;		_lcd_4bit_send_char_data
   759 ;;		_lcd_4bit_set_cursor
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text1
   766   001BE2                     __ptext1:
   767                           	callstack 0
   768   001BE2                     _lcd_4bit_send_string_pos:
   769                           	callstack 16
   770   001BE2                     
   771                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:     if(lcd==((void*)0)){
   772   001BE2  0100               	movlb	0	; () banked
   773   001BE4  51B6               	movf	lcd_4bit_send_string_pos@lcd& (0+255),w,b
   774   001BE6  11B7               	iorwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),w,b
   775   001BE8  A4D8               	btfss	status,2,c
   776   001BEA  EFF9  F00D         	goto	u4851
   777   001BEE  EFFB  F00D         	goto	u4850
   778   001BF2                     u4851:
   779   001BF2  EFFD  F00D         	goto	l5596
   780   001BF6                     u4850:
   781   001BF6                     
   782                           ; BSR set to: 0
   783                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:     }
   784   001BF6  EF29  F00E         	goto	l102
   785   001BFA                     l5596:
   786                           
   787                           ; BSR set to: 0
   788                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:        lcd_4bit_set_cursor(lcd,row,column);
   789   001BFA  C0B6  F0B0         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
   790   001BFE  C0B7  F0B1         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
   791   001C02  C0B8  F0B2         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
   792   001C06  C0B9  F0B3         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
   793   001C0A  EC09  F00C         	call	_lcd_4bit_set_cursor	;wreg free
   794                           
   795                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
   796   001C0E  EF1A  F00E         	goto	l5602
   797   001C12                     l5598:
   798   001C12  C0B6  F0AC         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
   799   001C16  C0B7  F0AD         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
   800   001C1A  C0BA  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   801   001C1E  C0BB  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
   802   001C22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   803   001C22  6AF8               	clrf	tblptru,c
   804   001C24                     	endif
   805   001C24                     	if	0	;tblptru may be non-zero
   806   001C24                     	endif
   807   001C24  0008               	tblrd		*
   808   001C26  CFF5 F0AE          	movff	tablat,lcd_4bit_send_char_data@data
   809   001C2A  EC73  F00D         	call	_lcd_4bit_send_char_data	;wreg free
   810   001C2E  0100               	movlb	0	; () banked
   811   001C30  4BBA               	infsnz	lcd_4bit_send_string_pos@str& (0+255),f,b
   812   001C32  2BBB               	incf	(lcd_4bit_send_string_pos@str+1)& (0+255),f,b
   813   001C34                     l5602:
   814                           
   815                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
   816   001C34  C0BA  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   817   001C38  C0BB  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
   818   001C3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   819   001C3C  6AF8               	clrf	tblptru,c
   820   001C3E                     	endif
   821   001C3E                     	if	0	;tblptru may be non-zero
   822   001C3E                     	endif
   823   001C3E  0008               	tblrd		*
   824   001C40  50F5               	movf	tablat,w,c
   825   001C42  0900               	iorlw	0
   826   001C44  A4D8               	btfss	status,2,c
   827   001C46  EF27  F00E         	goto	u4861
   828   001C4A  EF29  F00E         	goto	u4860
   829   001C4E                     u4861:
   830   001C4E  EF09  F00E         	goto	l5598
   831   001C52                     u4860:
   832   001C52                     l102:
   833   001C52  0012               	return		;funcret
   834   001C54                     __end_of_lcd_4bit_send_string_pos:
   835                           	callstack 0
   836                           
   837 ;; *************** function _lcd_4bit_send_char_data_pos *****************
   838 ;; Defined at:
   839 ;;		line 85 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  lcd             2   24[BANK0 ] PTR const struct .
   842 ;;		 -> lcd1(6), 
   843 ;;  row             1   26[BANK0 ] unsigned char 
   844 ;;  column          1   27[BANK0 ] unsigned char 
   845 ;;  data            1   28[BANK0 ] unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  ret             1   29[BANK0 ] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      unsigned char 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        6 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 14
   864 ;; This function calls:
   865 ;;		_lcd_4bit_send_char_data
   866 ;;		_lcd_4bit_set_cursor
   867 ;; This function is called by:
   868 ;;		_main
   869 ;;		_lcd_4bit_send_custom_char
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text2
   874   001EAC                     __ptext2:
   875                           	callstack 0
   876   001EAC                     _lcd_4bit_send_char_data_pos:
   877                           	callstack 16
   878   001EAC                     
   879                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 86:     Std_ReturnType ret=(Std_ReturnType)0x01;
   880   001EAC  0E01               	movlw	1
   881   001EAE  0100               	movlb	0	; () banked
   882   001EB0  6FBB               	movwf	lcd_4bit_send_char_data_pos@ret& (0+255),b
   883   001EB2                     
   884                           ; BSR set to: 0
   885                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 87:     if(lcd==((void*)0)){
   886   001EB2  51B6               	movf	lcd_4bit_send_char_data_pos@lcd& (0+255),w,b
   887   001EB4  11B7               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),w,b
   888   001EB6  A4D8               	btfss	status,2,c
   889   001EB8  EF60  F00F         	goto	u4841
   890   001EBC  EF62  F00F         	goto	u4840
   891   001EC0                     u4841:
   892   001EC0  EF66  F00F         	goto	l5584
   893   001EC4                     u4840:
   894   001EC4                     
   895                           ; BSR set to: 0
   896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:         ret=(Std_ReturnType)0x00;
   897   001EC4  0E00               	movlw	0
   898   001EC6  6FBB               	movwf	lcd_4bit_send_char_data_pos@ret& (0+255),b
   899                           
   900                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 89:     }
   901   001EC8  EF78  F00F         	goto	l5586
   902   001ECC                     l5584:
   903                           
   904                           ; BSR set to: 0
   905                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         lcd_4bit_set_cursor(lcd,row,column);
   906   001ECC  C0B6  F0B0         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
   907   001ED0  C0B7  F0B1         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
   908   001ED4  C0B8  F0B2         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
   909   001ED8  C0B9  F0B3         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
   910   001EDC  EC09  F00C         	call	_lcd_4bit_set_cursor	;wreg free
   911                           
   912                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         lcd_4bit_send_char_data(lcd,data);
   913   001EE0  C0B6  F0AC         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
   914   001EE4  C0B7  F0AD         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
   915   001EE8  C0BA  F0AE         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
   916   001EEC  EC73  F00D         	call	_lcd_4bit_send_char_data	;wreg free
   917   001EF0                     l5586:
   918                           
   919                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 94:     return ret;
   920   001EF0  0100               	movlb	0	; () banked
   921   001EF2  51BB               	movf	lcd_4bit_send_char_data_pos@ret& (0+255),w,b
   922   001EF4                     
   923                           ; BSR set to: 0
   924   001EF4  0012               	return		;funcret
   925   001EF6                     __end_of_lcd_4bit_send_char_data_pos:
   926                           	callstack 0
   927                           
   928 ;; *************** function _lcd_4bit_set_cursor *****************
   929 ;; Defined at:
   930 ;;		line 450 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  lcd             2   18[BANK0 ] PTR const struct .
   933 ;;		 -> lcd1(6), 
   934 ;;  row             1   20[BANK0 ] unsigned char 
   935 ;;  column          1   21[BANK0 ] unsigned char 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  ret             1    0        unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      unsigned char 
   940 ;; Registers used:
   941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;Total ram usage:        6 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 13
   954 ;; This function calls:
   955 ;;		_lcd_4bit_send_command
   956 ;; This function is called by:
   957 ;;		_lcd_4bit_send_char_data_pos
   958 ;;		_lcd_4bit_send_string_pos
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text3
   963   001812                     __ptext3:
   964                           	callstack 0
   965   001812                     _lcd_4bit_set_cursor:
   966                           	callstack 16
   967   001812                     
   968                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:     if(lcd==((void*)0)){
   969   001812  0100               	movlb	0	; () banked
   970   001814  51B0               	movf	lcd_4bit_set_cursor@lcd& (0+255),w,b
   971   001816  11B1               	iorwf	(lcd_4bit_set_cursor@lcd+1)& (0+255),w,b
   972   001818  A4D8               	btfss	status,2,c
   973   00181A  EF11  F00C         	goto	u4791
   974   00181E  EF13  F00C         	goto	u4790
   975   001822                     u4791:
   976   001822  EF15  F00C         	goto	l5496
   977   001826                     u4790:
   978   001826                     l5494:
   979                           
   980                           ; BSR set to: 0
   981                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 454:     }
   982   001826  EF61  F00C         	goto	l227
   983   00182A                     l5496:
   984                           
   985                           ; BSR set to: 0
   986                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 456:         column--;
   987   00182A  07B3               	decf	lcd_4bit_set_cursor@column& (0+255),f,b
   988                           
   989                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:         switch (row){
   990   00182C  EF44  F00C         	goto	l5510
   991   001830                     l5498:
   992                           
   993                           ; BSR set to: 0
   994   001830  C0B0  F0AC         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
   995   001834  C0B1  F0AD         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
   996   001838  51B3               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
   997   00183A  0F80               	addlw	128
   998   00183C  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
   999   00183E  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1000   001842  EF61  F00C         	goto	l227
  1001   001846                     l5500:
  1002                           
  1003                           ; BSR set to: 0
  1004   001846  C0B0  F0AC         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1005   00184A  C0B1  F0AD         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1006   00184E  51B3               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  1007   001850  0FC0               	addlw	192
  1008   001852  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1009   001854  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1010   001858  EF61  F00C         	goto	l227
  1011   00185C                     l5502:
  1012                           
  1013                           ; BSR set to: 0
  1014   00185C  C0B0  F0AC         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1015   001860  C0B1  F0AD         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1016   001864  51B3               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  1017   001866  0F94               	addlw	148
  1018   001868  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1019   00186A  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1020   00186E  EF61  F00C         	goto	l227
  1021   001872                     l5504:
  1022                           
  1023                           ; BSR set to: 0
  1024   001872  C0B0  F0AC         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1025   001876  C0B1  F0AD         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1026   00187A  51B3               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  1027   00187C  0FD4               	addlw	212
  1028   00187E  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1029   001880  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1030   001884  EF61  F00C         	goto	l227
  1031   001888                     l5510:
  1032                           
  1033                           ; BSR set to: 0
  1034   001888  51B2               	movf	lcd_4bit_set_cursor@row& (0+255),w,b
  1035   00188A  6FB4               	movwf	??_lcd_4bit_set_cursor& (0+255),b
  1036   00188C  6BB5               	clrf	(??_lcd_4bit_set_cursor+1)& (0+255),b
  1037                           
  1038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1039                           ; Switch size 1, requested type "simple"
  1040                           ; Number of cases is 1, Range of values is 0 to 0
  1041                           ; switch strategies available:
  1042                           ; Name         Instructions Cycles
  1043                           ; simple_byte            4     3 (average)
  1044                           ;	Chosen strategy is simple_byte
  1045   00188E  51B5               	movf	(??_lcd_4bit_set_cursor+1)& (0+255),w,b
  1046   001890  0A00               	xorlw	0	; case 0
  1047   001892  B4D8               	btfsc	status,2,c
  1048   001894  EF4E  F00C         	goto	l6218
  1049   001898  EF13  F00C         	goto	l5494
  1050   00189C                     l6218:
  1051                           
  1052                           ; BSR set to: 0
  1053                           ; Switch size 1, requested type "simple"
  1054                           ; Number of cases is 4, Range of values is 1 to 4
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte           13     7 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059   00189C  51B4               	movf	??_lcd_4bit_set_cursor& (0+255),w,b
  1060   00189E  0A01               	xorlw	1	; case 1
  1061   0018A0  B4D8               	btfsc	status,2,c
  1062   0018A2  EF18  F00C         	goto	l5498
  1063   0018A6  0A03               	xorlw	3	; case 2
  1064   0018A8  B4D8               	btfsc	status,2,c
  1065   0018AA  EF23  F00C         	goto	l5500
  1066   0018AE  0A01               	xorlw	1	; case 3
  1067   0018B0  B4D8               	btfsc	status,2,c
  1068   0018B2  EF2E  F00C         	goto	l5502
  1069   0018B6  0A07               	xorlw	7	; case 4
  1070   0018B8  B4D8               	btfsc	status,2,c
  1071   0018BA  EF39  F00C         	goto	l5504
  1072   0018BE  EF13  F00C         	goto	l5494
  1073   0018C2                     l227:
  1074   0018C2  0012               	return		;funcret
  1075   0018C4                     __end_of_lcd_4bit_set_cursor:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _lcd_4bit_send_char_data *****************
  1079 ;; Defined at:
  1080 ;;		line 63 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1083 ;;		 -> lcd1(6), 
  1084 ;;  data            1   16[BANK0 ] unsigned char 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  ret             1   17[BANK0 ] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      unsigned char 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1096 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;Total ram usage:        4 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 12
  1103 ;; This function calls:
  1104 ;;		_gpio_pin_write_logic
  1105 ;;		_lcd_4bit_send_enable_signal
  1106 ;;		_lcd_send_4bits
  1107 ;; This function is called by:
  1108 ;;		_lcd_4bit_send_char_data_pos
  1109 ;;		_lcd_4bit_send_string_pos
  1110 ;;		_lcd_4bit_send_string
  1111 ;;		_lcd_4bit_send_custom_char
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text4
  1116   001AE6                     __ptext4:
  1117                           	callstack 0
  1118   001AE6                     _lcd_4bit_send_char_data:
  1119                           	callstack 17
  1120   001AE6                     
  1121                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     if(lcd==((void*)0)){
  1122   001AE6  0100               	movlb	0	; () banked
  1123   001AE8  51AC               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  1124   001AEA  11AD               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  1125   001AEC  A4D8               	btfss	status,2,c
  1126   001AEE  EF7B  F00D         	goto	u4781
  1127   001AF2  EF7D  F00D         	goto	u4780
  1128   001AF6                     u4781:
  1129   001AF6  EF81  F00D         	goto	l5484
  1130   001AFA                     u4780:
  1131   001AFA                     
  1132                           ; BSR set to: 0
  1133                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret=(Std_ReturnType)0x00;
  1134   001AFA  0E00               	movlw	0
  1135   001AFC  6FAF               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  1136                           
  1137                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:     }
  1138   001AFE  EFB0  F00D         	goto	l5486
  1139   001B02                     l5484:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  1143   001B02  C0AC  F09E         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1144   001B06  C0AD  F09F         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1145   001B0A  0E01               	movlw	1
  1146   001B0C  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1147   001B0E  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1148   001B12  0100               	movlb	0	; () banked
  1149   001B14  6FAF               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  1150                           
  1151                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret=lcd_send_4bits(lcd, data >> 4);
  1152   001B16  C0AC  F0A8         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1153   001B1A  C0AD  F0A9         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1154   001B1E  39AE               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  1155   001B20  0B0F               	andlw	15
  1156   001B22  6FAA               	movwf	lcd_send_4bits@_data_command& (0+255),b
  1157   001B24  EC62  F00C         	call	_lcd_send_4bits	;wreg free
  1158   001B28  0100               	movlb	0	; () banked
  1159   001B2A  6FAF               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  1160                           
  1161                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_4bit_send_enable_signal(lcd);
  1162   001B2C  C0AC  F0A8         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1163   001B30  C0AD  F0A9         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1164   001B34  EC2B  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  1165   001B38  0100               	movlb	0	; () banked
  1166   001B3A  6FAF               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  1167                           
  1168                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_send_4bits(lcd, data);
  1169   001B3C  C0AC  F0A8         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1170   001B40  C0AD  F0A9         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1171   001B44  C0AE  F0AA         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1172   001B48  EC62  F00C         	call	_lcd_send_4bits	;wreg free
  1173   001B4C  0100               	movlb	0	; () banked
  1174   001B4E  6FAF               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  1175                           
  1176                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_4bit_send_enable_signal(lcd);
  1177   001B50  C0AC  F0A8         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1178   001B54  C0AD  F0A9         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1179   001B58  EC2B  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  1180   001B5C  0100               	movlb	0	; () banked
  1181   001B5E  6FAF               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  1182   001B60                     l5486:
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:     return ret;
  1186   001B60  51AF               	movf	lcd_4bit_send_char_data@ret& (0+255),w,b
  1187   001B62                     
  1188                           ; BSR set to: 0
  1189   001B62  0012               	return		;funcret
  1190   001B64                     __end_of_lcd_4bit_send_char_data:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _application_initialize *****************
  1194 ;; Defined at:
  1195 ;;		line 30 in file "application.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  ret             1    0        unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 15
  1216 ;; This function calls:
  1217 ;;		_Timer1_Counter_Init
  1218 ;;		_ecu_layer_initialize
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text5
  1225   002010                     __ptext5:
  1226                           	callstack 0
  1227   002010                     _application_initialize:
  1228                           	callstack 15
  1229   002010                     
  1230                           ;application.c: 32:     ecu_layer_initialize();
  1231   002010  ECC8  F00F         	call	_ecu_layer_initialize	;wreg free
  1232   002014                     
  1233                           ;application.c: 34:     Timer1_Counter_Init();
  1234   002014  ECB1  F00F         	call	_Timer1_Counter_Init	;wreg free
  1235   002018  0012               	return		;funcret
  1236   00201A                     __end_of_application_initialize:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _ecu_layer_initialize *****************
  1240 ;; Defined at:
  1241 ;;		line 154 in file "ECU_Layer/ecu_layer_init.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  ret             1   24[BANK0 ] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        1 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 14
  1262 ;; This function calls:
  1263 ;;		_lcd_4bit_initialize
  1264 ;;		_led_initialize
  1265 ;; This function is called by:
  1266 ;;		_application_initialize
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text6
  1271   001F90                     __ptext6:
  1272                           	callstack 0
  1273   001F90                     _ecu_layer_initialize:
  1274                           	callstack 15
  1275   001F90                     
  1276                           ;ECU_Layer/ecu_layer_init.c: 156:      ret = lcd_4bit_initialize(&lcd1);
  1277   001F90  0E58               	movlw	low _lcd1
  1278   001F92  0100               	movlb	0	; () banked
  1279   001F94  6FB0               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  1280   001F96  0E00               	movlw	high _lcd1
  1281   001F98  6FB1               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  1282   001F9A  ECD7  F00A         	call	_lcd_4bit_initialize	;wreg free
  1283   001F9E  0100               	movlb	0	; () banked
  1284   001FA0  6FB6               	movwf	ecu_layer_initialize@ret& (0+255),b
  1285   001FA2                     
  1286                           ; BSR set to: 0
  1287                           ;ECU_Layer/ecu_layer_init.c: 157:      ret&= led_initialize(&led1);
  1288   001FA2  0E5E               	movlw	low _led1
  1289   001FA4  6FAC               	movwf	led_initialize@led& (0+255),b
  1290   001FA6  0E00               	movlw	high _led1
  1291   001FA8  6FAD               	movwf	(led_initialize@led+1)& (0+255),b
  1292   001FAA  ECF3  F00C         	call	_led_initialize	;wreg free
  1293   001FAE  0100               	movlb	0	; () banked
  1294   001FB0  17B6               	andwf	ecu_layer_initialize@ret& (0+255),f,b
  1295   001FB2                     
  1296                           ; BSR set to: 0
  1297   001FB2  0012               	return		;funcret
  1298   001FB4                     __end_of_ecu_layer_initialize:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _led_initialize *****************
  1302 ;; Defined at:
  1303 ;;		line 7 in file "ECU_Layer/LED/ecu_led.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  led             2   14[BANK0 ] PTR const struct .
  1306 ;;		 -> led1(1), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  pin_obj         1   18[BANK0 ] struct .
  1309 ;;  ret             1   17[BANK0 ] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      unsigned char 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        5 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 12
  1326 ;; This function calls:
  1327 ;;		_gpio_pin_initialize
  1328 ;; This function is called by:
  1329 ;;		_ecu_layer_initialize
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text7
  1334   0019E6                     __ptext7:
  1335                           	callstack 0
  1336   0019E6                     _led_initialize:
  1337                           	callstack 16
  1338   0019E6                     
  1339                           ;ECU_Layer/LED/ecu_led.c: 9:     pin_config_t pin_obj={.port = led->port_name,.pin = led
      +                          ->pin,.direction=OUTPUT,.logic=led->led_status };
  1340   0019E6  C023  F0B0         	movff	led_initialize@F3250,led_initialize@pin_obj
  1341   0019EA  C0AC  FFD9         	movff	led_initialize@led,fsr2l
  1342   0019EE  C0AD  FFDA         	movff	led_initialize@led+1,fsr2h
  1343   0019F2  50DF               	movf	223,w,c
  1344   0019F4  0B0F               	andlw	15
  1345   0019F6  0100               	movlb	0	; () banked
  1346   0019F8  6FAE               	movwf	??_led_initialize& (0+255),b
  1347   0019FA  51B0               	movf	led_initialize@pin_obj& (0+255),w,b
  1348   0019FC  19AE               	xorwf	??_led_initialize& (0+255),w,b
  1349   0019FE  0BF8               	andlw	-8
  1350   001A00  19AE               	xorwf	??_led_initialize& (0+255),w,b
  1351   001A02  6FB0               	movwf	led_initialize@pin_obj& (0+255),b
  1352   001A04                     
  1353                           ; BSR set to: 0
  1354   001A04  C0AC  FFD9         	movff	led_initialize@led,fsr2l
  1355   001A08  C0AD  FFDA         	movff	led_initialize@led+1,fsr2h
  1356   001A0C  38DF               	swapf	223,w,c
  1357   001A0E  0B07               	andlw	7
  1358   001A10  6FAE               	movwf	??_led_initialize& (0+255),b
  1359   001A12  47AE               	rlncf	??_led_initialize& (0+255),f,b
  1360   001A14  47AE               	rlncf	??_led_initialize& (0+255),f,b
  1361   001A16  47AE               	rlncf	??_led_initialize& (0+255),f,b
  1362   001A18  51B0               	movf	led_initialize@pin_obj& (0+255),w,b
  1363   001A1A  19AE               	xorwf	??_led_initialize& (0+255),w,b
  1364   001A1C  0BC7               	andlw	-57
  1365   001A1E  19AE               	xorwf	??_led_initialize& (0+255),w,b
  1366   001A20  6FB0               	movwf	led_initialize@pin_obj& (0+255),b
  1367   001A22                     
  1368                           ; BSR set to: 0
  1369   001A22  9DB0               	bcf	led_initialize@pin_obj& (0+255),6,b
  1370   001A24                     
  1371                           ; BSR set to: 0
  1372   001A24  C0AC  FFD9         	movff	led_initialize@led,fsr2l
  1373   001A28  C0AD  FFDA         	movff	led_initialize@led+1,fsr2h
  1374   001A2C  AEDF               	btfss	indf2,7,c
  1375   001A2E  D002               	bra	u4735
  1376   001A30  8FB0               	bsf	led_initialize@pin_obj& (0+255),7,b
  1377   001A32  D002               	bra	u4737
  1378   001A34                     u4735:
  1379   001A34  0100               	movlb	0	; () banked
  1380   001A36  9FB0               	bcf	led_initialize@pin_obj& (0+255),7,b
  1381   001A38                     u4737:
  1382   001A38                     
  1383                           ; BSR set to: 0
  1384                           ;ECU_Layer/LED/ecu_led.c: 10:     if(led==((void*)0)){
  1385   001A38  51AC               	movf	led_initialize@led& (0+255),w,b
  1386   001A3A  11AD               	iorwf	(led_initialize@led+1)& (0+255),w,b
  1387   001A3C  A4D8               	btfss	status,2,c
  1388   001A3E  EF23  F00D         	goto	u4741
  1389   001A42  EF25  F00D         	goto	u4740
  1390   001A46                     u4741:
  1391   001A46  EF29  F00D         	goto	l5436
  1392   001A4A                     u4740:
  1393   001A4A                     
  1394                           ; BSR set to: 0
  1395                           ;ECU_Layer/LED/ecu_led.c: 11:         ret=(Std_ReturnType)0x00;
  1396   001A4A  0E00               	movlw	0
  1397   001A4C  6FAF               	movwf	led_initialize@ret& (0+255),b
  1398                           
  1399                           ;ECU_Layer/LED/ecu_led.c: 12:     }
  1400   001A4E  EF31  F00D         	goto	l5438
  1401   001A52                     l5436:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;ECU_Layer/LED/ecu_led.c: 14:         ret=gpio_pin_initialize(&pin_obj);
  1405   001A52  0EB0               	movlw	low led_initialize@pin_obj
  1406   001A54  6FA8               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  1407   001A56  0E00               	movlw	high led_initialize@pin_obj
  1408   001A58  6FA9               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  1409   001A5A  ECAB  F00C         	call	_gpio_pin_initialize	;wreg free
  1410   001A5E  0100               	movlb	0	; () banked
  1411   001A60  6FAF               	movwf	led_initialize@ret& (0+255),b
  1412   001A62                     l5438:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;ECU_Layer/LED/ecu_led.c: 16:     return ret;
  1416   001A62  51AF               	movf	led_initialize@ret& (0+255),w,b
  1417   001A64                     
  1418                           ; BSR set to: 0
  1419   001A64  0012               	return		;funcret
  1420   001A66                     __end_of_led_initialize:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _lcd_4bit_initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  lcd             2   18[BANK0 ] PTR const struct .
  1428 ;;		 -> lcd1(6), 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  ret             1   23[BANK0 ] unsigned char 
  1431 ;;  l_data_pins_    1   22[BANK0 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      unsigned char 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        6 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 13
  1448 ;; This function calls:
  1449 ;;		_gpio_pin_initialize
  1450 ;;		_lcd_4bit_send_command
  1451 ;; This function is called by:
  1452 ;;		_ecu_layer_initialize
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text8
  1457   0015AE                     __ptext8:
  1458                           	callstack 0
  1459   0015AE                     _lcd_4bit_initialize:
  1460                           	callstack 15
  1461   0015AE                     
  1462                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  1463   0015AE  0E00               	movlw	0
  1464   0015B0  0100               	movlb	0	; () banked
  1465   0015B2  6FB4               	movwf	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  1466   0015B4                     
  1467                           ; BSR set to: 0
  1468                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  1469   0015B4  51B0               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  1470   0015B6  11B1               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1471   0015B8  A4D8               	btfss	status,2,c
  1472   0015BA  EFE1  F00A         	goto	u4711
  1473   0015BE  EFE3  F00A         	goto	u4710
  1474   0015C2                     u4711:
  1475   0015C2  EFE7  F00A         	goto	l5388
  1476   0015C6                     u4710:
  1477   0015C6                     
  1478                           ; BSR set to: 0
  1479                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  1480   0015C6  0E00               	movlw	0
  1481   0015C8  6FB5               	movwf	lcd_4bit_initialize@ret& (0+255),b
  1482                           
  1483                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  1484   0015CA  EF4D  F00B         	goto	l5416
  1485   0015CE                     l5388:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  1489   0015CE  C0B0  F0A8         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  1490   0015D2  C0B1  F0A9         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  1491   0015D6  ECAB  F00C         	call	_gpio_pin_initialize	;wreg free
  1492   0015DA  0100               	movlb	0	; () banked
  1493   0015DC  6FB5               	movwf	lcd_4bit_initialize@ret& (0+255),b
  1494                           
  1495                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  1496   0015DE  0E01               	movlw	1
  1497   0015E0  25B0               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1498   0015E2  6FA8               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  1499   0015E4  0E00               	movlw	0
  1500   0015E6  21B1               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1501   0015E8  6FA9               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  1502   0015EA  ECAB  F00C         	call	_gpio_pin_initialize	;wreg free
  1503   0015EE  0100               	movlb	0	; () banked
  1504   0015F0  6FB5               	movwf	lcd_4bit_initialize@ret& (0+255),b
  1505   0015F2                     
  1506                           ; BSR set to: 0
  1507                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  1508   0015F2  0E00               	movlw	0
  1509   0015F4  6FB4               	movwf	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  1510   0015F6                     l5396:
  1511                           
  1512                           ; BSR set to: 0
  1513   0015F6  51B4               	movf	lcd_4bit_initialize@l_data_pins_counter& (0+255),w,b
  1514   0015F8  25B0               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  1515   0015FA  6FB2               	movwf	??_lcd_4bit_initialize& (0+255),b
  1516   0015FC  0E00               	movlw	0
  1517   0015FE  21B1               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  1518   001600  6FB3               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  1519   001602  0E02               	movlw	2
  1520   001604  25B2               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  1521   001606  6FA8               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  1522   001608  0E00               	movlw	0
  1523   00160A  21B3               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  1524   00160C  6FA9               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  1525   00160E  ECAB  F00C         	call	_gpio_pin_initialize	;wreg free
  1526   001612                     
  1527                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  1528   001612  0100               	movlb	0	; () banked
  1529   001614  2BB4               	incf	lcd_4bit_initialize@l_data_pins_counter& (0+255),f,b
  1530   001616                     
  1531                           ; BSR set to: 0
  1532   001616  0E03               	movlw	3
  1533   001618  65B4               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  1534   00161A  EF11  F00B         	goto	u4721
  1535   00161E  EF13  F00B         	goto	u4720
  1536   001622                     u4721:
  1537   001622  EFFB  F00A         	goto	l5396
  1538   001626                     u4720:
  1539   001626                     
  1540                           ; BSR set to: 0
  1541   001626  C0B0  F0AC         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1542   00162A  C0B1  F0AD         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1543   00162E  0E33               	movlw	51
  1544   001630  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1545   001632  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1546   001636                     
  1547                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((150)*(8000000/4000
      +                          000.0)));
  1548   001636  0E64               	movlw	100
  1549   001638                     u5377:
  1550   001638  2EE8               	decfsz	wreg,f,c
  1551   00163A  D7FE               	bra	u5377
  1552   00163C  C0B0  F0AC         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1553   001640  C0B1  F0AD         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1554   001644  0E32               	movlw	50
  1555   001646  0100               	movlb	0	; () banked
  1556   001648  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1557   00164A  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1558   00164E  C0B0  F0AC         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1559   001652  C0B1  F0AD         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1560   001656  0E28               	movlw	40
  1561   001658  0100               	movlb	0	; () banked
  1562   00165A  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1563   00165C  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1564   001660  C0B0  F0AC         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1565   001664  C0B1  F0AD         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1566   001668  0E01               	movlw	1
  1567   00166A  0100               	movlb	0	; () banked
  1568   00166C  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1569   00166E  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1570   001672  C0B0  F0AC         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1571   001676  C0B1  F0AD         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1572   00167A  0E06               	movlw	6
  1573   00167C  0100               	movlb	0	; () banked
  1574   00167E  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1575   001680  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1576   001684                     
  1577                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret=lcd_4bit_send_command(lcd,0X0C);
  1578   001684  C0B0  F0AC         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1579   001688  C0B1  F0AD         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1580   00168C  0E0C               	movlw	12
  1581   00168E  0100               	movlb	0	; () banked
  1582   001690  6FAE               	movwf	lcd_4bit_send_command@command& (0+255),b
  1583   001692  ECB2  F00D         	call	_lcd_4bit_send_command	;wreg free
  1584   001696  0100               	movlb	0	; () banked
  1585   001698  6FB5               	movwf	lcd_4bit_initialize@ret& (0+255),b
  1586   00169A                     l5416:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     return ret;
  1590   00169A  51B5               	movf	lcd_4bit_initialize@ret& (0+255),w,b
  1591   00169C                     
  1592                           ; BSR set to: 0
  1593   00169C  0012               	return		;funcret
  1594   00169E                     __end_of_lcd_4bit_initialize:
  1595                           	callstack 0
  1596                           
  1597 ;; *************** function _lcd_4bit_send_command *****************
  1598 ;; Defined at:
  1599 ;;		line 43 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1602 ;;		 -> lcd1(6), 
  1603 ;;  command         1   16[BANK0 ] unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  ret             1   17[BANK0 ] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      unsigned char 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1615 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;Total ram usage:        4 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 12
  1622 ;; This function calls:
  1623 ;;		_gpio_pin_write_logic
  1624 ;;		_lcd_4bit_send_enable_signal
  1625 ;;		_lcd_send_4bits
  1626 ;; This function is called by:
  1627 ;;		_lcd_4bit_initialize
  1628 ;;		_lcd_4bit_set_cursor
  1629 ;;		_lcd_4bit_send_custom_char
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text9
  1634   001B64                     __ptext9:
  1635                           	callstack 0
  1636   001B64                     _lcd_4bit_send_command:
  1637                           	callstack 16
  1638   001B64                     
  1639                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:     if(lcd==((void*)0)){
  1640   001B64  0100               	movlb	0	; () banked
  1641   001B66  51AC               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  1642   001B68  11AD               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  1643   001B6A  A4D8               	btfss	status,2,c
  1644   001B6C  EFBA  F00D         	goto	u4661
  1645   001B70  EFBC  F00D         	goto	u4660
  1646   001B74                     u4661:
  1647   001B74  EFC0  F00D         	goto	l5360
  1648   001B78                     u4660:
  1649   001B78                     
  1650                           ; BSR set to: 0
  1651                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         ret=(Std_ReturnType)0x00;
  1652   001B78  0E00               	movlw	0
  1653   001B7A  6FAF               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1654                           
  1655                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:     }
  1656   001B7C  EFEF  F00D         	goto	l5362
  1657   001B80                     l5360:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  1661   001B80  C0AC  F09E         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1662   001B84  C0AD  F09F         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  1663   001B88  0E00               	movlw	0
  1664   001B8A  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1665   001B8C  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1666   001B90  0100               	movlb	0	; () banked
  1667   001B92  6FAF               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1668                           
  1669                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=lcd_send_4bits(lcd, command >> 4);
  1670   001B94  C0AC  F0A8         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1671   001B98  C0AD  F0A9         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1672   001B9C  39AE               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  1673   001B9E  0B0F               	andlw	15
  1674   001BA0  6FAA               	movwf	lcd_send_4bits@_data_command& (0+255),b
  1675   001BA2  EC62  F00C         	call	_lcd_send_4bits	;wreg free
  1676   001BA6  0100               	movlb	0	; () banked
  1677   001BA8  6FAF               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1678                           
  1679                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_4bit_send_enable_signal(lcd);
  1680   001BAA  C0AC  F0A8         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1681   001BAE  C0AD  F0A9         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1682   001BB2  EC2B  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  1683   001BB6  0100               	movlb	0	; () banked
  1684   001BB8  6FAF               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1685                           
  1686                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_send_4bits(lcd, command);
  1687   001BBA  C0AC  F0A8         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1688   001BBE  C0AD  F0A9         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1689   001BC2  C0AE  F0AA         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1690   001BC6  EC62  F00C         	call	_lcd_send_4bits	;wreg free
  1691   001BCA  0100               	movlb	0	; () banked
  1692   001BCC  6FAF               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1693                           
  1694                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_4bit_send_enable_signal(lcd);
  1695   001BCE  C0AC  F0A8         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1696   001BD2  C0AD  F0A9         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1697   001BD6  EC2B  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  1698   001BDA  0100               	movlb	0	; () banked
  1699   001BDC  6FAF               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1700   001BDE                     l5362:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:     return ret;
  1704   001BDE  51AF               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  1705   001BE0                     
  1706                           ; BSR set to: 0
  1707   001BE0  0012               	return		;funcret
  1708   001BE2                     __end_of_lcd_4bit_send_command:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _lcd_send_4bits *****************
  1712 ;; Defined at:
  1713 ;;		line 396 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  lcd             2   10[BANK0 ] PTR const struct .
  1716 ;;		 -> lcd1(6), 
  1717 ;;  _data_comman    1   12[BANK0 ] unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  ret             1   13[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      unsigned char 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:        4 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 11
  1736 ;; This function calls:
  1737 ;;		_gpio_pin_write_logic
  1738 ;; This function is called by:
  1739 ;;		_lcd_4bit_send_command
  1740 ;;		_lcd_4bit_send_char_data
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text10
  1745   0018C4                     __ptext10:
  1746                           	callstack 0
  1747   0018C4                     _lcd_send_4bits:
  1748                           	callstack 16
  1749   0018C4                     
  1750                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:     if(lcd==((void*)0)){
  1751   0018C4  0100               	movlb	0	; () banked
  1752   0018C6  51A8               	movf	lcd_send_4bits@lcd& (0+255),w,b
  1753   0018C8  11A9               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  1754   0018CA  A4D8               	btfss	status,2,c
  1755   0018CC  EF6A  F00C         	goto	u4611
  1756   0018D0  EF6C  F00C         	goto	u4610
  1757   0018D4                     u4611:
  1758   0018D4  EF70  F00C         	goto	l5316
  1759   0018D8                     u4610:
  1760   0018D8                     
  1761                           ; BSR set to: 0
  1762                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret=(Std_ReturnType)0x00;
  1763   0018D8  0E00               	movlw	0
  1764   0018DA  6FAB               	movwf	lcd_send_4bits@ret& (0+255),b
  1765                           
  1766                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:     }
  1767   0018DC  EFA9  F00C         	goto	l5318
  1768   0018E0                     l5316:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  1772   0018E0  0E02               	movlw	2
  1773   0018E2  25A8               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  1774   0018E4  6F9E               	movwf	gpio_pin_write_logic@pin_config& (0+255),b
  1775   0018E6  0E00               	movlw	0
  1776   0018E8  21A9               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  1777   0018EA  6F9F               	movwf	(gpio_pin_write_logic@pin_config+1)& (0+255),b
  1778   0018EC  51AA               	movf	lcd_send_4bits@_data_command& (0+255),w,b
  1779   0018EE  0B01               	andlw	1
  1780   0018F0  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1781   0018F2  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1782   0018F6  0100               	movlb	0	; () banked
  1783   0018F8  6FAB               	movwf	lcd_send_4bits@ret& (0+255),b
  1784                           
  1785                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  1786   0018FA  0E03               	movlw	3
  1787   0018FC  25A8               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  1788   0018FE  6F9E               	movwf	gpio_pin_write_logic@pin_config& (0+255),b
  1789   001900  0E00               	movlw	0
  1790   001902  21A9               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  1791   001904  6F9F               	movwf	(gpio_pin_write_logic@pin_config+1)& (0+255),b
  1792   001906  90D8               	bcf	status,0,c
  1793   001908  31AA               	rrcf	lcd_send_4bits@_data_command& (0+255),w,b
  1794   00190A  0B01               	andlw	1
  1795   00190C  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1796   00190E  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1797   001912  0100               	movlb	0	; () banked
  1798   001914  6FAB               	movwf	lcd_send_4bits@ret& (0+255),b
  1799                           
  1800                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  1801   001916  0E04               	movlw	4
  1802   001918  25A8               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  1803   00191A  6F9E               	movwf	gpio_pin_write_logic@pin_config& (0+255),b
  1804   00191C  0E00               	movlw	0
  1805   00191E  21A9               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  1806   001920  6F9F               	movwf	(gpio_pin_write_logic@pin_config+1)& (0+255),b
  1807   001922  41AA               	rrncf	lcd_send_4bits@_data_command& (0+255),w,b
  1808   001924  42E8               	rrncf	wreg,f,c
  1809   001926  0B3F               	andlw	63
  1810   001928  0B01               	andlw	1
  1811   00192A  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1812   00192C  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1813   001930  0100               	movlb	0	; () banked
  1814   001932  6FAB               	movwf	lcd_send_4bits@ret& (0+255),b
  1815                           
  1816                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  1817   001934  0E05               	movlw	5
  1818   001936  25A8               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  1819   001938  6F9E               	movwf	gpio_pin_write_logic@pin_config& (0+255),b
  1820   00193A  0E00               	movlw	0
  1821   00193C  21A9               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  1822   00193E  6F9F               	movwf	(gpio_pin_write_logic@pin_config+1)& (0+255),b
  1823   001940  39AA               	swapf	lcd_send_4bits@_data_command& (0+255),w,b
  1824   001942  46E8               	rlncf	wreg,f,c
  1825   001944  0B1F               	andlw	31
  1826   001946  0B01               	andlw	1
  1827   001948  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1828   00194A  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1829   00194E  0100               	movlb	0	; () banked
  1830   001950  6FAB               	movwf	lcd_send_4bits@ret& (0+255),b
  1831   001952                     l5318:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:     return ret;
  1835   001952  51AB               	movf	lcd_send_4bits@ret& (0+255),w,b
  1836   001954                     
  1837                           ; BSR set to: 0
  1838   001954  0012               	return		;funcret
  1839   001956                     __end_of_lcd_send_4bits:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1843 ;; Defined at:
  1844 ;;		line 409 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  lcd             2   10[BANK0 ] PTR const struct .
  1847 ;;		 -> lcd1(6), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  ret             1   12[BANK0 ] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      unsigned char 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 11
  1866 ;; This function calls:
  1867 ;;		_gpio_pin_write_logic
  1868 ;; This function is called by:
  1869 ;;		_lcd_4bit_send_command
  1870 ;;		_lcd_4bit_send_char_data
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text11
  1875   001E56                     __ptext11:
  1876                           	callstack 0
  1877   001E56                     _lcd_4bit_send_enable_signal:
  1878                           	callstack 16
  1879   001E56                     
  1880                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 411:     if(lcd==((void*)0)){
  1881   001E56  0100               	movlb	0	; () banked
  1882   001E58  51A8               	movf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  1883   001E5A  11A9               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  1884   001E5C  A4D8               	btfss	status,2,c
  1885   001E5E  EF33  F00F         	goto	u4621
  1886   001E62  EF35  F00F         	goto	u4620
  1887   001E66                     u4621:
  1888   001E66  EF39  F00F         	goto	l5328
  1889   001E6A                     u4620:
  1890   001E6A                     
  1891                           ; BSR set to: 0
  1892                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 412:         ret=(Std_ReturnType)0x00;
  1893   001E6A  0E00               	movlw	0
  1894   001E6C  6FAA               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  1895                           
  1896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:     }
  1897   001E6E  EF54  F00F         	goto	l5334
  1898   001E72                     l5328:
  1899                           
  1900                           ; BSR set to: 0
  1901   001E72  0E01               	movlw	1
  1902   001E74  25A8               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  1903   001E76  6F9E               	movwf	gpio_pin_write_logic@pin_config& (0+255),b
  1904   001E78  0E00               	movlw	0
  1905   001E7A  21A9               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  1906   001E7C  6F9F               	movwf	(gpio_pin_write_logic@pin_config+1)& (0+255),b
  1907   001E7E  0E01               	movlw	1
  1908   001E80  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1909   001E82  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1910   001E86                     
  1911                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         _delay((unsigned long)((5)*(8000000/40000
      +                          00.0)));
  1912   001E86  0E03               	movlw	3
  1913   001E88                     u5387:
  1914   001E88  2EE8               	decfsz	wreg,f,c
  1915   001E8A  D7FE               	bra	u5387
  1916   001E8C  F000               	nop	
  1917   001E8E                     
  1918                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  1919   001E8E  0E01               	movlw	1
  1920   001E90  0100               	movlb	0	; () banked
  1921   001E92  25A8               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  1922   001E94  6F9E               	movwf	gpio_pin_write_logic@pin_config& (0+255),b
  1923   001E96  0E00               	movlw	0
  1924   001E98  21A9               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  1925   001E9A  6F9F               	movwf	(gpio_pin_write_logic@pin_config+1)& (0+255),b
  1926   001E9C  0E00               	movlw	0
  1927   001E9E  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1928   001EA0  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  1929   001EA4  0100               	movlb	0	; () banked
  1930   001EA6  6FAA               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  1931   001EA8                     l5334:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:     return ret;
  1935   001EA8  51AA               	movf	lcd_4bit_send_enable_signal@ret& (0+255),w,b
  1936   001EAA                     
  1937                           ; BSR set to: 0
  1938   001EAA  0012               	return		;funcret
  1939   001EAC                     __end_of_lcd_4bit_send_enable_signal:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _gpio_pin_initialize *****************
  1943 ;; Defined at:
  1944 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  pin_config      2   10[BANK0 ] PTR const struct .
  1947 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  ret             1   13[BANK0 ] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      unsigned char 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        4 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 11
  1966 ;; This function calls:
  1967 ;;		_gpio_pin_direction_initialize
  1968 ;;		_gpio_pin_write_logic
  1969 ;; This function is called by:
  1970 ;;		_lcd_4bit_initialize
  1971 ;;		_led_initialize
  1972 ;;		_seven_segment_initialize
  1973 ;;		_lcd_8bit_initialize
  1974 ;;		_dc_motor_initialize
  1975 ;;		_keypad_initialize
  1976 ;;		_relay_initialize
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text12
  1981   001956                     __ptext12:
  1982                           	callstack 0
  1983   001956                     _gpio_pin_initialize:
  1984                           	callstack 16
  1985   001956                     
  1986                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  1987   001956  0100               	movlb	0	; () banked
  1988   001958  51A8               	movf	gpio_pin_initialize@pin_config& (0+255),w,b
  1989   00195A  11A9               	iorwf	(gpio_pin_initialize@pin_config+1)& (0+255),w,b
  1990   00195C  B4D8               	btfsc	status,2,c
  1991   00195E  EFB3  F00C         	goto	u4631
  1992   001962  EFB5  F00C         	goto	u4630
  1993   001966                     u4631:
  1994   001966  EFD5  F00C         	goto	l5346
  1995   00196A                     u4630:
  1996   00196A                     
  1997                           ; BSR set to: 0
  1998   00196A  C0A8  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  1999   00196E  C0A9  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2000   001972  30DF               	rrcf	223,w,c
  2001   001974  32E8               	rrcf	wreg,f,c
  2002   001976  32E8               	rrcf	wreg,f,c
  2003   001978  0B07               	andlw	7
  2004   00197A  6FAA               	movwf	??_gpio_pin_initialize& (0+255),b
  2005   00197C  0E08               	movlw	8
  2006   00197E  61AA               	cpfslt	??_gpio_pin_initialize& (0+255),b
  2007   001980  EFC4  F00C         	goto	u4641
  2008   001984  EFC6  F00C         	goto	u4640
  2009   001988                     u4641:
  2010   001988  EFD5  F00C         	goto	l5346
  2011   00198C                     u4640:
  2012   00198C                     
  2013                           ; BSR set to: 0
  2014   00198C  C0A8  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2015   001990  C0A9  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2016   001994  50DF               	movf	223,w,c
  2017   001996  0B07               	andlw	7
  2018   001998  6FAA               	movwf	??_gpio_pin_initialize& (0+255),b
  2019   00199A  0E04               	movlw	4
  2020   00199C  65AA               	cpfsgt	??_gpio_pin_initialize& (0+255),b
  2021   00199E  EFD3  F00C         	goto	u4651
  2022   0019A2  EFD5  F00C         	goto	u4650
  2023   0019A6                     u4651:
  2024   0019A6  EFD9  F00C         	goto	l5348
  2025   0019AA                     u4650:
  2026   0019AA                     l5346:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  2030   0019AA  0E00               	movlw	0
  2031   0019AC  6FAB               	movwf	gpio_pin_initialize@ret& (0+255),b
  2032                           
  2033                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  2034   0019AE  EFF1  F00C         	goto	l5350
  2035   0019B2                     l5348:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  2039   0019B2  C0A8  F09E         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  2040   0019B6  C0A9  F09F         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  2041   0019BA  EC01  F009         	call	_gpio_pin_direction_initialize	;wreg free
  2042   0019BE  0100               	movlb	0	; () banked
  2043   0019C0  6FAB               	movwf	gpio_pin_initialize@ret& (0+255),b
  2044                           
  2045                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  2046   0019C2  C0A8  F09E         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  2047   0019C6  C0A9  F09F         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  2048   0019CA  C0A8  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2049   0019CE  C0A9  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2050   0019D2  0E00               	movlw	0
  2051   0019D4  BEDF               	btfsc	indf2,7,c
  2052   0019D6  0E01               	movlw	1
  2053   0019D8  6FA0               	movwf	gpio_pin_write_logic@logic& (0+255),b
  2054   0019DA  ECB5  F009         	call	_gpio_pin_write_logic	;wreg free
  2055   0019DE  0100               	movlb	0	; () banked
  2056   0019E0  6FAB               	movwf	gpio_pin_initialize@ret& (0+255),b
  2057   0019E2                     l5350:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  2061   0019E2  51AB               	movf	gpio_pin_initialize@ret& (0+255),w,b
  2062   0019E4                     
  2063                           ; BSR set to: 0
  2064   0019E4  0012               	return		;funcret
  2065   0019E6                     __end_of_gpio_pin_initialize:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _gpio_pin_write_logic *****************
  2069 ;; Defined at:
  2070 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  pin_config      2    0[BANK0 ] PTR const struct .
  2073 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  2074 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2075 ;;  logic           1    2[BANK0 ] enum E3170
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  ret             1    9[BANK0 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      unsigned char 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2087 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;Total ram usage:       10 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 10
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_lcd_4bit_send_command
  2098 ;;		_lcd_4bit_send_char_data
  2099 ;;		_lcd_send_4bits
  2100 ;;		_lcd_4bit_send_enable_signal
  2101 ;;		_gpio_pin_initialize
  2102 ;;		_seven_segment_write_number
  2103 ;;		_lcd_8bit_send_command
  2104 ;;		_lcd_8bit_send_char_data
  2105 ;;		_lcd_8bit_send_enable_signal
  2106 ;;		_dc_motor_move_right
  2107 ;;		_dc_motor_move_left
  2108 ;;		_dc_motor_stop
  2109 ;;		_keypad_get_value
  2110 ;;		_led_turn_on
  2111 ;;		_led_turn_off
  2112 ;;		_relay_turn_on
  2113 ;;		_relay_turn_off
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text13
  2118   00136A                     __ptext13:
  2119                           	callstack 0
  2120   00136A                     _gpio_pin_write_logic:
  2121                           	callstack 16
  2122   00136A                     
  2123                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  2124   00136A  0E01               	movlw	1
  2125   00136C  0100               	movlb	0	; () banked
  2126   00136E  6FA7               	movwf	gpio_pin_write_logic@ret& (0+255),b
  2127   001370                     
  2128                           ; BSR set to: 0
  2129                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2130   001370  519E               	movf	gpio_pin_write_logic@pin_config& (0+255),w,b
  2131   001372  119F               	iorwf	(gpio_pin_write_logic@pin_config+1)& (0+255),w,b
  2132   001374  B4D8               	btfsc	status,2,c
  2133   001376  EFBF  F009         	goto	u4491
  2134   00137A  EFC1  F009         	goto	u4490
  2135   00137E                     u4491:
  2136   00137E  EFE1  F009         	goto	l5266
  2137   001382                     u4490:
  2138   001382                     
  2139                           ; BSR set to: 0
  2140   001382  C09E  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2141   001386  C09F  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2142   00138A  30DF               	rrcf	223,w,c
  2143   00138C  32E8               	rrcf	wreg,f,c
  2144   00138E  32E8               	rrcf	wreg,f,c
  2145   001390  0B07               	andlw	7
  2146   001392  6FA1               	movwf	??_gpio_pin_write_logic& (0+255),b
  2147   001394  0E08               	movlw	8
  2148   001396  61A1               	cpfslt	??_gpio_pin_write_logic& (0+255),b
  2149   001398  EFD0  F009         	goto	u4501
  2150   00139C  EFD2  F009         	goto	u4500
  2151   0013A0                     u4501:
  2152   0013A0  EFE1  F009         	goto	l5266
  2153   0013A4                     u4500:
  2154   0013A4                     
  2155                           ; BSR set to: 0
  2156   0013A4  C09E  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2157   0013A8  C09F  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2158   0013AC  50DF               	movf	223,w,c
  2159   0013AE  0B07               	andlw	7
  2160   0013B0  6FA1               	movwf	??_gpio_pin_write_logic& (0+255),b
  2161   0013B2  0E04               	movlw	4
  2162   0013B4  65A1               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
  2163   0013B6  EFDF  F009         	goto	u4511
  2164   0013BA  EFE1  F009         	goto	u4510
  2165   0013BE                     u4511:
  2166   0013BE  EF46  F00A         	goto	l5274
  2167   0013C2                     u4510:
  2168   0013C2                     l5266:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  2172   0013C2  0E00               	movlw	0
  2173   0013C4  6FA7               	movwf	gpio_pin_write_logic@ret& (0+255),b
  2174                           
  2175                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  2176   0013C6  EF5B  F00A         	goto	l5276
  2177   0013CA                     l5268:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  2181   0013CA  C09E  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2182   0013CE  C09F  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2183   0013D2  30DF               	rrcf	223,w,c
  2184   0013D4  32E8               	rrcf	wreg,f,c
  2185   0013D6  32E8               	rrcf	wreg,f,c
  2186   0013D8  0B07               	andlw	7
  2187   0013DA  6FA1               	movwf	??_gpio_pin_write_logic& (0+255),b
  2188   0013DC  0E01               	movlw	1
  2189   0013DE  6FA2               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  2190   0013E0  2BA1               	incf	??_gpio_pin_write_logic& (0+255),f,b
  2191   0013E2  EFF5  F009         	goto	u4524
  2192   0013E6                     u4525:
  2193   0013E6  90D8               	bcf	status,0,c
  2194   0013E8  37A2               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  2195   0013EA                     u4524:
  2196   0013EA  2FA1               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  2197   0013EC  EFF3  F009         	goto	u4525
  2198   0013F0  C09E  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2199   0013F4  C09F  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2200   0013F8  50DF               	movf	223,w,c
  2201   0013FA  0B07               	andlw	7
  2202   0013FC  0100               	movlb	0	; () banked
  2203   0013FE  6FA3               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  2204   001400  51A3               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  2205   001402  0D02               	mullw	2
  2206   001404  0E8A               	movlw	low _lat_registers
  2207   001406  24F3               	addwf	243,w,c
  2208   001408  6ED9               	movwf	fsr2l,c
  2209   00140A  0E00               	movlw	high _lat_registers
  2210   00140C  20F4               	addwfc	prodh,w,c
  2211   00140E  6EDA               	movwf	fsr2h,c
  2212   001410  CFDE F0A4          	movff	postinc2,??_gpio_pin_write_logic+3
  2213   001414  CFDD F0A5          	movff	postdec2,??_gpio_pin_write_logic+4
  2214   001418  C0A4  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2215   00141C  C0A5  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2216   001420  51A2               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2217   001422  12DF               	iorwf	indf2,f,c
  2218                           
  2219                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  2220   001424  EF5B  F00A         	goto	l5276
  2221   001428                     l5270:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  2225   001428  C09E  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2226   00142C  C09F  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2227   001430  30DF               	rrcf	223,w,c
  2228   001432  32E8               	rrcf	wreg,f,c
  2229   001434  32E8               	rrcf	wreg,f,c
  2230   001436  0B07               	andlw	7
  2231   001438  6FA1               	movwf	??_gpio_pin_write_logic& (0+255),b
  2232   00143A  0E01               	movlw	1
  2233   00143C  6FA2               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  2234   00143E  2BA1               	incf	??_gpio_pin_write_logic& (0+255),f,b
  2235   001440  EF24  F00A         	goto	u4534
  2236   001444                     u4535:
  2237   001444  90D8               	bcf	status,0,c
  2238   001446  37A2               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  2239   001448                     u4534:
  2240   001448  2FA1               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  2241   00144A  EF22  F00A         	goto	u4535
  2242   00144E  0100               	movlb	0	; () banked
  2243   001450  51A2               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2244   001452  0AFF               	xorlw	255
  2245   001454  6FA3               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  2246   001456  C09E  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2247   00145A  C09F  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2248   00145E  50DF               	movf	223,w,c
  2249   001460  0B07               	andlw	7
  2250   001462  6FA4               	movwf	(??_gpio_pin_write_logic+3)& (0+255),b
  2251   001464  51A4               	movf	(??_gpio_pin_write_logic+3)& (0+255),w,b
  2252   001466  0D02               	mullw	2
  2253   001468  0E8A               	movlw	low _lat_registers
  2254   00146A  24F3               	addwf	243,w,c
  2255   00146C  6ED9               	movwf	fsr2l,c
  2256   00146E  0E00               	movlw	high _lat_registers
  2257   001470  20F4               	addwfc	prodh,w,c
  2258   001472  6EDA               	movwf	fsr2h,c
  2259   001474  CFDE F0A5          	movff	postinc2,??_gpio_pin_write_logic+4
  2260   001478  CFDD F0A6          	movff	postdec2,??_gpio_pin_write_logic+5
  2261   00147C  C0A5  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2262   001480  C0A6  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2263   001484  51A3               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  2264   001486  16DF               	andwf	indf2,f,c
  2265                           
  2266                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  2267   001488  EF5B  F00A         	goto	l5276
  2268   00148C                     l5274:
  2269                           
  2270                           ; BSR set to: 0
  2271   00148C  51A0               	movf	gpio_pin_write_logic@logic& (0+255),w,b
  2272   00148E  6FA1               	movwf	??_gpio_pin_write_logic& (0+255),b
  2273   001490  6BA2               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  2274                           
  2275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 1, Range of values is 0 to 0
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte            4     3 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282   001492  51A2               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2283   001494  0A00               	xorlw	0	; case 0
  2284   001496  B4D8               	btfsc	status,2,c
  2285   001498  EF50  F00A         	goto	l6220
  2286   00149C  EFE1  F009         	goto	l5266
  2287   0014A0                     l6220:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ; Switch size 1, requested type "simple"
  2291                           ; Number of cases is 2, Range of values is 0 to 1
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte            7     4 (average)
  2295                           ;	Chosen strategy is simple_byte
  2296   0014A0  51A1               	movf	??_gpio_pin_write_logic& (0+255),w,b
  2297   0014A2  0A00               	xorlw	0	; case 0
  2298   0014A4  B4D8               	btfsc	status,2,c
  2299   0014A6  EF14  F00A         	goto	l5270
  2300   0014AA  0A01               	xorlw	1	; case 1
  2301   0014AC  B4D8               	btfsc	status,2,c
  2302   0014AE  EFE5  F009         	goto	l5268
  2303   0014B2  EFE1  F009         	goto	l5266
  2304   0014B6                     l5276:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  2308   0014B6  51A7               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  2309   0014B8                     
  2310                           ; BSR set to: 0
  2311   0014B8  0012               	return		;funcret
  2312   0014BA                     __end_of_gpio_pin_write_logic:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _gpio_pin_direction_initialize *****************
  2316 ;; Defined at:
  2317 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  pin_config      2    0[BANK0 ] PTR const struct .
  2320 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  ret             1    8[BANK0 ] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      unsigned char 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:        9 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 10
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_gpio_pin_initialize
  2343 ;;		_button_initialize
  2344 ;;		_keypad_initialize
  2345 ;;		_Interrupt_INTx_Pin_Init
  2346 ;;		_Interrupt_RBx_Pin_Init
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text14
  2351   001202                     __ptext14:
  2352                           	callstack 0
  2353   001202                     _gpio_pin_direction_initialize:
  2354                           	callstack 16
  2355   001202                     
  2356                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2357   001202  0E01               	movlw	1
  2358   001204  0100               	movlb	0	; () banked
  2359   001206  6FA6               	movwf	gpio_pin_direction_initialize@ret& (0+255),b
  2360   001208                     
  2361                           ; BSR set to: 0
  2362                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2363   001208  519E               	movf	gpio_pin_direction_initialize@pin_config& (0+255),w,b
  2364   00120A  119F               	iorwf	(gpio_pin_direction_initialize@pin_config+1)& (0+255),w,b
  2365   00120C  B4D8               	btfsc	status,2,c
  2366   00120E  EF0B  F009         	goto	u4541
  2367   001212  EF0D  F009         	goto	u4540
  2368   001216                     u4541:
  2369   001216  EF2D  F009         	goto	l5292
  2370   00121A                     u4540:
  2371   00121A                     
  2372                           ; BSR set to: 0
  2373   00121A  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2374   00121E  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2375   001222  30DF               	rrcf	223,w,c
  2376   001224  32E8               	rrcf	wreg,f,c
  2377   001226  32E8               	rrcf	wreg,f,c
  2378   001228  0B07               	andlw	7
  2379   00122A  6FA0               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  2380   00122C  0E08               	movlw	8
  2381   00122E  61A0               	cpfslt	??_gpio_pin_direction_initialize& (0+255),b
  2382   001230  EF1C  F009         	goto	u4551
  2383   001234  EF1E  F009         	goto	u4550
  2384   001238                     u4551:
  2385   001238  EF2D  F009         	goto	l5292
  2386   00123C                     u4550:
  2387   00123C                     
  2388                           ; BSR set to: 0
  2389   00123C  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2390   001240  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2391   001244  50DF               	movf	223,w,c
  2392   001246  0B07               	andlw	7
  2393   001248  6FA0               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  2394   00124A  0E04               	movlw	4
  2395   00124C  65A0               	cpfsgt	??_gpio_pin_direction_initialize& (0+255),b
  2396   00124E  EF2B  F009         	goto	u4561
  2397   001252  EF2D  F009         	goto	u4560
  2398   001256                     u4561:
  2399   001256  EF92  F009         	goto	l5300
  2400   00125A                     u4560:
  2401   00125A                     l5292:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  2405   00125A  0E00               	movlw	0
  2406   00125C  6FA6               	movwf	gpio_pin_direction_initialize@ret& (0+255),b
  2407                           
  2408                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  2409   00125E  EFB3  F009         	goto	l5302
  2410   001262                     l5294:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  2414   001262  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2415   001266  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2416   00126A  30DF               	rrcf	223,w,c
  2417   00126C  32E8               	rrcf	wreg,f,c
  2418   00126E  32E8               	rrcf	wreg,f,c
  2419   001270  0B07               	andlw	7
  2420   001272  6FA0               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  2421   001274  0E01               	movlw	1
  2422   001276  6FA1               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  2423   001278  2BA0               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
  2424   00127A  EF41  F009         	goto	u4574
  2425   00127E                     u4575:
  2426   00127E  90D8               	bcf	status,0,c
  2427   001280  37A1               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
  2428   001282                     u4574:
  2429   001282  2FA0               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
  2430   001284  EF3F  F009         	goto	u4575
  2431   001288  0100               	movlb	0	; () banked
  2432   00128A  51A1               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  2433   00128C  0AFF               	xorlw	255
  2434   00128E  6FA2               	movwf	(??_gpio_pin_direction_initialize+2)& (0+255),b
  2435   001290  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2436   001294  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2437   001298  50DF               	movf	223,w,c
  2438   00129A  0B07               	andlw	7
  2439   00129C  6FA3               	movwf	(??_gpio_pin_direction_initialize+3)& (0+255),b
  2440   00129E  51A3               	movf	(??_gpio_pin_direction_initialize+3)& (0+255),w,b
  2441   0012A0  0D02               	mullw	2
  2442   0012A2  0E94               	movlw	low _tris_registers
  2443   0012A4  24F3               	addwf	243,w,c
  2444   0012A6  6ED9               	movwf	fsr2l,c
  2445   0012A8  0E00               	movlw	high _tris_registers
  2446   0012AA  20F4               	addwfc	prodh,w,c
  2447   0012AC  6EDA               	movwf	fsr2h,c
  2448   0012AE  CFDE F0A4          	movff	postinc2,??_gpio_pin_direction_initialize+4
  2449   0012B2  CFDD F0A5          	movff	postdec2,??_gpio_pin_direction_initialize+5
  2450   0012B6  C0A4  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  2451   0012BA  C0A5  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  2452   0012BE  51A2               	movf	(??_gpio_pin_direction_initialize+2)& (0+255),w,b
  2453   0012C0  16DF               	andwf	indf2,f,c
  2454                           
  2455                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  2456   0012C2  EFB3  F009         	goto	l5302
  2457   0012C6                     l5296:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  2461   0012C6  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2462   0012CA  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2463   0012CE  30DF               	rrcf	223,w,c
  2464   0012D0  32E8               	rrcf	wreg,f,c
  2465   0012D2  32E8               	rrcf	wreg,f,c
  2466   0012D4  0B07               	andlw	7
  2467   0012D6  6FA0               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  2468   0012D8  0E01               	movlw	1
  2469   0012DA  6FA1               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  2470   0012DC  2BA0               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
  2471   0012DE  EF73  F009         	goto	u4584
  2472   0012E2                     u4585:
  2473   0012E2  90D8               	bcf	status,0,c
  2474   0012E4  37A1               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
  2475   0012E6                     u4584:
  2476   0012E6  2FA0               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
  2477   0012E8  EF71  F009         	goto	u4585
  2478   0012EC  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2479   0012F0  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2480   0012F4  50DF               	movf	223,w,c
  2481   0012F6  0B07               	andlw	7
  2482   0012F8  0100               	movlb	0	; () banked
  2483   0012FA  6FA2               	movwf	(??_gpio_pin_direction_initialize+2)& (0+255),b
  2484   0012FC  51A2               	movf	(??_gpio_pin_direction_initialize+2)& (0+255),w,b
  2485   0012FE  0D02               	mullw	2
  2486   001300  0E94               	movlw	low _tris_registers
  2487   001302  24F3               	addwf	243,w,c
  2488   001304  6ED9               	movwf	fsr2l,c
  2489   001306  0E00               	movlw	high _tris_registers
  2490   001308  20F4               	addwfc	prodh,w,c
  2491   00130A  6EDA               	movwf	fsr2h,c
  2492   00130C  CFDE F0A3          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2493   001310  CFDD F0A4          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2494   001314  C0A3  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2495   001318  C0A4  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2496   00131C  51A1               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  2497   00131E  12DF               	iorwf	indf2,f,c
  2498                           
  2499                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  2500   001320  EFB3  F009         	goto	l5302
  2501   001324                     l5300:
  2502                           
  2503                           ; BSR set to: 0
  2504   001324  C09E  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2505   001328  C09F  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2506   00132C  BCDF               	btfsc	indf2,6,c
  2507   00132E  EF9B  F009         	goto	u4591
  2508   001332  EF9E  F009         	goto	u4590
  2509   001336                     u4591:
  2510   001336  0E01               	movlw	1
  2511   001338  EF9F  F009         	goto	u4600
  2512   00133C                     u4590:
  2513   00133C  0E00               	movlw	0
  2514   00133E                     u4600:
  2515   00133E  6FA0               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  2516   001340  6BA1               	clrf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  2517                           
  2518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2519                           ; Switch size 1, requested type "simple"
  2520                           ; Number of cases is 1, Range of values is 0 to 0
  2521                           ; switch strategies available:
  2522                           ; Name         Instructions Cycles
  2523                           ; simple_byte            4     3 (average)
  2524                           ;	Chosen strategy is simple_byte
  2525   001342  51A1               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  2526   001344  0A00               	xorlw	0	; case 0
  2527   001346  B4D8               	btfsc	status,2,c
  2528   001348  EFA8  F009         	goto	l6222
  2529   00134C  EF2D  F009         	goto	l5292
  2530   001350                     l6222:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ; Switch size 1, requested type "simple"
  2534                           ; Number of cases is 2, Range of values is 0 to 1
  2535                           ; switch strategies available:
  2536                           ; Name         Instructions Cycles
  2537                           ; simple_byte            7     4 (average)
  2538                           ;	Chosen strategy is simple_byte
  2539   001350  51A0               	movf	??_gpio_pin_direction_initialize& (0+255),w,b
  2540   001352  0A00               	xorlw	0	; case 0
  2541   001354  B4D8               	btfsc	status,2,c
  2542   001356  EF31  F009         	goto	l5294
  2543   00135A  0A01               	xorlw	1	; case 1
  2544   00135C  B4D8               	btfsc	status,2,c
  2545   00135E  EF63  F009         	goto	l5296
  2546   001362  EF2D  F009         	goto	l5292
  2547   001366                     l5302:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  2551   001366  51A6               	movf	gpio_pin_direction_initialize@ret& (0+255),w,b
  2552   001368                     
  2553                           ; BSR set to: 0
  2554   001368  0012               	return		;funcret
  2555   00136A                     __end_of_gpio_pin_direction_initialize:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _Timer1_Counter_Init *****************
  2559 ;; Defined at:
  2560 ;;		line 50 in file "application.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 12
  2581 ;; This function calls:
  2582 ;;		_Timer1_Init
  2583 ;; This function is called by:
  2584 ;;		_application_initialize
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text15
  2589   001F62                     __ptext15:
  2590                           	callstack 0
  2591   001F62                     _Timer1_Counter_Init:
  2592                           	callstack 17
  2593   001F62                     
  2594                           ;application.c: 51:     counter_obj.TMR1_InterruptHandler = ((void*)0);
  2595   001F62  0E00               	movlw	0
  2596   001F64  6E24               	movwf	_counter_obj^0,c
  2597   001F66  0E00               	movlw	0
  2598   001F68  6E25               	movwf	(_counter_obj+1)^0,c
  2599   001F6A                     
  2600                           ;application.c: 52:     counter_obj.prescaler_value = 0U;
  2601   001F6A  0EFC               	movlw	-4
  2602   001F6C  1629               	andwf	(_counter_obj+5)^0,f,c
  2603   001F6E                     
  2604                           ;application.c: 53:     counter_obj.priority = 1;
  2605   001F6E  0E01               	movlw	1
  2606   001F70  6E26               	movwf	(_counter_obj+2)^0,c
  2607   001F72                     
  2608                           ;application.c: 54:     counter_obj.timer1_mode = 1;
  2609   001F72  8429               	bsf	(_counter_obj+5)^0,2,c
  2610   001F74                     
  2611                           ;application.c: 55:     counter_obj.timer1_preload_value = 0;
  2612   001F74  0E00               	movlw	0
  2613   001F76  6E28               	movwf	(_counter_obj+4)^0,c
  2614   001F78  0E00               	movlw	0
  2615   001F7A  6E27               	movwf	(_counter_obj+3)^0,c
  2616   001F7C                     
  2617                           ;application.c: 56:     counter_obj.timer1_counter_mode = 0;
  2618   001F7C  9629               	bcf	(_counter_obj+5)^0,3,c
  2619   001F7E                     
  2620                           ;application.c: 57:     ret = Timer1_Init(&counter_obj);
  2621   001F7E  0E24               	movlw	low _counter_obj
  2622   001F80  0100               	movlb	0	; () banked
  2623   001F82  6FA0               	movwf	Timer1_Init@_timer& (0+255),b
  2624   001F84  0E00               	movlw	high _counter_obj
  2625   001F86  6FA1               	movwf	(Timer1_Init@_timer+1)& (0+255),b
  2626   001F88  EC5D  F00A         	call	_Timer1_Init	;wreg free
  2627   001F8C  6E5F               	movwf	_ret^0,c
  2628   001F8E  0012               	return		;funcret
  2629   001F90                     __end_of_Timer1_Counter_Init:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _Timer1_Init *****************
  2633 ;; Defined at:
  2634 ;;		line 12 in file "MCAL_Layer/Timer1/hal_timer1.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  _timer          2    2[BANK0 ] PTR const struct .
  2637 ;;		 -> timer_obj(6), counter_obj(6), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  ret             1    6[BANK0 ] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      unsigned char 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        5 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 11
  2656 ;; This function calls:
  2657 ;;		_Timer1_Mode_Select
  2658 ;; This function is called by:
  2659 ;;		_Timer1_Counter_Init
  2660 ;;		_Timer1_Timer_Init
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text16
  2665   0014BA                     __ptext16:
  2666                           	callstack 0
  2667   0014BA                     _Timer1_Init:
  2668                           	callstack 17
  2669   0014BA                     
  2670                           ;MCAL_Layer/Timer1/hal_timer1.c: 12: Std_ReturnType Timer1_Init(const timer1_t *_timer);
      +                          MCAL_Layer/Timer1/hal_timer1.c: 13: {;MCAL_Layer/Timer1/hal_timer1.c: 14:     Std_Return
      +                          Type ret=(Std_ReturnType)0x01;
  2671   0014BA  0E01               	movlw	1
  2672   0014BC  0100               	movlb	0	; () banked
  2673   0014BE  6FA4               	movwf	Timer1_Init@ret& (0+255),b
  2674   0014C0                     
  2675                           ; BSR set to: 0
  2676                           ;MCAL_Layer/Timer1/hal_timer1.c: 15:     if(_timer==((void*)0)){
  2677   0014C0  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2678   0014C2  11A1               	iorwf	(Timer1_Init@_timer+1)& (0+255),w,b
  2679   0014C4  A4D8               	btfss	status,2,c
  2680   0014C6  EF67  F00A         	goto	u4751
  2681   0014CA  EF69  F00A         	goto	u4750
  2682   0014CE                     u4751:
  2683   0014CE  EF6D  F00A         	goto	l1087
  2684   0014D2                     u4750:
  2685   0014D2                     
  2686                           ; BSR set to: 0
  2687                           ;MCAL_Layer/Timer1/hal_timer1.c: 16:         ret=(Std_ReturnType)0x00;
  2688   0014D2  0E00               	movlw	0
  2689   0014D4  6FA4               	movwf	Timer1_Init@ret& (0+255),b
  2690                           
  2691                           ;MCAL_Layer/Timer1/hal_timer1.c: 17:     }
  2692   0014D6  EFD5  F00A         	goto	l5474
  2693   0014DA                     l1087:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;MCAL_Layer/Timer1/hal_timer1.c: 19:     {;MCAL_Layer/Timer1/hal_timer1.c: 20:         (
      +                          (*((volatile T1CON_t *)(0xFCD))).TMR1ON = 0);
  2697   0014DA  90CD               	bcf	205,0,c	;volatile
  2698   0014DC                     
  2699                           ; BSR set to: 0
  2700                           ;MCAL_Layer/Timer1/hal_timer1.c: 21:         ((*((volatile T1CON_t *)(0xFCD))).TICKPS = 
      +                          _timer->prescaler_value);
  2701   0014DC  EE20 F005          	lfsr	2,5
  2702   0014E0  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2703   0014E2  26D9               	addwf	fsr2l,f,c
  2704   0014E4  51A1               	movf	(Timer1_Init@_timer+1)& (0+255),w,b
  2705   0014E6  22DA               	addwfc	fsr2h,f,c
  2706   0014E8  50DF               	movf	223,w,c
  2707   0014EA  0B03               	andlw	3
  2708   0014EC  6FA2               	movwf	??_Timer1_Init& (0+255),b
  2709   0014EE  3BA2               	swapf	??_Timer1_Init& (0+255),f,b
  2710   0014F0  50CD               	movf	205,w,c	;volatile
  2711   0014F2  19A2               	xorwf	??_Timer1_Init& (0+255),w,b
  2712   0014F4  0BCF               	andlw	-49
  2713   0014F6  19A2               	xorwf	??_Timer1_Init& (0+255),w,b
  2714   0014F8  6ECD               	movwf	205,c	;volatile
  2715   0014FA                     
  2716                           ; BSR set to: 0
  2717                           ;MCAL_Layer/Timer1/hal_timer1.c: 22:         Timer1_Mode_Select(_timer);
  2718   0014FA  C0A0  F09E         	movff	Timer1_Init@_timer,Timer1_Mode_Select@_timer
  2719   0014FE  C0A1  F09F         	movff	Timer1_Init@_timer+1,Timer1_Mode_Select@_timer+1
  2720   001502  EC33  F00D         	call	_Timer1_Mode_Select	;wreg free
  2721   001506                     
  2722                           ;MCAL_Layer/Timer1/hal_timer1.c: 23:         (*((volatile uint8 *)(0xFCF))) = (_timer->t
      +                          imer1_preload_value) >> 8 ;
  2723   001506  0100               	movlb	0	; () banked
  2724   001508  EE20 F003          	lfsr	2,3
  2725   00150C  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2726   00150E  26D9               	addwf	fsr2l,f,c
  2727   001510  51A1               	movf	(Timer1_Init@_timer+1)& (0+255),w,b
  2728   001512  22DA               	addwfc	fsr2h,f,c
  2729   001514  CFDE F0A2          	movff	postinc2,??_Timer1_Init
  2730   001518  CFDD F0A3          	movff	postdec2,??_Timer1_Init+1
  2731   00151C  C0A3  F0A2         	movff	??_Timer1_Init+1,??_Timer1_Init
  2732   001520  6BA3               	clrf	(??_Timer1_Init+1)& (0+255),b
  2733   001522  51A2               	movf	??_Timer1_Init& (0+255),w,b
  2734   001524  6ECF               	movwf	207,c	;volatile
  2735   001526                     
  2736                           ; BSR set to: 0
  2737                           ;MCAL_Layer/Timer1/hal_timer1.c: 24:         (*((volatile uint8 *)(0xFCE))) = (uint8)(_t
      +                          imer->timer1_preload_value);
  2738   001526  EE20 F003          	lfsr	2,3
  2739   00152A  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2740   00152C  26D9               	addwf	fsr2l,f,c
  2741   00152E  51A1               	movf	(Timer1_Init@_timer+1)& (0+255),w,b
  2742   001530  22DA               	addwfc	fsr2h,f,c
  2743   001532  50DF               	movf	indf2,w,c
  2744   001534  6ECE               	movwf	206,c	;volatile
  2745   001536                     
  2746                           ; BSR set to: 0
  2747                           ;MCAL_Layer/Timer1/hal_timer1.c: 25:         timer1_preload = _timer->timer1_preload_val
      +                          ue;
  2748   001536  EE20 F003          	lfsr	2,3
  2749   00153A  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2750   00153C  26D9               	addwf	fsr2l,f,c
  2751   00153E  51A1               	movf	(Timer1_Init@_timer+1)& (0+255),w,b
  2752   001540  22DA               	addwfc	fsr2h,f,c
  2753   001542  CFDE F001          	movff	postinc2,_timer1_preload
  2754   001546  CFDD F002          	movff	postdec2,_timer1_preload+1
  2755   00154A                     
  2756                           ; BSR set to: 0
  2757                           ;MCAL_Layer/Timer1/hal_timer1.c: 28:         ((*((volatile PIE1_t *)(0xF9D))).TMR1IE=1);
  2758   00154A  809D               	bsf	157,0,c	;volatile
  2759   00154C                     
  2760                           ; BSR set to: 0
  2761                           ;MCAL_Layer/Timer1/hal_timer1.c: 29:         ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
  2762   00154C  909E               	bcf	158,0,c	;volatile
  2763   00154E                     
  2764                           ; BSR set to: 0
  2765                           ;MCAL_Layer/Timer1/hal_timer1.c: 30:         TMR1_InterruptHandler = _timer->TMR1_Interr
      +                          uptHandler;
  2766   00154E  C0A0  FFD9         	movff	Timer1_Init@_timer,fsr2l
  2767   001552  C0A1  FFDA         	movff	Timer1_Init@_timer+1,fsr2h
  2768   001556  CFDE F003          	movff	postinc2,_TMR1_InterruptHandler
  2769   00155A  CFDD F004          	movff	postdec2,_TMR1_InterruptHandler+1
  2770   00155E                     
  2771                           ; BSR set to: 0
  2772                           ;MCAL_Layer/Timer1/hal_timer1.c: 37:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1
      +                          );
  2773   00155E  8ED0               	bsf	208,7,c	;volatile
  2774   001560                     
  2775                           ; BSR set to: 0
  2776                           ;MCAL_Layer/Timer1/hal_timer1.c: 38:             if(_timer->priority == INTERRUPT_HIGH_P
      +                          RIORITY){
  2777   001560  EE20 F002          	lfsr	2,2
  2778   001564  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2779   001566  26D9               	addwf	fsr2l,f,c
  2780   001568  51A1               	movf	(Timer1_Init@_timer+1)& (0+255),w,b
  2781   00156A  22DA               	addwfc	fsr2h,f,c
  2782   00156C  04DE               	decf	postinc2,w,c
  2783   00156E  A4D8               	btfss	status,2,c
  2784   001570  EFBC  F00A         	goto	u4761
  2785   001574  EFBE  F00A         	goto	u4760
  2786   001578                     u4761:
  2787   001578  EFC2  F00A         	goto	l5470
  2788   00157C                     u4760:
  2789   00157C                     
  2790                           ; BSR set to: 0
  2791                           ;MCAL_Layer/Timer1/hal_timer1.c: 39:                 ((*((volatile IPR1_t *)(0xF9F))).TM
      +                          R1IP=1);
  2792   00157C  809F               	bsf	159,0,c	;volatile
  2793                           
  2794                           ;MCAL_Layer/Timer1/hal_timer1.c: 40:                 ((*((volatile INTCON_t *)(0xFF2))).
      +                          GIEH = 1);
  2795   00157E  8EF2               	bsf	242,7,c	;volatile
  2796                           
  2797                           ;MCAL_Layer/Timer1/hal_timer1.c: 41:             }
  2798   001580  EFD3  F00A         	goto	l1090
  2799   001584                     l5470:
  2800                           
  2801                           ; BSR set to: 0
  2802   001584  EE20 F002          	lfsr	2,2
  2803   001588  51A0               	movf	Timer1_Init@_timer& (0+255),w,b
  2804   00158A  26D9               	addwf	fsr2l,f,c
  2805   00158C  51A1               	movf	(Timer1_Init@_timer+1)& (0+255),w,b
  2806   00158E  22DA               	addwfc	fsr2h,f,c
  2807   001590  50DF               	movf	indf2,w,c
  2808   001592  A4D8               	btfss	status,2,c
  2809   001594  EFCE  F00A         	goto	u4771
  2810   001598  EFD0  F00A         	goto	u4770
  2811   00159C                     u4771:
  2812   00159C  EFD3  F00A         	goto	l1090
  2813   0015A0                     u4770:
  2814   0015A0                     
  2815                           ; BSR set to: 0
  2816                           ;MCAL_Layer/Timer1/hal_timer1.c: 43:             {;MCAL_Layer/Timer1/hal_timer1.c: 44:  
      +                                      ((*((volatile IPR1_t *)(0xF9F))).TMR1IP=0);
  2817   0015A0  909F               	bcf	159,0,c	;volatile
  2818                           
  2819                           ;MCAL_Layer/Timer1/hal_timer1.c: 45:              ((*((volatile INTCON_t *)(0xFF2))).GIE
      +                          H = 1);
  2820   0015A2  8EF2               	bsf	242,7,c	;volatile
  2821                           
  2822                           ;MCAL_Layer/Timer1/hal_timer1.c: 46:              ((*((volatile INTCON_t *)(0xFF2))).GIE
      +                          L = 1);
  2823   0015A4  8CF2               	bsf	242,6,c	;volatile
  2824   0015A6                     l1090:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;MCAL_Layer/Timer1/hal_timer1.c: 50:             ((*((volatile T1CON_t *)(0xFCD))).RD16=
      +                           1);
  2828   0015A6  8ECD               	bsf	205,7,c	;volatile
  2829                           
  2830                           ;MCAL_Layer/Timer1/hal_timer1.c: 52:         ((*((volatile T1CON_t *)(0xFCD))).TMR1ON = 
      +                          1);
  2831   0015A8  80CD               	bsf	205,0,c	;volatile
  2832   0015AA                     l5474:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;MCAL_Layer/Timer1/hal_timer1.c: 54:     return ret;
  2836   0015AA  51A4               	movf	Timer1_Init@ret& (0+255),w,b
  2837   0015AC                     
  2838                           ; BSR set to: 0
  2839   0015AC  0012               	return		;funcret
  2840   0015AE                     __end_of_Timer1_Init:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _Timer1_Mode_Select *****************
  2844 ;; Defined at:
  2845 ;;		line 129 in file "MCAL_Layer/Timer1/hal_timer1.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  _timer          2    0[BANK0 ] PTR const struct .
  2848 ;;		 -> timer_obj(6), counter_obj(6), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 10
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_Timer1_Init
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text17
  2875   001A66                     __ptext17:
  2876                           	callstack 0
  2877   001A66                     _Timer1_Mode_Select:
  2878                           	callstack 17
  2879   001A66                     
  2880                           ;MCAL_Layer/Timer1/hal_timer1.c: 130:    if (0 == _timer->timer1_mode){
  2881   001A66  0100               	movlb	0	; () banked
  2882   001A68  EE20 F005          	lfsr	2,5
  2883   001A6C  519E               	movf	Timer1_Mode_Select@_timer& (0+255),w,b
  2884   001A6E  26D9               	addwf	fsr2l,f,c
  2885   001A70  519F               	movf	(Timer1_Mode_Select@_timer+1)& (0+255),w,b
  2886   001A72  22DA               	addwfc	fsr2h,f,c
  2887   001A74  B4DF               	btfsc	indf2,2,c
  2888   001A76  EF3F  F00D         	goto	u4671
  2889   001A7A  EF41  F00D         	goto	u4670
  2890   001A7E                     u4671:
  2891   001A7E  EF44  F00D         	goto	l5370
  2892   001A82                     u4670:
  2893   001A82                     
  2894                           ; BSR set to: 0
  2895                           ;MCAL_Layer/Timer1/hal_timer1.c: 131:         ((*((volatile T1CON_t *)(0xFCD))).TMR1CS =
      +                           0);
  2896   001A82  92CD               	bcf	205,1,c	;volatile
  2897                           
  2898                           ;MCAL_Layer/Timer1/hal_timer1.c: 132:     }
  2899   001A84  EF72  F00D         	goto	l1125
  2900   001A88                     l5370:
  2901                           
  2902                           ; BSR set to: 0
  2903   001A88  EE20 F005          	lfsr	2,5
  2904   001A8C  519E               	movf	Timer1_Mode_Select@_timer& (0+255),w,b
  2905   001A8E  26D9               	addwf	fsr2l,f,c
  2906   001A90  519F               	movf	(Timer1_Mode_Select@_timer+1)& (0+255),w,b
  2907   001A92  22DA               	addwfc	fsr2h,f,c
  2908   001A94  A4DF               	btfss	indf2,2,c
  2909   001A96  EF4F  F00D         	goto	u4681
  2910   001A9A  EF51  F00D         	goto	u4680
  2911   001A9E                     u4681:
  2912   001A9E  EF72  F00D         	goto	l1125
  2913   001AA2                     u4680:
  2914   001AA2                     
  2915                           ; BSR set to: 0
  2916                           ;MCAL_Layer/Timer1/hal_timer1.c: 134:         ((*((volatile T1CON_t *)(0xFCD))).TMR1CS =
      +                           1);
  2917   001AA2  82CD               	bsf	205,1,c	;volatile
  2918   001AA4                     
  2919                           ; BSR set to: 0
  2920                           ;MCAL_Layer/Timer1/hal_timer1.c: 135:             if (0 == _timer->timer1_counter_mode)
  2921   001AA4  EE20 F005          	lfsr	2,5
  2922   001AA8  519E               	movf	Timer1_Mode_Select@_timer& (0+255),w,b
  2923   001AAA  26D9               	addwf	fsr2l,f,c
  2924   001AAC  519F               	movf	(Timer1_Mode_Select@_timer+1)& (0+255),w,b
  2925   001AAE  22DA               	addwfc	fsr2h,f,c
  2926   001AB0  B6DF               	btfsc	indf2,3,c
  2927   001AB2  EF5D  F00D         	goto	u4691
  2928   001AB6  EF5F  F00D         	goto	u4690
  2929   001ABA                     u4691:
  2930   001ABA  EF62  F00D         	goto	l5378
  2931   001ABE                     u4690:
  2932   001ABE                     
  2933                           ; BSR set to: 0
  2934                           ;MCAL_Layer/Timer1/hal_timer1.c: 136:             {;MCAL_Layer/Timer1/hal_timer1.c: 137:
      +                                          ((*((volatile T1CON_t *)(0xFCD))).T1SYNC = 0);
  2935   001ABE  94CD               	bcf	205,2,c	;volatile
  2936                           
  2937                           ;MCAL_Layer/Timer1/hal_timer1.c: 138:             }
  2938   001AC0  EF72  F00D         	goto	l1125
  2939   001AC4                     l5378:
  2940                           
  2941                           ; BSR set to: 0
  2942   001AC4  EE20 F005          	lfsr	2,5
  2943   001AC8  519E               	movf	Timer1_Mode_Select@_timer& (0+255),w,b
  2944   001ACA  26D9               	addwf	fsr2l,f,c
  2945   001ACC  519F               	movf	(Timer1_Mode_Select@_timer+1)& (0+255),w,b
  2946   001ACE  22DA               	addwfc	fsr2h,f,c
  2947   001AD0  A6DF               	btfss	indf2,3,c
  2948   001AD2  EF6D  F00D         	goto	u4701
  2949   001AD6  EF6F  F00D         	goto	u4700
  2950   001ADA                     u4701:
  2951   001ADA  EF72  F00D         	goto	l1124
  2952   001ADE                     u4700:
  2953   001ADE                     
  2954                           ; BSR set to: 0
  2955                           ;MCAL_Layer/Timer1/hal_timer1.c: 140:             {;MCAL_Layer/Timer1/hal_timer1.c: 141:
      +                                          ((*((volatile T1CON_t *)(0xFCD))).T1SYNC = 1);
  2956   001ADE  84CD               	bsf	205,2,c	;volatile
  2957                           
  2958                           ;MCAL_Layer/Timer1/hal_timer1.c: 142:             }
  2959   001AE0  EF72  F00D         	goto	l1125
  2960   001AE4                     l1124:
  2961   001AE4                     l1125:
  2962                           
  2963                           ; BSR set to: 0
  2964   001AE4  0012               	return		;funcret
  2965   001AE6                     __end_of_Timer1_Mode_Select:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _Timer1_Read_Value *****************
  2969 ;; Defined at:
  2970 ;;		line 101 in file "MCAL_Layer/Timer1/hal_timer1.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  _timer          2    0[BANK0 ] PTR const struct .
  2973 ;;		 -> counter_obj(6), 
  2974 ;;  _value          2    2[BANK0 ] PTR unsigned int 
  2975 ;;		 -> Counter_Val(1), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  tmr1_H          1    7[BANK0 ] unsigned char 
  2978 ;;  tmr1_L          1    6[BANK0 ] unsigned char 
  2979 ;;  ret             1    0        unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      unsigned char 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        8 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 10
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text18
  3004   001D9A                     __ptext18:
  3005                           	callstack 0
  3006   001D9A                     _Timer1_Read_Value:
  3007                           	callstack 20
  3008   001D9A                     
  3009                           ;MCAL_Layer/Timer1/hal_timer1.c: 104:     uint8 tmr1_L = 0 , tmr1_H = 0 ;
  3010   001D9A  0E00               	movlw	0
  3011   001D9C  0100               	movlb	0	; () banked
  3012   001D9E  6FA4               	movwf	Timer1_Read_Value@tmr1_L& (0+255),b
  3013   001DA0  0E00               	movlw	0
  3014   001DA2  6FA5               	movwf	Timer1_Read_Value@tmr1_H& (0+255),b
  3015   001DA4                     
  3016                           ; BSR set to: 0
  3017                           ;MCAL_Layer/Timer1/hal_timer1.c: 105:     if((_timer==((void*)0))||(_value == ((void*)0)
      +                          )){
  3018   001DA4  519E               	movf	Timer1_Read_Value@_timer& (0+255),w,b
  3019   001DA6  119F               	iorwf	(Timer1_Read_Value@_timer+1)& (0+255),w,b
  3020   001DA8  B4D8               	btfsc	status,2,c
  3021   001DAA  EFD9  F00E         	goto	u4911
  3022   001DAE  EFDB  F00E         	goto	u4910
  3023   001DB2                     u4911:
  3024   001DB2  EFE4  F00E         	goto	l5654
  3025   001DB6                     u4910:
  3026   001DB6                     
  3027                           ; BSR set to: 0
  3028   001DB6  51A0               	movf	Timer1_Read_Value@_value& (0+255),w,b
  3029   001DB8  11A1               	iorwf	(Timer1_Read_Value@_value+1)& (0+255),w,b
  3030   001DBA  A4D8               	btfss	status,2,c
  3031   001DBC  EFE2  F00E         	goto	u4921
  3032   001DC0  EFE4  F00E         	goto	u4920
  3033   001DC4                     u4921:
  3034   001DC4  EFE6  F00E         	goto	l1105
  3035   001DC8                     u4920:
  3036   001DC8                     l5654:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;MCAL_Layer/Timer1/hal_timer1.c: 107:     }
  3040   001DC8  EFFC  F00E         	goto	l1109
  3041   001DCC                     l1105:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;MCAL_Layer/Timer1/hal_timer1.c: 109:     {;MCAL_Layer/Timer1/hal_timer1.c: 110:        
      +                           tmr1_L = (*((volatile uint8 *)(0xFCE)));
  3045   001DCC  CFCE F0A4          	movff	4046,Timer1_Read_Value@tmr1_L	;volatile
  3046                           
  3047                           ;MCAL_Layer/Timer1/hal_timer1.c: 111:         tmr1_H = (*((volatile uint8 *)(0xFCF)));
  3048   001DD0  CFCF F0A5          	movff	4047,Timer1_Read_Value@tmr1_H	;volatile
  3049   001DD4                     
  3050                           ; BSR set to: 0
  3051                           ;MCAL_Layer/Timer1/hal_timer1.c: 112:         *_value = (uint16)((tmr1_H << 8) | tmr1_L 
      +                          );
  3052   001DD4  51A4               	movf	Timer1_Read_Value@tmr1_L& (0+255),w,b
  3053   001DD6  C0A5  F0A2         	movff	Timer1_Read_Value@tmr1_H,??_Timer1_Read_Value
  3054   001DDA  6BA3               	clrf	(??_Timer1_Read_Value+1)& (0+255),b
  3055   001DDC  C0A2  F0A3         	movff	??_Timer1_Read_Value,??_Timer1_Read_Value+1
  3056   001DE0  6BA2               	clrf	??_Timer1_Read_Value& (0+255),b
  3057   001DE2  13A2               	iorwf	??_Timer1_Read_Value& (0+255),f,b
  3058   001DE4  0E00               	movlw	0
  3059   001DE6  13A3               	iorwf	(??_Timer1_Read_Value+1)& (0+255),f,b
  3060   001DE8  C0A0  FFD9         	movff	Timer1_Read_Value@_value,fsr2l
  3061   001DEC  C0A1  FFDA         	movff	Timer1_Read_Value@_value+1,fsr2h
  3062   001DF0  C0A2  FFDE         	movff	??_Timer1_Read_Value,postinc2
  3063   001DF4  C0A3  FFDD         	movff	??_Timer1_Read_Value+1,postdec2
  3064   001DF8                     l1109:
  3065                           
  3066                           ; BSR set to: 0
  3067   001DF8  0012               	return		;funcret
  3068   001DFA                     __end_of_Timer1_Read_Value:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _InterruptManagerLow *****************
  3072 ;; Defined at:
  3073 ;;		line 49 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;Total ram usage:        9 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 9
  3094 ;; This function calls:
  3095 ;;		_ADC_ISR
  3096 ;;		_INT1_ISR
  3097 ;;		_INT2_ISR
  3098 ;;		_RB4_ISR
  3099 ;;		_RB5_ISR
  3100 ;;		_RB6_ISR
  3101 ;;		_RB7_ISR
  3102 ;;		_TMR0_ISR
  3103 ;;		_TMR1_ISR
  3104 ;; This function is called by:
  3105 ;;		Interrupt level 1
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	intcodelo
  3110   000018                     __pintcodelo:
  3111                           	callstack 0
  3112   000018                     _InterruptManagerLow:
  3113                           	callstack 15
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;incstack = 0
  3117   000018  8060               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3118   00001A  CFD8 F04F          	movff	status,??_InterruptManagerLow
  3119   00001E  CFE8 F050          	movff	wreg,??_InterruptManagerLow+1
  3120   000022  CFE0 F051          	movff	bsr,??_InterruptManagerLow+2
  3121   000026  CFFA F052          	movff	pclath,??_InterruptManagerLow+3
  3122   00002A  CFFB F053          	movff	pclatu,??_InterruptManagerLow+4
  3123   00002E  CFD9 F054          	movff	fsr2l,??_InterruptManagerLow+5
  3124   000032  CFDA F055          	movff	fsr2h,??_InterruptManagerLow+6
  3125   000036  CFF3 F056          	movff	prodl,??_InterruptManagerLow+7
  3126   00003A  CFF4 F057          	movff	prodh,??_InterruptManagerLow+8
  3127   00003E                     
  3128                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:       if((0 == (*((volatile INTCON3_
      +                          t *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  3129   00003E  BCF0               	btfsc	240,6,c	;volatile
  3130   000040  EF24  F000         	goto	i1u427_21
  3131   000044  EF26  F000         	goto	i1u427_20
  3132   000048                     i1u427_21:
  3133   000048  EF2F  F000         	goto	i1l945
  3134   00004C                     i1u427_20:
  3135   00004C  A0F0               	btfss	240,0,c	;volatile
  3136   00004E  EF2B  F000         	goto	i1u428_21
  3137   000052  EF2D  F000         	goto	i1u428_20
  3138   000056                     i1u428_21:
  3139   000056  EF2F  F000         	goto	i1l945
  3140   00005A                     i1u428_20:
  3141   00005A                     
  3142                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         INT1_ISR();
  3143   00005A  EC1B  F010         	call	_INT1_ISR	;wreg free
  3144   00005E                     i1l945:
  3145                           
  3146                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:     if((0 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  3147   00005E  BEF0               	btfsc	240,7,c	;volatile
  3148   000060  EF34  F000         	goto	i1u429_21
  3149   000064  EF36  F000         	goto	i1u429_20
  3150   000068                     i1u429_21:
  3151   000068  EF3F  F000         	goto	i1l947
  3152   00006C                     i1u429_20:
  3153   00006C  A2F0               	btfss	240,1,c	;volatile
  3154   00006E  EF3B  F000         	goto	i1u430_21
  3155   000072  EF3D  F000         	goto	i1u430_20
  3156   000076                     i1u430_21:
  3157   000076  EF3F  F000         	goto	i1l947
  3158   00007A                     i1u430_20:
  3159   00007A                     
  3160                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:         INT2_ISR();
  3161   00007A  EC19  F010         	call	_INT2_ISR	;wreg free
  3162   00007E                     i1l947:
  3163                           
  3164                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:      if((0 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  3165   00007E  B0F1               	btfsc	241,0,c	;volatile
  3166   000080  EF44  F000         	goto	i1u431_21
  3167   000084  EF46  F000         	goto	i1u431_20
  3168   000088                     i1u431_21:
  3169   000088  EF5C  F000         	goto	i1l949
  3170   00008C                     i1u431_20:
  3171   00008C  A0F2               	btfss	242,0,c	;volatile
  3172   00008E  EF4B  F000         	goto	i1u432_21
  3173   000092  EF4D  F000         	goto	i1u432_20
  3174   000096                     i1u432_21:
  3175   000096  EF5C  F000         	goto	i1l949
  3176   00009A                     i1u432_20:
  3177   00009A  3881               	swapf	129,w,c	;volatile
  3178   00009C  0B0F               	andlw	15
  3179   00009E  0B01               	andlw	1
  3180   0000A0  181C               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  3181   0000A2  B4D8               	btfsc	status,2,c
  3182   0000A4  EF56  F000         	goto	i1u433_21
  3183   0000A8  EF58  F000         	goto	i1u433_20
  3184   0000AC                     i1u433_21:
  3185   0000AC  EF5C  F000         	goto	i1l949
  3186   0000B0                     i1u433_20:
  3187   0000B0                     
  3188                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:         RB4_pin_init_value^=1;
  3189   0000B0  0E01               	movlw	1
  3190   0000B2  1A1C               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  3191   0000B4                     
  3192                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR();
  3193   0000B4  EC17  F010         	call	_RB4_ISR	;wreg free
  3194   0000B8                     i1l949:
  3195                           
  3196                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  3197   0000B8  B0F1               	btfsc	241,0,c	;volatile
  3198   0000BA  EF61  F000         	goto	i1u434_21
  3199   0000BE  EF63  F000         	goto	i1u434_20
  3200   0000C2                     i1u434_21:
  3201   0000C2  EF7A  F000         	goto	i1l951
  3202   0000C6                     i1u434_20:
  3203   0000C6  A0F2               	btfss	242,0,c	;volatile
  3204   0000C8  EF68  F000         	goto	i1u435_21
  3205   0000CC  EF6A  F000         	goto	i1u435_20
  3206   0000D0                     i1u435_21:
  3207   0000D0  EF7A  F000         	goto	i1l951
  3208   0000D4                     i1u435_20:
  3209   0000D4  3881               	swapf	129,w,c	;volatile
  3210   0000D6  42E8               	rrncf	wreg,f,c
  3211   0000D8  0B07               	andlw	7
  3212   0000DA  0B01               	andlw	1
  3213   0000DC  181B               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  3214   0000DE  B4D8               	btfsc	status,2,c
  3215   0000E0  EF74  F000         	goto	i1u436_21
  3216   0000E4  EF76  F000         	goto	i1u436_20
  3217   0000E8                     i1u436_21:
  3218   0000E8  EF7A  F000         	goto	i1l951
  3219   0000EC                     i1u436_20:
  3220   0000EC                     
  3221                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_pin_init_value^=1;
  3222   0000EC  0E01               	movlw	1
  3223   0000EE  1A1B               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  3224   0000F0                     
  3225                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:         RB5_ISR();
  3226   0000F0  EC15  F010         	call	_RB5_ISR	;wreg free
  3227   0000F4                     i1l951:
  3228                           
  3229                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  3230   0000F4  B0F1               	btfsc	241,0,c	;volatile
  3231   0000F6  EF7F  F000         	goto	i1u437_21
  3232   0000FA  EF81  F000         	goto	i1u437_20
  3233   0000FE                     i1u437_21:
  3234   0000FE  EF98  F000         	goto	i1l953
  3235   000102                     i1u437_20:
  3236   000102  A0F2               	btfss	242,0,c	;volatile
  3237   000104  EF86  F000         	goto	i1u438_21
  3238   000108  EF88  F000         	goto	i1u438_20
  3239   00010C                     i1u438_21:
  3240   00010C  EF98  F000         	goto	i1l953
  3241   000110                     i1u438_20:
  3242   000110  4481               	rlncf	129,w,c	;volatile
  3243   000112  46E8               	rlncf	wreg,f,c
  3244   000114  0B03               	andlw	3
  3245   000116  0B01               	andlw	1
  3246   000118  181A               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  3247   00011A  B4D8               	btfsc	status,2,c
  3248   00011C  EF92  F000         	goto	i1u439_21
  3249   000120  EF94  F000         	goto	i1u439_20
  3250   000124                     i1u439_21:
  3251   000124  EF98  F000         	goto	i1l953
  3252   000128                     i1u439_20:
  3253   000128                     
  3254                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB6_pin_init_value^=1;
  3255   000128  0E01               	movlw	1
  3256   00012A  1A1A               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  3257   00012C                     
  3258                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB6_ISR();
  3259   00012C  EC13  F010         	call	_RB6_ISR	;wreg free
  3260   000130                     i1l953:
  3261                           
  3262                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  3263   000130  B0F1               	btfsc	241,0,c	;volatile
  3264   000132  EF9D  F000         	goto	i1u440_21
  3265   000136  EF9F  F000         	goto	i1u440_20
  3266   00013A                     i1u440_21:
  3267   00013A  EFB4  F000         	goto	i1l955
  3268   00013E                     i1u440_20:
  3269   00013E  A0F2               	btfss	242,0,c	;volatile
  3270   000140  EFA4  F000         	goto	i1u441_21
  3271   000144  EFA6  F000         	goto	i1u441_20
  3272   000148                     i1u441_21:
  3273   000148  EFB4  F000         	goto	i1l955
  3274   00014C                     i1u441_20:
  3275   00014C  4481               	rlncf	129,w,c	;volatile
  3276   00014E  0B01               	andlw	1
  3277   000150  1819               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  3278   000152  B4D8               	btfsc	status,2,c
  3279   000154  EFAE  F000         	goto	i1u442_21
  3280   000158  EFB0  F000         	goto	i1u442_20
  3281   00015C                     i1u442_21:
  3282   00015C  EFB4  F000         	goto	i1l955
  3283   000160                     i1u442_20:
  3284   000160                     
  3285                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:         RB7_pin_init_value^=1;
  3286   000160  0E01               	movlw	1
  3287   000162  1A19               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  3288   000164                     
  3289                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB7_ISR();
  3290   000164  EC11  F010         	call	_RB7_ISR	;wreg free
  3291   000168                     i1l955:
  3292                           
  3293                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:      if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  3294   000168  BC9F               	btfsc	159,6,c	;volatile
  3295   00016A  EFB9  F000         	goto	i1u443_21
  3296   00016E  EFBB  F000         	goto	i1u443_20
  3297   000172                     i1u443_21:
  3298   000172  EFC4  F000         	goto	i1l957
  3299   000176                     i1u443_20:
  3300   000176  AC9E               	btfss	158,6,c	;volatile
  3301   000178  EFC0  F000         	goto	i1u444_21
  3302   00017C  EFC2  F000         	goto	i1u444_20
  3303   000180                     i1u444_21:
  3304   000180  EFC4  F000         	goto	i1l957
  3305   000184                     i1u444_20:
  3306   000184                     
  3307                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:         ADC_ISR();
  3308   000184  EC1D  F010         	call	_ADC_ISR	;wreg free
  3309   000188                     i1l957:
  3310                           
  3311                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:     if((0 == (*((volatile INTCON2_t 
      +                          *)(0xFF1))).TMR0IP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).TMR0IF)){
  3312   000188  B4F1               	btfsc	241,2,c	;volatile
  3313   00018A  EFC9  F000         	goto	i1u445_21
  3314   00018E  EFCB  F000         	goto	i1u445_20
  3315   000192                     i1u445_21:
  3316   000192  EFD4  F000         	goto	i1l959
  3317   000196                     i1u445_20:
  3318   000196  A4F2               	btfss	242,2,c	;volatile
  3319   000198  EFD0  F000         	goto	i1u446_21
  3320   00019C  EFD2  F000         	goto	i1u446_20
  3321   0001A0                     i1u446_21:
  3322   0001A0  EFD4  F000         	goto	i1l959
  3323   0001A4                     i1u446_20:
  3324   0001A4                     
  3325                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:         TMR0_ISR();
  3326   0001A4  ECFC  F00F         	call	_TMR0_ISR	;wreg free
  3327   0001A8                     i1l959:
  3328                           
  3329                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:     if((0 == (*((volatile IPR1_t *)(
      +                          0xF9F))).TMR1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR1IF)){
  3330   0001A8  B09F               	btfsc	159,0,c	;volatile
  3331   0001AA  EFD9  F000         	goto	i1u447_21
  3332   0001AE  EFDB  F000         	goto	i1u447_20
  3333   0001B2                     i1u447_21:
  3334   0001B2  EFE4  F000         	goto	i1l962
  3335   0001B6                     i1u447_20:
  3336   0001B6  A09E               	btfss	158,0,c	;volatile
  3337   0001B8  EFE0  F000         	goto	i1u448_21
  3338   0001BC  EFE2  F000         	goto	i1u448_20
  3339   0001C0                     i1u448_21:
  3340   0001C0  EFE4  F000         	goto	i1l962
  3341   0001C4                     i1u448_20:
  3342   0001C4                     
  3343                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         TMR1_ISR();
  3344   0001C4  EC7B  F00F         	call	_TMR1_ISR	;wreg free
  3345   0001C8                     i1l962:
  3346   0001C8  C057  FFF4         	movff	??_InterruptManagerLow+8,prodh
  3347   0001CC  C056  FFF3         	movff	??_InterruptManagerLow+7,prodl
  3348   0001D0  C055  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  3349   0001D4  C054  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  3350   0001D8  C053  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  3351   0001DC  C052  FFFA         	movff	??_InterruptManagerLow+3,pclath
  3352   0001E0  C051  FFE0         	movff	??_InterruptManagerLow+2,bsr
  3353   0001E4  C050  FFE8         	movff	??_InterruptManagerLow+1,wreg
  3354   0001E8  C04F  FFD8         	movff	??_InterruptManagerLow,status
  3355   0001EC  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3356   0001EE  0010               	retfie	
  3357   0001F0                     __end_of_InterruptManagerLow:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _TMR1_ISR *****************
  3361 ;; Defined at:
  3362 ;;		line 116 in file "MCAL_Layer/Timer1/hal_timer1.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 8
  3383 ;; This function calls:
  3384 ;;		NULL
  3385 ;;		_TMR1_ISR_HANDLER
  3386 ;; This function is called by:
  3387 ;;		_InterruptManagerLow
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text20
  3392   001EF6                     __ptext20:
  3393                           	callstack 0
  3394   001EF6                     _TMR1_ISR:
  3395                           	callstack 15
  3396   001EF6                     
  3397                           ;MCAL_Layer/Timer1/hal_timer1.c: 117:     (*((volatile uint8 *)(0xFCF))) = (timer1_prelo
      +                          ad)>>8;
  3398   001EF6  5002               	movf	(_timer1_preload+1)^0,w,c
  3399   001EF8  6ECF               	movwf	207,c	;volatile
  3400   001EFA                     
  3401                           ;MCAL_Layer/Timer1/hal_timer1.c: 118:     (*((volatile uint8 *)(0xFCE))) = (uint8)(timer
      +                          1_preload);
  3402   001EFA  C001  FFCE         	movff	_timer1_preload,4046	;volatile
  3403   001EFE                     
  3404                           ;MCAL_Layer/Timer1/hal_timer1.c: 119:     ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
  3405   001EFE  909E               	bcf	158,0,c	;volatile
  3406   001F00                     
  3407                           ;MCAL_Layer/Timer1/hal_timer1.c: 120:       if(TMR1_InterruptHandler){
  3408   001F00  5003               	movf	_TMR1_InterruptHandler^0,w,c
  3409   001F02  1004               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  3410   001F04  B4D8               	btfsc	status,2,c
  3411   001F06  EF87  F00F         	goto	i1u317_21
  3412   001F0A  EF89  F00F         	goto	i1u317_20
  3413   001F0E                     i1u317_21:
  3414   001F0E  EF95  F00F         	goto	i1l1114
  3415   001F12                     i1u317_20:
  3416   001F12                     
  3417                           ;MCAL_Layer/Timer1/hal_timer1.c: 121:        TMR1_InterruptHandler();
  3418   001F12  D802               	call	i1u318_28
  3419   001F14  EF95  F00F         	goto	i1u318_29
  3420   001F18                     i1u318_28:
  3421   001F18  0005               	push	
  3422   001F1A  6EFA               	movwf	pclath,c
  3423   001F1C  5003               	movf	_TMR1_InterruptHandler^0,w,c
  3424   001F1E  6EFD               	movwf	tosl,c
  3425   001F20  5004               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  3426   001F22  6EFE               	movwf	tosh,c
  3427   001F24  6AFF               	clrf	tosu,c
  3428   001F26  50FA               	movf	pclath,w,c
  3429   001F28  0012               	return		;indir
  3430   001F2A                     i1u318_29:
  3431   001F2A                     i1l1114:
  3432   001F2A  0012               	return		;funcret
  3433   001F2C                     __end_of_TMR1_ISR:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _TMR1_ISR_HANDLER *****************
  3437 ;; Defined at:
  3438 ;;		line 38 in file "application.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 7
  3459 ;; This function calls:
  3460 ;;		_led_toggle
  3461 ;; This function is called by:
  3462 ;;		_Timer1_Timer_Init
  3463 ;;		_TMR1_ISR
  3464 ;;		i2_TMR1_ISR
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text21
  3469   001FD2                     __ptext21:
  3470                           	callstack 0
  3471   001FD2                     _TMR1_ISR_HANDLER:
  3472                           	callstack 0
  3473                           
  3474                           ;Skip over the trampoline to the duplicate function for level 2
  3475   001FD2  A260               	btfss	int$flags,1,c
  3476   001FD4  EFEE  F00F         	goto	_TMR1_ISR_HANDLER$intlevel1
  3477   001FD8  EFF5  F00F         	goto	i2_TMR1_ISR_HANDLER
  3478   001FDC                     _TMR1_ISR_HANDLER$intlevel1:
  3479                           	callstack 15
  3480   001FDC                     
  3481                           ;application.c: 39:     led_toggle(&led1);
  3482   001FDC  0E5E               	movlw	low _led1
  3483   001FDE  6E4B               	movwf	led_toggle@led^0,c
  3484   001FE0  0E00               	movlw	high _led1
  3485   001FE2  6E4C               	movwf	(led_toggle@led+1)^0,c
  3486   001FE4  EC2A  F00E         	call	_led_toggle	;wreg free
  3487   001FE8  0012               	return		;funcret
  3488   001FEA                     __end_of_TMR1_ISR_HANDLER:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function _led_toggle *****************
  3492 ;; Defined at:
  3493 ;;		line 55 in file "ECU_Layer/LED/ecu_led.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  led             2   26[COMRAM] PTR const struct .
  3496 ;;		 -> led1(1), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  pin_obj         1   29[COMRAM] struct .
  3499 ;;  ret             1    0        unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      unsigned char 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;Total ram usage:        4 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 6
  3516 ;; This function calls:
  3517 ;;		_gpio_pin_toggle_logic
  3518 ;; This function is called by:
  3519 ;;		_TMR1_ISR_HANDLER
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text22
  3524   001C54                     __ptext22:
  3525                           	callstack 0
  3526   001C54                     _led_toggle:
  3527                           	callstack 15
  3528   001C54                     
  3529                           ;ECU_Layer/LED/ecu_led.c: 57:     pin_config_t pin_obj={.port = led->port_name,.pin = le
      +                          d->pin,.direction=OUTPUT,.logic=led->led_status };
  3530   001C54  C020  F04E         	movff	led_toggle@F3265,led_toggle@pin_obj
  3531   001C58  C04B  FFD9         	movff	led_toggle@led,fsr2l
  3532   001C5C  C04C  FFDA         	movff	led_toggle@led+1,fsr2h
  3533   001C60  50DF               	movf	223,w,c
  3534   001C62  0B0F               	andlw	15
  3535   001C64  6E4D               	movwf	??_led_toggle^0,c
  3536   001C66  504E               	movf	led_toggle@pin_obj^0,w,c
  3537   001C68  184D               	xorwf	??_led_toggle^0,w,c
  3538   001C6A  0BF8               	andlw	-8
  3539   001C6C  184D               	xorwf	??_led_toggle^0,w,c
  3540   001C6E  6E4E               	movwf	led_toggle@pin_obj^0,c
  3541   001C70  C04B  FFD9         	movff	led_toggle@led,fsr2l
  3542   001C74  C04C  FFDA         	movff	led_toggle@led+1,fsr2h
  3543   001C78  38DF               	swapf	223,w,c
  3544   001C7A  0B07               	andlw	7
  3545   001C7C  6E4D               	movwf	??_led_toggle^0,c
  3546   001C7E  464D               	rlncf	??_led_toggle^0,f,c
  3547   001C80  464D               	rlncf	??_led_toggle^0,f,c
  3548   001C82  464D               	rlncf	??_led_toggle^0,f,c
  3549   001C84  504E               	movf	led_toggle@pin_obj^0,w,c
  3550   001C86  184D               	xorwf	??_led_toggle^0,w,c
  3551   001C88  0BC7               	andlw	-57
  3552   001C8A  184D               	xorwf	??_led_toggle^0,w,c
  3553   001C8C  6E4E               	movwf	led_toggle@pin_obj^0,c
  3554   001C8E  9C4E               	bcf	led_toggle@pin_obj^0,6,c
  3555   001C90  C04B  FFD9         	movff	led_toggle@led,fsr2l
  3556   001C94  C04C  FFDA         	movff	led_toggle@led+1,fsr2h
  3557   001C98  AEDF               	btfss	indf2,7,c
  3558   001C9A  D002               	bra	i1u297_25
  3559   001C9C  8E4E               	bsf	led_toggle@pin_obj^0,7,c
  3560   001C9E  D001               	bra	i1u297_27
  3561   001CA0                     i1u297_25:
  3562   001CA0  9E4E               	bcf	led_toggle@pin_obj^0,7,c
  3563   001CA2                     i1u297_27:
  3564   001CA2                     
  3565                           ;ECU_Layer/LED/ecu_led.c: 58:     if(led==((void*)0)){
  3566   001CA2  504B               	movf	led_toggle@led^0,w,c
  3567   001CA4  104C               	iorwf	(led_toggle@led+1)^0,w,c
  3568   001CA6  A4D8               	btfss	status,2,c
  3569   001CA8  EF58  F00E         	goto	i1u298_21
  3570   001CAC  EF5A  F00E         	goto	i1u298_20
  3571   001CB0                     i1u298_21:
  3572   001CB0  EF5C  F00E         	goto	i1l4158
  3573   001CB4                     i1u298_20:
  3574   001CB4                     
  3575                           ;ECU_Layer/LED/ecu_led.c: 60:     }
  3576   001CB4  EF62  F00E         	goto	i1l320
  3577   001CB8                     i1l4158:
  3578   001CB8  0E4E               	movlw	low led_toggle@pin_obj
  3579   001CBA  6E43               	movwf	gpio_pin_toggle_logic@pin_config^0,c
  3580   001CBC  0E00               	movlw	high led_toggle@pin_obj
  3581   001CBE  6E44               	movwf	(gpio_pin_toggle_logic@pin_config+1)^0,c
  3582   001CC0  EC4F  F00B         	call	_gpio_pin_toggle_logic	;wreg free
  3583   001CC4                     i1l320:
  3584   001CC4  0012               	return		;funcret
  3585   001CC6                     __end_of_led_toggle:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function _gpio_pin_toggle_logic *****************
  3589 ;; Defined at:
  3590 ;;		line 141 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  pin_config      2   18[COMRAM] PTR const struct .
  3593 ;;		 -> led_toggle@pin_obj(1), 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  ret             1   25[COMRAM] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      unsigned char 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:        8 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 5
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_led_toggle
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text23
  3620   00169E                     __ptext23:
  3621                           	callstack 0
  3622   00169E                     _gpio_pin_toggle_logic:
  3623                           	callstack 15
  3624   00169E                     
  3625                           ;MCAL_Layer/GPIO/hal_gpio.c: 142:       Std_ReturnType ret=(Std_ReturnType)0x01;
  3626   00169E  0E01               	movlw	1
  3627   0016A0  6E4A               	movwf	gpio_pin_toggle_logic@ret^0,c
  3628   0016A2                     
  3629                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     if((pin_config==((void*)0))||(pin_config->pin>8 -1
      +                          )||(pin_config->port>5 -1)){
  3630   0016A2  5043               	movf	gpio_pin_toggle_logic@pin_config^0,w,c
  3631   0016A4  1044               	iorwf	(gpio_pin_toggle_logic@pin_config+1)^0,w,c
  3632   0016A6  B4D8               	btfsc	status,2,c
  3633   0016A8  EF58  F00B         	goto	i1u281_21
  3634   0016AC  EF5A  F00B         	goto	i1u281_20
  3635   0016B0                     i1u281_21:
  3636   0016B0  EF7A  F00B         	goto	i1l4042
  3637   0016B4                     i1u281_20:
  3638   0016B4  C043  FFD9         	movff	gpio_pin_toggle_logic@pin_config,fsr2l
  3639   0016B8  C044  FFDA         	movff	gpio_pin_toggle_logic@pin_config+1,fsr2h
  3640   0016BC  30DF               	rrcf	223,w,c
  3641   0016BE  32E8               	rrcf	wreg,f,c
  3642   0016C0  32E8               	rrcf	wreg,f,c
  3643   0016C2  0B07               	andlw	7
  3644   0016C4  6E45               	movwf	??_gpio_pin_toggle_logic^0,c
  3645   0016C6  0E08               	movlw	8
  3646   0016C8  6045               	cpfslt	??_gpio_pin_toggle_logic^0,c
  3647   0016CA  EF69  F00B         	goto	i1u282_21
  3648   0016CE  EF6B  F00B         	goto	i1u282_20
  3649   0016D2                     i1u282_21:
  3650   0016D2  EF7A  F00B         	goto	i1l4042
  3651   0016D6                     i1u282_20:
  3652   0016D6  C043  FFD9         	movff	gpio_pin_toggle_logic@pin_config,fsr2l
  3653   0016DA  C044  FFDA         	movff	gpio_pin_toggle_logic@pin_config+1,fsr2h
  3654   0016DE  50DF               	movf	223,w,c
  3655   0016E0  0B07               	andlw	7
  3656   0016E2  6E45               	movwf	??_gpio_pin_toggle_logic^0,c
  3657   0016E4  0E04               	movlw	4
  3658   0016E6  6445               	cpfsgt	??_gpio_pin_toggle_logic^0,c
  3659   0016E8  EF78  F00B         	goto	i1u283_21
  3660   0016EC  EF7A  F00B         	goto	i1u283_20
  3661   0016F0                     i1u283_21:
  3662   0016F0  EF7E  F00B         	goto	i1l4044
  3663   0016F4                     i1u283_20:
  3664   0016F4                     i1l4042:
  3665                           
  3666                           ;MCAL_Layer/GPIO/hal_gpio.c: 144:         ret=(Std_ReturnType)0x00;
  3667   0016F4  0E00               	movlw	0
  3668   0016F6  6E4A               	movwf	gpio_pin_toggle_logic@ret^0,c
  3669                           
  3670                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:     }
  3671   0016F8  EFAA  F00B         	goto	i1l4046
  3672   0016FC                     i1l4044:
  3673                           
  3674                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         (*(lat_registers[pin_config->port])^=((uint8)0
      +                          x01<<pin_config->pin));
  3675   0016FC  C043  FFD9         	movff	gpio_pin_toggle_logic@pin_config,fsr2l
  3676   001700  C044  FFDA         	movff	gpio_pin_toggle_logic@pin_config+1,fsr2h
  3677   001704  30DF               	rrcf	223,w,c
  3678   001706  32E8               	rrcf	wreg,f,c
  3679   001708  32E8               	rrcf	wreg,f,c
  3680   00170A  0B07               	andlw	7
  3681   00170C  6E45               	movwf	??_gpio_pin_toggle_logic^0,c
  3682   00170E  0E01               	movlw	1
  3683   001710  6E46               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  3684   001712  2A45               	incf	??_gpio_pin_toggle_logic^0,f,c
  3685   001714  EF8E  F00B         	goto	i1u284_24
  3686   001718                     i1u284_25:
  3687   001718  90D8               	bcf	status,0,c
  3688   00171A  3646               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  3689   00171C                     i1u284_24:
  3690   00171C  2E45               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  3691   00171E  EF8C  F00B         	goto	i1u284_25
  3692   001722  C043  FFD9         	movff	gpio_pin_toggle_logic@pin_config,fsr2l
  3693   001726  C044  FFDA         	movff	gpio_pin_toggle_logic@pin_config+1,fsr2h
  3694   00172A  50DF               	movf	223,w,c
  3695   00172C  0B07               	andlw	7
  3696   00172E  6E47               	movwf	(??_gpio_pin_toggle_logic+2)^0,c
  3697   001730  5047               	movf	(??_gpio_pin_toggle_logic+2)^0,w,c
  3698   001732  0D02               	mullw	2
  3699   001734  0E8A               	movlw	low _lat_registers
  3700   001736  24F3               	addwf	243,w,c
  3701   001738  6ED9               	movwf	fsr2l,c
  3702   00173A  0E00               	movlw	high _lat_registers
  3703   00173C  20F4               	addwfc	prodh,w,c
  3704   00173E  6EDA               	movwf	fsr2h,c
  3705   001740  CFDE F048          	movff	postinc2,??_gpio_pin_toggle_logic+3
  3706   001744  CFDD F049          	movff	postdec2,??_gpio_pin_toggle_logic+4
  3707   001748  C048  FFD9         	movff	??_gpio_pin_toggle_logic+3,fsr2l
  3708   00174C  C049  FFDA         	movff	??_gpio_pin_toggle_logic+4,fsr2h
  3709   001750  5046               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  3710   001752  1ADF               	xorwf	indf2,f,c
  3711   001754                     i1l4046:
  3712                           
  3713                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:     return ret;
  3714   001754  504A               	movf	gpio_pin_toggle_logic@ret^0,w,c
  3715   001756  0012               	return		;funcret
  3716   001758                     __end_of_gpio_pin_toggle_logic:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _TMR0_ISR *****************
  3720 ;; Defined at:
  3721 ;;		line 110 in file "MCAL_Layer/Timer0/hal_timer0.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 5
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_InterruptManagerLow
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text24
  3750   001FF8                     __ptext24:
  3751                           	callstack 0
  3752   001FF8                     _TMR0_ISR:
  3753                           	callstack 18
  3754   001FF8                     
  3755                           ;MCAL_Layer/Timer0/hal_timer0.c: 112:     TMR0H = (timer0_preload)>>8;
  3756   001FF8  5006               	movf	(_timer0_preload+1)^0,w,c
  3757   001FFA  6ED7               	movwf	215,c	;volatile
  3758   001FFC                     
  3759                           ;MCAL_Layer/Timer0/hal_timer0.c: 113:     (*((volatile uint8 *)(0xFD6))) = (uint8)(timer
      +                          0_preload);
  3760   001FFC  C005  FFD6         	movff	_timer0_preload,4054	;volatile
  3761   002000                     
  3762                           ;MCAL_Layer/Timer0/hal_timer0.c: 114:     ((*((volatile INTCON_t *)(0xFF2))).TMR0IF=0);
  3763   002000  94F2               	bcf	242,2,c	;volatile
  3764   002002  0012               	return		;funcret
  3765   002004                     __end_of_TMR0_ISR:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _RB7_ISR *****************
  3769 ;; Defined at:
  3770 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		None
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 5
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_InterruptManagerLow
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text25
  3799   002022                     __ptext25:
  3800                           	callstack 0
  3801   002022                     _RB7_ISR:
  3802                           	callstack 18
  3803   002022                     
  3804                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  3805   002022  90F2               	bcf	242,0,c	;volatile
  3806   002024  0012               	return		;funcret
  3807   002026                     __end_of_RB7_ISR:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _RB6_ISR *****************
  3811 ;; Defined at:
  3812 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		None
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 5
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_InterruptManagerLow
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text26
  3841   002026                     __ptext26:
  3842                           	callstack 0
  3843   002026                     _RB6_ISR:
  3844                           	callstack 18
  3845   002026                     
  3846                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  3847   002026  90F2               	bcf	242,0,c	;volatile
  3848   002028  0012               	return		;funcret
  3849   00202A                     __end_of_RB6_ISR:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _RB5_ISR *****************
  3853 ;; Defined at:
  3854 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		None
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 5
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_InterruptManagerLow
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text27
  3883   00202A                     __ptext27:
  3884                           	callstack 0
  3885   00202A                     _RB5_ISR:
  3886                           	callstack 18
  3887   00202A                     
  3888                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  3889   00202A  90F2               	bcf	242,0,c	;volatile
  3890   00202C  0012               	return		;funcret
  3891   00202E                     __end_of_RB5_ISR:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _RB4_ISR *****************
  3895 ;; Defined at:
  3896 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		None
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 5
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_InterruptManagerLow
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text28
  3925   00202E                     __ptext28:
  3926                           	callstack 0
  3927   00202E                     _RB4_ISR:
  3928                           	callstack 18
  3929   00202E                     
  3930                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  3931   00202E  90F2               	bcf	242,0,c	;volatile
  3932   002030  0012               	return		;funcret
  3933   002032                     __end_of_RB4_ISR:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _INT2_ISR *****************
  3937 ;; Defined at:
  3938 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		None
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;Total ram usage:        0 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; Hardware stack levels required when called: 5
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_InterruptManagerLow
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text29
  3967   002032                     __ptext29:
  3968                           	callstack 0
  3969   002032                     _INT2_ISR:
  3970                           	callstack 18
  3971   002032                     
  3972                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  3973   002032  92F0               	bcf	240,1,c	;volatile
  3974   002034  0012               	return		;funcret
  3975   002036                     __end_of_INT2_ISR:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _INT1_ISR *****************
  3979 ;; Defined at:
  3980 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		None
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used: 1
  4000 ;; Hardware stack levels required when called: 5
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_InterruptManagerLow
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text30
  4009   002036                     __ptext30:
  4010                           	callstack 0
  4011   002036                     _INT1_ISR:
  4012                           	callstack 18
  4013   002036                     
  4014                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  4015   002036  90F0               	bcf	240,0,c	;volatile
  4016   002038  0012               	return		;funcret
  4017   00203A                     __end_of_INT1_ISR:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _ADC_ISR *****************
  4021 ;; Defined at:
  4022 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		None
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 5
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_InterruptManagerLow
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text31
  4051   00203A                     __ptext31:
  4052                           	callstack 0
  4053   00203A                     _ADC_ISR:
  4054                           	callstack 18
  4055   00203A                     
  4056                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
  4057   00203A  9C9E               	bcf	158,6,c	;volatile
  4058   00203C  0012               	return		;funcret
  4059   00203E                     __end_of_ADC_ISR:
  4060                           	callstack 0
  4061                           
  4062 ;; *************** function _InterruptManagerHigh *****************
  4063 ;; Defined at:
  4064 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;Total ram usage:        6 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 4
  4085 ;; This function calls:
  4086 ;;		_INT0_ISR
  4087 ;;		i2_ADC_ISR
  4088 ;;		i2_INT1_ISR
  4089 ;;		i2_INT2_ISR
  4090 ;;		i2_RB4_ISR
  4091 ;;		i2_RB5_ISR
  4092 ;;		i2_RB6_ISR
  4093 ;;		i2_RB7_ISR
  4094 ;;		i2_TMR0_ISR
  4095 ;;		i2_TMR1_ISR
  4096 ;; This function is called by:
  4097 ;;		Interrupt level 2
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	intcode
  4102   000008                     __pintcode:
  4103                           	callstack 0
  4104   000008                     _InterruptManagerHigh:
  4105                           	callstack 15
  4106                           
  4107                           ;incstack = 0
  4108   000008  8260               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4109   00000A  ED11  F008         	call	int_func,f	;refresh shadow registers
  4110                           
  4111                           	psect	intcode_body
  4112   001022                     __pintcode_body:
  4113                           	callstack 15
  4114   001022                     int_func:
  4115                           	callstack 15
  4116   001022  0006               	pop		; remove dummy address from shadow register refresh
  4117   001024  CFFA F03D          	movff	pclath,??_InterruptManagerHigh
  4118   001028  CFFB F03E          	movff	pclatu,??_InterruptManagerHigh+1
  4119   00102C  CFD9 F03F          	movff	fsr2l,??_InterruptManagerHigh+2
  4120   001030  CFDA F040          	movff	fsr2h,??_InterruptManagerHigh+3
  4121   001034  CFF3 F041          	movff	prodl,??_InterruptManagerHigh+4
  4122   001038  CFF4 F042          	movff	prodh,??_InterruptManagerHigh+5
  4123   00103C                     
  4124                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 4:     if((1 == (*((volatile INTCON_t *)
      +                          (0xFF2))).INT0IE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).INT0IF)){
  4125   00103C  A8F2               	btfss	242,4,c	;volatile
  4126   00103E  EF23  F008         	goto	i2u403_41
  4127   001042  EF25  F008         	goto	i2u403_40
  4128   001046                     i2u403_41:
  4129   001046  EF2E  F008         	goto	i2l920
  4130   00104A                     i2u403_40:
  4131   00104A  A2F2               	btfss	242,1,c	;volatile
  4132   00104C  EF2A  F008         	goto	i2u404_41
  4133   001050  EF2C  F008         	goto	i2u404_40
  4134   001054                     i2u404_41:
  4135   001054  EF2E  F008         	goto	i2l920
  4136   001058                     i2u404_40:
  4137   001058                     
  4138                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 5:         INT0_ISR();
  4139   001058  EC2D  F010         	call	_INT0_ISR	;wreg free
  4140   00105C                     i2l920:
  4141                           
  4142                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 8:      if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  4143   00105C  ACF0               	btfss	240,6,c	;volatile
  4144   00105E  EF33  F008         	goto	i2u405_41
  4145   001062  EF35  F008         	goto	i2u405_40
  4146   001066                     i2u405_41:
  4147   001066  EF3E  F008         	goto	i2l922
  4148   00106A                     i2u405_40:
  4149   00106A  A0F0               	btfss	240,0,c	;volatile
  4150   00106C  EF3A  F008         	goto	i2u406_41
  4151   001070  EF3C  F008         	goto	i2u406_40
  4152   001074                     i2u406_41:
  4153   001074  EF3E  F008         	goto	i2l922
  4154   001078                     i2u406_40:
  4155   001078                     
  4156                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 9:         INT1_ISR();
  4157   001078  EC29  F010         	call	i2_INT1_ISR	;wreg free
  4158   00107C                     i2l922:
  4159                           
  4160                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 12:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  4161   00107C  AEF0               	btfss	240,7,c	;volatile
  4162   00107E  EF43  F008         	goto	i2u407_41
  4163   001082  EF45  F008         	goto	i2u407_40
  4164   001086                     i2u407_41:
  4165   001086  EF4E  F008         	goto	i2l924
  4166   00108A                     i2u407_40:
  4167   00108A  A2F0               	btfss	240,1,c	;volatile
  4168   00108C  EF4A  F008         	goto	i2u408_41
  4169   001090  EF4C  F008         	goto	i2u408_40
  4170   001094                     i2u408_41:
  4171   001094  EF4E  F008         	goto	i2l924
  4172   001098                     i2u408_40:
  4173   001098                     
  4174                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 13:         INT2_ISR();
  4175   001098  EC27  F010         	call	i2_INT2_ISR	;wreg free
  4176   00109C                     i2l924:
  4177                           
  4178                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 16:      if((1 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  4179   00109C  A0F1               	btfss	241,0,c	;volatile
  4180   00109E  EF53  F008         	goto	i2u409_41
  4181   0010A2  EF55  F008         	goto	i2u409_40
  4182   0010A6                     i2u409_41:
  4183   0010A6  EF6B  F008         	goto	i2l926
  4184   0010AA                     i2u409_40:
  4185   0010AA  A0F2               	btfss	242,0,c	;volatile
  4186   0010AC  EF5A  F008         	goto	i2u410_41
  4187   0010B0  EF5C  F008         	goto	i2u410_40
  4188   0010B4                     i2u410_41:
  4189   0010B4  EF6B  F008         	goto	i2l926
  4190   0010B8                     i2u410_40:
  4191   0010B8  3881               	swapf	129,w,c	;volatile
  4192   0010BA  0B0F               	andlw	15
  4193   0010BC  0B01               	andlw	1
  4194   0010BE  181C               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  4195   0010C0  B4D8               	btfsc	status,2,c
  4196   0010C2  EF65  F008         	goto	i2u411_41
  4197   0010C6  EF67  F008         	goto	i2u411_40
  4198   0010CA                     i2u411_41:
  4199   0010CA  EF6B  F008         	goto	i2l926
  4200   0010CE                     i2u411_40:
  4201   0010CE                     
  4202                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 17:         RB4_pin_init_value^=1;
  4203   0010CE  0E01               	movlw	1
  4204   0010D0  1A1C               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  4205   0010D2                     
  4206                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 18:         RB4_ISR();
  4207   0010D2  EC25  F010         	call	i2_RB4_ISR	;wreg free
  4208   0010D6                     i2l926:
  4209                           
  4210                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 21:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  4211   0010D6  A0F1               	btfss	241,0,c	;volatile
  4212   0010D8  EF70  F008         	goto	i2u412_41
  4213   0010DC  EF72  F008         	goto	i2u412_40
  4214   0010E0                     i2u412_41:
  4215   0010E0  EF89  F008         	goto	i2l928
  4216   0010E4                     i2u412_40:
  4217   0010E4  A0F2               	btfss	242,0,c	;volatile
  4218   0010E6  EF77  F008         	goto	i2u413_41
  4219   0010EA  EF79  F008         	goto	i2u413_40
  4220   0010EE                     i2u413_41:
  4221   0010EE  EF89  F008         	goto	i2l928
  4222   0010F2                     i2u413_40:
  4223   0010F2  3881               	swapf	129,w,c	;volatile
  4224   0010F4  42E8               	rrncf	wreg,f,c
  4225   0010F6  0B07               	andlw	7
  4226   0010F8  0B01               	andlw	1
  4227   0010FA  181B               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  4228   0010FC  B4D8               	btfsc	status,2,c
  4229   0010FE  EF83  F008         	goto	i2u414_41
  4230   001102  EF85  F008         	goto	i2u414_40
  4231   001106                     i2u414_41:
  4232   001106  EF89  F008         	goto	i2l928
  4233   00110A                     i2u414_40:
  4234   00110A                     
  4235                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 22:         RB5_pin_init_value^=1;
  4236   00110A  0E01               	movlw	1
  4237   00110C  1A1B               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  4238   00110E                     
  4239                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 23:         RB5_ISR();
  4240   00110E  EC23  F010         	call	i2_RB5_ISR	;wreg free
  4241   001112                     i2l928:
  4242                           
  4243                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 26:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  4244   001112  A0F1               	btfss	241,0,c	;volatile
  4245   001114  EF8E  F008         	goto	i2u415_41
  4246   001118  EF90  F008         	goto	i2u415_40
  4247   00111C                     i2u415_41:
  4248   00111C  EFA7  F008         	goto	i2l930
  4249   001120                     i2u415_40:
  4250   001120  A0F2               	btfss	242,0,c	;volatile
  4251   001122  EF95  F008         	goto	i2u416_41
  4252   001126  EF97  F008         	goto	i2u416_40
  4253   00112A                     i2u416_41:
  4254   00112A  EFA7  F008         	goto	i2l930
  4255   00112E                     i2u416_40:
  4256   00112E  4481               	rlncf	129,w,c	;volatile
  4257   001130  46E8               	rlncf	wreg,f,c
  4258   001132  0B03               	andlw	3
  4259   001134  0B01               	andlw	1
  4260   001136  181A               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  4261   001138  B4D8               	btfsc	status,2,c
  4262   00113A  EFA1  F008         	goto	i2u417_41
  4263   00113E  EFA3  F008         	goto	i2u417_40
  4264   001142                     i2u417_41:
  4265   001142  EFA7  F008         	goto	i2l930
  4266   001146                     i2u417_40:
  4267   001146                     
  4268                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 27:         RB6_pin_init_value^=1;
  4269   001146  0E01               	movlw	1
  4270   001148  1A1A               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  4271   00114A                     
  4272                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 28:         RB6_ISR();
  4273   00114A  EC21  F010         	call	i2_RB6_ISR	;wreg free
  4274   00114E                     i2l930:
  4275                           
  4276                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 31:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  4277   00114E  A0F1               	btfss	241,0,c	;volatile
  4278   001150  EFAC  F008         	goto	i2u418_41
  4279   001154  EFAE  F008         	goto	i2u418_40
  4280   001158                     i2u418_41:
  4281   001158  EFC3  F008         	goto	i2l932
  4282   00115C                     i2u418_40:
  4283   00115C  A0F2               	btfss	242,0,c	;volatile
  4284   00115E  EFB3  F008         	goto	i2u419_41
  4285   001162  EFB5  F008         	goto	i2u419_40
  4286   001166                     i2u419_41:
  4287   001166  EFC3  F008         	goto	i2l932
  4288   00116A                     i2u419_40:
  4289   00116A  4481               	rlncf	129,w,c	;volatile
  4290   00116C  0B01               	andlw	1
  4291   00116E  1819               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  4292   001170  B4D8               	btfsc	status,2,c
  4293   001172  EFBD  F008         	goto	i2u420_41
  4294   001176  EFBF  F008         	goto	i2u420_40
  4295   00117A                     i2u420_41:
  4296   00117A  EFC3  F008         	goto	i2l932
  4297   00117E                     i2u420_40:
  4298   00117E                     
  4299                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:         RB7_pin_init_value^=1;
  4300   00117E  0E01               	movlw	1
  4301   001180  1A19               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  4302   001182                     
  4303                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:         RB7_ISR();
  4304   001182  EC1F  F010         	call	i2_RB7_ISR	;wreg free
  4305   001186                     i2l932:
  4306                           
  4307                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 36:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  4308   001186  AC9F               	btfss	159,6,c	;volatile
  4309   001188  EFC8  F008         	goto	i2u421_41
  4310   00118C  EFCA  F008         	goto	i2u421_40
  4311   001190                     i2u421_41:
  4312   001190  EFD3  F008         	goto	i2l934
  4313   001194                     i2u421_40:
  4314   001194  AC9E               	btfss	158,6,c	;volatile
  4315   001196  EFCF  F008         	goto	i2u422_41
  4316   00119A  EFD1  F008         	goto	i2u422_40
  4317   00119E                     i2u422_41:
  4318   00119E  EFD3  F008         	goto	i2l934
  4319   0011A2                     i2u422_40:
  4320   0011A2                     
  4321                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 37:         ADC_ISR();
  4322   0011A2  EC2B  F010         	call	i2_ADC_ISR	;wreg free
  4323   0011A6                     i2l934:
  4324                           
  4325                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 40:     if((1 == (*((volatile INTCON2_t 
      +                          *)(0xFF1))).TMR0IP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).TMR0IF)){
  4326   0011A6  A4F1               	btfss	241,2,c	;volatile
  4327   0011A8  EFD8  F008         	goto	i2u423_41
  4328   0011AC  EFDA  F008         	goto	i2u423_40
  4329   0011B0                     i2u423_41:
  4330   0011B0  EFE3  F008         	goto	i2l936
  4331   0011B4                     i2u423_40:
  4332   0011B4  A4F2               	btfss	242,2,c	;volatile
  4333   0011B6  EFDF  F008         	goto	i2u424_41
  4334   0011BA  EFE1  F008         	goto	i2u424_40
  4335   0011BE                     i2u424_41:
  4336   0011BE  EFE3  F008         	goto	i2l936
  4337   0011C2                     i2u424_40:
  4338   0011C2                     
  4339                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 41:         TMR0_ISR();
  4340   0011C2  EC02  F010         	call	i2_TMR0_ISR	;wreg free
  4341   0011C6                     i2l936:
  4342                           
  4343                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 44:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).TMR1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR1IF)){
  4344   0011C6  A09F               	btfss	159,0,c	;volatile
  4345   0011C8  EFE8  F008         	goto	i2u425_41
  4346   0011CC  EFEA  F008         	goto	i2u425_40
  4347   0011D0                     i2u425_41:
  4348   0011D0  EFF3  F008         	goto	i2l939
  4349   0011D4                     i2u425_40:
  4350   0011D4  A09E               	btfss	158,0,c	;volatile
  4351   0011D6  EFEF  F008         	goto	i2u426_41
  4352   0011DA  EFF1  F008         	goto	i2u426_40
  4353   0011DE                     i2u426_41:
  4354   0011DE  EFF3  F008         	goto	i2l939
  4355   0011E2                     i2u426_40:
  4356   0011E2                     
  4357                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:         TMR1_ISR();
  4358   0011E2  EC96  F00F         	call	i2_TMR1_ISR	;wreg free
  4359   0011E6                     i2l939:
  4360   0011E6  C042  FFF4         	movff	??_InterruptManagerHigh+5,prodh
  4361   0011EA  C041  FFF3         	movff	??_InterruptManagerHigh+4,prodl
  4362   0011EE  C040  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  4363   0011F2  C03F  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  4364   0011F6  C03E  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  4365   0011FA  C03D  FFFA         	movff	??_InterruptManagerHigh,pclath
  4366   0011FE  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4367   001200  0011               	retfie		f
  4368   001202                     __end_of_InterruptManagerHigh:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function i2_TMR1_ISR *****************
  4372 ;; Defined at:
  4373 ;;		line 116 in file "MCAL_Layer/Timer1/hal_timer1.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 3
  4394 ;; This function calls:
  4395 ;;		NULL
  4396 ;;		i2_TMR1_ISR_HANDLER
  4397 ;; This function is called by:
  4398 ;;		_InterruptManagerHigh
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text33
  4403   001F2C                     __ptext33:
  4404                           	callstack 0
  4405   001F2C                     i2_TMR1_ISR:
  4406                           	callstack 15
  4407   001F2C                     
  4408                           ;MCAL_Layer/Timer1/hal_timer1.c: 117:     (*((volatile uint8 *)(0xFCF))) = (timer1_prelo
      +                          ad)>>8;
  4409   001F2C  5002               	movf	(_timer1_preload+1)^0,w,c
  4410   001F2E  6ECF               	movwf	207,c	;volatile
  4411   001F30                     
  4412                           ;MCAL_Layer/Timer1/hal_timer1.c: 118:     (*((volatile uint8 *)(0xFCE))) = (uint8)(timer
      +                          1_preload);
  4413   001F30  C001  FFCE         	movff	_timer1_preload,4046	;volatile
  4414   001F34                     
  4415                           ;MCAL_Layer/Timer1/hal_timer1.c: 119:     ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
  4416   001F34  909E               	bcf	158,0,c	;volatile
  4417   001F36                     
  4418                           ;MCAL_Layer/Timer1/hal_timer1.c: 120:       if(TMR1_InterruptHandler){
  4419   001F36  5003               	movf	_TMR1_InterruptHandler^0,w,c
  4420   001F38  1004               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  4421   001F3A  B4D8               	btfsc	status,2,c
  4422   001F3C  EFA2  F00F         	goto	i2u321_41
  4423   001F40  EFA4  F00F         	goto	i2u321_40
  4424   001F44                     i2u321_41:
  4425   001F44  EFB0  F00F         	goto	i2l1114
  4426   001F48                     i2u321_40:
  4427   001F48                     
  4428                           ;MCAL_Layer/Timer1/hal_timer1.c: 121:        TMR1_InterruptHandler();
  4429   001F48  D802               	call	i2u322_48
  4430   001F4A  EFB0  F00F         	goto	i2u322_49
  4431   001F4E                     i2u322_48:
  4432   001F4E  0005               	push	
  4433   001F50  6EFA               	movwf	pclath,c
  4434   001F52  5003               	movf	_TMR1_InterruptHandler^0,w,c
  4435   001F54  6EFD               	movwf	tosl,c
  4436   001F56  5004               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  4437   001F58  6EFE               	movwf	tosh,c
  4438   001F5A  6AFF               	clrf	tosu,c
  4439   001F5C  50FA               	movf	pclath,w,c
  4440   001F5E  0012               	return		;indir
  4441   001F60                     i2u322_49:
  4442   001F60                     i2l1114:
  4443   001F60  0012               	return		;funcret
  4444   001F62                     __end_ofi2_TMR1_ISR:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function i2_TMR1_ISR_HANDLER *****************
  4448 ;; Defined at:
  4449 ;;		line 38 in file "application.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        0 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 2
  4470 ;; This function calls:
  4471 ;;		i2_led_toggle
  4472 ;; This function is called by:
  4473 ;;		_TMR1_ISR
  4474 ;;		i2_TMR1_ISR
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text34
  4479   001FEA                     __ptext34:
  4480                           	callstack 0
  4481   001FEA                     i2_TMR1_ISR_HANDLER:
  4482                           	callstack 15
  4483   001FEA                     
  4484                           ;application.c: 39:     led_toggle(&led1);
  4485   001FEA  0E5E               	movlw	low _led1
  4486   001FEC  6E39               	movwf	i2led_toggle@led^0,c
  4487   001FEE  0E00               	movlw	high _led1
  4488   001FF0  6E3A               	movwf	(i2led_toggle@led+1)^0,c
  4489   001FF2  EC63  F00E         	call	i2_led_toggle	;wreg free
  4490   001FF6  0012               	return		;funcret
  4491   001FF8                     __end_ofi2_TMR1_ISR_HANDLER:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function i2_led_toggle *****************
  4495 ;; Defined at:
  4496 ;;		line 55 in file "ECU_Layer/LED/ecu_led.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  led             2    8[COMRAM] PTR const struct .
  4499 ;;		 -> led1(1), 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  pin_obj         1   11[COMRAM] struct .
  4502 ;;  ret             1    0        unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      unsigned char 
  4505 ;; Registers used:
  4506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;Total ram usage:        4 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; Hardware stack levels required when called: 1
  4519 ;; This function calls:
  4520 ;;		i2_gpio_pin_toggle_logic
  4521 ;; This function is called by:
  4522 ;;		i2_TMR1_ISR_HANDLER
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text35
  4527   001CC6                     __ptext35:
  4528                           	callstack 0
  4529   001CC6                     i2_led_toggle:
  4530                           	callstack 15
  4531   001CC6                     
  4532                           ;ECU_Layer/LED/ecu_led.c: 57:     pin_config_t pin_obj={.port = led->port_name,.pin = le
      +                          d->pin,.direction=OUTPUT,.logic=led->led_status };
  4533   001CC6  C020  F03C         	movff	led_toggle@F3265,i2led_toggle@pin_obj
  4534   001CCA  C039  FFD9         	movff	i2led_toggle@led,fsr2l
  4535   001CCE  C03A  FFDA         	movff	i2led_toggle@led+1,fsr2h
  4536   001CD2  50DF               	movf	223,w,c
  4537   001CD4  0B0F               	andlw	15
  4538   001CD6  6E3B               	movwf	??i2_led_toggle^0,c
  4539   001CD8  503C               	movf	i2led_toggle@pin_obj^0,w,c
  4540   001CDA  183B               	xorwf	??i2_led_toggle^0,w,c
  4541   001CDC  0BF8               	andlw	-8
  4542   001CDE  183B               	xorwf	??i2_led_toggle^0,w,c
  4543   001CE0  6E3C               	movwf	i2led_toggle@pin_obj^0,c
  4544   001CE2  C039  FFD9         	movff	i2led_toggle@led,fsr2l
  4545   001CE6  C03A  FFDA         	movff	i2led_toggle@led+1,fsr2h
  4546   001CEA  38DF               	swapf	223,w,c
  4547   001CEC  0B07               	andlw	7
  4548   001CEE  6E3B               	movwf	??i2_led_toggle^0,c
  4549   001CF0  463B               	rlncf	??i2_led_toggle^0,f,c
  4550   001CF2  463B               	rlncf	??i2_led_toggle^0,f,c
  4551   001CF4  463B               	rlncf	??i2_led_toggle^0,f,c
  4552   001CF6  503C               	movf	i2led_toggle@pin_obj^0,w,c
  4553   001CF8  183B               	xorwf	??i2_led_toggle^0,w,c
  4554   001CFA  0BC7               	andlw	-57
  4555   001CFC  183B               	xorwf	??i2_led_toggle^0,w,c
  4556   001CFE  6E3C               	movwf	i2led_toggle@pin_obj^0,c
  4557   001D00  9C3C               	bcf	i2led_toggle@pin_obj^0,6,c
  4558   001D02  C039  FFD9         	movff	i2led_toggle@led,fsr2l
  4559   001D06  C03A  FFDA         	movff	i2led_toggle@led+1,fsr2h
  4560   001D0A  AEDF               	btfss	indf2,7,c
  4561   001D0C  D002               	bra	i2u302_45
  4562   001D0E  8E3C               	bsf	i2led_toggle@pin_obj^0,7,c
  4563   001D10  D001               	bra	i2u302_47
  4564   001D12                     i2u302_45:
  4565   001D12  9E3C               	bcf	i2led_toggle@pin_obj^0,7,c
  4566   001D14                     i2u302_47:
  4567   001D14                     
  4568                           ;ECU_Layer/LED/ecu_led.c: 58:     if(led==((void*)0)){
  4569   001D14  5039               	movf	i2led_toggle@led^0,w,c
  4570   001D16  103A               	iorwf	(i2led_toggle@led+1)^0,w,c
  4571   001D18  A4D8               	btfss	status,2,c
  4572   001D1A  EF91  F00E         	goto	i2u303_41
  4573   001D1E  EF93  F00E         	goto	i2u303_40
  4574   001D22                     i2u303_41:
  4575   001D22  EF95  F00E         	goto	i2l4214
  4576   001D26                     i2u303_40:
  4577   001D26                     
  4578                           ;ECU_Layer/LED/ecu_led.c: 60:     }
  4579   001D26  EF9B  F00E         	goto	i2l320
  4580   001D2A                     i2l4214:
  4581   001D2A  0E3C               	movlw	low i2led_toggle@pin_obj
  4582   001D2C  6E31               	movwf	i2gpio_pin_toggle_logic@pin_config^0,c
  4583   001D2E  0E00               	movlw	high i2led_toggle@pin_obj
  4584   001D30  6E32               	movwf	(i2gpio_pin_toggle_logic@pin_config+1)^0,c
  4585   001D32  ECAC  F00B         	call	i2_gpio_pin_toggle_logic	;wreg free
  4586   001D36                     i2l320:
  4587   001D36  0012               	return		;funcret
  4588   001D38                     __end_ofi2_led_toggle:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function i2_gpio_pin_toggle_logic *****************
  4592 ;; Defined at:
  4593 ;;		line 141 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  pin_config      2    0[COMRAM] PTR const struct .
  4596 ;;		 -> i2led_toggle@pin_obj(1), led_toggle@pin_obj(1), 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  ret             1    7[COMRAM] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      unsigned char 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;Total ram usage:        8 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		i2_led_toggle
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text36
  4622   001758                     __ptext36:
  4623                           	callstack 0
  4624   001758                     i2_gpio_pin_toggle_logic:
  4625                           	callstack 15
  4626   001758                     
  4627                           ;MCAL_Layer/GPIO/hal_gpio.c: 142:       Std_ReturnType ret=(Std_ReturnType)0x01;
  4628   001758  0E01               	movlw	1
  4629   00175A  6E38               	movwf	i2gpio_pin_toggle_logic@ret^0,c
  4630   00175C                     
  4631                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     if((pin_config==((void*)0))||(pin_config->pin>8 -1
      +                          )||(pin_config->port>5 -1)){
  4632   00175C  5031               	movf	i2gpio_pin_toggle_logic@pin_config^0,w,c
  4633   00175E  1032               	iorwf	(i2gpio_pin_toggle_logic@pin_config+1)^0,w,c
  4634   001760  B4D8               	btfsc	status,2,c
  4635   001762  EFB5  F00B         	goto	i2u289_41
  4636   001766  EFB7  F00B         	goto	i2u289_40
  4637   00176A                     i2u289_41:
  4638   00176A  EFD7  F00B         	goto	i2l4074
  4639   00176E                     i2u289_40:
  4640   00176E  C031  FFD9         	movff	i2gpio_pin_toggle_logic@pin_config,fsr2l
  4641   001772  C032  FFDA         	movff	i2gpio_pin_toggle_logic@pin_config+1,fsr2h
  4642   001776  30DF               	rrcf	223,w,c
  4643   001778  32E8               	rrcf	wreg,f,c
  4644   00177A  32E8               	rrcf	wreg,f,c
  4645   00177C  0B07               	andlw	7
  4646   00177E  6E33               	movwf	??i2_gpio_pin_toggle_logic^0,c
  4647   001780  0E08               	movlw	8
  4648   001782  6033               	cpfslt	??i2_gpio_pin_toggle_logic^0,c
  4649   001784  EFC6  F00B         	goto	i2u290_41
  4650   001788  EFC8  F00B         	goto	i2u290_40
  4651   00178C                     i2u290_41:
  4652   00178C  EFD7  F00B         	goto	i2l4074
  4653   001790                     i2u290_40:
  4654   001790  C031  FFD9         	movff	i2gpio_pin_toggle_logic@pin_config,fsr2l
  4655   001794  C032  FFDA         	movff	i2gpio_pin_toggle_logic@pin_config+1,fsr2h
  4656   001798  50DF               	movf	223,w,c
  4657   00179A  0B07               	andlw	7
  4658   00179C  6E33               	movwf	??i2_gpio_pin_toggle_logic^0,c
  4659   00179E  0E04               	movlw	4
  4660   0017A0  6433               	cpfsgt	??i2_gpio_pin_toggle_logic^0,c
  4661   0017A2  EFD5  F00B         	goto	i2u291_41
  4662   0017A6  EFD7  F00B         	goto	i2u291_40
  4663   0017AA                     i2u291_41:
  4664   0017AA  EFDB  F00B         	goto	i2l4076
  4665   0017AE                     i2u291_40:
  4666   0017AE                     i2l4074:
  4667                           
  4668                           ;MCAL_Layer/GPIO/hal_gpio.c: 144:         ret=(Std_ReturnType)0x00;
  4669   0017AE  0E00               	movlw	0
  4670   0017B0  6E38               	movwf	i2gpio_pin_toggle_logic@ret^0,c
  4671                           
  4672                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:     }
  4673   0017B2  EF07  F00C         	goto	i2l4078
  4674   0017B6                     i2l4076:
  4675                           
  4676                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         (*(lat_registers[pin_config->port])^=((uint8)0
      +                          x01<<pin_config->pin));
  4677   0017B6  C031  FFD9         	movff	i2gpio_pin_toggle_logic@pin_config,fsr2l
  4678   0017BA  C032  FFDA         	movff	i2gpio_pin_toggle_logic@pin_config+1,fsr2h
  4679   0017BE  30DF               	rrcf	223,w,c
  4680   0017C0  32E8               	rrcf	wreg,f,c
  4681   0017C2  32E8               	rrcf	wreg,f,c
  4682   0017C4  0B07               	andlw	7
  4683   0017C6  6E33               	movwf	??i2_gpio_pin_toggle_logic^0,c
  4684   0017C8  0E01               	movlw	1
  4685   0017CA  6E34               	movwf	(??i2_gpio_pin_toggle_logic+1)^0,c
  4686   0017CC  2A33               	incf	??i2_gpio_pin_toggle_logic^0,f,c
  4687   0017CE  EFEB  F00B         	goto	i2u292_44
  4688   0017D2                     i2u292_45:
  4689   0017D2  90D8               	bcf	status,0,c
  4690   0017D4  3634               	rlcf	(??i2_gpio_pin_toggle_logic+1)^0,f,c
  4691   0017D6                     i2u292_44:
  4692   0017D6  2E33               	decfsz	??i2_gpio_pin_toggle_logic^0,f,c
  4693   0017D8  EFE9  F00B         	goto	i2u292_45
  4694   0017DC  C031  FFD9         	movff	i2gpio_pin_toggle_logic@pin_config,fsr2l
  4695   0017E0  C032  FFDA         	movff	i2gpio_pin_toggle_logic@pin_config+1,fsr2h
  4696   0017E4  50DF               	movf	223,w,c
  4697   0017E6  0B07               	andlw	7
  4698   0017E8  6E35               	movwf	(??i2_gpio_pin_toggle_logic+2)^0,c
  4699   0017EA  5035               	movf	(??i2_gpio_pin_toggle_logic+2)^0,w,c
  4700   0017EC  0D02               	mullw	2
  4701   0017EE  0E8A               	movlw	low _lat_registers
  4702   0017F0  24F3               	addwf	243,w,c
  4703   0017F2  6ED9               	movwf	fsr2l,c
  4704   0017F4  0E00               	movlw	high _lat_registers
  4705   0017F6  20F4               	addwfc	prodh,w,c
  4706   0017F8  6EDA               	movwf	fsr2h,c
  4707   0017FA  CFDE F036          	movff	postinc2,??i2_gpio_pin_toggle_logic+3
  4708   0017FE  CFDD F037          	movff	postdec2,??i2_gpio_pin_toggle_logic+4
  4709   001802  C036  FFD9         	movff	??i2_gpio_pin_toggle_logic+3,fsr2l
  4710   001806  C037  FFDA         	movff	??i2_gpio_pin_toggle_logic+4,fsr2h
  4711   00180A  5034               	movf	(??i2_gpio_pin_toggle_logic+1)^0,w,c
  4712   00180C  1ADF               	xorwf	indf2,f,c
  4713   00180E                     i2l4078:
  4714                           
  4715                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:     return ret;
  4716   00180E  5038               	movf	i2gpio_pin_toggle_logic@ret^0,w,c
  4717   001810  0012               	return		;funcret
  4718   001812                     __end_ofi2_gpio_pin_toggle_logic:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function i2_TMR0_ISR *****************
  4722 ;; Defined at:
  4723 ;;		line 110 in file "MCAL_Layer/Timer0/hal_timer0.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_InterruptManagerHigh
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text37
  4751   002004                     __ptext37:
  4752                           	callstack 0
  4753   002004                     i2_TMR0_ISR:
  4754                           	callstack 18
  4755   002004                     
  4756                           ;MCAL_Layer/Timer0/hal_timer0.c: 112:     TMR0H = (timer0_preload)>>8;
  4757   002004  5006               	movf	(_timer0_preload+1)^0,w,c
  4758   002006  6ED7               	movwf	215,c	;volatile
  4759   002008                     
  4760                           ;MCAL_Layer/Timer0/hal_timer0.c: 113:     (*((volatile uint8 *)(0xFD6))) = (uint8)(timer
      +                          0_preload);
  4761   002008  C005  FFD6         	movff	_timer0_preload,4054	;volatile
  4762   00200C                     
  4763                           ;MCAL_Layer/Timer0/hal_timer0.c: 114:     ((*((volatile INTCON_t *)(0xFF2))).TMR0IF=0);
  4764   00200C  94F2               	bcf	242,2,c	;volatile
  4765   00200E  0012               	return		;funcret
  4766   002010                     __end_ofi2_TMR0_ISR:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function i2_RB7_ISR *****************
  4770 ;; Defined at:
  4771 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		None
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_InterruptManagerHigh
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text38
  4799   00203E                     __ptext38:
  4800                           	callstack 0
  4801   00203E                     i2_RB7_ISR:
  4802                           	callstack 18
  4803   00203E                     
  4804                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  4805   00203E  90F2               	bcf	242,0,c	;volatile
  4806   002040  0012               	return		;funcret
  4807   002042                     __end_ofi2_RB7_ISR:
  4808                           	callstack 0
  4809                           
  4810 ;; *************** function i2_RB6_ISR *****************
  4811 ;; Defined at:
  4812 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		None
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_InterruptManagerHigh
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text39
  4840   002042                     __ptext39:
  4841                           	callstack 0
  4842   002042                     i2_RB6_ISR:
  4843                           	callstack 18
  4844   002042                     
  4845                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  4846   002042  90F2               	bcf	242,0,c	;volatile
  4847   002044  0012               	return		;funcret
  4848   002046                     __end_ofi2_RB6_ISR:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function i2_RB5_ISR *****************
  4852 ;; Defined at:
  4853 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		None
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_InterruptManagerHigh
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text40
  4881   002046                     __ptext40:
  4882                           	callstack 0
  4883   002046                     i2_RB5_ISR:
  4884                           	callstack 18
  4885   002046                     
  4886                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  4887   002046  90F2               	bcf	242,0,c	;volatile
  4888   002048  0012               	return		;funcret
  4889   00204A                     __end_ofi2_RB5_ISR:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function i2_RB4_ISR *****************
  4893 ;; Defined at:
  4894 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		None
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_InterruptManagerHigh
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text41
  4922   00204A                     __ptext41:
  4923                           	callstack 0
  4924   00204A                     i2_RB4_ISR:
  4925                           	callstack 18
  4926   00204A                     
  4927                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  4928   00204A  90F2               	bcf	242,0,c	;volatile
  4929   00204C  0012               	return		;funcret
  4930   00204E                     __end_ofi2_RB4_ISR:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function i2_INT2_ISR *****************
  4934 ;; Defined at:
  4935 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		None
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_InterruptManagerHigh
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text42
  4963   00204E                     __ptext42:
  4964                           	callstack 0
  4965   00204E                     i2_INT2_ISR:
  4966                           	callstack 18
  4967   00204E                     
  4968                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  4969   00204E  92F0               	bcf	240,1,c	;volatile
  4970   002050  0012               	return		;funcret
  4971   002052                     __end_ofi2_INT2_ISR:
  4972                           	callstack 0
  4973                           
  4974 ;; *************** function i2_INT1_ISR *****************
  4975 ;; Defined at:
  4976 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		None
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_InterruptManagerHigh
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text43
  5004   002052                     __ptext43:
  5005                           	callstack 0
  5006   002052                     i2_INT1_ISR:
  5007                           	callstack 18
  5008   002052                     
  5009                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  5010   002052  90F0               	bcf	240,0,c	;volatile
  5011   002054  0012               	return		;funcret
  5012   002056                     __end_ofi2_INT1_ISR:
  5013                           	callstack 0
  5014                           
  5015 ;; *************** function i2_ADC_ISR *****************
  5016 ;; Defined at:
  5017 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		None
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_InterruptManagerHigh
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text44
  5045   002056                     __ptext44:
  5046                           	callstack 0
  5047   002056                     i2_ADC_ISR:
  5048                           	callstack 18
  5049   002056                     
  5050                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
  5051   002056  9C9E               	bcf	158,6,c	;volatile
  5052   002058  0012               	return		;funcret
  5053   00205A                     __end_ofi2_ADC_ISR:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _INT0_ISR *****************
  5057 ;; Defined at:
  5058 ;;		line 132 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		None
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;Total ram usage:        0 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_InterruptManagerHigh
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text45
  5086   00205A                     __ptext45:
  5087                           	callstack 0
  5088   00205A                     _INT0_ISR:
  5089                           	callstack 18
  5090   00205A                     
  5091                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).INT0IF=0);
  5092   00205A  92F2               	bcf	242,1,c	;volatile
  5093   00205C  0012               	return		;funcret
  5094   00205E                     __end_of_INT0_ISR:
  5095                           	callstack 0
  5096                           
  5097                           	psect	text46
  5098   000000                     __ptext46:
  5099                           	callstack 0
  5100   000000                     
  5101                           	psect	rparam
  5102   000000                     
  5103                           	psect	temp
  5104   000060                     btemp:
  5105                           	callstack 0
  5106   000060                     	ds	1
  5107   000000                     int$flags	set	btemp
  5108   000000                     wtemp8	set	btemp+1
  5109   000000                     ttemp5	set	btemp+1
  5110   000000                     ttemp6	set	btemp+4
  5111   000000                     ttemp7	set	btemp+8
  5112                           
  5113                           	psect	config
  5114                           
  5115                           ; Padding undefined space
  5116   300000                     	org	3145728
  5117   300000  FF                 	db	255
  5118                           
  5119                           ;Config register CONFIG1H @ 0x300001
  5120                           ;	Oscillator Selection bits
  5121                           ;	OSC = HS, HS oscillator
  5122                           ;	Fail-Safe Clock Monitor Enable bit
  5123                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5124                           ;	Internal/External Oscillator Switchover bit
  5125                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5126   300001                     	org	3145729
  5127   300001  02                 	db	2
  5128                           
  5129                           ;Config register CONFIG2L @ 0x300002
  5130                           ;	Power-up Timer Enable bit
  5131                           ;	PWRT = OFF, PWRT disabled
  5132                           ;	Brown-out Reset Enable bits
  5133                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5134                           ;	Brown Out Reset Voltage bits
  5135                           ;	BORV = 1, 
  5136   300002                     	org	3145730
  5137   300002  09                 	db	9
  5138                           
  5139                           ;Config register CONFIG2H @ 0x300003
  5140                           ;	Watchdog Timer Enable bit
  5141                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5142                           ;	Watchdog Timer Postscale Select bits
  5143                           ;	WDTPS = 32768, 1:32768
  5144   300003                     	org	3145731
  5145   300003  1E                 	db	30
  5146                           
  5147                           ; Padding undefined space
  5148   300004                     	org	3145732
  5149   300004  FF                 	db	255
  5150                           
  5151                           ;Config register CONFIG3H @ 0x300005
  5152                           ;	CCP2 MUX bit
  5153                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5154                           ;	PORTB A/D Enable bit
  5155                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5156                           ;	Low-Power Timer1 Oscillator Enable bit
  5157                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5158                           ;	MCLR Pin Enable bit
  5159                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5160   300005                     	org	3145733
  5161   300005  81                 	db	129
  5162                           
  5163                           ;Config register CONFIG4L @ 0x300006
  5164                           ;	Stack Full/Underflow Reset Enable bit
  5165                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5166                           ;	Single-Supply ICSP Enable bit
  5167                           ;	LVP = OFF, Single-Supply ICSP disabled
  5168                           ;	Extended Instruction Set Enable bit
  5169                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5170                           ;	Background Debugger Enable bit
  5171                           ;	DEBUG = 0x1, unprogrammed default
  5172   300006                     	org	3145734
  5173   300006  81                 	db	129
  5174                           
  5175                           ; Padding undefined space
  5176   300007                     	org	3145735
  5177   300007  FF                 	db	255
  5178                           
  5179                           ;Config register CONFIG5L @ 0x300008
  5180                           ;	Code Protection bit
  5181                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5182                           ;	Code Protection bit
  5183                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5184                           ;	Code Protection bit
  5185                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5186                           ;	Code Protection bit
  5187                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5188   300008                     	org	3145736
  5189   300008  0F                 	db	15
  5190                           
  5191                           ;Config register CONFIG5H @ 0x300009
  5192                           ;	Boot Block Code Protection bit
  5193                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5194                           ;	Data EEPROM Code Protection bit
  5195                           ;	CPD = OFF, Data EEPROM not code-protected
  5196   300009                     	org	3145737
  5197   300009  C0                 	db	192
  5198                           
  5199                           ;Config register CONFIG6L @ 0x30000A
  5200                           ;	Write Protection bit
  5201                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5202                           ;	Write Protection bit
  5203                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5204                           ;	Write Protection bit
  5205                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5206                           ;	Write Protection bit
  5207                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5208   30000A                     	org	3145738
  5209   30000A  0F                 	db	15
  5210                           
  5211                           ;Config register CONFIG6H @ 0x30000B
  5212                           ;	Configuration Register Write Protection bit
  5213                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5214                           ;	Boot Block Write Protection bit
  5215                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5216                           ;	Data EEPROM Write Protection bit
  5217                           ;	WRTD = OFF, Data EEPROM not write-protected
  5218   30000B                     	org	3145739
  5219   30000B  E0                 	db	224
  5220                           
  5221                           ;Config register CONFIG7L @ 0x30000C
  5222                           ;	Table Read Protection bit
  5223                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5224                           ;	Table Read Protection bit
  5225                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5226                           ;	Table Read Protection bit
  5227                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5228                           ;	Table Read Protection bit
  5229                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5230   30000C                     	org	3145740
  5231   30000C  0F                 	db	15
  5232                           
  5233                           ;Config register CONFIG7H @ 0x30000D
  5234                           ;	Boot Block Table Read Protection bit
  5235                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5236   30000D                     	org	3145741
  5237   30000D  40                 	db	64
  5238                           tosu	equ	0xFFF
  5239                           tosh	equ	0xFFE
  5240                           tosl	equ	0xFFD
  5241                           stkptr	equ	0xFFC
  5242                           pclatu	equ	0xFFB
  5243                           pclath	equ	0xFFA
  5244                           pcl	equ	0xFF9
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           indf0	equ	0xFEF
  5252                           postinc0	equ	0xFEE
  5253                           postdec0	equ	0xFED
  5254                           preinc0	equ	0xFEC
  5255                           plusw0	equ	0xFEB
  5256                           fsr0h	equ	0xFEA
  5257                           fsr0l	equ	0xFE9
  5258                           wreg	equ	0xFE8
  5259                           indf1	equ	0xFE7
  5260                           postinc1	equ	0xFE6
  5261                           postdec1	equ	0xFE5
  5262                           preinc1	equ	0xFE4
  5263                           plusw1	equ	0xFE3
  5264                           fsr1h	equ	0xFE2
  5265                           fsr1l	equ	0xFE1
  5266                           bsr	equ	0xFE0
  5267                           indf2	equ	0xFDF
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           preinc2	equ	0xFDC
  5271                           plusw2	equ	0xFDB
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    16
    Data        37
    BSS         69
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39      95
    BANK0           128     30      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S2427$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2427$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_HANDLER(), NULL(NULL[0]), 

    Timer1_Mode_Select@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer_obj(COMRAM[6]), counter_obj(COMRAM[6]), 

    Timer1_Read_Value@_value	PTR unsigned int  size(2) Largest target is 1
		 -> Counter_Val(COMRAM[1]), 

    Timer1_Read_Value@_timer	PTR const struct . size(2) Largest target is 6
		 -> counter_obj(COMRAM[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_TMR1_ISR_HANDLER(), TMR1_ISR_HANDLER(), NULL(), NULL(NULL[0]), 

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_HANDLER(), NULL(NULL[0]), 

    Timer1_Init@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer_obj(COMRAM[6]), counter_obj(COMRAM[6]), 

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1708$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    counter_obj.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_HANDLER(), NULL(NULL[0]), 

    S1608$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_HANDLER(), NULL(NULL[0]), 

    timer_obj.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_TMR1_ISR_HANDLER(), TMR1_ISR_HANDLER(), NULL(NULL[0]), 

    Interrupt_RBx_set_pin_init_value@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1171$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1129$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_toggle_logic@pin_config	PTR const struct . size(2) Largest target is 1
		 -> led_toggle@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(BANK0[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(BANK0[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(BANK0[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S720$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    led_toggle@led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManagerLow in COMRAM

    _TMR1_ISR_HANDLER->_led_toggle
    _led_toggle->_gpio_pin_toggle_logic

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_TMR1_ISR_HANDLER->i2_led_toggle
    i2_led_toggle->i2_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _main->_lcd_4bit_send_char_data_pos
    _main->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_initialize->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _led_initialize->_gpio_pin_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic
    _Timer1_Counter_Init->_Timer1_Init
    _Timer1_Init->_Timer1_Mode_Select

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  126287
                  _Timer1_Read_Value
             _application_initialize
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   43073
                                             24 BANK0      6     0      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   43420
                                             24 BANK0      6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   22309
                                             18 BANK0      6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   20168
                                             14 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   39434
                _Timer1_Counter_Init
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   38721
                                             24 BANK0      1     1      0
                _lcd_4bit_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       5     3      2    8533
                                             14 BANK0      5     3      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   30179
                                             18 BANK0      6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   21428
                                             14 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    6916
                                             10 BANK0      4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    6364
                                             10 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    8185
                                             10 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    5868
                                              0 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     738
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _Timer1_Counter_Init                                  0     0      0     710
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (3) _Timer1_Init                                          5     3      2     710
                                              2 BANK0      5     3      2
                 _Timer1_Mode_Select
 ---------------------------------------------------------------------------------
 (4) _Timer1_Mode_Select                                   2     0      2     214
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer1_Read_Value                                    9     5      4     360
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  9     9      0     418
                                             30 COMRAM     9     9      0
                            _ADC_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     418
                                NULL *
                   _TMR1_ISR_HANDLER *
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR_HANDLER                                     0     0      0     418
                         _led_toggle
 ---------------------------------------------------------------------------------
 (10) _led_toggle                                          5     3      2     418
                                             26 COMRAM     4     2      2
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (11) _gpio_pin_toggle_logic                               8     6      2     210
                                             18 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _InterruptManagerHigh                                6     6      0     314
                                             12 COMRAM     6     6      0
                           _INT0_ISR
                          i2_ADC_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB4_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
                         i2_TMR0_ISR
                         i2_TMR1_ISR
 ---------------------------------------------------------------------------------
 (13) i2_TMR1_ISR                                          0     0      0     314
                                NULL *
                 i2_TMR1_ISR_HANDLER *
 ---------------------------------------------------------------------------------
 (14) i2_TMR1_ISR_HANDLER                                  0     0      0     314
                       i2_led_toggle
 ---------------------------------------------------------------------------------
 (15) i2_led_toggle                                        5     3      2     314
                                              8 COMRAM     4     2      2
            i2_gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (16) i2_gpio_pin_toggle_logic                             8     6      2     160
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB7_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB6_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB5_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB4_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_INT2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_INT1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_ADC_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_Read_Value
   _application_initialize
     _Timer1_Counter_Init
       _Timer1_Init
         _Timer1_Mode_Select
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_initialize
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_ISR_HANDLER *
       _led_toggle
         _gpio_pin_toggle_logic

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   i2_ADC_ISR
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB4_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR
   i2_TMR0_ISR
   i2_TMR1_ISR
     NULL(Fake) *
     i2_TMR1_ISR_HANDLER *
       i2_led_toggle
         i2_gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1E      51       5       63.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      5F       1       75.4%
BITBIGSFRl          43      0       0      38        0.0%
BITBIGSFRhh         28      0       0      36        0.0%
BITBIGSFRhl         12      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0      39        0.0%
DATA                 0      0      B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 29 17:11:17 2023

                        ?_lcd_send_4bits 00A8                                       l71 169C  
                                     l81 1B62                                       l76 1BE0  
                                     l86 1EF4                                       bsr 0FE0  
                  ??_InterruptManagerLow 004F                                      l102 1C52  
                                    l227 18C2                                      l193 1954  
                                    l514 19E4                                      l356 1FB2  
                                    l526 1368                                      l198 1EAA  
                                    l545 14B8                                      l299 1A64  
          gpio_pin_initialize@pin_config 00A8                   ??_InterruptManagerHigh 003D  
                        __end_of_ADC_ISR 203E                                      _ret 005F  
    __end_of_lcd_4bit_send_enable_signal 1EAC              _lcd_4bit_send_enable_signal 1E56  
                    led_initialize@F3250 0023                                      prod 0FF3  
                                    tosl 0FFD                                      wreg 0FE8  
                  relay_initialize@F3244 001F              lcd_send_4bits@_data_command 00AA  
                        __end_of_RB4_ISR 2032                          __end_of_RB5_ISR 202E  
                        __end_of_RB6_ISR 202A                          __end_of_RB7_ISR 2026  
                                   l1001 2018                                     l1010 1F8E  
                                   l1105 1DCC                                     l1124 1AE4  
                                   l1109 1DF8                                     l1125 1AE4  
                                   l1090 15A6                                     l1092 15AC  
                                   l1087 14DA                                     l5300 1324  
                                   l5302 1366                                     l5310 18C4  
                                   l5312 18C4                                     l5400 1616  
                                   l5330 1E86                                     l5322 1E56  
                                   l5314 18D8                                     l5410 1660  
                                   l5402 1626                                     l6130 1E14  
                                   l6220 14A0                                     l5260 1370  
                                   l5340 1956                                     l5332 1E8E  
                                   l5324 1E56                                     l5316 18E0  
                                   l5412 1672                                     l5404 1636  
                                   l5420 19E6                                     l5500 1846  
                                   l6132 1E32                                     l6222 1350  
                                   l5270 1428                                     l5262 1382  
                                   l5350 19E2                                     l5342 196A  
                                   l5334 1EA8                                     l5326 1E6A  
                                   l5318 1952                                     l5414 1684  
                                   l5406 163C                                     l5430 1A24  
                                   l5422 19E6                                     l5502 185C  
                                   l5510 1888                                     l6126 1DFA  
                                   l5264 13A4                                     l5344 198C  
                                   l5328 1E72                                     l5360 1B80  
                                   l5408 164E                                     l5416 169A  
                                   l5432 1A38                                     l5424 19EA  
                                   l5504 1872                                     l5600 1C2E  
                                   l6128 1DFE                                     l5370 1A88  
                                   l5450 14FA                                     l5442 14BA  
                                   l5290 123C                                     l5274 148C  
                                   l5266 13C2                                     l5258 136A  
                                   l5346 19AA                                     l5338 1956  
                                   l5362 1BDE                                     l5354 1B64  
                                   l5434 1A4A                                     l5426 1A04  
                                   l6218 189C                                     l5602 1C34  
                                   l5380 1ADE                                     l5372 1AA2  
                                   l5460 154C                                     l5452 1506  
                                   l5444 14C0                                     l5292 125A  
                                   l5284 1202                                     l5268 13CA  
                                   l5276 14B6                                     l5348 19B2  
                                   l5356 1B64                                     l5436 1A52  
                                   l5428 1A22                                     l5374 1AA4  
                                   l5366 1A66                                     l5470 1584  
                                   l5462 154E                                     l5454 1526  
                                   l5446 14D2                                     l5294 1262  
                                   l5286 1208                                     l5358 1B78  
                                   l5390 15F2                                     l5382 15AE  
                                   l5438 1A62                                     l5376 1ABE  
                                   l5368 1A82                                     l5472 15A0  
                                   l5464 155E                                     l5456 1536  
                                   l5448 14DC                                     l5296 12C6  
                                   l5288 121A                                     l5384 15B4  
                                   l5560 1F90                                     l5480 1AE6  
                                   l5650 1DA4                                     l5378 1AC4  
                                   l5466 1560                                     l5458 154A  
                                   l5474 15AA                                     l5570 1F72  
                                   l5386 15C6                                     l5562 1FA2  
                                   l5642 2010                                     l5482 1AFA  
                                   l5490 1812                                     l5652 1DB6  
                                   l5468 157C                                     l5572 1F74  
                                   l5564 1F62                                     l5396 15F6  
                                   l5388 15CE                                     l5644 2010  
                                   l5484 1B02                                     l5492 1812  
                                   l5580 1EB2                                     l5654 1DC8  
                                   l5574 1F7C                                     l5566 1F6A  
                                   l5398 1612                                     l5558 1F90  
                                   l5646 2014                                     l5486 1B60  
                                   l5478 1AE6                                     l5494 1826  
                                   l5582 1EC4                                     l5590 1BE2  
                                   l5656 1DD4                                     l5648 1D9A  
                                   l5576 1F7E                                     l5568 1F6E  
                                   l5496 182A                                     l5584 1ECC  
                                   l5592 1BE2                                     l5498 1830  
                                   l5586 1EF0                                     l5578 1EAC  
                                   l5594 1BF6                                     l5596 1BFA  
                                   l5598 1C12                                     STR_1 101D  
                                   STR_4 1011                                     u4500 13A4  
                                   u4501 13A0                                     u4510 13C2  
                                   u4511 13BE                                     u4600 133E  
                                   u4610 18D8                                     u4611 18D4  
                                   u4700 1ADE                                     u4540 121A  
                                   u4524 13EA                                     u4620 1E6A  
                                   u4701 1ADA                                     u4541 1216  
                                   u4525 13E6                                     u4621 1E66  
                                   u4550 123C                                     u4534 1448  
                                   u4630 196A                                     u4710 15C6  
                                   u4551 1238                                     u4535 1444  
                                   u4631 1966                                     u4711 15C2  
                                   u4560 125A                                     u4640 198C  
                                   u4720 1626                                     u4561 1256  
                                   u4641 1988                                     u4721 1622  
                                   u4490 1382                                     u4650 19AA  
                                   u4491 137E                                     u4651 19A6  
                                   u4660 1B78                                     u4740 1A4A  
                                   u4661 1B74                                     u4741 1A46  
                                   u4910 1DB6                                     u4670 1A82  
                                   u4750 14D2                                     u4590 133C  
                                   u4574 1282                                     u4911 1DB2  
                                   u4671 1A7E                                     u4751 14CE  
                                   u4591 1336                                     u4575 127E  
                                   u4735 1A34                                     u4920 1DC8  
                                   u4680 1AA2                                     u4760 157C  
                                   u4584 12E6                                     u4840 1EC4  
                                   u4921 1DC4                                     u4681 1A9E  
                                   u4761 1578                                     u4585 12E2  
                                   u5377 1638                                     u4737 1A38  
                                   u4841 1EC0                                     u4690 1ABE  
                                   u4770 15A0                                     u4850 1BF6  
                                   u4691 1ABA                                     u4771 159C  
                                   u5387 1E88                                     u4851 1BF2  
                                   u4780 1AFA                                     u4860 1C52  
                                   u4781 1AF6                                     u4861 1C4E  
                                   u4790 1826                                     u4791 1822  
          ??_lcd_4bit_send_enable_signal 00AA                                     _lcd1 0058  
                                   _led1 005E                                     _main 1DFA  
                            ?i2_INT1_ISR 0031                              ?i2_INT2_ISR 0031  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   btemp 0060                        ?_TMR1_ISR_HANDLER 0031  
                 __end_of_led_initialize 1A66        lcd_4bit_send_char_data_pos@column 00B9  
                                   prodh 0FF4                                     prodl 0FF3  
                                   start 01F0                       ??_TMR1_ISR_HANDLER 004F  
                   _RB7_InterruptHandler 0009                             ___param_bank 0000  
                 ?_gpio_pin_toggle_logic 0043                    _lcd_4bit_send_command 1B64  
                            ?i2_TMR0_ISR 0031                              ?i2_TMR1_ISR 0031  
                   _gpio_pin_write_logic 136A           lcd_4bit_send_string_pos@column 00B9  
                       __end_of_INT0_ISR 205E                         __end_of_INT1_ISR 203A  
                       __end_of_INT2_ISR 2036                                    ?_main 0031  
               ??_application_initialize 00B7                                    i1l320 1CC4  
                                  i1l701 2024                                    i2l320 1D36  
                                  i1l559 1756                                    i1l681 2038  
                                  i1l595 203C                                    i2l701 2040  
                                  i1l685 2034                                    i1l693 202C  
                                  i1l951 00F4                                    i1l689 2030  
                                  i1l697 2028                                    i1l953 0130  
                                  i1l945 005E                                    i1l962 01C8  
                                  i1l955 0168                                    i1l947 007E  
                                  i1l957 0188                                    i1l949 00B8  
                                  i2l559 1810                                    i1l959 01A8  
                                  i2l920 105C                                    i2l681 2054  
                                  i2l930 114E                                    i2l922 107C  
                                  i2l595 2058                                    i2l932 1186  
                                  i2l924 109C                                    i2l677 205C  
                                  i2l685 2050                                    i2l693 2048  
                                  i2l934 11A6                                    i2l926 10D6  
                                  i2l936 11C6                                    i2l928 1112  
                                  i2l689 204C                                    i2l697 2044  
                                  i2l939 11E6                      relay_turn_off@F3254 001D  
                                  _TMR0H 0FD7              __end_of_Timer1_Counter_Init 1F90  
              lcd_4bit_set_cursor@column 00B3                         __end_of_TMR0_ISR 2004  
                       __end_of_TMR1_ISR 1F2C                                    pclath 0FFA  
                                  pclatu 0FFB                                    tablat 0FF5  
                                  ttemp5 0061                                    ttemp6 0064  
                                  ttemp7 0068                                    status 0FD8  
                                  wtemp8 0061                          ?_led_initialize 00AC  
         ?_gpio_pin_direction_initialize 009E                          __initialization 1D38  
                i2_gpio_pin_toggle_logic 1758                             __end_of_main 1E56  
                  ?_gpio_pin_write_logic 009E                                ??_ADC_ISR 0043  
                          _lat_registers 008A                                   ??_main 00BC  
                          __activetblptr 0003                         led_turn_on@F3255 0022  
                              ??_RB4_ISR 0043                                ??_RB5_ISR 0043  
                              ??_RB6_ISR 0043                                ??_RB7_ISR 0043  
                      Timer1_Init@_timer 00A0                  ecu_layer_initialize@ret 00B6  
                     _RB4_pin_init_value 001C                        __end_ofi2_ADC_ISR 205A  
                                 _ADRESH 0FC4                                   _ADRESL 0FC3  
                                 i1l1004 1FE8                                   i1l1114 1F2A  
                                 i1l1053 2002                                   i1l2400 1FFC  
                                 i1l2402 2000                                   i1l2342 2032  
                                 i1l2350 202A                                   i1l2328 203A  
                                 i1l4040 16D6                                   i1l2338 2036  
                                 i1l2346 202E                                   i1l2354 2026  
                                 i1l4042 16F4                                   i1l4034 169E  
                                 i2l1004 1FF6                                   i1l4044 16FC  
                                 i1l4036 16A2                                   i1l2358 2022  
                                 i1l4046 1754                                   i1l4038 16B4  
                                 i1l4150 1C8E                                   i1l4142 1C54  
                                 i1l4152 1C90                                   i1l4144 1C54  
                                 i1l5200 0128                                   i2l1114 1F60  
                                 i1l4154 1CA2                                   i1l4146 1C58  
                                 i1l5210 0164                                   i1l5202 012C  
                                 i1l4156 1CB4                                   i1l4148 1C70  
                                 i1l4316 1FDC                                   i1l5220 01B6  
                                 i1l5212 0176                                   i1l5204 013E  
                                 i2l1053 200E                                   i1l2398 1FF8  
                                 i1l4158 1CB8                                   i1l5222 01C4  
                                 i1l5214 0184                                   i1l5206 014C  
                                 i1l5216 0196                                   i1l5208 0160  
                                 i1l5218 01A4                                   i1l5170 003E  
                                 i1l5180 008C                                   i1l5172 004C  
                                 i1l4390 1F00                                   i1l5190 00D4  
                                 i1l5182 009A                                   i1l5174 005A  
                                 i1l4392 1F12                                   i1l4384 1EF6  
                                 i1l5192 00EC                                   i1l5184 00B0  
                                 i1l5176 006C                                   i1l4386 1EFA  
                                 i1l5194 00F0                                   i1l5186 00B4  
                                 i1l5178 007A                                   i1l4388 1EFE  
                                 i1l5196 0102                                   i1l5188 00C6  
                                 i2l2334 205A                                   i1l5198 0110  
                                 i2l4200 1CC6                                   i2l2442 2052  
                                 i2l2450 204A                                   i2l4210 1D14  
                                 i2l4202 1CCA                                   i2l2436 2056  
                                 i2l4212 1D26                                   i2l4204 1CE2  
                                 i2l2446 204E                                   i2l2454 2046  
                                 i2l2462 203E                                   i2l2470 200C  
                                 i2l4070 176E                                   i2l4214 1D2A  
                                 i2l4206 1D00                        __end_ofi2_RB4_ISR 204E  
                                 i2l4072 1790                                   i2l4208 1D02  
                                 i2l5120 1078                                   i2l5112 103C  
                                 i2l2458 2042                                   i2l2466 2004  
                                 i2l4074 17AE                                   i2l4066 1758  
                                 i2l5130 10CE                                   i2l5122 108A  
                                 i2l5114 104A                                   i2l2468 2008  
                                 i2l4076 17B6                                   i2l4068 175C  
                                 i2l4420 1F48                                   i2l4412 1F2C  
                                 i2l5140 110E                                   i2l5132 10D2  
                                 i2l5124 1098                                   i2l5116 1058  
                                 i2l4078 180E                                   i2l4318 1FEA  
                                 i2l4414 1F30                                   i2l5150 115C  
                                 i2l5142 1120                                   i2l5134 10E4  
                                 i2l5126 10AA                                   i2l5118 106A  
                                 i2l4416 1F34                                   i2l5160 11A2  
                                 i2l5152 116A                                   i2l5144 112E  
                                 i2l5136 10F2                                   i2l5128 10B8  
                                 i2l4418 1F36                                   i2l5162 11B4  
                                 i2l5154 117E                                   i2l5146 1146  
                                 i2l5138 110A                                   i2l5164 11C2  
                                 i2l5156 1182                                   i2l5148 114A  
                                 i2l4198 1CC6                                   i2l5166 11D4  
                                 i2l5158 1194                        __end_ofi2_RB5_ISR 204A  
                                 i2l5168 11E2                        __end_ofi2_RB6_ISR 2046  
                      __end_ofi2_RB7_ISR 2042                             i2_led_toggle 1CC6  
                    i2led_toggle@pin_obj 003C         __end_of_lcd_4bit_send_string_pos 1C54  
                          ??_Timer1_Init 00A2                 gpio_pin_toggle_logic@ret 004A  
                 ?_lcd_4bit_send_command 00AC                                   clear_0 1D7E  
                                 clear_1 1D8A                    led_initialize@pin_obj 00B0  
                                 isa$std 0001                             __pdataCOMRAM 0058  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                            _Counter_Val 0030                       _RB6_pin_init_value 001A  
                             __accesstop 0080                  __end_of__initialization 1D90  
                              ?_INT0_ISR 0031                                ?_INT1_ISR 0031  
                              ?_INT2_ISR 0031                            ___rparam_used 0001  
              ??i2_gpio_pin_toggle_logic 0033                         ??_lcd_send_4bits 00AB  
                      led_initialize@led 00AC                        led_initialize@ret 00AF  
                _lcd_4bit_send_char_data 1AE6                   ??_gpio_pin_write_logic 00A1  
                         __pcstackCOMRAM 0031                             __pidataBANK0 1FB4  
                              ?_TMR0_ISR 0031                                ?_TMR1_ISR 0031  
                    __end_of_Timer1_Init 15AE                 lcd_4bit_send_command@lcd 00AC  
               lcd_4bit_send_command@ret 00AF             ?_lcd_4bit_send_char_data_pos 00B6  
                             __pbssBANK0 00BC                             ??i2_INT1_ISR 0031  
                  _INT0_InterruptHandler 0015                               ??_INT0_ISR 0031  
                           ??i2_INT2_ISR 0031                               ??_INT1_ISR 0043  
                             ??_INT2_ISR 0043                   _application_initialize 2010  
                             __pnvCOMRAM 005F                  ??_gpio_pin_toggle_logic 0045  
            __end_of_InterruptManagerLow 01F0                             ??i2_TMR0_ISR 0031  
                           ??i2_TMR1_ISR 003D                               ??_TMR0_ISR 0043  
                             ??_TMR1_ISR 004F                        led_turn_off@F3260 0021  
                          led_toggle@led 004B                                  _ADC_ISR 203A  
                        led_toggle@F3265 0020                                  _RB4_ISR 202E  
                                _RB5_ISR 202A                                  _RB6_ISR 2026  
                                _RB7_ISR 2022                       __end_ofi2_INT1_ISR 2056  
                     __end_ofi2_INT2_ISR 2052                ?_lcd_4bit_send_string_pos 00B6  
                       ??_led_initialize 00AE                               _btn_values 1001  
                             _led_toggle 1C54                       __end_ofi2_TMR0_ISR 2010  
                     __end_ofi2_TMR1_ISR 1F62                           _tris_registers 0094  
              ??_lcd_4bit_send_char_data 00AF   lcd_4bit_initialize@l_data_pins_counter 00B4  
                   _ADC_InterruptHandler 0017                                  __Hparam 0000  
                            _Timer1_Init 14BA                                  __Lparam 0000  
                Timer1_Read_Value@_value 00A0                  Timer1_Read_Value@_timer 009E  
                    _gpio_pin_initialize 1956                  Timer1_Read_Value@tmr1_H 00A5  
                Timer1_Read_Value@tmr1_L 00A4                             __psmallconst 1000  
                                __pcinit 1D38                                  __ramtop 1000  
                                __ptext0 1DFA                                  __ptext1 1BE2  
                                __ptext2 1EAC                                  __ptext3 1812  
                                __ptext4 1AE6                                  __ptext5 2010  
                                __ptext6 1F90                                  __ptext7 19E6  
                                __ptext8 15AE                                  __ptext9 1B64  
        ??_gpio_pin_direction_initialize 00A0                        _Timer1_Read_Value 1D9A  
                   ?_gpio_pin_initialize 00A8                           __pintcode_body 1022  
                   end_of_initialization 1D90                        lcd_send_4bits@lcd 00A8  
                      lcd_send_4bits@ret 00AB                       ?_Timer1_Read_Value 009E  
                              i2_ADC_ISR 2056                                  int_func 1022  
                ??_lcd_4bit_send_command 00AF                                i2_RB4_ISR 204A  
                              i2_RB5_ISR 2046                                i2_RB6_ISR 2042  
                    ??_Timer1_Read_Value 00A2                                i2_RB7_ISR 203E  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                    _lcd_4bit_initialize 15AE          __end_of_lcd_4bit_send_char_data 1B64  
                  _INT1_InterruptHandler 0013                        led_toggle@pin_obj 004E  
             lcd_4bit_send_char_data@lcd 00AC                __end_of_Timer1_Read_Value 1DFA  
             lcd_4bit_send_char_data@ret 00AF                    ??_gpio_pin_initialize 00AA  
                            ?_led_toggle 004B          lcd_4bit_send_char_data_pos@data 00BA  
                             ?i2_ADC_ISR 0031                     ?_lcd_4bit_initialize 00B0  
                             ?i2_RB4_ISR 0031                               ?i2_RB5_ISR 0031  
                             ?i2_RB6_ISR 0031                               ?i2_RB7_ISR 0031  
                    _lcd_4bit_set_cursor 1812                       relay_turn_on@F3249 001E  
            lcd_4bit_send_string_pos@lcd 00B6              lcd_4bit_send_string_pos@row 00B8  
            lcd_4bit_send_string_pos@str 00BA            convert_uint32_to_string@F3410 00BC  
          convert_uint16_to_string@F3403 00C7                            __pidataCOMRAM 201A  
                         _timer0_preload 0005                         _TMR1_ISR_HANDLER 1FD2  
                         _timer1_preload 0001                 Timer1_Mode_Select@_timer 009E  
                    start_initialization 1D38             ?_lcd_4bit_send_enable_signal 00A8  
                   ?_lcd_4bit_set_cursor 00B0                     _RB4_InterruptHandler 000F  
  __end_of_gpio_pin_direction_initialize 136A            _gpio_pin_direction_initialize 1202  
                ?_application_initialize 0031                    ??_lcd_4bit_initialize 00B2  
             __end_of_Timer1_Mode_Select 1AE6            __end_of_gpio_pin_toggle_logic 1758  
             __end_ofi2_TMR1_ISR_HANDLER 1FF8                              __pdataBANK0 0080  
           convert_uint8_to_string@F3396 00CD                                 ?_ADC_ISR 0031  
           __end_of_ecu_layer_initialize 1FB4             lcd_4bit_send_command@command 00AE  
                               ?_RB4_ISR 0031                                 ?_RB5_ISR 0031  
                               ?_RB6_ISR 0031                                 ?_RB7_ISR 0031  
                            __pbssCOMRAM 0001                    ??_lcd_4bit_set_cursor 00B4  
                          __pcstackBANK0 009E           __end_of_application_initialize 201A  
                            ??i2_ADC_ISR 0031                 ?i2_gpio_pin_toggle_logic 0031  
                  _INT2_InterruptHandler 0011           gpio_pin_write_logic@pin_config 009E  
                  _TMR0_InterruptHandler 0007                              ??i2_RB4_ISR 0031  
                            ??i2_RB5_ISR 0031                              ??i2_RB6_ISR 0031  
                            ??i2_RB7_ISR 0031                             ?_Timer1_Init 00A0  
           __end_of_InterruptManagerHigh 1202                                __pintcode 0008  
                    _Timer1_Counter_Init 1F62                              __pintcodelo 0018  
              gpio_pin_write_logic@logic 00A0                              __smallconst 1000  
                     _RB5_pin_init_value 001B                     ?_Timer1_Counter_Init 0031  
                          ?i2_led_toggle 0039                                 _INT0_ISR 205A  
                               _INT1_ISR 2036                                 _INT2_ISR 2032  
                               i1u317_20 1F12                                 i1u317_21 1F0E  
                               i1u430_20 007A                                 i1u430_21 0076  
                               i1u318_28 1F18                                 i1u431_20 008C  
                               i1u318_29 1F2A                                 i1u431_21 0088  
                               i1u440_20 013E                                 i1u432_20 009A  
                               i1u440_21 013A                                 i1u432_21 0096  
                               i1u281_20 16B4                                 i1u441_20 014C  
                               i1u433_20 00B0                                 i1u281_21 16B0  
                               i1u441_21 0148                                 i1u433_21 00AC  
                               i1u282_20 16D6                                 i1u442_20 0160  
                               i1u434_20 00C6                                 i1u282_21 16D2  
                               i1u442_21 015C                                 i1u434_21 00C2  
                               i1u283_20 16F4                                 i1u443_20 0176  
                               i1u435_20 00D4                                 i1u427_20 004C  
                               i1u283_21 16F0                                 i1u443_21 0172  
                               i1u435_21 00D0                                 i1u427_21 0048  
                               i1u444_20 0184                                 i1u436_20 00EC  
                               i1u428_20 005A                                 i1u444_21 0180  
                               i1u436_21 00E8                                 i1u428_21 0056  
                               i1u284_24 171C                                 i1u284_25 1718  
          __end_of_lcd_4bit_send_command 1BE2                                 i1u445_20 0196  
                               i1u437_20 0102                                 i1u429_20 006C  
                               i1u445_21 0192                                 i1u437_21 00FE  
                               i1u429_21 0068                                 i1u446_20 01A4  
                               i1u438_20 0110                                 i1u446_21 01A0  
                               i1u438_21 010C                                 i1u447_20 01B6  
                               i1u439_20 0128                                 i2u302_45 1D12  
                               i1u447_21 01B2                                 i1u439_21 0124  
                               i2u302_47 1D14                                 i2u303_40 1D26  
                               i2u303_41 1D22                                 i1u448_20 01C4  
                               i1u448_21 01C0                                 i2u321_40 1F48  
                               i2u321_41 1F44                                 i1u297_25 1CA0  
                               i1u297_27 1CA2                                 i1u298_20 1CB4  
                               i1u298_21 1CB0                                 i2u410_40 10B8  
                               i2u410_41 10B4                                 i2u322_48 1F4E  
                               i2u411_40 10CE                                 i2u403_40 104A  
                               i2u322_49 1F60                                 i2u411_41 10CA  
                               i2u403_41 1046                                 i2u420_40 117E  
                               i2u412_40 10E4                                 i2u404_40 1058  
                               i2u420_41 117A                                 i2u412_41 10E0  
                               i2u404_41 1054                                 i2u421_40 1194  
                               i2u413_40 10F2                                 i2u405_40 106A  
                               i2u421_41 1190                                 i2u413_41 10EE  
                               i2u405_41 1066                                 i2u422_40 11A2  
                               i2u414_40 110A                                 i2u406_40 1078  
                               i2u422_41 119E                                 i2u414_41 1106  
                               i2u406_41 1074                                 i2u423_40 11B4  
                               i2u415_40 1120                                 i2u407_40 108A  
                               i2u423_41 11B0                                 i2u415_41 111C  
                               i2u407_41 1086                                 i2u424_40 11C2  
                               i2u416_40 112E                                 i2u408_40 1098  
                               i2u424_41 11BE                                 i2u416_41 112A  
                               i2u408_41 1094                                 i2u425_40 11D4  
                               i2u417_40 1146                                 i2u409_40 10AA  
                               i2u425_41 11D0                                 i2u417_41 1142  
                               i2u409_41 10A6                                 i2u290_40 1790  
                               i2u426_40 11E2                                 i2u418_40 115C  
                               i2u290_41 178C                                 i2u426_41 11DE  
                               i2u418_41 1158                                 i2u291_40 17AE  
                               i2u419_40 116A                                 i2u291_41 17AA  
                               i2u419_41 1166                                 i2u292_44 17D6  
                               i2u292_45 17D2                     _RB5_InterruptHandler 000D  
                               i2u289_40 176E                                 i2u289_41 176A  
       gpio_pin_direction_initialize@ret 00A6                                 _TMR0_ISR 1FF8  
                               _TMR1_ISR 1EF6                                _timer_obj 002A  
               _lcd_4bit_send_string_pos 1BE2                    fp_i2_TMR1_ISR_HANDLER 0000  
         lcd_4bit_send_char_data_pos@lcd 00B6           lcd_4bit_send_char_data_pos@ret 00BB  
         lcd_4bit_send_char_data_pos@row 00B8  gpio_pin_direction_initialize@pin_config 009E  
                        i2led_toggle@led 0039                   gpio_pin_initialize@ret 00AB  
                    fp__TMR1_ISR_HANDLER 0000          __end_ofi2_gpio_pin_toggle_logic 1812  
    __end_of_lcd_4bit_send_char_data_pos 1EF6              _lcd_4bit_send_char_data_pos 1EAC  
                gpio_pin_write_logic@ret 00A7                 ?_lcd_4bit_send_char_data 00AC  
                              copy_data0 1D4C                                copy_data1 1D6C  
                  ??_Timer1_Counter_Init 00A5                           ??i2_led_toggle 003B  
                           ??_led_toggle 004D                 __end_of_TMR1_ISR_HANDLER 1FEA  
                   _ecu_layer_initialize 1F90            ??_lcd_4bit_send_char_data_pos 00BB  
                     _RB7_pin_init_value 0019                              _counter_obj 0024  
                               __Hrparam 0000                                 __Lrparam 0000  
                 lcd_4bit_set_cursor@lcd 00B0                   lcd_4bit_set_cursor@row 00B2  
            __end_of_gpio_pin_initialize 19E6                       __end_of_btn_values 1011  
                     __end_of_led_toggle 1CC6                    _TMR1_InterruptHandler 0003  
                   _InterruptManagerHigh 0008                                 __ptext10 18C4  
                               __ptext11 1E56                                 __ptext20 1EF6  
                               __ptext12 1956                                 __ptext21 1FD2  
                               __ptext13 136A                                 __ptext30 2036  
                               __ptext22 1C54                                 __ptext14 1202  
                               __ptext31 203A                                 __ptext23 169E  
                               __ptext15 1F62                                 __ptext40 2046  
                               __ptext24 1FF8                                 __ptext16 14BA  
                               __ptext41 204A                                 __ptext33 1F2C  
                               __ptext25 2022                                 __ptext17 1A66  
                               __ptext42 204E                                 __ptext34 1FEA  
                               __ptext26 2026                                 __ptext18 1D9A  
                               __ptext43 2052                                 __ptext35 1CC6  
                               __ptext27 202A                                 __ptext44 2056  
                               __ptext36 1758                                 __ptext28 202E  
                               __ptext45 205A                                 __ptext37 2004  
                               __ptext29 2032                                 __ptext46 0000  
                               __ptext38 203E                                 __ptext39 2042  
                  ?_ecu_layer_initialize 0031                                 isa$xinst 0000  
                               int$flags 0060                           _lcd_send_4bits 18C4  
                     _Timer1_Mode_Select 1A66                           Timer1_Init@ret 00A4  
            __end_of_lcd_4bit_initialize 169E                    ?_InterruptManagerHigh 0031  
                   _RB6_InterruptHandler 000B                       i2_TMR1_ISR_HANDLER 1FEA  
                    ?_Timer1_Mode_Select 009E             __end_of_gpio_pin_write_logic 14BA  
                               intlevel1 0000                                 intlevel2 0000  
        gpio_pin_toggle_logic@pin_config 0043        i2gpio_pin_toggle_logic@pin_config 0031  
                    ?i2_TMR1_ISR_HANDLER 0031                      _InterruptManagerLow 0018  
         lcd_4bit_send_enable_signal@lcd 00A8           lcd_4bit_send_enable_signal@ret 00AA  
                             i2_INT1_ISR 2052                               i2_INT2_ISR 204E  
             i2gpio_pin_toggle_logic@ret 0038                     ??_Timer1_Mode_Select 00A0  
                             i2_TMR0_ISR 2004                               i2_TMR1_ISR 1F2C  
                 __end_of_lcd_send_4bits 1956                    _gpio_pin_toggle_logic 169E  
                   __end_ofi2_led_toggle 1D38              __end_of_lcd_4bit_set_cursor 18C4  
                   ??i2_TMR1_ISR_HANDLER 003D                     ?_InterruptManagerLow 0031  
                         _port_registers 0080                   ??_ecu_layer_initialize 00B6  
             _TMR1_ISR_HANDLER$intlevel1 1FDC              lcd_4bit_send_char_data@data 00AE  
             ??_lcd_4bit_send_string_pos 00BC                           _led_initialize 19E6  
                 lcd_4bit_initialize@lcd 00B0                   lcd_4bit_initialize@ret 00B5  
