

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 04 01:27:54 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 23/03/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4620 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataBANK0
   110   003444                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for _port_registers
   114   003444  80                 	db	128
   115   003445  0F                 	db	15
   116   003446  81                 	db	129
   117   003447  0F                 	db	15
   118   003448  82                 	db	130
   119   003449  0F                 	db	15
   120   00344A  83                 	db	131
   121   00344B  0F                 	db	15
   122   00344C  84                 	db	132
   123   00344D  0F                 	db	15
   124                           
   125                           ;initializer for _lat_registers
   126   00344E  89                 	db	137
   127   00344F  0F                 	db	15
   128   003450  8A                 	db	138
   129   003451  0F                 	db	15
   130   003452  8B                 	db	139
   131   003453  0F                 	db	15
   132   003454  8C                 	db	140
   133   003455  0F                 	db	15
   134   003456  8D                 	db	141
   135   003457  0F                 	db	15
   136                           
   137                           ;initializer for _tris_registers
   138   003458  92                 	db	146
   139   003459  0F                 	db	15
   140   00345A  93                 	db	147
   141   00345B  0F                 	db	15
   142   00345C  94                 	db	148
   143   00345D  0F                 	db	15
   144   00345E  95                 	db	149
   145   00345F  0F                 	db	15
   146   003460  96                 	db	150
   147   003461  0F                 	db	15
   148                           
   149                           ;initializer for _adc_1
   150   003462  7A                 	db	low _ADC_ISR_HANDLER
   151   003463  30                 	db	high _ADC_ISR_HANDLER
   152   003464  05                 	db	5
   153   003465  05                 	db	5
   154   003466  00                 	db	0
   155   003467  02                 	db	2
   156                           
   157                           ;initializer for _lcd1
   158   003468  02                 	db	2
   159   003469  0A                 	db	10
   160   00346A  12                 	db	18
   161   00346B  1A                 	db	26
   162   00346C  22                 	db	34
   163   00346D  2A                 	db	42
   164                           
   165                           ;initializer for _dc_motor_2
   166   00346E  13                 	db	19
   167   00346F  1B                 	db	27
   168                           
   169                           ;initializer for _dc_motor_1
   170   003470  03                 	db	3
   171   003471  0B                 	db	11
   172                           
   173                           	psect	smallconst
   174   001000                     __psmallconst:
   175                           	callstack 0
   176   001000  00                 	db	0
   177   001001                     _btn_values:
   178                           	callstack 0
   179   001001  37                 	db	55
   180   001002  38                 	db	56
   181   001003  39                 	db	57
   182   001004  2F                 	db	47
   183   001005  34                 	db	52
   184   001006  35                 	db	53
   185   001007  36                 	db	54
   186   001008  2A                 	db	42
   187   001009  31                 	db	49
   188   00100A  32                 	db	50
   189   00100B  33                 	db	51
   190   00100C  2D                 	db	45
   191   00100D  23                 	db	35
   192   00100E  30                 	db	48
   193   00100F  3D                 	db	61
   194   001010  2B                 	db	43
   195   001011                     __end_of_btn_values:
   196                           	callstack 0
   197   001011                     STR_5:
   198   001011  20                 	db	32
   199   001012  54                 	db	84	;'T'
   200   001013  65                 	db	101	;'e'
   201   001014  6D                 	db	109	;'m'
   202   001015  70                 	db	112	;'p'
   203   001016  31                 	db	49	;'1'
   204   001017  20                 	db	32
   205   001018  3A                 	db	58	;':'
   206   001019  20                 	db	32
   207   00101A  00                 	db	0
   208   00101B                     STR_7:
   209   00101B  20                 	db	32
   210   00101C  54                 	db	84	;'T'
   211   00101D  65                 	db	101	;'e'
   212   00101E  6D                 	db	109	;'m'
   213   00101F  70                 	db	112	;'p'
   214   001020  32                 	db	50	;'2'
   215   001021  20                 	db	32
   216   001022  3A                 	db	58	;':'
   217   001023  20                 	db	32
   218   001024  00                 	db	0
   219   001025                     STR_4:
   220   001025  4C                 	db	76	;'L'
   221   001026  4D                 	db	77	;'M'
   222   001027  33                 	db	51	;'3'
   223   001028  35                 	db	53	;'5'
   224   001029  20                 	db	32
   225   00102A  54                 	db	84	;'T'
   226   00102B  65                 	db	101	;'e'
   227   00102C  73                 	db	115	;'s'
   228   00102D  74                 	db	116	;'t'
   229   00102E  00                 	db	0
   230   00102F                     STR_1:
   231   00102F  25                 	db	37
   232   001030  69                 	db	105	;'i'
   233   001031  00                 	db	0
   234   001032  00                 	db	0	; dummy byte at the end
   235   000000                     
   236                           	psect	nvCOMRAM
   237   000072                     __pnvCOMRAM:
   238                           	callstack 0
   239   000072                     _ret:
   240                           	callstack 0
   241   000072                     	ds	1
   242   000000                     _ADRESL	set	4035
   243   000000                     _ADRESH	set	4036
   244                           
   245                           ; #config settings
   246                           
   247                           	psect	cinit
   248   003120                     __pcinit:
   249                           	callstack 0
   250   003120                     start_initialization:
   251                           	callstack 0
   252   003120                     __initialization:
   253                           	callstack 0
   254                           
   255                           ; Initialize objects allocated to BANK0 (46 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257   003120  0E44               	movlw	low __pidataBANK0
   258   003122  6EF6               	movwf	tblptrl,c
   259   003124  0E34               	movlw	high __pidataBANK0
   260   003126  6EF7               	movwf	tblptrh,c
   261   003128  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262   00312A  6EF8               	movwf	tblptru,c
   263   00312C  EE00  F0BF         	lfsr	0,__pdataBANK0
   264   003130  EE10 F02E          	lfsr	1,46
   265   003134                     copy_data0:
   266   003134  0009               	tblrd		*+
   267   003136  CFF5 FFEE          	movff	tablat,postinc0
   268   00313A  50E5               	movf	postdec1,w,c
   269   00313C  50E1               	movf	fsr1l,w,c
   270   00313E  E1FA               	bnz	copy_data0
   271                           
   272                           ; Clear objects allocated to BANK1 (32 bytes)
   273   003140  EE01  F000         	lfsr	0,__pbssBANK1
   274   003144  0E20               	movlw	32
   275   003146                     clear_0:
   276   003146  6AEE               	clrf	postinc0,c
   277   003148  06E8               	decf	wreg,f,c
   278   00314A  E1FD               	bnz	clear_0
   279                           
   280                           ; Clear objects allocated to BANK0 (63 bytes)
   281   00314C  EE00  F080         	lfsr	0,__pbssBANK0
   282   003150  0E3F               	movlw	63
   283   003152                     clear_1:
   284   003152  6AEE               	clrf	postinc0,c
   285   003154  06E8               	decf	wreg,f,c
   286   003156  E1FD               	bnz	clear_1
   287                           
   288                           ; Clear objects allocated to COMRAM (13 bytes)
   289   003158  EE00  F065         	lfsr	0,__pbssCOMRAM
   290   00315C  0E0D               	movlw	13
   291   00315E                     clear_2:
   292   00315E  6AEE               	clrf	postinc0,c
   293   003160  06E8               	decf	wreg,f,c
   294   003162  E1FD               	bnz	clear_2
   295   003164                     end_of_initialization:
   296                           	callstack 0
   297   003164                     __end_of__initialization:
   298                           	callstack 0
   299   003164  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300   003166  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301   003168  0100               	movlb	0
   302   00316A  EFFC  F00B         	goto	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMRAM
   305   000065                     __pbssCOMRAM:
   306                           	callstack 0
   307   000065                     _flags:
   308                           	callstack 0
   309   000065                     	ds	1
   310   000066                     _ADC_Flag:
   311                           	callstack 0
   312   000066                     	ds	1
   313   000067                     _RB7_pin_init_value:
   314                           	callstack 0
   315   000067                     	ds	1
   316   000068                     _RB6_pin_init_value:
   317                           	callstack 0
   318   000068                     	ds	1
   319   000069                     _RB5_pin_init_value:
   320                           	callstack 0
   321   000069                     	ds	1
   322   00006A                     _RB4_pin_init_value:
   323                           	callstack 0
   324   00006A                     	ds	1
   325   00006B                     relay_turn_off@F3221:
   326                           	callstack 0
   327   00006B                     	ds	1
   328   00006C                     relay_turn_on@F3216:
   329                           	callstack 0
   330   00006C                     	ds	1
   331   00006D                     relay_initialize@F3211:
   332                           	callstack 0
   333   00006D                     	ds	1
   334   00006E                     led_toggle@F3232:
   335                           	callstack 0
   336   00006E                     	ds	1
   337   00006F                     led_turn_off@F3227:
   338                           	callstack 0
   339   00006F                     	ds	1
   340   000070                     led_turn_on@F3222:
   341                           	callstack 0
   342   000070                     	ds	1
   343   000071                     led_initialize@F3217:
   344                           	callstack 0
   345   000071                     	ds	1
   346                           
   347                           	psect	bssBANK0
   348   000080                     __pbssBANK0:
   349                           	callstack 0
   350   000080                     	ds	11
   351   00008B                     	ds	6
   352   000091                     	ds	4
   353   000095                     _width:
   354                           	callstack 0
   355   000095                     	ds	2
   356   000097                     _prec:
   357                           	callstack 0
   358   000097                     	ds	2
   359   000099                     _lm35_res_2_Celsius_mv:
   360                           	callstack 0
   361   000099                     	ds	2
   362   00009B                     _lm35_res_1_Celsius_mv:
   363                           	callstack 0
   364   00009B                     	ds	2
   365   00009D                     _RB7_InterruptHandler:
   366                           	callstack 0
   367   00009D                     	ds	2
   368   00009F                     _RB6_InterruptHandler:
   369                           	callstack 0
   370   00009F                     	ds	2
   371   0000A1                     _RB5_InterruptHandler:
   372                           	callstack 0
   373   0000A1                     	ds	2
   374   0000A3                     _RB4_InterruptHandler:
   375                           	callstack 0
   376   0000A3                     	ds	2
   377   0000A5                     _INT2_InterruptHandler:
   378                           	callstack 0
   379   0000A5                     	ds	2
   380   0000A7                     _INT1_InterruptHandler:
   381                           	callstack 0
   382   0000A7                     	ds	2
   383   0000A9                     _INT0_InterruptHandler:
   384                           	callstack 0
   385   0000A9                     	ds	2
   386   0000AB                     _ADC_InterruptHandler:
   387                           	callstack 0
   388   0000AB                     	ds	2
   389   0000AD                     _lm35_res_2_txt:
   390                           	callstack 0
   391   0000AD                     	ds	7
   392   0000B4                     _lm35_res_1_txt:
   393                           	callstack 0
   394   0000B4                     	ds	7
   395   0000BB                     _lm35_res_2:
   396                           	callstack 0
   397   0000BB                     	ds	2
   398   0000BD                     _lm35_res_1:
   399                           	callstack 0
   400   0000BD                     	ds	2
   401                           
   402                           	psect	dataBANK0
   403   0000BF                     __pdataBANK0:
   404                           	callstack 0
   405   0000BF                     _port_registers:
   406                           	callstack 0
   407   0000BF                     	ds	10
   408   0000C9                     _lat_registers:
   409                           	callstack 0
   410   0000C9                     	ds	10
   411   0000D3                     _tris_registers:
   412                           	callstack 0
   413   0000D3                     	ds	10
   414   0000DD                     _adc_1:
   415                           	callstack 0
   416   0000DD                     	ds	6
   417   0000E3                     _lcd1:
   418                           	callstack 0
   419   0000E3                     	ds	6
   420   0000E9                     _dc_motor_2:
   421                           	callstack 0
   422   0000E9                     	ds	2
   423   0000EB                     _dc_motor_1:
   424                           	callstack 0
   425   0000EB                     	ds	2
   426                           
   427                           	psect	bssBANK1
   428   000100                     __pbssBANK1:
   429                           	callstack 0
   430   000100                     _dbuf:
   431                           	callstack 0
   432   000100                     	ds	32
   433                           
   434                           	psect	cstackBANK0
   435   0000ED                     __pcstackBANK0:
   436                           	callstack 0
   437   0000ED                     convert_uint16_to_string@Temp_str:
   438                           	callstack 0
   439                           
   440                           ; 6 bytes @ 0x0
   441   0000ED                     	ds	6
   442   0000F3                     convert_uint16_to_string@ret:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x6
   446   0000F3                     	ds	1
   447   0000F4                     convert_uint16_to_string@cnt:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x7
   451   0000F4                     	ds	1
   452   0000F5                     ??_main:
   453                           
   454                           ; 1 bytes @ 0x8
   455   0000F5                     	ds	2
   456                           
   457                           	psect	cstackCOMRAM
   458   000001                     __pcstackCOMRAM:
   459                           	callstack 0
   460   000001                     ADC_GetConversionResult@_adc:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x0
   464   000001                     	ds	2
   465   000003                     ADC_GetConversionResult@conversion_result:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x2
   469   000003                     	ds	2
   470   000005                     ??_ADC_GetConversionResult:
   471                           
   472                           ; 1 bytes @ 0x4
   473   000005                     	ds	3
   474   000008                     ADC_GetConversionResult@ret:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x7
   478   000008                     	ds	1
   479   000009                     ??_InterruptManager:
   480                           
   481                           ; 1 bytes @ 0x8
   482   000009                     	ds	4
   483   00000D                     ??_adc_input_channel_port_configure:
   484   00000D                     ?___awdiv:
   485                           	callstack 0
   486   00000D                     ?___awmod:
   487                           	callstack 0
   488   00000D                     ?___xxtofl:
   489                           	callstack 0
   490   00000D                     gpio_pin_direction_initialize@pin_config:
   491                           	callstack 0
   492   00000D                     gpio_pin_write_logic@pin_config:
   493                           	callstack 0
   494   00000D                     ADC_StartConversion@_adc:
   495                           	callstack 0
   496   00000D                     select_result_format@_adc:
   497                           	callstack 0
   498   00000D                     configure_voltage_reference@_adc:
   499                           	callstack 0
   500   00000D                     ___awdiv@dividend:
   501                           	callstack 0
   502   00000D                     ___awmod@dividend:
   503                           	callstack 0
   504   00000D                     memset@dest:
   505                           	callstack 0
   506   00000D                     fputc@c:
   507                           	callstack 0
   508   00000D                     ___xxtofl@val:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0xC
   512   00000D                     	ds	2
   513   00000F                     ??_gpio_pin_direction_initialize:
   514   00000F                     ??_select_result_format:
   515   00000F                     ??_configure_voltage_reference:
   516   00000F                     gpio_pin_write_logic@logic:
   517                           	callstack 0
   518   00000F                     ADC_StartConversion@ret:
   519                           	callstack 0
   520   00000F                     adc_input_channel_port_configure@channel:
   521                           	callstack 0
   522   00000F                     ___awdiv@divisor:
   523                           	callstack 0
   524   00000F                     ___awmod@divisor:
   525                           	callstack 0
   526   00000F                     memset@c:
   527                           	callstack 0
   528   00000F                     fputc@fp:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532   00000F                     	ds	1
   533   000010                     ??_gpio_pin_write_logic:
   534   000010                     ADC_SelectChannel@_adc:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xF
   538   000010                     	ds	1
   539   000011                     ??_fputc:
   540   000011                     ??___xxtofl:
   541   000011                     ___awdiv@counter:
   542                           	callstack 0
   543   000011                     ___awmod@counter:
   544                           	callstack 0
   545   000011                     ADC_Init@_adc:
   546                           	callstack 0
   547   000011                     memset@n:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x10
   551   000011                     	ds	1
   552   000012                     ADC_SelectChannel@channel:
   553                           	callstack 0
   554   000012                     ___awdiv@sign:
   555                           	callstack 0
   556   000012                     ___awmod@sign:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x11
   560   000012                     	ds	1
   561   000013                     ??_memset:
   562   000013                     ??_ADC_Init:
   563   000013                     ??_ADC_SelectChannel:
   564   000013                     ?_abs:
   565                           	callstack 0
   566   000013                     ___awdiv@quotient:
   567                           	callstack 0
   568   000013                     abs@a:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x12
   572   000013                     	ds	1
   573   000014                     ADC_Init@ret:
   574                           	callstack 0
   575   000014                     ADC_SelectChannel@ret:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x13
   579   000014                     	ds	1
   580   000015                     ??_abs:
   581   000015                     gpio_pin_direction_initialize@ret:
   582                           	callstack 0
   583   000015                     ___xxtofl@sign:
   584                           	callstack 0
   585   000015                     ADC_StartConversion_Interrupt@_adc:
   586                           	callstack 0
   587   000015                     memset@k:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x14
   591   000015                     	ds	1
   592   000016                     gpio_pin_write_logic@ret:
   593                           	callstack 0
   594   000016                     ___xxtofl@exp:
   595                           	callstack 0
   596   000016                     fputs@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x15
   600   000016                     	ds	1
   601   000017                     ADC_StartConversion_Interrupt@channel:
   602                           	callstack 0
   603   000017                     lcd_send_4bits@lcd:
   604                           	callstack 0
   605   000017                     lcd_4bit_send_enable_signal@lcd:
   606                           	callstack 0
   607   000017                     dc_motor_move_right@_dc_motor:
   608                           	callstack 0
   609   000017                     dc_motor_move_left@_dc_motor:
   610                           	callstack 0
   611   000017                     dc_motor_stop@_dc_motor:
   612                           	callstack 0
   613   000017                     gpio_pin_initialize@pin_config:
   614                           	callstack 0
   615   000017                     memset@s:
   616                           	callstack 0
   617   000017                     ___xxtofl@arg:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x16
   621   000017                     	ds	1
   622   000018                     ADC_StartConversion_Interrupt@ret:
   623                           	callstack 0
   624   000018                     fputs@fp:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x17
   628   000018                     	ds	1
   629   000019                     ??_gpio_pin_initialize:
   630   000019                     lcd_send_4bits@_data_command:
   631                           	callstack 0
   632   000019                     lcd_4bit_send_enable_signal@ret:
   633                           	callstack 0
   634   000019                     dc_motor_move_right@ret:
   635                           	callstack 0
   636   000019                     dc_motor_move_left@ret:
   637                           	callstack 0
   638   000019                     dc_motor_stop@ret:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x18
   642   000019                     	ds	1
   643   00001A                     lcd_send_4bits@ret:
   644                           	callstack 0
   645   00001A                     gpio_pin_initialize@ret:
   646                           	callstack 0
   647   00001A                     fputs@c:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x19
   651   00001A                     	ds	1
   652   00001B                     ?___flmul:
   653                           	callstack 0
   654   00001B                     lcd_4bit_send_command@lcd:
   655                           	callstack 0
   656   00001B                     lcd_4bit_send_char_data@lcd:
   657                           	callstack 0
   658   00001B                     dc_motor_initialize@_dc_motor:
   659                           	callstack 0
   660   00001B                     fputs@i:
   661                           	callstack 0
   662   00001B                     ___flmul@b:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x1A
   666   00001B                     	ds	2
   667   00001D                     lcd_4bit_send_command@command:
   668                           	callstack 0
   669   00001D                     lcd_4bit_send_char_data@data:
   670                           	callstack 0
   671   00001D                     dc_motor_initialize@ret:
   672                           	callstack 0
   673   00001D                     pad@fp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x1C
   677   00001D                     	ds	1
   678   00001E                     lcd_4bit_send_command@ret:
   679                           	callstack 0
   680   00001E                     lcd_4bit_send_char_data@ret:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x1D
   684   00001E                     	ds	1
   685   00001F                     lcd_4bit_initialize@lcd:
   686                           	callstack 0
   687   00001F                     lcd_4bit_set_cursor@lcd:
   688                           	callstack 0
   689   00001F                     pad@buf:
   690                           	callstack 0
   691   00001F                     ___flmul@a:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x1E
   695   00001F                     	ds	2
   696   000021                     ??_lcd_4bit_initialize:
   697   000021                     lcd_4bit_set_cursor@row:
   698                           	callstack 0
   699   000021                     pad@p:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x20
   703   000021                     	ds	1
   704   000022                     lcd_4bit_set_cursor@column:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x21
   708   000022                     	ds	1
   709   000023                     ??_lcd_4bit_set_cursor:
   710   000023                     ??___flmul:
   711   000023                     ??_pad:
   712   000023                     lcd_4bit_initialize@ret:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x22
   716   000023                     	ds	1
   717   000024                     lcd_4bit_initialize@l_data_pins_counter:
   718                           	callstack 0
   719   000024                     pad@i:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x23
   723   000024                     	ds	1
   724   000025                     ecu_layer_initialize@ret:
   725                           	callstack 0
   726   000025                     lcd_4bit_send_string_pos@lcd:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x24
   730   000025                     	ds	1
   731   000026                     pad@w:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x25
   735   000026                     	ds	1
   736   000027                     lcd_4bit_send_string_pos@row:
   737                           	callstack 0
   738   000027                     ___flmul@sign:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x26
   742   000027                     	ds	1
   743   000028                     lcd_4bit_send_string_pos@column:
   744                           	callstack 0
   745   000028                     dtoa@fp:
   746                           	callstack 0
   747   000028                     ___flmul@grs:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x27
   751   000028                     	ds	1
   752   000029                     lcd_4bit_send_string_pos@str:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x28
   756   000029                     	ds	1
   757   00002A                     dtoa@d:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x29
   761   00002A                     	ds	1
   762   00002B                     lcd_4bit_send_string_pos@ret:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x2A
   766   00002B                     	ds	1
   767   00002C                     ___flmul@aexp:
   768                           	callstack 0
   769   00002C                     _dtoa$2150:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x2B
   773   00002C                     	ds	1
   774   00002D                     ___flmul@bexp:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x2C
   778   00002D                     	ds	1
   779   00002E                     dtoa@p:
   780                           	callstack 0
   781   00002E                     ___flmul@prod:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x2D
   785   00002E                     	ds	2
   786   000030                     dtoa@w:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x2F
   790   000030                     	ds	2
   791   000032                     dtoa@s:
   792                           	callstack 0
   793   000032                     ___flmul@temp:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x31
   797   000032                     	ds	1
   798   000033                     dtoa@i:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x32
   802   000033                     	ds	1
   803   000034                     ?___fldiv:
   804                           	callstack 0
   805   000034                     ___fldiv@b:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x33
   809   000034                     	ds	1
   810   000035                     vfpfcnvrt@fp:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x34
   814   000035                     	ds	2
   815   000037                     vfpfcnvrt@fmt:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x36
   819   000037                     	ds	1
   820   000038                     ___fldiv@a:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x37
   824   000038                     	ds	1
   825   000039                     vfpfcnvrt@ap:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x38
   829   000039                     	ds	2
   830   00003B                     ??_vfpfcnvrt:
   831                           
   832                           ; 1 bytes @ 0x3A
   833   00003B                     	ds	1
   834   00003C                     ??___fldiv:
   835                           
   836                           ; 1 bytes @ 0x3B
   837   00003C                     	ds	1
   838   00003D                     vfpfcnvrt@convarg:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x3C
   842   00003D                     	ds	3
   843   000040                     ___fldiv@rem:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x3F
   847   000040                     	ds	1
   848   000041                     vfpfcnvrt@cp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x40
   852   000041                     	ds	2
   853   000043                     ?_vfprintf:
   854                           	callstack 0
   855   000043                     vfprintf@fp:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x42
   859   000043                     	ds	1
   860   000044                     ___fldiv@sign:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x43
   864   000044                     	ds	1
   865   000045                     ___fldiv@new_exp:
   866                           	callstack 0
   867   000045                     vfprintf@fmt:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x44
   871   000045                     	ds	2
   872   000047                     vfprintf@ap:
   873                           	callstack 0
   874   000047                     ___fldiv@grs:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x46
   878   000047                     	ds	2
   879   000049                     vfprintf@cfmt:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x48
   883   000049                     	ds	2
   884   00004B                     ?_sprintf:
   885                           	callstack 0
   886   00004B                     ___fldiv@bexp:
   887                           	callstack 0
   888   00004B                     sprintf@s:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x4A
   892   00004B                     	ds	1
   893   00004C                     ___fldiv@aexp:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x4B
   897   00004C                     	ds	1
   898   00004D                     ?___fltol:
   899                           	callstack 0
   900   00004D                     sprintf@fmt:
   901                           	callstack 0
   902   00004D                     ___fltol@f1:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x4C
   906   00004D                     	ds	4
   907   000051                     ??___fltol:
   908                           
   909                           ; 1 bytes @ 0x50
   910   000051                     	ds	2
   911   000053                     sprintf@ap:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x52
   915   000053                     	ds	2
   916   000055                     ___fltol@sign1:
   917                           	callstack 0
   918   000055                     sprintf@f:
   919                           	callstack 0
   920                           
   921                           ; 12 bytes @ 0x54
   922   000055                     	ds	1
   923   000056                     ___fltol@exp1:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x55
   927   000056                     	ds	11
   928   000061                     convert_uint16_to_string@value:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x60
   932   000061                     	ds	2
   933   000063                     convert_uint16_to_string@str:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x62
   937   000063                     	ds	2
   938   000065                     
   939                           ; 1 bytes @ 0x64
   940 ;;
   941 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   942 ;;
   943 ;; *************** function _main *****************
   944 ;; Defined at:
   945 ;;		line 14 in file "application.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  2  839[None  ] int 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;Total ram usage:        2 bytes
   964 ;; Hardware stack levels required when called: 13
   965 ;; This function calls:
   966 ;;		_ADC_StartConversion_Interrupt
   967 ;;		___fldiv
   968 ;;		___flmul
   969 ;;		___fltol
   970 ;;		___xxtofl
   971 ;;		_application_initialize
   972 ;;		_convert_uint16_to_string
   973 ;;		_dc_motor_move_left
   974 ;;		_dc_motor_move_right
   975 ;;		_dc_motor_stop
   976 ;;		_lcd_4bit_send_command
   977 ;;		_lcd_4bit_send_string_pos
   978 ;; This function is called by:
   979 ;;		Startup code after reset
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text0
   984   0017F8                     __ptext0:
   985                           	callstack 0
   986   0017F8                     _main:
   987                           	callstack 18
   988   0017F8                     
   989                           ;application.c: 16:     application_initialize();
   990   0017F8  EC61  F01A         	call	_application_initialize	;wreg free
   991   0017FC                     
   992                           ;application.c: 17:     ret = lcd_4bit_send_string_pos(&lcd1,1,6,"LM35 Test");
   993   0017FC  0EE3               	movlw	low _lcd1
   994   0017FE  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   995   001800  0E00               	movlw	high _lcd1
   996   001802  6E26               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   997   001804  0E01               	movlw	1
   998   001806  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
   999   001808  0E06               	movlw	6
  1000   00180A  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1001   00180C  0E25               	movlw	low STR_4
  1002   00180E  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1003   001810  0E10               	movlw	high STR_4
  1004   001812  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1005   001814  EC5A  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1006   001818  6E72               	movwf	_ret^0,c
  1007   00181A                     
  1008                           ;application.c: 18:     _delay((unsigned long)((1400)*(4000000/4000.0)));
  1009   00181A  0E08               	movlw	8
  1010   00181C  0100               	movlb	0	; () banked
  1011   00181E  6FF6               	movwf	(??_main+1)& (0+255),b
  1012   001820  0E1B               	movlw	27
  1013   001822  6FF5               	movwf	??_main& (0+255),b
  1014   001824  0E27               	movlw	39
  1015   001826                     u6137:
  1016   001826  2EE8               	decfsz	wreg,f,c
  1017   001828  D7FE               	bra	u6137
  1018   00182A  2FF5               	decfsz	??_main& (0+255),f,b
  1019   00182C  D7FC               	bra	u6137
  1020   00182E  2FF6               	decfsz	(??_main+1)& (0+255),f,b
  1021   001830  D7FA               	bra	u6137
  1022   001832                     
  1023                           ;application.c: 19:     ret&= lcd_4bit_send_command(&lcd1,0X01);
  1024   001832  0EE3               	movlw	low _lcd1
  1025   001834  6E1B               	movwf	lcd_4bit_send_command@lcd^0,c
  1026   001836  0E00               	movlw	high _lcd1
  1027   001838  6E1C               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1028   00183A  0E01               	movlw	1
  1029   00183C  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1030   00183E  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  1031   001842  1672               	andwf	_ret^0,f,c
  1032   001844                     
  1033                           ;application.c: 20:     ret &= lcd_4bit_send_string_pos(&lcd1,1,1," Temp1 : ");
  1034   001844  0EE3               	movlw	low _lcd1
  1035   001846  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1036   001848  0E00               	movlw	high _lcd1
  1037   00184A  6E26               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1038   00184C  0E01               	movlw	1
  1039   00184E  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1040   001850  0E01               	movlw	1
  1041   001852  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1042   001854  0E11               	movlw	low STR_5
  1043   001856  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1044   001858  0E10               	movlw	high STR_5
  1045   00185A  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1046   00185C  EC5A  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1047   001860  1672               	andwf	_ret^0,f,c
  1048   001862                     
  1049                           ;application.c: 21:     ret &= lcd_4bit_send_string_pos(&lcd1,2,1," Temp2 : ");
  1050   001862  0EE3               	movlw	low _lcd1
  1051   001864  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1052   001866  0E00               	movlw	high _lcd1
  1053   001868  6E26               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1054   00186A  0E02               	movlw	2
  1055   00186C  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1056   00186E  0E01               	movlw	1
  1057   001870  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1058   001872  0E1B               	movlw	low STR_7
  1059   001874  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1060   001876  0E10               	movlw	high STR_7
  1061   001878  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1062   00187A  EC5A  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1063   00187E  1672               	andwf	_ret^0,f,c
  1064   001880                     l6612:
  1065                           
  1066                           ;application.c: 23:     {;application.c: 24:         if (ADC_Flag == 0){
  1067   001880  5066               	movf	_ADC_Flag^0,w,c
  1068   001882  A4D8               	btfss	status,2,c
  1069   001884  EF46  F00C         	goto	u6091
  1070   001888  EF48  F00C         	goto	u6090
  1071   00188C                     u6091:
  1072   00188C  EF51  F00C         	goto	l6616
  1073   001890                     u6090:
  1074   001890                     
  1075                           ;application.c: 25:           ret &= ADC_StartConversion_Interrupt(&adc_1,ADC_CHANNEL_AN
      +                          0);
  1076   001890  0EDD               	movlw	low _adc_1
  1077   001892  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1078   001894  0E00               	movlw	high _adc_1
  1079   001896  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1080   001898  0E00               	movlw	0
  1081   00189A  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1082   00189C  ECCE  F019         	call	_ADC_StartConversion_Interrupt	;wreg free
  1083   0018A0  1672               	andwf	_ret^0,f,c
  1084   0018A2                     l6616:
  1085                           
  1086                           ;application.c: 27:        if (ADC_Flag == 1){
  1087   0018A2  0466               	decf	_ADC_Flag^0,w,c
  1088   0018A4  A4D8               	btfss	status,2,c
  1089   0018A6  EF57  F00C         	goto	u6101
  1090   0018AA  EF59  F00C         	goto	u6100
  1091   0018AE                     u6101:
  1092   0018AE  EF62  F00C         	goto	l6620
  1093   0018B2                     u6100:
  1094   0018B2                     
  1095                           ;application.c: 28:             ret &= ADC_StartConversion_Interrupt(&adc_1,ADC_CHANNEL_
      +                          AN1);
  1096   0018B2  0EDD               	movlw	low _adc_1
  1097   0018B4  6E15               	movwf	ADC_StartConversion_Interrupt@_adc^0,c
  1098   0018B6  0E00               	movlw	high _adc_1
  1099   0018B8  6E16               	movwf	(ADC_StartConversion_Interrupt@_adc+1)^0,c
  1100   0018BA  0E01               	movlw	1
  1101   0018BC  6E17               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1102   0018BE  ECCE  F019         	call	_ADC_StartConversion_Interrupt	;wreg free
  1103   0018C2  1672               	andwf	_ret^0,f,c
  1104   0018C4                     l6620:
  1105                           
  1106                           ;application.c: 30:        lm35_res_1_Celsius_mv = (lm35_res_1 *4.88f)/10;
  1107   0018C4  0E00               	movlw	0
  1108   0018C6  6E38               	movwf	___fldiv@a^0,c
  1109   0018C8  0E00               	movlw	0
  1110   0018CA  6E39               	movwf	(___fldiv@a+1)^0,c
  1111   0018CC  0E20               	movlw	32
  1112   0018CE  6E3A               	movwf	(___fldiv@a+2)^0,c
  1113   0018D0  0E41               	movlw	65
  1114   0018D2  6E3B               	movwf	(___fldiv@a+3)^0,c
  1115   0018D4  0EF6               	movlw	246
  1116   0018D6  6E1F               	movwf	___flmul@a^0,c
  1117   0018D8  0E28               	movlw	40
  1118   0018DA  6E20               	movwf	(___flmul@a+1)^0,c
  1119   0018DC  0E9C               	movlw	156
  1120   0018DE  6E21               	movwf	(___flmul@a+2)^0,c
  1121   0018E0  0E40               	movlw	64
  1122   0018E2  6E22               	movwf	(___flmul@a+3)^0,c
  1123   0018E4  C0BD  F00D         	movff	_lm35_res_1,___xxtofl@val
  1124   0018E8  C0BE  F00E         	movff	_lm35_res_1+1,___xxtofl@val+1
  1125   0018EC  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1126   0018EE  6A10               	clrf	(___xxtofl@val+3)^0,c
  1127   0018F0  0E00               	movlw	0
  1128   0018F2  EC48  F00D         	call	___xxtofl
  1129   0018F6  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1130   0018FA  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1131   0018FE  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1132   001902  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1133   001906  EC1A  F008         	call	___flmul	;wreg free
  1134   00190A  C01B  F034         	movff	?___flmul,___fldiv@b
  1135   00190E  C01C  F035         	movff	?___flmul+1,___fldiv@b+1
  1136   001912  C01D  F036         	movff	?___flmul+2,___fldiv@b+2
  1137   001916  C01E  F037         	movff	?___flmul+3,___fldiv@b+3
  1138   00191A  EC2F  F00A         	call	___fldiv	;wreg free
  1139   00191E  C034  F04D         	movff	?___fldiv,___fltol@f1
  1140   001922  C035  F04E         	movff	?___fldiv+1,___fltol@f1+1
  1141   001926  C036  F04F         	movff	?___fldiv+2,___fltol@f1+2
  1142   00192A  C037  F050         	movff	?___fldiv+3,___fltol@f1+3
  1143   00192E  EC5C  F012         	call	___fltol	;wreg free
  1144   001932  C04D  F09B         	movff	?___fltol,_lm35_res_1_Celsius_mv
  1145   001936  C04E  F09C         	movff	?___fltol+1,_lm35_res_1_Celsius_mv+1
  1146   00193A                     
  1147                           ;application.c: 31:        lm35_res_2_Celsius_mv = (lm35_res_2 *4.88f)/10;
  1148   00193A  0E00               	movlw	0
  1149   00193C  6E38               	movwf	___fldiv@a^0,c
  1150   00193E  0E00               	movlw	0
  1151   001940  6E39               	movwf	(___fldiv@a+1)^0,c
  1152   001942  0E20               	movlw	32
  1153   001944  6E3A               	movwf	(___fldiv@a+2)^0,c
  1154   001946  0E41               	movlw	65
  1155   001948  6E3B               	movwf	(___fldiv@a+3)^0,c
  1156   00194A  0EF6               	movlw	246
  1157   00194C  6E1F               	movwf	___flmul@a^0,c
  1158   00194E  0E28               	movlw	40
  1159   001950  6E20               	movwf	(___flmul@a+1)^0,c
  1160   001952  0E9C               	movlw	156
  1161   001954  6E21               	movwf	(___flmul@a+2)^0,c
  1162   001956  0E40               	movlw	64
  1163   001958  6E22               	movwf	(___flmul@a+3)^0,c
  1164   00195A  C0BB  F00D         	movff	_lm35_res_2,___xxtofl@val
  1165   00195E  C0BC  F00E         	movff	_lm35_res_2+1,___xxtofl@val+1
  1166   001962  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1167   001964  6A10               	clrf	(___xxtofl@val+3)^0,c
  1168   001966  0E00               	movlw	0
  1169   001968  EC48  F00D         	call	___xxtofl
  1170   00196C  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1171   001970  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1172   001974  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1173   001978  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1174   00197C  EC1A  F008         	call	___flmul	;wreg free
  1175   001980  C01B  F034         	movff	?___flmul,___fldiv@b
  1176   001984  C01C  F035         	movff	?___flmul+1,___fldiv@b+1
  1177   001988  C01D  F036         	movff	?___flmul+2,___fldiv@b+2
  1178   00198C  C01E  F037         	movff	?___flmul+3,___fldiv@b+3
  1179   001990  EC2F  F00A         	call	___fldiv	;wreg free
  1180   001994  C034  F04D         	movff	?___fldiv,___fltol@f1
  1181   001998  C035  F04E         	movff	?___fldiv+1,___fltol@f1+1
  1182   00199C  C036  F04F         	movff	?___fldiv+2,___fltol@f1+2
  1183   0019A0  C037  F050         	movff	?___fldiv+3,___fltol@f1+3
  1184   0019A4  EC5C  F012         	call	___fltol	;wreg free
  1185   0019A8  C04D  F099         	movff	?___fltol,_lm35_res_2_Celsius_mv
  1186   0019AC  C04E  F09A         	movff	?___fltol+1,_lm35_res_2_Celsius_mv+1
  1187   0019B0                     
  1188                           ;application.c: 32:        ret&=convert_uint16_to_string(lm35_res_1_Celsius_mv , lm35_re
      +                          s_1_txt);
  1189   0019B0  C09B  F061         	movff	_lm35_res_1_Celsius_mv,convert_uint16_to_string@value
  1190   0019B4  C09C  F062         	movff	_lm35_res_1_Celsius_mv+1,convert_uint16_to_string@value+1
  1191   0019B8  0EB4               	movlw	low _lm35_res_1_txt
  1192   0019BA  6E63               	movwf	convert_uint16_to_string@str^0,c
  1193   0019BC  0E00               	movlw	high _lm35_res_1_txt
  1194   0019BE  6E64               	movwf	(convert_uint16_to_string@str+1)^0,c
  1195   0019C0  EC4D  F015         	call	_convert_uint16_to_string	;wreg free
  1196   0019C4  1672               	andwf	_ret^0,f,c
  1197   0019C6                     
  1198                           ;application.c: 33:        ret&=convert_uint16_to_string(lm35_res_2_Celsius_mv , lm35_re
      +                          s_2_txt);
  1199   0019C6  C099  F061         	movff	_lm35_res_2_Celsius_mv,convert_uint16_to_string@value
  1200   0019CA  C09A  F062         	movff	_lm35_res_2_Celsius_mv+1,convert_uint16_to_string@value+1
  1201   0019CE  0EAD               	movlw	low _lm35_res_2_txt
  1202   0019D0  6E63               	movwf	convert_uint16_to_string@str^0,c
  1203   0019D2  0E00               	movlw	high _lm35_res_2_txt
  1204   0019D4  6E64               	movwf	(convert_uint16_to_string@str+1)^0,c
  1205   0019D6  EC4D  F015         	call	_convert_uint16_to_string	;wreg free
  1206   0019DA  1672               	andwf	_ret^0,f,c
  1207   0019DC                     
  1208                           ;application.c: 34:        ret &= lcd_4bit_send_string_pos(&lcd1,1,10,lm35_res_1_txt);
  1209   0019DC  0EE3               	movlw	low _lcd1
  1210   0019DE  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1211   0019E0  0E00               	movlw	high _lcd1
  1212   0019E2  6E26               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1213   0019E4  0E01               	movlw	1
  1214   0019E6  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1215   0019E8  0E0A               	movlw	10
  1216   0019EA  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1217   0019EC  0EB4               	movlw	low _lm35_res_1_txt
  1218   0019EE  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1219   0019F0  0E00               	movlw	high _lm35_res_1_txt
  1220   0019F2  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1221   0019F4  EC5A  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1222   0019F8  1672               	andwf	_ret^0,f,c
  1223   0019FA                     
  1224                           ;application.c: 35:        ret &= lcd_4bit_send_string_pos(&lcd1,2,10,lm35_res_2_txt);
  1225   0019FA  0EE3               	movlw	low _lcd1
  1226   0019FC  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1227   0019FE  0E00               	movlw	high _lcd1
  1228   001A00  6E26               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1229   001A02  0E02               	movlw	2
  1230   001A04  6E27               	movwf	lcd_4bit_send_string_pos@row^0,c
  1231   001A06  0E0A               	movlw	10
  1232   001A08  6E28               	movwf	lcd_4bit_send_string_pos@column^0,c
  1233   001A0A  0EAD               	movlw	low _lm35_res_2_txt
  1234   001A0C  6E29               	movwf	lcd_4bit_send_string_pos@str^0,c
  1235   001A0E  0E00               	movlw	high _lm35_res_2_txt
  1236   001A10  6E2A               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1237   001A12  EC5A  F016         	call	_lcd_4bit_send_string_pos	;wreg free
  1238   001A16  1672               	andwf	_ret^0,f,c
  1239   001A18                     
  1240                           ;application.c: 36:        if(lm35_res_1_Celsius_mv > 20){
  1241   001A18  0100               	movlb	0	; () banked
  1242   001A1A  519C               	movf	(_lm35_res_1_Celsius_mv+1)& (0+255),w,b
  1243   001A1C  E109               	bnz	u6110
  1244   001A1E  0E15               	movlw	21
  1245   001A20  5D9B               	subwf	_lm35_res_1_Celsius_mv& (0+255),w,b
  1246   001A22  A0D8               	btfss	status,0,c
  1247   001A24  EF16  F00D         	goto	u6111
  1248   001A28  EF18  F00D         	goto	u6110
  1249   001A2C                     u6111:
  1250   001A2C  EF21  F00D         	goto	l6636
  1251   001A30                     u6110:
  1252   001A30                     
  1253                           ; BSR set to: 0
  1254                           ;application.c: 37:            ret&= dc_motor_move_right(&dc_motor_1);
  1255   001A30  0EEB               	movlw	low _dc_motor_1
  1256   001A32  6E17               	movwf	dc_motor_move_right@_dc_motor^0,c
  1257   001A34  0E00               	movlw	high _dc_motor_1
  1258   001A36  6E18               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1259   001A38  EC27  F019         	call	_dc_motor_move_right	;wreg free
  1260   001A3C  1672               	andwf	_ret^0,f,c
  1261                           
  1262                           ;application.c: 38:        }
  1263   001A3E  EF28  F00D         	goto	l6638
  1264   001A42                     l6636:
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;application.c: 40:             ret&= dc_motor_stop(&dc_motor_1);
  1268   001A42  0EEB               	movlw	low _dc_motor_1
  1269   001A44  6E17               	movwf	dc_motor_stop@_dc_motor^0,c
  1270   001A46  0E00               	movlw	high _dc_motor_1
  1271   001A48  6E18               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1272   001A4A  EC04  F019         	call	_dc_motor_stop	;wreg free
  1273   001A4E  1672               	andwf	_ret^0,f,c
  1274   001A50                     l6638:
  1275                           
  1276                           ;application.c: 42:        if(lm35_res_2_Celsius_mv > 25){
  1277   001A50  0100               	movlb	0	; () banked
  1278   001A52  519A               	movf	(_lm35_res_2_Celsius_mv+1)& (0+255),w,b
  1279   001A54  E109               	bnz	u6120
  1280   001A56  0E1A               	movlw	26
  1281   001A58  5D99               	subwf	_lm35_res_2_Celsius_mv& (0+255),w,b
  1282   001A5A  A0D8               	btfss	status,0,c
  1283   001A5C  EF32  F00D         	goto	u6121
  1284   001A60  EF34  F00D         	goto	u6120
  1285   001A64                     u6121:
  1286   001A64  EF3D  F00D         	goto	l6642
  1287   001A68                     u6120:
  1288   001A68                     
  1289                           ; BSR set to: 0
  1290                           ;application.c: 43:            ret&= dc_motor_move_left(&dc_motor_2);
  1291   001A68  0EE9               	movlw	low _dc_motor_2
  1292   001A6A  6E17               	movwf	dc_motor_move_left@_dc_motor^0,c
  1293   001A6C  0E00               	movlw	high _dc_motor_2
  1294   001A6E  6E18               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  1295   001A70  EC4A  F019         	call	_dc_motor_move_left	;wreg free
  1296   001A74  1672               	andwf	_ret^0,f,c
  1297                           
  1298                           ;application.c: 44:        }
  1299   001A76  EF40  F00C         	goto	l6612
  1300   001A7A                     l6642:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;application.c: 46:             ret&= dc_motor_stop(&dc_motor_2);
  1304   001A7A  0EE9               	movlw	low _dc_motor_2
  1305   001A7C  6E17               	movwf	dc_motor_stop@_dc_motor^0,c
  1306   001A7E  0E00               	movlw	high _dc_motor_2
  1307   001A80  6E18               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1308   001A82  EC04  F019         	call	_dc_motor_stop	;wreg free
  1309   001A86  1672               	andwf	_ret^0,f,c
  1310   001A88  EF40  F00C         	goto	l6612
  1311   001A8C  EF07  F000         	goto	start
  1312   001A90                     __end_of_main:
  1313                           	callstack 0
  1314                           
  1315 ;; *************** function _lcd_4bit_send_string_pos *****************
  1316 ;; Defined at:
  1317 ;;		line 122 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  lcd             2   36[COMRAM] PTR const struct .
  1320 ;;		 -> lcd1(6), 
  1321 ;;  row             1   38[COMRAM] unsigned char 
  1322 ;;  column          1   39[COMRAM] unsigned char 
  1323 ;;  str             2   40[COMRAM] PTR unsigned char 
  1324 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_8(10), STR_6(10), 
  1325 ;;		 -> STR_4(10), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  ret             1   42[COMRAM] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      unsigned char 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        7 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 8
  1344 ;; This function calls:
  1345 ;;		_lcd_4bit_send_char_data
  1346 ;;		_lcd_4bit_set_cursor
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text1
  1353   002CB4                     __ptext1:
  1354                           	callstack 0
  1355   002CB4                     _lcd_4bit_send_string_pos:
  1356                           	callstack 22
  1357   002CB4                     
  1358                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1359   002CB4  0E01               	movlw	1
  1360   002CB6  6E2B               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1361   002CB8                     
  1362                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:     if(lcd==((void*)0)){
  1363   002CB8  5025               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1364   002CBA  1026               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1365   002CBC  A4D8               	btfss	status,2,c
  1366   002CBE  EF63  F016         	goto	u3741
  1367   002CC2  EF65  F016         	goto	u3740
  1368   002CC6                     u3741:
  1369   002CC6  EF69  F016         	goto	l4734
  1370   002CCA                     u3740:
  1371   002CCA                     
  1372                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:         ret=(Std_ReturnType)0x00;
  1373   002CCA  0E00               	movlw	0
  1374   002CCC  6E2B               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1375                           
  1376                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:     }
  1377   002CCE  EFA9  F016         	goto	l4742
  1378   002CD2                     l4734:
  1379                           
  1380                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:        lcd_4bit_set_cursor(lcd,row,column);
  1381   002CD2  C025  F01F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1382   002CD6  C026  F020         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1383   002CDA  C027  F021         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1384   002CDE  C028  F022         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1385   002CE2  ECAA  F015         	call	_lcd_4bit_set_cursor	;wreg free
  1386                           
  1387                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
  1388   002CE6  EF90  F016         	goto	l4740
  1389   002CEA                     l4736:
  1390                           
  1391                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 130:             ret=lcd_4bit_send_char_data(lcd,*str+
      +                          +);
  1392   002CEA  C025  F01B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1393   002CEE  C026  F01C         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1394   002CF2  C029  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1395   002CF6  C02A  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1396   002CFA  0E00               	movlw	low (__smallconst shr (0+16))
  1397   002CFC  6EF8               	movwf	tblptru,c
  1398   002CFE  0E0F               	movlw	(high __ramtop+-1)
  1399   002D00  64F7               	cpfsgt	tblptrh,c
  1400   002D02  D003               	bra	u3757
  1401   002D04  0008               	tblrd		*
  1402   002D06  50F5               	movf	tablat,w,c
  1403   002D08  D005               	bra	u3750
  1404   002D0A                     u3757:
  1405   002D0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1406   002D0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1407   002D12  50EF               	movf	indf0,w,c
  1408   002D14                     u3750:
  1409   002D14  6E1D               	movwf	lcd_4bit_send_char_data@data^0,c
  1410   002D16  EC71  F017         	call	_lcd_4bit_send_char_data	;wreg free
  1411   002D1A  6E2B               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1412   002D1C  4A29               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1413   002D1E  2A2A               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1414   002D20                     l4740:
  1415                           
  1416                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
  1417   002D20  C029  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1418   002D24  C02A  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1419   002D28  0E00               	movlw	low (__smallconst shr (0+16))
  1420   002D2A  6EF8               	movwf	tblptru,c
  1421   002D2C  0E0F               	movlw	(high __ramtop+-1)
  1422   002D2E  64F7               	cpfsgt	tblptrh,c
  1423   002D30  D003               	bra	u3767
  1424   002D32  0008               	tblrd		*
  1425   002D34  50F5               	movf	tablat,w,c
  1426   002D36  D005               	bra	u3760
  1427   002D38                     u3767:
  1428   002D38  CFF6 FFE9          	movff	tblptrl,fsr0l
  1429   002D3C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1430   002D40  50EF               	movf	indf0,w,c
  1431   002D42                     u3760:
  1432   002D42  0900               	iorlw	0
  1433   002D44  A4D8               	btfss	status,2,c
  1434   002D46  EFA7  F016         	goto	u3771
  1435   002D4A  EFA9  F016         	goto	u3770
  1436   002D4E                     u3771:
  1437   002D4E  EF75  F016         	goto	l4736
  1438   002D52                     u3770:
  1439   002D52                     l4742:
  1440                           
  1441                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 133:     return ret;
  1442   002D52  502B               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1443   002D54  0012               	return		;funcret
  1444   002D56                     __end_of_lcd_4bit_send_string_pos:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _lcd_4bit_set_cursor *****************
  1448 ;; Defined at:
  1449 ;;		line 450 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  lcd             2   30[COMRAM] PTR const struct .
  1452 ;;		 -> lcd1(6), 
  1453 ;;  row             1   32[COMRAM] unsigned char 
  1454 ;;  column          1   33[COMRAM] unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  ret             1    0        unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      unsigned char 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        6 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 7
  1473 ;; This function calls:
  1474 ;;		_lcd_4bit_send_command
  1475 ;; This function is called by:
  1476 ;;		_lcd_4bit_send_string_pos
  1477 ;;		_lcd_4bit_send_char_data_pos
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text2
  1482   002B54                     __ptext2:
  1483                           	callstack 0
  1484   002B54                     _lcd_4bit_set_cursor:
  1485                           	callstack 22
  1486   002B54                     
  1487                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:     if(lcd==((void*)0)){
  1488   002B54  501F               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1489   002B56  1020               	iorwf	(lcd_4bit_set_cursor@lcd+1)^0,w,c
  1490   002B58  A4D8               	btfss	status,2,c
  1491   002B5A  EFB1  F015         	goto	u3581
  1492   002B5E  EFB3  F015         	goto	u3580
  1493   002B62                     u3581:
  1494   002B62  EFB5  F015         	goto	l4540
  1495   002B66                     u3580:
  1496   002B66                     l4538:
  1497                           
  1498                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 454:     }
  1499   002B66  EF01  F016         	goto	l227
  1500   002B6A                     l4540:
  1501                           
  1502                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 456:         column--;
  1503   002B6A  0622               	decf	lcd_4bit_set_cursor@column^0,f,c
  1504                           
  1505                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:         switch (row){
  1506   002B6C  EFE4  F015         	goto	l4554
  1507   002B70                     l4542:
  1508   002B70  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1509   002B74  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1510   002B78  5022               	movf	lcd_4bit_set_cursor@column^0,w,c
  1511   002B7A  0F80               	addlw	128
  1512   002B7C  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1513   002B7E  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  1514   002B82  EF01  F016         	goto	l227
  1515   002B86                     l4544:
  1516   002B86  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1517   002B8A  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1518   002B8E  5022               	movf	lcd_4bit_set_cursor@column^0,w,c
  1519   002B90  0FC0               	addlw	192
  1520   002B92  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1521   002B94  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  1522   002B98  EF01  F016         	goto	l227
  1523   002B9C                     l4546:
  1524   002B9C  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1525   002BA0  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1526   002BA4  5022               	movf	lcd_4bit_set_cursor@column^0,w,c
  1527   002BA6  0F94               	addlw	148
  1528   002BA8  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1529   002BAA  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  1530   002BAE  EF01  F016         	goto	l227
  1531   002BB2                     l4548:
  1532   002BB2  C01F  F01B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1533   002BB6  C020  F01C         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1534   002BBA  5022               	movf	lcd_4bit_set_cursor@column^0,w,c
  1535   002BBC  0FD4               	addlw	212
  1536   002BBE  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1537   002BC0  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  1538   002BC4  EF01  F016         	goto	l227
  1539   002BC8                     l4554:
  1540   002BC8  5021               	movf	lcd_4bit_set_cursor@row^0,w,c
  1541   002BCA  6E23               	movwf	??_lcd_4bit_set_cursor^0,c
  1542   002BCC  6A24               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1543                           
  1544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1545                           ; Switch size 1, requested type "simple"
  1546                           ; Number of cases is 1, Range of values is 0 to 0
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte            4     3 (average)
  1550                           ;	Chosen strategy is simple_byte
  1551   002BCE  5024               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1552   002BD0  0A00               	xorlw	0	; case 0
  1553   002BD2  B4D8               	btfsc	status,2,c
  1554   002BD4  EFEE  F015         	goto	l6784
  1555   002BD8  EFB3  F015         	goto	l4538
  1556   002BDC                     l6784:
  1557                           
  1558                           ; Switch size 1, requested type "simple"
  1559                           ; Number of cases is 4, Range of values is 1 to 4
  1560                           ; switch strategies available:
  1561                           ; Name         Instructions Cycles
  1562                           ; simple_byte           13     7 (average)
  1563                           ;	Chosen strategy is simple_byte
  1564   002BDC  5023               	movf	??_lcd_4bit_set_cursor^0,w,c
  1565   002BDE  0A01               	xorlw	1	; case 1
  1566   002BE0  B4D8               	btfsc	status,2,c
  1567   002BE2  EFB8  F015         	goto	l4542
  1568   002BE6  0A03               	xorlw	3	; case 2
  1569   002BE8  B4D8               	btfsc	status,2,c
  1570   002BEA  EFC3  F015         	goto	l4544
  1571   002BEE  0A01               	xorlw	1	; case 3
  1572   002BF0  B4D8               	btfsc	status,2,c
  1573   002BF2  EFCE  F015         	goto	l4546
  1574   002BF6  0A07               	xorlw	7	; case 4
  1575   002BF8  B4D8               	btfsc	status,2,c
  1576   002BFA  EFD9  F015         	goto	l4548
  1577   002BFE  EFB3  F015         	goto	l4538
  1578   002C02                     l227:
  1579   002C02  0012               	return		;funcret
  1580   002C04                     __end_of_lcd_4bit_set_cursor:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _lcd_4bit_send_char_data *****************
  1584 ;; Defined at:
  1585 ;;		line 63 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  lcd             2   26[COMRAM] PTR const struct .
  1588 ;;		 -> lcd1(6), 
  1589 ;;  data            1   28[COMRAM] unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  ret             1   29[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      unsigned char 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1601 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;Total ram usage:        4 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 6
  1608 ;; This function calls:
  1609 ;;		_gpio_pin_write_logic
  1610 ;;		_lcd_4bit_send_enable_signal
  1611 ;;		_lcd_send_4bits
  1612 ;; This function is called by:
  1613 ;;		_lcd_4bit_send_string_pos
  1614 ;;		_lcd_4bit_send_char_data_pos
  1615 ;;		_lcd_4bit_send_string
  1616 ;;		_lcd_4bit_send_custom_char
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text3
  1621   002EE2                     __ptext3:
  1622                           	callstack 0
  1623   002EE2                     _lcd_4bit_send_char_data:
  1624                           	callstack 23
  1625   002EE2                     
  1626                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     if(lcd==((void*)0)){
  1627   002EE2  501B               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1628   002EE4  101C               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1629   002EE6  A4D8               	btfss	status,2,c
  1630   002EE8  EF78  F017         	goto	u3571
  1631   002EEC  EF7A  F017         	goto	u3570
  1632   002EF0                     u3571:
  1633   002EF0  EF7E  F017         	goto	l4528
  1634   002EF4                     u3570:
  1635   002EF4                     
  1636                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret=(Std_ReturnType)0x00;
  1637   002EF4  0E00               	movlw	0
  1638   002EF6  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1639                           
  1640                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:     }
  1641   002EF8  EFA8  F017         	goto	l4530
  1642   002EFC                     l4528:
  1643                           
  1644                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  1645   002EFC  C01B  F00D         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1646   002F00  C01C  F00E         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1647   002F04  0E01               	movlw	1
  1648   002F06  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1649   002F08  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1650   002F0C  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1651                           
  1652                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret=lcd_send_4bits(lcd, data >> 4);
  1653   002F0E  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1654   002F12  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1655   002F16  381D               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1656   002F18  0B0F               	andlw	15
  1657   002F1A  6E19               	movwf	lcd_send_4bits@_data_command^0,c
  1658   002F1C  ECF0  F016         	call	_lcd_send_4bits	;wreg free
  1659   002F20  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1660                           
  1661                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_4bit_send_enable_signal(lcd);
  1662   002F22  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1663   002F26  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1664   002F2A  ECB7  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  1665   002F2E  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1666                           
  1667                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_send_4bits(lcd, data);
  1668   002F30  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1669   002F34  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1670   002F38  C01D  F019         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1671   002F3C  ECF0  F016         	call	_lcd_send_4bits	;wreg free
  1672   002F40  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1673                           
  1674                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_4bit_send_enable_signal(lcd);
  1675   002F42  C01B  F017         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1676   002F46  C01C  F018         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1677   002F4A  ECB7  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  1678   002F4E  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1679   002F50                     l4530:
  1680                           
  1681                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:     return ret;
  1682   002F50  501E               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1683   002F52  0012               	return		;funcret
  1684   002F54                     __end_of_lcd_4bit_send_char_data:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _dc_motor_stop *****************
  1688 ;; Defined at:
  1689 ;;		line 55 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  _dc_motor       2   22[COMRAM] PTR const struct .
  1692 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  ret             1   24[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      unsigned char 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        3 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 5
  1711 ;; This function calls:
  1712 ;;		_gpio_pin_write_logic
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text4
  1719   003208                     __ptext4:
  1720                           	callstack 0
  1721   003208                     _dc_motor_stop:
  1722                           	callstack 25
  1723   003208                     
  1724                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:     if(_dc_motor==((void*)0)){
  1725   003208  5017               	movf	dc_motor_stop@_dc_motor^0,w,c
  1726   00320A  1018               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  1727   00320C  A4D8               	btfss	status,2,c
  1728   00320E  EF0B  F019         	goto	u3871
  1729   003212  EF0D  F019         	goto	u3870
  1730   003216                     u3871:
  1731   003216  EF11  F019         	goto	l4840
  1732   00321A                     u3870:
  1733   00321A                     
  1734                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:         ret=(Std_ReturnType)0x00;
  1735   00321A  0E00               	movlw	0
  1736   00321C  6E19               	movwf	dc_motor_stop@ret^0,c
  1737                           
  1738                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 59:     }
  1739   00321E  EF25  F019         	goto	l4842
  1740   003222                     l4840:
  1741                           
  1742                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
  1743   003222  C017  F00D         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@pin_config
  1744   003226  C018  F00E         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1745   00322A  0E00               	movlw	0
  1746   00322C  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1747   00322E  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1748   003232  6E19               	movwf	dc_motor_stop@ret^0,c
  1749                           
  1750                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
  1751   003234  0E01               	movlw	1
  1752   003236  2417               	addwf	dc_motor_stop@_dc_motor^0,w,c
  1753   003238  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  1754   00323A  0E00               	movlw	0
  1755   00323C  2018               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  1756   00323E  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1757   003240  0E00               	movlw	0
  1758   003242  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1759   003244  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1760   003248  6E19               	movwf	dc_motor_stop@ret^0,c
  1761   00324A                     l4842:
  1762                           
  1763                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:       return ret;
  1764   00324A  5019               	movf	dc_motor_stop@ret^0,w,c
  1765   00324C  0012               	return		;funcret
  1766   00324E                     __end_of_dc_motor_stop:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _dc_motor_move_right *****************
  1770 ;; Defined at:
  1771 ;;		line 23 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  _dc_motor       2   22[COMRAM] PTR const struct .
  1774 ;;		 -> dc_motor_1(2), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  ret             1   24[COMRAM] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      unsigned char 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 5
  1793 ;; This function calls:
  1794 ;;		_gpio_pin_write_logic
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text5
  1801   00324E                     __ptext5:
  1802                           	callstack 0
  1803   00324E                     _dc_motor_move_right:
  1804                           	callstack 25
  1805   00324E                     
  1806                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:     if(_dc_motor==((void*)0)){
  1807   00324E  5017               	movf	dc_motor_move_right@_dc_motor^0,w,c
  1808   003250  1018               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  1809   003252  A4D8               	btfss	status,2,c
  1810   003254  EF2E  F019         	goto	u3851
  1811   003258  EF30  F019         	goto	u3850
  1812   00325C                     u3851:
  1813   00325C  EF34  F019         	goto	l4816
  1814   003260                     u3850:
  1815   003260                     
  1816                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         ret=(Std_ReturnType)0x00;
  1817   003260  0E00               	movlw	0
  1818   003262  6E19               	movwf	dc_motor_move_right@ret^0,c
  1819                           
  1820                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:     }
  1821   003264  EF48  F019         	goto	l4818
  1822   003268                     l4816:
  1823                           
  1824                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),HIGH);
  1825   003268  C017  F00D         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@pin_config
  1826   00326C  C018  F00E         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1827   003270  0E01               	movlw	1
  1828   003272  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1829   003274  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1830   003278  6E19               	movwf	dc_motor_move_right@ret^0,c
  1831                           
  1832                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
  1833   00327A  0E01               	movlw	1
  1834   00327C  2417               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  1835   00327E  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  1836   003280  0E00               	movlw	0
  1837   003282  2018               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  1838   003284  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1839   003286  0E00               	movlw	0
  1840   003288  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1841   00328A  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1842   00328E  6E19               	movwf	dc_motor_move_right@ret^0,c
  1843   003290                     l4818:
  1844                           
  1845                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 32:     return ret;
  1846   003290  5019               	movf	dc_motor_move_right@ret^0,w,c
  1847   003292  0012               	return		;funcret
  1848   003294                     __end_of_dc_motor_move_right:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _dc_motor_move_left *****************
  1852 ;; Defined at:
  1853 ;;		line 39 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  _dc_motor       2   22[COMRAM] PTR const struct .
  1856 ;;		 -> dc_motor_2(2), 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  ret             1   24[COMRAM] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      unsigned char 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;Total ram usage:        3 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 5
  1875 ;; This function calls:
  1876 ;;		_gpio_pin_write_logic
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text6
  1883   003294                     __ptext6:
  1884                           	callstack 0
  1885   003294                     _dc_motor_move_left:
  1886                           	callstack 25
  1887   003294                     
  1888                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     if(_dc_motor==((void*)0)){
  1889   003294  5017               	movf	dc_motor_move_left@_dc_motor^0,w,c
  1890   003296  1018               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
  1891   003298  A4D8               	btfss	status,2,c
  1892   00329A  EF51  F019         	goto	u3861
  1893   00329E  EF53  F019         	goto	u3860
  1894   0032A2                     u3861:
  1895   0032A2  EF57  F019         	goto	l4828
  1896   0032A6                     u3860:
  1897   0032A6                     
  1898                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         ret=(Std_ReturnType)0x00;
  1899   0032A6  0E00               	movlw	0
  1900   0032A8  6E19               	movwf	dc_motor_move_left@ret^0,c
  1901                           
  1902                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
  1903   0032AA  EF6B  F019         	goto	l4830
  1904   0032AE                     l4828:
  1905                           
  1906                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
  1907   0032AE  C017  F00D         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@pin_config
  1908   0032B2  C018  F00E         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1909   0032B6  0E00               	movlw	0
  1910   0032B8  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1911   0032BA  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1912   0032BE  6E19               	movwf	dc_motor_move_left@ret^0,c
  1913                           
  1914                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),HIGH);
  1915   0032C0  0E01               	movlw	1
  1916   0032C2  2417               	addwf	dc_motor_move_left@_dc_motor^0,w,c
  1917   0032C4  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  1918   0032C6  0E00               	movlw	0
  1919   0032C8  2018               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
  1920   0032CA  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1921   0032CC  0E01               	movlw	1
  1922   0032CE  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  1923   0032D0  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  1924   0032D4  6E19               	movwf	dc_motor_move_left@ret^0,c
  1925   0032D6                     l4830:
  1926                           
  1927                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 48:       return ret;
  1928   0032D6  5019               	movf	dc_motor_move_left@ret^0,w,c
  1929   0032D8  0012               	return		;funcret
  1930   0032DA                     __end_of_dc_motor_move_left:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _convert_uint16_to_string *****************
  1934 ;; Defined at:
  1935 ;;		line 349 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  value           2   96[COMRAM] unsigned int 
  1938 ;;  str             2   98[COMRAM] PTR unsigned char 
  1939 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  Temp_str        6    0[BANK0 ] unsigned char [6]
  1942 ;;  cnt             1    7[BANK0 ] unsigned char 
  1943 ;;  ret             1    6[BANK0 ] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      unsigned char 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:       12 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 12
  1960 ;; This function calls:
  1961 ;;		_memset
  1962 ;;		_sprintf
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text7
  1969   002A9A                     __ptext7:
  1970                           	callstack 0
  1971   002A9A                     _convert_uint16_to_string:
  1972                           	callstack 18
  1973   002A9A                     
  1974                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 350:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1975   002A9A  0E01               	movlw	1
  1976   002A9C  0100               	movlb	0	; () banked
  1977   002A9E  6FF3               	movwf	convert_uint16_to_string@ret& (0+255),b
  1978   002AA0                     
  1979                           ; BSR set to: 0
  1980                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 351:    uint8 Temp_str[6]={0};
  1981   002AA0  EE20  F0ED         	lfsr	2,convert_uint16_to_string@Temp_str
  1982   002AA4  0E05               	movlw	5
  1983   002AA6                     u6011:
  1984   002AA6  6ADE               	clrf	postinc2,c
  1985   002AA8  06E8               	decf	wreg,f,c
  1986   002AAA  E2FD               	bc	u6011
  1987   002AAC                     
  1988                           ; BSR set to: 0
  1989                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:    uint8 cnt =0;
  1990   002AAC  0E00               	movlw	0
  1991   002AAE  6FF4               	movwf	convert_uint16_to_string@cnt& (0+255),b
  1992   002AB0                     
  1993                           ; BSR set to: 0
  1994                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 353:     if(str==((void*)0)){
  1995   002AB0  5063               	movf	convert_uint16_to_string@str^0,w,c
  1996   002AB2  1064               	iorwf	(convert_uint16_to_string@str+1)^0,w,c
  1997   002AB4  A4D8               	btfss	status,2,c
  1998   002AB6  EF5F  F015         	goto	u6021
  1999   002ABA  EF61  F015         	goto	u6020
  2000   002ABE                     u6021:
  2001   002ABE  EF65  F015         	goto	l6540
  2002   002AC2                     u6020:
  2003   002AC2                     
  2004                           ; BSR set to: 0
  2005                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 354:         ret=(Std_ReturnType)0x00;
  2006   002AC2  0E00               	movlw	0
  2007   002AC4  6FF3               	movwf	convert_uint16_to_string@ret& (0+255),b
  2008                           
  2009                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 355:     }
  2010   002AC6  EFA8  F015         	goto	l6552
  2011   002ACA                     l6540:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 357:         memset(str,' ',6);
  2015   002ACA  C063  F00D         	movff	convert_uint16_to_string@str,memset@dest
  2016   002ACE  C064  F00E         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2017   002AD2  0E00               	movlw	0
  2018   002AD4  6E10               	movwf	(memset@c+1)^0,c
  2019   002AD6  0E20               	movlw	32
  2020   002AD8  6E0F               	movwf	memset@c^0,c
  2021   002ADA  0E00               	movlw	0
  2022   002ADC  6E12               	movwf	(memset@n+1)^0,c
  2023   002ADE  0E06               	movlw	6
  2024   002AE0  6E11               	movwf	memset@n^0,c
  2025   002AE2  ECB5  F00F         	call	_memset	;wreg free
  2026   002AE6                     
  2027                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 358:         sprintf(Temp_str,"%i",value);
  2028   002AE6  0EED               	movlw	low convert_uint16_to_string@Temp_str
  2029   002AE8  6E4B               	movwf	sprintf@s^0,c
  2030   002AEA  0E00               	movlw	high convert_uint16_to_string@Temp_str
  2031   002AEC  6E4C               	movwf	(sprintf@s+1)^0,c
  2032   002AEE  0E2F               	movlw	low STR_1
  2033   002AF0  6E4D               	movwf	sprintf@fmt^0,c
  2034   002AF2  0E10               	movlw	high STR_1
  2035   002AF4  6E4E               	movwf	(sprintf@fmt+1)^0,c
  2036   002AF6  C061  F04F         	movff	convert_uint16_to_string@value,?_sprintf+4
  2037   002AFA  C062  F050         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2038   002AFE  ECDE  F018         	call	_sprintf	;wreg free
  2039                           
  2040                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:         while (Temp_str[cnt] != '\0'){
  2041   002B02  EF92  F015         	goto	l6548
  2042   002B06                     l6544:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 360:             str[cnt] = Temp_str [cnt];
  2046   002B06  0EED               	movlw	low convert_uint16_to_string@Temp_str
  2047   002B08  25F4               	addwf	convert_uint16_to_string@cnt& (0+255),w,b
  2048   002B0A  6ED9               	movwf	fsr2l,c
  2049   002B0C  6ADA               	clrf	fsr2h,c
  2050   002B0E  0E00               	movlw	high convert_uint16_to_string@Temp_str
  2051   002B10  22DA               	addwfc	fsr2h,f,c
  2052   002B12  51F4               	movf	convert_uint16_to_string@cnt& (0+255),w,b
  2053   002B14  2463               	addwf	convert_uint16_to_string@str^0,w,c
  2054   002B16  6EE1               	movwf	fsr1l,c
  2055   002B18  0E00               	movlw	0
  2056   002B1A  2064               	addwfc	(convert_uint16_to_string@str+1)^0,w,c
  2057   002B1C  6EE2               	movwf	fsr1h,c
  2058   002B1E  CFDF FFE7          	movff	indf2,indf1
  2059   002B22                     
  2060                           ; BSR set to: 0
  2061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 361:             cnt++;
  2062   002B22  2BF4               	incf	convert_uint16_to_string@cnt& (0+255),f,b
  2063   002B24                     l6548:
  2064                           
  2065                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:         while (Temp_str[cnt] != '\0'){
  2066   002B24  0EED               	movlw	low convert_uint16_to_string@Temp_str
  2067   002B26  0100               	movlb	0	; () banked
  2068   002B28  25F4               	addwf	convert_uint16_to_string@cnt& (0+255),w,b
  2069   002B2A  6ED9               	movwf	fsr2l,c
  2070   002B2C  6ADA               	clrf	fsr2h,c
  2071   002B2E  0E00               	movlw	high convert_uint16_to_string@Temp_str
  2072   002B30  22DA               	addwfc	fsr2h,f,c
  2073   002B32  50DF               	movf	indf2,w,c
  2074   002B34  A4D8               	btfss	status,2,c
  2075   002B36  EF9F  F015         	goto	u6031
  2076   002B3A  EFA1  F015         	goto	u6030
  2077   002B3E                     u6031:
  2078   002B3E  EF83  F015         	goto	l6544
  2079   002B42                     u6030:
  2080   002B42                     
  2081                           ; BSR set to: 0
  2082                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 363:         str[5] = '\0';
  2083   002B42  EE20 F005          	lfsr	2,5
  2084   002B46  5063               	movf	convert_uint16_to_string@str^0,w,c
  2085   002B48  26D9               	addwf	fsr2l,f,c
  2086   002B4A  5064               	movf	(convert_uint16_to_string@str+1)^0,w,c
  2087   002B4C  22DA               	addwfc	fsr2h,f,c
  2088   002B4E  6ADF               	clrf	indf2,c
  2089   002B50                     l6552:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 365:     return ret;
  2093   002B50  51F3               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2094   002B52                     
  2095                           ; BSR set to: 0
  2096   002B52  0012               	return		;funcret
  2097   002B54                     __end_of_convert_uint16_to_string:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _sprintf *****************
  2101 ;; Defined at:
  2102 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  s               2   74[COMRAM] PTR unsigned char 
  2105 ;;		 -> convert_uint32_to_string@Temp_str(11), convert_uint16_to_string@Temp_str(6), convert_uint8_to_string@Temp_str(4)
      +, 
  2106 ;;  fmt             2   76[COMRAM] PTR const unsigned char 
  2107 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  f              12   84[COMRAM] struct _IO_FILE
  2110 ;;  ap              2   82[COMRAM] PTR void [1]
  2111 ;;		 -> ?_sprintf(2), 
  2112 ;;  ret             2    0        int 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2   74[COMRAM] int 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;Total ram usage:       22 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 11
  2129 ;; This function calls:
  2130 ;;		_vfprintf
  2131 ;; This function is called by:
  2132 ;;		_convert_uint16_to_string
  2133 ;;		_convert_uint8_to_string
  2134 ;;		_convert_uint32_to_string
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text8
  2139   0031BC                     __ptext8:
  2140                           	callstack 0
  2141   0031BC                     _sprintf:
  2142                           	callstack 18
  2143   0031BC  0E4F               	movlw	low (?_sprintf+4)
  2144   0031BE  6E53               	movwf	sprintf@ap^0,c
  2145   0031C0  0E00               	movlw	high (?_sprintf+4)
  2146   0031C2  6E54               	movwf	(sprintf@ap+1)^0,c
  2147   0031C4  C04B  F055         	movff	sprintf@s,sprintf@f
  2148   0031C8  C04C  F056         	movff	sprintf@s+1,sprintf@f+1
  2149   0031CC  0E00               	movlw	0
  2150   0031CE  6E59               	movwf	(sprintf@f+4)^0,c
  2151   0031D0  0E00               	movlw	0
  2152   0031D2  6E58               	movwf	(sprintf@f+3)^0,c
  2153   0031D4  0E00               	movlw	0
  2154   0031D6  6E60               	movwf	(sprintf@f+11)^0,c
  2155   0031D8  0E00               	movlw	0
  2156   0031DA  6E5F               	movwf	(sprintf@f+10)^0,c
  2157   0031DC  0E55               	movlw	low sprintf@f
  2158   0031DE  6E43               	movwf	vfprintf@fp^0,c
  2159   0031E0  0E00               	movlw	high sprintf@f
  2160   0031E2  6E44               	movwf	(vfprintf@fp+1)^0,c
  2161   0031E4  C04D  F045         	movff	sprintf@fmt,vfprintf@fmt
  2162   0031E8  C04E  F046         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2163   0031EC  0E53               	movlw	low sprintf@ap
  2164   0031EE  6E47               	movwf	vfprintf@ap^0,c
  2165   0031F0  0E00               	movlw	high sprintf@ap
  2166   0031F2  6E48               	movwf	(vfprintf@ap+1)^0,c
  2167   0031F4  EC68  F018         	call	_vfprintf	;wreg free
  2168   0031F8  5058               	movf	(sprintf@f+3)^0,w,c
  2169   0031FA  244B               	addwf	sprintf@s^0,w,c
  2170   0031FC  6ED9               	movwf	fsr2l,c
  2171   0031FE  5059               	movf	(sprintf@f+4)^0,w,c
  2172   003200  204C               	addwfc	(sprintf@s+1)^0,w,c
  2173   003202  6EDA               	movwf	fsr2h,c
  2174   003204  6ADF               	clrf	indf2,c
  2175   003206  0012               	return		;funcret
  2176   003208                     __end_of_sprintf:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _vfprintf *****************
  2180 ;; Defined at:
  2181 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2184 ;;		 -> sprintf@f(12), 
  2185 ;;  fmt             2   68[COMRAM] PTR const unsigned char 
  2186 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2187 ;;  ap              2   70[COMRAM] PTR PTR void 
  2188 ;;		 -> sprintf@ap(2), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  cfmt            2   72[COMRAM] PTR unsigned char 
  2191 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   66[COMRAM] int 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2201 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;Total ram usage:        8 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 10
  2208 ;; This function calls:
  2209 ;;		_vfpfcnvrt
  2210 ;; This function is called by:
  2211 ;;		_sprintf
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text9
  2216   0030D0                     __ptext9:
  2217                           	callstack 0
  2218   0030D0                     _vfprintf:
  2219                           	callstack 18
  2220   0030D0                     
  2221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2222   0030D0  C045  F049         	movff	vfprintf@fmt,vfprintf@cfmt
  2223   0030D4  C046  F04A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2226   0030D8  EF7C  F018         	goto	l6480
  2227   0030DC                     l6478:
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2230   0030DC  C043  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2231   0030E0  C044  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2232   0030E4  0E49               	movlw	low vfprintf@cfmt
  2233   0030E6  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2234   0030E8  0E00               	movlw	high vfprintf@cfmt
  2235   0030EA  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2236   0030EC  C047  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2237   0030F0  C048  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2238   0030F4  ECC6  F011         	call	_vfpfcnvrt	;wreg free
  2239   0030F8                     l6480:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2242   0030F8  C049  FFF6         	movff	vfprintf@cfmt,tblptrl
  2243   0030FC  C04A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2244   003100                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2245   003100  6AF8               	clrf	tblptru,c
  2246   003102                     	endif
  2247   003102                     	if	0	;tblptru may be non-zero
  2248   003102                     	endif
  2249   003102  0008               	tblrd		*
  2250   003104  50F5               	movf	tablat,w,c
  2251   003106  0900               	iorlw	0
  2252   003108  A4D8               	btfss	status,2,c
  2253   00310A  EF89  F018         	goto	u5951
  2254   00310E  EF8B  F018         	goto	u5950
  2255   003112                     u5951:
  2256   003112  EF6E  F018         	goto	l6478
  2257   003116                     u5950:
  2258   003116                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2260   003116  0E00               	movlw	0
  2261   003118  6E44               	movwf	(?_vfprintf+1)^0,c
  2262   00311A  0E00               	movlw	0
  2263   00311C  6E43               	movwf	?_vfprintf^0,c
  2264   00311E  0012               	return		;funcret
  2265   003120                     __end_of_vfprintf:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _vfpfcnvrt *****************
  2269 ;; Defined at:
  2270 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2273 ;;		 -> sprintf@f(12), 
  2274 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2275 ;;		 -> vfprintf@cfmt(2), 
  2276 ;;  ap              2   56[COMRAM] PTR PTR void 
  2277 ;;		 -> sprintf@ap(2), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  convarg         4   60[COMRAM] struct .
  2280 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2281 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2282 ;;  i               2    0        int 
  2283 ;;  done            2    0        int 
  2284 ;;  c               1    0        unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:       14 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 9
  2301 ;; This function calls:
  2302 ;;		_dtoa
  2303 ;;		_fputc
  2304 ;; This function is called by:
  2305 ;;		_vfprintf
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text10
  2310   00238C                     __ptext10:
  2311                           	callstack 0
  2312   00238C                     _vfpfcnvrt:
  2313                           	callstack 18
  2314   00238C                     
  2315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2316   00238C  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2317   002390  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2318   002394  CFDE FFF6          	movff	postinc2,tblptrl
  2319   002398  CFDD FFF7          	movff	postdec2,tblptrh
  2320   00239C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2321   00239C  6AF8               	clrf	tblptru,c
  2322   00239E                     	endif
  2323   00239E                     	if	0	;tblptru may be non-zero
  2324   00239E                     	endif
  2325   00239E  0008               	tblrd		*
  2326   0023A0  50F5               	movf	tablat,w,c
  2327   0023A2  0A25               	xorlw	37
  2328   0023A4  A4D8               	btfss	status,2,c
  2329   0023A6  EFD7  F011         	goto	u5921
  2330   0023AA  EFD9  F011         	goto	u5920
  2331   0023AE                     u5921:
  2332   0023AE  EF46  F012         	goto	l6470
  2333   0023B2                     u5920:
  2334   0023B2                     
  2335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2336   0023B2  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2337   0023B6  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2338   0023BA  2ADE               	incf	postinc2,f,c
  2339   0023BC  0E00               	movlw	0
  2340   0023BE  22DD               	addwfc	postdec2,f,c
  2341   0023C0                     
  2342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2343   0023C0  0E00               	movlw	0
  2344   0023C2  0100               	movlb	0	; () banked
  2345   0023C4  6F96               	movwf	(_width+1)& (0+255),b
  2346   0023C6  0E00               	movlw	0
  2347   0023C8  6F95               	movwf	_width& (0+255),b
  2348   0023CA  C095  F065         	movff	_width,_flags
  2349   0023CE                     
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2352   0023CE  6997               	setf	_prec& (0+255),b
  2353   0023D0  6998               	setf	(_prec+1)& (0+255),b
  2354   0023D2                     
  2355                           ; BSR set to: 0
  2356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2357   0023D2  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358   0023D6  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359   0023DA  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  2360   0023DE  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  2361   0023E2                     
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2364   0023E2  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2365   0023E6  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2366   0023EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2367   0023EA  6AF8               	clrf	tblptru,c
  2368   0023EC                     	endif
  2369   0023EC                     	if	0	;tblptru may be non-zero
  2370   0023EC                     	endif
  2371   0023EC  0008               	tblrd		*
  2372   0023EE  50F5               	movf	tablat,w,c
  2373   0023F0  0A64               	xorlw	100
  2374   0023F2  B4D8               	btfsc	status,2,c
  2375   0023F4  EFFE  F011         	goto	u5931
  2376   0023F8  EF00  F012         	goto	u5930
  2377   0023FC                     u5931:
  2378   0023FC  EF0F  F012         	goto	l6460
  2379   002400                     u5930:
  2380   002400                     
  2381                           ; BSR set to: 0
  2382   002400  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2383   002404  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2384   002408                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2385   002408  6AF8               	clrf	tblptru,c
  2386   00240A                     	endif
  2387   00240A                     	if	0	;tblptru may be non-zero
  2388   00240A                     	endif
  2389   00240A  0008               	tblrd		*
  2390   00240C  50F5               	movf	tablat,w,c
  2391   00240E  0A69               	xorlw	105
  2392   002410  A4D8               	btfss	status,2,c
  2393   002412  EF0D  F012         	goto	u5941
  2394   002416  EF0F  F012         	goto	u5940
  2395   00241A                     u5941:
  2396   00241A  EF3D  F012         	goto	l6466
  2397   00241E                     u5940:
  2398   00241E                     l6460:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2402   00241E  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2403   002422  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2404   002426  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2405   00242A  0E02               	movlw	2
  2406   00242C  26DE               	addwf	postinc2,f,c
  2407   00242E  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2408   002432  0E00               	movlw	0
  2409   002434  22DD               	addwfc	postdec2,f,c
  2410   002436  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2411   00243A  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2412   00243E  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg
  2413   002442  CFDD F03E          	movff	postdec2,vfpfcnvrt@convarg+1
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2416   002446  0E01               	movlw	1
  2417   002448  2441               	addwf	vfpfcnvrt@cp^0,w,c
  2418   00244A  6E3B               	movwf	??_vfpfcnvrt^0,c
  2419   00244C  0E00               	movlw	0
  2420   00244E  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2421   002450  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2422   002452  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423   002456  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424   00245A  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2425   00245E  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2426   002462                     
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2429   002462  C035  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  2430   002466  C036  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2431   00246A  C03D  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  2432   00246E  C03E  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2433   002472  EC22  F00E         	call	_dtoa	;wreg free
  2434   002476  EF5B  F012         	goto	l1704
  2435   00247A                     l6466:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2438   00247A  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2439   00247E  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2440   002482  2ADE               	incf	postinc2,f,c
  2441   002484  0E00               	movlw	0
  2442   002486  22DD               	addwfc	postdec2,f,c
  2443   002488  EF5B  F012         	goto	l1704
  2444   00248C                     l6470:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2447   00248C  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2448   002490  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2449   002494  CFDE FFF6          	movff	postinc2,tblptrl
  2450   002498  CFDD FFF7          	movff	postdec2,tblptrh
  2451   00249C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2452   00249C  6AF8               	clrf	tblptru,c
  2453   00249E                     	endif
  2454   00249E                     	if	0	;tblptru may be non-zero
  2455   00249E                     	endif
  2456   00249E  0008               	tblrd		*
  2457   0024A0  50F5               	movf	tablat,w,c
  2458   0024A2  6E0D               	movwf	fputc@c^0,c
  2459   0024A4  6A0E               	clrf	(fputc@c+1)^0,c
  2460   0024A6  C035  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2461   0024AA  C036  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2462   0024AE  EC26  F014         	call	_fputc	;wreg free
  2463   0024B2  EF3D  F012         	goto	l6466
  2464   0024B6                     l1704:
  2465   0024B6  0012               	return		;funcret
  2466   0024B8                     __end_of_vfpfcnvrt:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _dtoa *****************
  2470 ;; Defined at:
  2471 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2474 ;;		 -> sprintf@f(12), 
  2475 ;;  d               2   41[COMRAM] int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  i               2   50[COMRAM] int 
  2478 ;;  w               2   47[COMRAM] int 
  2479 ;;  p               2   45[COMRAM] int 
  2480 ;;  s               1   49[COMRAM] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:       13 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 8
  2497 ;; This function calls:
  2498 ;;		___awdiv
  2499 ;;		___awmod
  2500 ;;		_abs
  2501 ;;		_pad
  2502 ;; This function is called by:
  2503 ;;		_vfpfcnvrt
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text11
  2508   001C44                     __ptext11:
  2509                           	callstack 0
  2510   001C44                     _dtoa:
  2511                           	callstack 18
  2512   001C44                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2514   001C44  BE2B               	btfsc	(dtoa@d+1)^0,7,c
  2515   001C46  EF27  F00E         	goto	u5821
  2516   001C4A  EF2A  F00E         	goto	u5820
  2517   001C4E                     u5821:
  2518   001C4E  0E01               	movlw	1
  2519   001C50  EF2B  F00E         	goto	u5830
  2520   001C54                     u5820:
  2521   001C54  0E00               	movlw	0
  2522   001C56                     u5830:
  2523   001C56  6E32               	movwf	dtoa@s^0,c
  2524   001C58                     
  2525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2526   001C58  5032               	movf	dtoa@s^0,w,c
  2527   001C5A  B4D8               	btfsc	status,2,c
  2528   001C5C  EF32  F00E         	goto	u5841
  2529   001C60  EF34  F00E         	goto	u5840
  2530   001C64                     u5841:
  2531   001C64  EF38  F00E         	goto	l6402
  2532   001C68                     u5840:
  2533   001C68                     
  2534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2535   001C68  6C2A               	negf	dtoa@d^0,c
  2536   001C6A  1E2B               	comf	(dtoa@d+1)^0,f,c
  2537   001C6C  B0D8               	btfsc	status,0,c
  2538   001C6E  2A2B               	incf	(dtoa@d+1)^0,f,c
  2539   001C70                     l6402:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2542   001C70  0100               	movlb	0	; () banked
  2543   001C72  BF98               	btfsc	(_prec+1)& (0+255),7,b
  2544   001C74  EF40  F00E         	goto	u5850
  2545   001C78  EF3E  F00E         	goto	u5851
  2546   001C7C                     u5851:
  2547   001C7C  EF46  F00E         	goto	l1683
  2548   001C80                     u5850:
  2549   001C80                     
  2550                           ; BSR set to: 0
  2551   001C80  0E00               	movlw	0
  2552   001C82  6E2F               	movwf	(dtoa@p+1)^0,c
  2553   001C84  0E01               	movlw	1
  2554   001C86  6E2E               	movwf	dtoa@p^0,c
  2555   001C88  EF4A  F00E         	goto	l1685
  2556   001C8C                     l1683:
  2557                           
  2558                           ; BSR set to: 0
  2559   001C8C  C097  F02E         	movff	_prec,dtoa@p
  2560   001C90  C098  F02F         	movff	_prec+1,dtoa@p+1
  2561   001C94                     l1685:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2565   001C94  C095  F030         	movff	_width,dtoa@w
  2566   001C98  C096  F031         	movff	_width+1,dtoa@w+1
  2567   001C9C                     
  2568                           ; BSR set to: 0
  2569                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2570   001C9C  5032               	movf	dtoa@s^0,w,c
  2571   001C9E  B4D8               	btfsc	status,2,c
  2572   001CA0  EF54  F00E         	goto	u5861
  2573   001CA4  EF56  F00E         	goto	u5860
  2574   001CA8                     u5861:
  2575   001CA8  EF6D  F00E         	goto	l1686
  2576   001CAC                     u5860:
  2577   001CAC                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2580   001CAC  0630               	decf	dtoa@w^0,f,c
  2581   001CAE  A0D8               	btfss	status,0,c
  2582   001CB0  0631               	decf	(dtoa@w+1)^0,f,c
  2583   001CB2                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2586   001CB2  5032               	movf	dtoa@s^0,w,c
  2587   001CB4  A4D8               	btfss	status,2,c
  2588   001CB6  EF5F  F00E         	goto	u5871
  2589   001CBA  EF61  F00E         	goto	u5870
  2590   001CBE                     u5871:
  2591   001CBE  EF67  F00E         	goto	l6414
  2592   001CC2                     u5870:
  2593   001CC2                     
  2594                           ; BSR set to: 0
  2595   001CC2  0E00               	movlw	0
  2596   001CC4  6E2D               	movwf	(_dtoa$2150+1)^0,c
  2597   001CC6  0E2B               	movlw	43
  2598   001CC8  6E2C               	movwf	_dtoa$2150^0,c
  2599   001CCA  EF6B  F00E         	goto	l6416
  2600   001CCE                     l6414:
  2601                           
  2602                           ; BSR set to: 0
  2603   001CCE  0E00               	movlw	0
  2604   001CD0  6E2D               	movwf	(_dtoa$2150+1)^0,c
  2605   001CD2  0E2D               	movlw	45
  2606   001CD4  6E2C               	movwf	_dtoa$2150^0,c
  2607   001CD6                     l6416:
  2608                           
  2609                           ; BSR set to: 0
  2610   001CD6  C02C  F032         	movff	_dtoa$2150,dtoa@s
  2611   001CDA                     l1686:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2615   001CDA  0E00               	movlw	0
  2616   001CDC  6E34               	movwf	(dtoa@i+1)^0,c
  2617   001CDE  0E1F               	movlw	31
  2618   001CE0  6E33               	movwf	dtoa@i^0,c
  2619   001CE2                     
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2622   001CE2  0E00               	movlw	0
  2623   001CE4  0101               	movlb	1	; () banked
  2624   001CE6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2627   001CE8  EFA6  F00E         	goto	l6430
  2628   001CEC                     l6420:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2631   001CEC  0633               	decf	dtoa@i^0,f,c
  2632   001CEE  A0D8               	btfss	status,0,c
  2633   001CF0  0634               	decf	(dtoa@i+1)^0,f,c
  2634   001CF2                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2636   001CF2  0E00               	movlw	low _dbuf
  2637   001CF4  2433               	addwf	dtoa@i^0,w,c
  2638   001CF6  6ED9               	movwf	fsr2l,c
  2639   001CF8  0E01               	movlw	high _dbuf
  2640   001CFA  2034               	addwfc	(dtoa@i+1)^0,w,c
  2641   001CFC  6EDA               	movwf	fsr2h,c
  2642   001CFE  C02A  F00D         	movff	dtoa@d,___awmod@dividend
  2643   001D02  C02B  F00E         	movff	dtoa@d+1,___awmod@dividend+1
  2644   001D06  0E00               	movlw	0
  2645   001D08  6E10               	movwf	(___awmod@divisor+1)^0,c
  2646   001D0A  0E0A               	movlw	10
  2647   001D0C  6E0F               	movwf	___awmod@divisor^0,c
  2648   001D0E  EC02  F016         	call	___awmod	;wreg free
  2649   001D12  C00D  F013         	movff	?___awmod,abs@a
  2650   001D16  C00E  F014         	movff	?___awmod+1,abs@a+1
  2651   001D1A  EC8F  F019         	call	_abs	;wreg free
  2652   001D1E  5013               	movf	?_abs^0,w,c
  2653   001D20  0F30               	addlw	48
  2654   001D22  6EDF               	movwf	indf2,c
  2655   001D24                     
  2656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2657   001D24  062E               	decf	dtoa@p^0,f,c
  2658   001D26  A0D8               	btfss	status,0,c
  2659   001D28  062F               	decf	(dtoa@p+1)^0,f,c
  2660   001D2A                     
  2661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2662   001D2A  0630               	decf	dtoa@w^0,f,c
  2663   001D2C  A0D8               	btfss	status,0,c
  2664   001D2E  0631               	decf	(dtoa@w+1)^0,f,c
  2665   001D30                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2667   001D30  C02A  F00D         	movff	dtoa@d,___awdiv@dividend
  2668   001D34  C02B  F00E         	movff	dtoa@d+1,___awdiv@dividend+1
  2669   001D38  0E00               	movlw	0
  2670   001D3A  6E10               	movwf	(___awdiv@divisor+1)^0,c
  2671   001D3C  0E0A               	movlw	10
  2672   001D3E  6E0F               	movwf	___awdiv@divisor^0,c
  2673   001D40  EC8B  F014         	call	___awdiv	;wreg free
  2674   001D44  C00D  F02A         	movff	?___awdiv,dtoa@d
  2675   001D48  C00E  F02B         	movff	?___awdiv+1,dtoa@d+1
  2676   001D4C                     l6430:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2679   001D4C  BE34               	btfsc	(dtoa@i+1)^0,7,c
  2680   001D4E  EFB1  F00E         	goto	u5881
  2681   001D52  5034               	movf	(dtoa@i+1)^0,w,c
  2682   001D54  E108               	bnz	u5880
  2683   001D56  0433               	decf	dtoa@i^0,w,c
  2684   001D58  A0D8               	btfss	status,0,c
  2685   001D5A  EFB1  F00E         	goto	u5881
  2686   001D5E  EFB3  F00E         	goto	u5880
  2687   001D62                     u5881:
  2688   001D62  EFC9  F00E         	goto	l6436
  2689   001D66                     u5880:
  2690   001D66  502A               	movf	dtoa@d^0,w,c
  2691   001D68  102B               	iorwf	(dtoa@d+1)^0,w,c
  2692   001D6A  A4D8               	btfss	status,2,c
  2693   001D6C  EFBA  F00E         	goto	u5891
  2694   001D70  EFBC  F00E         	goto	u5890
  2695   001D74                     u5891:
  2696   001D74  EF76  F00E         	goto	l6420
  2697   001D78                     u5890:
  2698   001D78  BE2F               	btfsc	(dtoa@p+1)^0,7,c
  2699   001D7A  EFC9  F00E         	goto	u5900
  2700   001D7E  502F               	movf	(dtoa@p+1)^0,w,c
  2701   001D80  E106               	bnz	u5901
  2702   001D82  042E               	decf	dtoa@p^0,w,c
  2703   001D84  B0D8               	btfsc	status,0,c
  2704   001D86  EFC7  F00E         	goto	u5901
  2705   001D8A  EFC9  F00E         	goto	u5900
  2706   001D8E                     u5901:
  2707   001D8E  EF76  F00E         	goto	l6420
  2708   001D92                     u5900:
  2709   001D92                     l6436:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2712   001D92  5032               	movf	dtoa@s^0,w,c
  2713   001D94  B4D8               	btfsc	status,2,c
  2714   001D96  EFCF  F00E         	goto	u5911
  2715   001D9A  EFD1  F00E         	goto	u5910
  2716   001D9E                     u5911:
  2717   001D9E  EFDC  F00E         	goto	l6442
  2718   001DA2                     u5910:
  2719   001DA2                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2721   001DA2  0633               	decf	dtoa@i^0,f,c
  2722   001DA4  A0D8               	btfss	status,0,c
  2723   001DA6  0634               	decf	(dtoa@i+1)^0,f,c
  2724   001DA8                     
  2725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2726   001DA8  0E00               	movlw	low _dbuf
  2727   001DAA  2433               	addwf	dtoa@i^0,w,c
  2728   001DAC  6ED9               	movwf	fsr2l,c
  2729   001DAE  0E01               	movlw	high _dbuf
  2730   001DB0  2034               	addwfc	(dtoa@i+1)^0,w,c
  2731   001DB2  6EDA               	movwf	fsr2h,c
  2732   001DB4  C032  FFDF         	movff	dtoa@s,indf2
  2733   001DB8                     l6442:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2736   001DB8  C028  F01D         	movff	dtoa@fp,pad@fp
  2737   001DBC  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  2738   001DC0  0E00               	movlw	low _dbuf
  2739   001DC2  2433               	addwf	dtoa@i^0,w,c
  2740   001DC4  6E1F               	movwf	pad@buf^0,c
  2741   001DC6  0E01               	movlw	high _dbuf
  2742   001DC8  2034               	addwfc	(dtoa@i+1)^0,w,c
  2743   001DCA  6E20               	movwf	(pad@buf+1)^0,c
  2744   001DCC  C030  F021         	movff	dtoa@w,pad@p
  2745   001DD0  C031  F022         	movff	dtoa@w+1,pad@p+1
  2746   001DD4  EC34  F017         	call	_pad	;wreg free
  2747   001DD8  0012               	return		;funcret
  2748   001DDA                     __end_of_dtoa:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function _pad *****************
  2752 ;; Defined at:
  2753 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2756 ;;		 -> sprintf@f(12), 
  2757 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2758 ;;		 -> dbuf(32), 
  2759 ;;  p               2   32[COMRAM] int 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  w               2   37[COMRAM] int 
  2762 ;;  i               2   35[COMRAM] int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:       11 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 7
  2779 ;; This function calls:
  2780 ;;		_fputc
  2781 ;;		_fputs
  2782 ;; This function is called by:
  2783 ;;		_dtoa
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text12
  2788   002E68                     __ptext12:
  2789                           	callstack 0
  2790   002E68                     _pad:
  2791                           	callstack 18
  2792   002E68                     
  2793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2794   002E68  BE22               	btfsc	(pad@p+1)^0,7,c
  2795   002E6A  EF39  F017         	goto	u5791
  2796   002E6E  EF3B  F017         	goto	u5790
  2797   002E72                     u5791:
  2798   002E72  EF41  F017         	goto	l6382
  2799   002E76                     u5790:
  2800   002E76  C021  F026         	movff	pad@p,pad@w
  2801   002E7A  C022  F027         	movff	pad@p+1,pad@w+1
  2802   002E7E  EF45  F017         	goto	l1674
  2803   002E82                     l6382:
  2804   002E82  0E00               	movlw	0
  2805   002E84  6E27               	movwf	(pad@w+1)^0,c
  2806   002E86  0E00               	movlw	0
  2807   002E88  6E26               	movwf	pad@w^0,c
  2808   002E8A                     l1674:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2811   002E8A  0E00               	movlw	0
  2812   002E8C  6E25               	movwf	(pad@i+1)^0,c
  2813   002E8E  0E00               	movlw	0
  2814   002E90  6E24               	movwf	pad@i^0,c
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2817   002E92  EF57  F017         	goto	l6388
  2818   002E96                     l6384:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2821   002E96  0E00               	movlw	0
  2822   002E98  6E0E               	movwf	(fputc@c+1)^0,c
  2823   002E9A  0E20               	movlw	32
  2824   002E9C  6E0D               	movwf	fputc@c^0,c
  2825   002E9E  C01D  F00F         	movff	pad@fp,fputc@fp
  2826   002EA2  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2827   002EA6  EC26  F014         	call	_fputc	;wreg free
  2828   002EAA                     
  2829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2830   002EAA  4A24               	infsnz	pad@i^0,f,c
  2831   002EAC  2A25               	incf	(pad@i+1)^0,f,c
  2832   002EAE                     l6388:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2835   002EAE  5026               	movf	pad@w^0,w,c
  2836   002EB0  5C24               	subwf	pad@i^0,w,c
  2837   002EB2  5025               	movf	(pad@i+1)^0,w,c
  2838   002EB4  0A80               	xorlw	128
  2839   002EB6  6E23               	movwf	??_pad^0,c
  2840   002EB8  5027               	movf	(pad@w+1)^0,w,c
  2841   002EBA  0A80               	xorlw	128
  2842   002EBC  5823               	subwfb	??_pad^0,w,c
  2843   002EBE  A0D8               	btfss	status,0,c
  2844   002EC0  EF64  F017         	goto	u5801
  2845   002EC4  EF66  F017         	goto	u5800
  2846   002EC8                     u5801:
  2847   002EC8  EF4B  F017         	goto	l6384
  2848   002ECC                     u5800:
  2849   002ECC                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2851   002ECC  C01F  F016         	movff	pad@buf,fputs@s
  2852   002ED0  C020  F017         	movff	pad@buf+1,fputs@s+1
  2853   002ED4  C01D  F018         	movff	pad@fp,fputs@fp
  2854   002ED8  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2855   002EDC  EC6D  F019         	call	_fputs	;wreg free
  2856   002EE0  0012               	return		;funcret
  2857   002EE2                     __end_of_pad:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _fputs *****************
  2861 ;; Defined at:
  2862 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2865 ;;		 -> dbuf(32), 
  2866 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2867 ;;		 -> sprintf@f(12), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  i               2   26[COMRAM] int 
  2870 ;;  c               1   25[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2   21[COMRAM] int 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;Total ram usage:        7 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 6
  2887 ;; This function calls:
  2888 ;;		_fputc
  2889 ;; This function is called by:
  2890 ;;		_pad
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text13
  2895   0032DA                     __ptext13:
  2896                           	callstack 0
  2897   0032DA                     _fputs:
  2898                           	callstack 18
  2899   0032DA  0E00               	movlw	0
  2900   0032DC  6E1C               	movwf	(fputs@i+1)^0,c
  2901   0032DE  0E00               	movlw	0
  2902   0032E0  6E1B               	movwf	fputs@i^0,c
  2903   0032E2  EF7E  F019         	goto	l6296
  2904   0032E6                     l6292:
  2905   0032E6  C01A  F00D         	movff	fputs@c,fputc@c
  2906   0032EA  6A0E               	clrf	(fputc@c+1)^0,c
  2907   0032EC  C018  F00F         	movff	fputs@fp,fputc@fp
  2908   0032F0  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2909   0032F4  EC26  F014         	call	_fputc	;wreg free
  2910   0032F8  4A1B               	infsnz	fputs@i^0,f,c
  2911   0032FA  2A1C               	incf	(fputs@i+1)^0,f,c
  2912   0032FC                     l6296:
  2913   0032FC  501B               	movf	fputs@i^0,w,c
  2914   0032FE  2416               	addwf	fputs@s^0,w,c
  2915   003300  6ED9               	movwf	fsr2l,c
  2916   003302  501C               	movf	(fputs@i+1)^0,w,c
  2917   003304  2017               	addwfc	(fputs@s+1)^0,w,c
  2918   003306  6EDA               	movwf	fsr2h,c
  2919   003308  50DF               	movf	indf2,w,c
  2920   00330A  6E1A               	movwf	fputs@c^0,c
  2921   00330C  501A               	movf	fputs@c^0,w,c
  2922   00330E  A4D8               	btfss	status,2,c
  2923   003310  EF8C  F019         	goto	u5661
  2924   003314  EF8E  F019         	goto	u5660
  2925   003318                     u5661:
  2926   003318  EF73  F019         	goto	l6292
  2927   00331C                     u5660:
  2928   00331C  0012               	return		;funcret
  2929   00331E                     __end_of_fputs:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _fputc *****************
  2933 ;; Defined at:
  2934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  c               2   12[COMRAM] int 
  2937 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2938 ;;		 -> sprintf@f(12), 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2   12[COMRAM] int 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;Total ram usage:        9 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 5
  2957 ;; This function calls:
  2958 ;;		_putch
  2959 ;; This function is called by:
  2960 ;;		_pad
  2961 ;;		_vfpfcnvrt
  2962 ;;		_fputs
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text14
  2967   00284C                     __ptext14:
  2968                           	callstack 0
  2969   00284C                     _fputc:
  2970                           	callstack 21
  2971   00284C  500F               	movf	fputc@fp^0,w,c
  2972   00284E  1010               	iorwf	(fputc@fp+1)^0,w,c
  2973   002850  B4D8               	btfsc	status,2,c
  2974   002852  EF2D  F014         	goto	u5621
  2975   002856  EF2F  F014         	goto	u5620
  2976   00285A                     u5621:
  2977   00285A  EF38  F014         	goto	l6280
  2978   00285E                     u5620:
  2979   00285E  500F               	movf	fputc@fp^0,w,c
  2980   002860  1010               	iorwf	(fputc@fp+1)^0,w,c
  2981   002862  A4D8               	btfss	status,2,c
  2982   002864  EF36  F014         	goto	u5631
  2983   002868  EF38  F014         	goto	u5630
  2984   00286C                     u5631:
  2985   00286C  EF3D  F014         	goto	l6282
  2986   002870                     u5630:
  2987   002870                     l6280:
  2988   002870  500D               	movf	fputc@c^0,w,c
  2989   002872  EC78  F01A         	call	_putch
  2990   002876  EF8A  F014         	goto	l1729
  2991   00287A                     l6282:
  2992   00287A  EE20 F00A          	lfsr	2,10
  2993   00287E  500F               	movf	fputc@fp^0,w,c
  2994   002880  26D9               	addwf	fsr2l,f,c
  2995   002882  5010               	movf	(fputc@fp+1)^0,w,c
  2996   002884  22DA               	addwfc	fsr2h,f,c
  2997   002886  50DE               	movf	postinc2,w,c
  2998   002888  10DE               	iorwf	postinc2,w,c
  2999   00288A  B4D8               	btfsc	status,2,c
  3000   00288C  EF4A  F014         	goto	u5641
  3001   002890  EF4C  F014         	goto	u5640
  3002   002894                     u5641:
  3003   002894  EF67  F014         	goto	l6286
  3004   002898                     u5640:
  3005   002898  EE20 F00A          	lfsr	2,10
  3006   00289C  500F               	movf	fputc@fp^0,w,c
  3007   00289E  26D9               	addwf	fsr2l,f,c
  3008   0028A0  5010               	movf	(fputc@fp+1)^0,w,c
  3009   0028A2  22DA               	addwfc	fsr2h,f,c
  3010   0028A4  EE10 F003          	lfsr	1,3
  3011   0028A8  500F               	movf	fputc@fp^0,w,c
  3012   0028AA  26E1               	addwf	fsr1l,f,c
  3013   0028AC  5010               	movf	(fputc@fp+1)^0,w,c
  3014   0028AE  22E2               	addwfc	fsr1h,f,c
  3015   0028B0  50DE               	movf	postinc2,w,c
  3016   0028B2  5CE6               	subwf	postinc1,w,c
  3017   0028B4  50E6               	movf	postinc1,w,c
  3018   0028B6  0A80               	xorlw	128
  3019   0028B8  6E15               	movwf	(??_fputc+4)^0,c
  3020   0028BA  50DE               	movf	postinc2,w,c
  3021   0028BC  0A80               	xorlw	128
  3022   0028BE  5815               	subwfb	(??_fputc+4)^0,w,c
  3023   0028C0  B0D8               	btfsc	status,0,c
  3024   0028C2  EF65  F014         	goto	u5651
  3025   0028C6  EF67  F014         	goto	u5650
  3026   0028CA                     u5651:
  3027   0028CA  EF8A  F014         	goto	l1729
  3028   0028CE                     u5650:
  3029   0028CE                     l6286:
  3030   0028CE  EE20 F003          	lfsr	2,3
  3031   0028D2  500F               	movf	fputc@fp^0,w,c
  3032   0028D4  26D9               	addwf	fsr2l,f,c
  3033   0028D6  5010               	movf	(fputc@fp+1)^0,w,c
  3034   0028D8  22DA               	addwfc	fsr2h,f,c
  3035   0028DA  CFDE F011          	movff	postinc2,??_fputc
  3036   0028DE  CFDD F012          	movff	postdec2,??_fputc+1
  3037   0028E2  C00F  FFD9         	movff	fputc@fp,fsr2l
  3038   0028E6  C010  FFDA         	movff	fputc@fp+1,fsr2h
  3039   0028EA  CFDE F013          	movff	postinc2,??_fputc+2
  3040   0028EE  CFDD F014          	movff	postdec2,??_fputc+3
  3041   0028F2  5011               	movf	??_fputc^0,w,c
  3042   0028F4  2413               	addwf	(??_fputc+2)^0,w,c
  3043   0028F6  6ED9               	movwf	fsr2l,c
  3044   0028F8  5012               	movf	(??_fputc+1)^0,w,c
  3045   0028FA  2014               	addwfc	(??_fputc+3)^0,w,c
  3046   0028FC  6EDA               	movwf	fsr2h,c
  3047   0028FE  C00D  FFDF         	movff	fputc@c,indf2
  3048   002902  EE20 F003          	lfsr	2,3
  3049   002906  500F               	movf	fputc@fp^0,w,c
  3050   002908  26D9               	addwf	fsr2l,f,c
  3051   00290A  5010               	movf	(fputc@fp+1)^0,w,c
  3052   00290C  22DA               	addwfc	fsr2h,f,c
  3053   00290E  2ADE               	incf	postinc2,f,c
  3054   002910  0E00               	movlw	0
  3055   002912  22DD               	addwfc	postdec2,f,c
  3056   002914                     l1729:
  3057   002914  0012               	return		;funcret
  3058   002916                     __end_of_fputc:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _putch *****************
  3062 ;; Defined at:
  3063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  c               1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  c               1    0[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 4
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_fputc
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text15
  3092   0034F0                     __ptext15:
  3093                           	callstack 0
  3094   0034F0                     _putch:
  3095                           	callstack 21
  3096   0034F0  0012               	return		;funcret
  3097   0034F2                     __end_of_putch:
  3098                           	callstack 0
  3099                           
  3100 ;; *************** function _abs *****************
  3101 ;; Defined at:
  3102 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  a               2   18[COMRAM] int 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  2   18[COMRAM] int 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;Total ram usage:        4 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 4
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_dtoa
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text16
  3131   00331E                     __ptext16:
  3132                           	callstack 0
  3133   00331E                     _abs:
  3134                           	callstack 21
  3135   00331E  BE14               	btfsc	(abs@a+1)^0,7,c
  3136   003320  EF9C  F019         	goto	u5810
  3137   003324  5014               	movf	(abs@a+1)^0,w,c
  3138   003326  E106               	bnz	u5811
  3139   003328  0413               	decf	abs@a^0,w,c
  3140   00332A  B0D8               	btfsc	status,0,c
  3141   00332C  EF9A  F019         	goto	u5811
  3142   003330  EF9C  F019         	goto	u5810
  3143   003334                     u5811:
  3144   003334  EFAA  F019         	goto	l1714
  3145   003338                     u5810:
  3146   003338  C013  F015         	movff	abs@a,??_abs
  3147   00333C  C014  F016         	movff	abs@a+1,??_abs+1
  3148   003340  1E15               	comf	??_abs^0,f,c
  3149   003342  1E16               	comf	(??_abs+1)^0,f,c
  3150   003344  4A15               	infsnz	??_abs^0,f,c
  3151   003346  2A16               	incf	(??_abs+1)^0,f,c
  3152   003348  C015  F013         	movff	??_abs,?_abs
  3153   00334C  C016  F014         	movff	??_abs+1,?_abs+1
  3154   003350  EFAE  F019         	goto	l1717
  3155   003354                     l1714:
  3156   003354  C013  F013         	movff	abs@a,?_abs
  3157   003358  C014  F014         	movff	abs@a+1,?_abs+1
  3158   00335C                     l1717:
  3159   00335C  0012               	return		;funcret
  3160   00335E                     __end_of_abs:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function ___awmod *****************
  3164 ;; Defined at:
  3165 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dividend        2   12[COMRAM] int 
  3168 ;;  divisor         2   14[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  sign            1   17[COMRAM] unsigned char 
  3171 ;;  counter         1   16[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  2   12[COMRAM] int 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;Total ram usage:        6 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 4
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_dtoa
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text17
  3196   002C04                     __ptext17:
  3197                           	callstack 0
  3198   002C04                     ___awmod:
  3199                           	callstack 21
  3200   002C04  0E00               	movlw	0
  3201   002C06  6E12               	movwf	___awmod@sign^0,c
  3202   002C08  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3203   002C0A  EF0B  F016         	goto	u5730
  3204   002C0E  EF09  F016         	goto	u5731
  3205   002C12                     u5731:
  3206   002C12  EF11  F016         	goto	l6350
  3207   002C16                     u5730:
  3208   002C16  6C0D               	negf	___awmod@dividend^0,c
  3209   002C18  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3210   002C1A  B0D8               	btfsc	status,0,c
  3211   002C1C  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3212   002C1E  0E01               	movlw	1
  3213   002C20  6E12               	movwf	___awmod@sign^0,c
  3214   002C22                     l6350:
  3215   002C22  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3216   002C24  EF18  F016         	goto	u5740
  3217   002C28  EF16  F016         	goto	u5741
  3218   002C2C                     u5741:
  3219   002C2C  EF1C  F016         	goto	l6354
  3220   002C30                     u5740:
  3221   002C30  6C0F               	negf	___awmod@divisor^0,c
  3222   002C32  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3223   002C34  B0D8               	btfsc	status,0,c
  3224   002C36  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3225   002C38                     l6354:
  3226   002C38  500F               	movf	___awmod@divisor^0,w,c
  3227   002C3A  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3228   002C3C  B4D8               	btfsc	status,2,c
  3229   002C3E  EF23  F016         	goto	u5751
  3230   002C42  EF25  F016         	goto	u5750
  3231   002C46                     u5751:
  3232   002C46  EF49  F016         	goto	l6370
  3233   002C4A                     u5750:
  3234   002C4A  0E01               	movlw	1
  3235   002C4C  6E11               	movwf	___awmod@counter^0,c
  3236   002C4E  EF2D  F016         	goto	l6360
  3237   002C52                     l6358:
  3238   002C52  90D8               	bcf	status,0,c
  3239   002C54  360F               	rlcf	___awmod@divisor^0,f,c
  3240   002C56  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3241   002C58  2A11               	incf	___awmod@counter^0,f,c
  3242   002C5A                     l6360:
  3243   002C5A  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3244   002C5C  EF32  F016         	goto	u5761
  3245   002C60  EF34  F016         	goto	u5760
  3246   002C64                     u5761:
  3247   002C64  EF29  F016         	goto	l6358
  3248   002C68                     u5760:
  3249   002C68                     l6362:
  3250   002C68  500F               	movf	___awmod@divisor^0,w,c
  3251   002C6A  5C0D               	subwf	___awmod@dividend^0,w,c
  3252   002C6C  5010               	movf	(___awmod@divisor+1)^0,w,c
  3253   002C6E  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3254   002C70  A0D8               	btfss	status,0,c
  3255   002C72  EF3D  F016         	goto	u5771
  3256   002C76  EF3F  F016         	goto	u5770
  3257   002C7A                     u5771:
  3258   002C7A  EF43  F016         	goto	l6366
  3259   002C7E                     u5770:
  3260   002C7E  500F               	movf	___awmod@divisor^0,w,c
  3261   002C80  5E0D               	subwf	___awmod@dividend^0,f,c
  3262   002C82  5010               	movf	(___awmod@divisor+1)^0,w,c
  3263   002C84  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3264   002C86                     l6366:
  3265   002C86  90D8               	bcf	status,0,c
  3266   002C88  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3267   002C8A  320F               	rrcf	___awmod@divisor^0,f,c
  3268   002C8C  2E11               	decfsz	___awmod@counter^0,f,c
  3269   002C8E  EF34  F016         	goto	l6362
  3270   002C92                     l6370:
  3271   002C92  5012               	movf	___awmod@sign^0,w,c
  3272   002C94  B4D8               	btfsc	status,2,c
  3273   002C96  EF4F  F016         	goto	u5781
  3274   002C9A  EF51  F016         	goto	u5780
  3275   002C9E                     u5781:
  3276   002C9E  EF55  F016         	goto	l6374
  3277   002CA2                     u5780:
  3278   002CA2  6C0D               	negf	___awmod@dividend^0,c
  3279   002CA4  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3280   002CA6  B0D8               	btfsc	status,0,c
  3281   002CA8  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3282   002CAA                     l6374:
  3283   002CAA  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3284   002CAE  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3285   002CB2  0012               	return		;funcret
  3286   002CB4                     __end_of___awmod:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function ___awdiv *****************
  3290 ;; Defined at:
  3291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  dividend        2   12[COMRAM] int 
  3294 ;;  divisor         2   14[COMRAM] int 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  quotient        2   18[COMRAM] int 
  3297 ;;  sign            1   17[COMRAM] unsigned char 
  3298 ;;  counter         1   16[COMRAM] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2   12[COMRAM] int 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;Total ram usage:        8 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 4
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_dtoa
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text18
  3323   002916                     __ptext18:
  3324                           	callstack 0
  3325   002916                     ___awdiv:
  3326                           	callstack 21
  3327   002916  0E00               	movlw	0
  3328   002918  6E12               	movwf	___awdiv@sign^0,c
  3329   00291A  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3330   00291C  EF94  F014         	goto	u5670
  3331   002920  EF92  F014         	goto	u5671
  3332   002924                     u5671:
  3333   002924  EF9A  F014         	goto	l6306
  3334   002928                     u5670:
  3335   002928  6C0F               	negf	___awdiv@divisor^0,c
  3336   00292A  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3337   00292C  B0D8               	btfsc	status,0,c
  3338   00292E  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3339   002930  0E01               	movlw	1
  3340   002932  6E12               	movwf	___awdiv@sign^0,c
  3341   002934                     l6306:
  3342   002934  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3343   002936  EFA1  F014         	goto	u5680
  3344   00293A  EF9F  F014         	goto	u5681
  3345   00293E                     u5681:
  3346   00293E  EFA7  F014         	goto	l6312
  3347   002942                     u5680:
  3348   002942  6C0D               	negf	___awdiv@dividend^0,c
  3349   002944  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3350   002946  B0D8               	btfsc	status,0,c
  3351   002948  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3352   00294A  0E01               	movlw	1
  3353   00294C  1A12               	xorwf	___awdiv@sign^0,f,c
  3354   00294E                     l6312:
  3355   00294E  0E00               	movlw	0
  3356   002950  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3357   002952  0E00               	movlw	0
  3358   002954  6E13               	movwf	___awdiv@quotient^0,c
  3359   002956  500F               	movf	___awdiv@divisor^0,w,c
  3360   002958  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3361   00295A  B4D8               	btfsc	status,2,c
  3362   00295C  EFB2  F014         	goto	u5691
  3363   002960  EFB4  F014         	goto	u5690
  3364   002964                     u5691:
  3365   002964  EFDC  F014         	goto	l6334
  3366   002968                     u5690:
  3367   002968  0E01               	movlw	1
  3368   00296A  6E11               	movwf	___awdiv@counter^0,c
  3369   00296C  EFBC  F014         	goto	l6320
  3370   002970                     l6318:
  3371   002970  90D8               	bcf	status,0,c
  3372   002972  360F               	rlcf	___awdiv@divisor^0,f,c
  3373   002974  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3374   002976  2A11               	incf	___awdiv@counter^0,f,c
  3375   002978                     l6320:
  3376   002978  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3377   00297A  EFC1  F014         	goto	u5701
  3378   00297E  EFC3  F014         	goto	u5700
  3379   002982                     u5701:
  3380   002982  EFB8  F014         	goto	l6318
  3381   002986                     u5700:
  3382   002986                     l6322:
  3383   002986  90D8               	bcf	status,0,c
  3384   002988  3613               	rlcf	___awdiv@quotient^0,f,c
  3385   00298A  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3386   00298C  500F               	movf	___awdiv@divisor^0,w,c
  3387   00298E  5C0D               	subwf	___awdiv@dividend^0,w,c
  3388   002990  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3389   002992  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3390   002994  A0D8               	btfss	status,0,c
  3391   002996  EFCF  F014         	goto	u5711
  3392   00299A  EFD1  F014         	goto	u5710
  3393   00299E                     u5711:
  3394   00299E  EFD6  F014         	goto	l6330
  3395   0029A2                     u5710:
  3396   0029A2  500F               	movf	___awdiv@divisor^0,w,c
  3397   0029A4  5E0D               	subwf	___awdiv@dividend^0,f,c
  3398   0029A6  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3399   0029A8  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3400   0029AA  8013               	bsf	___awdiv@quotient^0,0,c
  3401   0029AC                     l6330:
  3402   0029AC  90D8               	bcf	status,0,c
  3403   0029AE  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3404   0029B0  320F               	rrcf	___awdiv@divisor^0,f,c
  3405   0029B2  2E11               	decfsz	___awdiv@counter^0,f,c
  3406   0029B4  EFC3  F014         	goto	l6322
  3407   0029B8                     l6334:
  3408   0029B8  5012               	movf	___awdiv@sign^0,w,c
  3409   0029BA  B4D8               	btfsc	status,2,c
  3410   0029BC  EFE2  F014         	goto	u5721
  3411   0029C0  EFE4  F014         	goto	u5720
  3412   0029C4                     u5721:
  3413   0029C4  EFE8  F014         	goto	l6338
  3414   0029C8                     u5720:
  3415   0029C8  6C13               	negf	___awdiv@quotient^0,c
  3416   0029CA  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3417   0029CC  B0D8               	btfsc	status,0,c
  3418   0029CE  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3419   0029D0                     l6338:
  3420   0029D0  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3421   0029D4  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3422   0029D8  0012               	return		;funcret
  3423   0029DA                     __end_of___awdiv:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _memset *****************
  3427 ;; Defined at:
  3428 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  dest            2   12[COMRAM] PTR void 
  3431 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3432 ;;  c               2   14[COMRAM] int 
  3433 ;;  n               2   16[COMRAM] unsigned int 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  s               2   22[COMRAM] PTR unsigned char 
  3436 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3437 ;;  k               2   20[COMRAM] unsigned int 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  2   12[COMRAM] PTR void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3447 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;Total ram usage:       12 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 4
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_convert_uint16_to_string
  3458 ;;		_convert_uint8_to_string
  3459 ;;		_convert_uint32_to_string
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text19
  3464   001F6A                     __ptext19:
  3465                           	callstack 0
  3466   001F6A                     _memset:
  3467                           	callstack 25
  3468   001F6A  C00D  F017         	movff	memset@dest,memset@s
  3469   001F6E  C00E  F018         	movff	memset@dest+1,memset@s+1
  3470   001F72  5011               	movf	memset@n^0,w,c
  3471   001F74  1012               	iorwf	(memset@n+1)^0,w,c
  3472   001F76  A4D8               	btfss	status,2,c
  3473   001F78  EFC0  F00F         	goto	u5961
  3474   001F7C  EFC2  F00F         	goto	u5960
  3475   001F80                     u5961:
  3476   001F80  EFC4  F00F         	goto	l6490
  3477   001F84                     u5960:
  3478   001F84  EF6F  F010         	goto	l1639
  3479   001F88                     l6490:
  3480   001F88  C017  FFD9         	movff	memset@s,fsr2l
  3481   001F8C  C018  FFDA         	movff	memset@s+1,fsr2h
  3482   001F90  C00F  FFDF         	movff	memset@c,indf2
  3483   001F94  5011               	movf	memset@n^0,w,c
  3484   001F96  2417               	addwf	memset@s^0,w,c
  3485   001F98  6E13               	movwf	??_memset^0,c
  3486   001F9A  5012               	movf	(memset@n+1)^0,w,c
  3487   001F9C  2018               	addwfc	(memset@s+1)^0,w,c
  3488   001F9E  6E14               	movwf	(??_memset+1)^0,c
  3489   001FA0  0EFF               	movlw	255
  3490   001FA2  2413               	addwf	??_memset^0,w,c
  3491   001FA4  6ED9               	movwf	fsr2l,c
  3492   001FA6  0EFF               	movlw	255
  3493   001FA8  2014               	addwfc	(??_memset+1)^0,w,c
  3494   001FAA  6EDA               	movwf	fsr2h,c
  3495   001FAC  C00F  FFDF         	movff	memset@c,indf2
  3496   001FB0  5012               	movf	(memset@n+1)^0,w,c
  3497   001FB2  E107               	bnz	u5971
  3498   001FB4  0E03               	movlw	3
  3499   001FB6  5C11               	subwf	memset@n^0,w,c
  3500   001FB8  B0D8               	btfsc	status,0,c
  3501   001FBA  EFE1  F00F         	goto	u5971
  3502   001FBE  EFE3  F00F         	goto	u5970
  3503   001FC2                     u5971:
  3504   001FC2  EFE5  F00F         	goto	l6496
  3505   001FC6                     u5970:
  3506   001FC6  EF6F  F010         	goto	l1639
  3507   001FCA                     l6496:
  3508   001FCA  EE20 F001          	lfsr	2,1
  3509   001FCE  5017               	movf	memset@s^0,w,c
  3510   001FD0  26D9               	addwf	fsr2l,f,c
  3511   001FD2  5018               	movf	(memset@s+1)^0,w,c
  3512   001FD4  22DA               	addwfc	fsr2h,f,c
  3513   001FD6  C00F  FFDF         	movff	memset@c,indf2
  3514   001FDA  EE20 F002          	lfsr	2,2
  3515   001FDE  5017               	movf	memset@s^0,w,c
  3516   001FE0  26D9               	addwf	fsr2l,f,c
  3517   001FE2  5018               	movf	(memset@s+1)^0,w,c
  3518   001FE4  22DA               	addwfc	fsr2h,f,c
  3519   001FE6  C00F  FFDF         	movff	memset@c,indf2
  3520   001FEA  5011               	movf	memset@n^0,w,c
  3521   001FEC  2417               	addwf	memset@s^0,w,c
  3522   001FEE  6E13               	movwf	??_memset^0,c
  3523   001FF0  5012               	movf	(memset@n+1)^0,w,c
  3524   001FF2  2018               	addwfc	(memset@s+1)^0,w,c
  3525   001FF4  6E14               	movwf	(??_memset+1)^0,c
  3526   001FF6  0EFE               	movlw	254
  3527   001FF8  2413               	addwf	??_memset^0,w,c
  3528   001FFA  6ED9               	movwf	fsr2l,c
  3529   001FFC  0EFF               	movlw	255
  3530   001FFE  2014               	addwfc	(??_memset+1)^0,w,c
  3531   002000  6EDA               	movwf	fsr2h,c
  3532   002002  C00F  FFDF         	movff	memset@c,indf2
  3533   002006  5011               	movf	memset@n^0,w,c
  3534   002008  2417               	addwf	memset@s^0,w,c
  3535   00200A  6E13               	movwf	??_memset^0,c
  3536   00200C  5012               	movf	(memset@n+1)^0,w,c
  3537   00200E  2018               	addwfc	(memset@s+1)^0,w,c
  3538   002010  6E14               	movwf	(??_memset+1)^0,c
  3539   002012  0EFD               	movlw	253
  3540   002014  2413               	addwf	??_memset^0,w,c
  3541   002016  6ED9               	movwf	fsr2l,c
  3542   002018  0EFF               	movlw	255
  3543   00201A  2014               	addwfc	(??_memset+1)^0,w,c
  3544   00201C  6EDA               	movwf	fsr2h,c
  3545   00201E  C00F  FFDF         	movff	memset@c,indf2
  3546   002022  5012               	movf	(memset@n+1)^0,w,c
  3547   002024  E107               	bnz	u5981
  3548   002026  0E07               	movlw	7
  3549   002028  5C11               	subwf	memset@n^0,w,c
  3550   00202A  B0D8               	btfsc	status,0,c
  3551   00202C  EF1A  F010         	goto	u5981
  3552   002030  EF1C  F010         	goto	u5980
  3553   002034                     u5981:
  3554   002034  EF1E  F010         	goto	l6502
  3555   002038                     u5980:
  3556   002038  EF6F  F010         	goto	l1639
  3557   00203C                     l6502:
  3558   00203C  EE20 F003          	lfsr	2,3
  3559   002040  5017               	movf	memset@s^0,w,c
  3560   002042  26D9               	addwf	fsr2l,f,c
  3561   002044  5018               	movf	(memset@s+1)^0,w,c
  3562   002046  22DA               	addwfc	fsr2h,f,c
  3563   002048  C00F  FFDF         	movff	memset@c,indf2
  3564   00204C  5011               	movf	memset@n^0,w,c
  3565   00204E  2417               	addwf	memset@s^0,w,c
  3566   002050  6E13               	movwf	??_memset^0,c
  3567   002052  5012               	movf	(memset@n+1)^0,w,c
  3568   002054  2018               	addwfc	(memset@s+1)^0,w,c
  3569   002056  6E14               	movwf	(??_memset+1)^0,c
  3570   002058  0EFC               	movlw	252
  3571   00205A  2413               	addwf	??_memset^0,w,c
  3572   00205C  6ED9               	movwf	fsr2l,c
  3573   00205E  0EFF               	movlw	255
  3574   002060  2014               	addwfc	(??_memset+1)^0,w,c
  3575   002062  6EDA               	movwf	fsr2h,c
  3576   002064  C00F  FFDF         	movff	memset@c,indf2
  3577   002068  5012               	movf	(memset@n+1)^0,w,c
  3578   00206A  E107               	bnz	u5991
  3579   00206C  0E09               	movlw	9
  3580   00206E  5C11               	subwf	memset@n^0,w,c
  3581   002070  B0D8               	btfsc	status,0,c
  3582   002072  EF3D  F010         	goto	u5991
  3583   002076  EF3F  F010         	goto	u5990
  3584   00207A                     u5991:
  3585   00207A  EF41  F010         	goto	l6508
  3586   00207E                     u5990:
  3587   00207E  EF6F  F010         	goto	l1639
  3588   002082                     l6508:
  3589   002082  C017  F013         	movff	memset@s,??_memset
  3590   002086  C018  F014         	movff	memset@s+1,??_memset+1
  3591   00208A  1E13               	comf	??_memset^0,f,c
  3592   00208C  1E14               	comf	(??_memset+1)^0,f,c
  3593   00208E  4A13               	infsnz	??_memset^0,f,c
  3594   002090  2A14               	incf	(??_memset+1)^0,f,c
  3595   002092  0E03               	movlw	3
  3596   002094  1413               	andwf	??_memset^0,w,c
  3597   002096  6E15               	movwf	memset@k^0,c
  3598   002098  6A16               	clrf	(memset@k+1)^0,c
  3599   00209A  5015               	movf	memset@k^0,w,c
  3600   00209C  2617               	addwf	memset@s^0,f,c
  3601   00209E  5016               	movf	(memset@k+1)^0,w,c
  3602   0020A0  2218               	addwfc	(memset@s+1)^0,f,c
  3603   0020A2  5015               	movf	memset@k^0,w,c
  3604   0020A4  5E11               	subwf	memset@n^0,f,c
  3605   0020A6  5016               	movf	(memset@k+1)^0,w,c
  3606   0020A8  5A12               	subwfb	(memset@n+1)^0,f,c
  3607   0020AA  0EFC               	movlw	252
  3608   0020AC  1611               	andwf	memset@n^0,f,c
  3609   0020AE  0EFF               	movlw	255
  3610   0020B0  1612               	andwf	(memset@n+1)^0,f,c
  3611   0020B2  EF66  F010         	goto	l6516
  3612   0020B6                     l6510:
  3613   0020B6  C017  FFD9         	movff	memset@s,fsr2l
  3614   0020BA  C018  FFDA         	movff	memset@s+1,fsr2h
  3615   0020BE  C00F  FFDF         	movff	memset@c,indf2
  3616   0020C2  0611               	decf	memset@n^0,f,c
  3617   0020C4  A0D8               	btfss	status,0,c
  3618   0020C6  0612               	decf	(memset@n+1)^0,f,c
  3619   0020C8  4A17               	infsnz	memset@s^0,f,c
  3620   0020CA  2A18               	incf	(memset@s+1)^0,f,c
  3621   0020CC                     l6516:
  3622   0020CC  5011               	movf	memset@n^0,w,c
  3623   0020CE  1012               	iorwf	(memset@n+1)^0,w,c
  3624   0020D0  A4D8               	btfss	status,2,c
  3625   0020D2  EF6D  F010         	goto	u6001
  3626   0020D6  EF6F  F010         	goto	u6000
  3627   0020DA                     u6001:
  3628   0020DA  EF5B  F010         	goto	l6510
  3629   0020DE                     u6000:
  3630   0020DE                     l1639:
  3631   0020DE  0012               	return		;funcret
  3632   0020E0                     __end_of_memset:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _application_initialize *****************
  3636 ;; Defined at:
  3637 ;;		line 52 in file "application.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  ret             1    0        unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 9
  3658 ;; This function calls:
  3659 ;;		_ADC_Init
  3660 ;;		_ecu_layer_initialize
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text20
  3667   0034C2                     __ptext20:
  3668                           	callstack 0
  3669   0034C2                     _application_initialize:
  3670                           	callstack 21
  3671   0034C2                     
  3672                           ;application.c: 54:     ecu_layer_initialize();
  3673   0034C2  EC39  F01A         	call	_ecu_layer_initialize	;wreg free
  3674   0034C6  0EDD               	movlw	low _adc_1
  3675   0034C8  6E11               	movwf	ADC_Init@_adc^0,c
  3676   0034CA  0E00               	movlw	high _adc_1
  3677   0034CC  6E12               	movwf	(ADC_Init@_adc+1)^0,c
  3678   0034CE  ECED  F014         	call	_ADC_Init	;wreg free
  3679   0034D2  0012               	return		;funcret
  3680   0034D4                     __end_of_application_initialize:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _ecu_layer_initialize *****************
  3684 ;; Defined at:
  3685 ;;		line 149 in file "ECU_Layer/ecu_layer_init.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  ret             1   36[COMRAM] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;Total ram usage:        1 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 8
  3706 ;; This function calls:
  3707 ;;		_dc_motor_initialize
  3708 ;;		_lcd_4bit_initialize
  3709 ;; This function is called by:
  3710 ;;		_application_initialize
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text21
  3715   003472                     __ptext21:
  3716                           	callstack 0
  3717   003472                     _ecu_layer_initialize:
  3718                           	callstack 21
  3719   003472                     
  3720                           ;ECU_Layer/ecu_layer_init.c: 151:      ret = lcd_4bit_initialize(&lcd1);
  3721   003472  0EE3               	movlw	low _lcd1
  3722   003474  6E1F               	movwf	lcd_4bit_initialize@lcd^0,c
  3723   003476  0E00               	movlw	high _lcd1
  3724   003478  6E20               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  3725   00347A  ECDF  F012         	call	_lcd_4bit_initialize	;wreg free
  3726   00347E  6E25               	movwf	ecu_layer_initialize@ret^0,c
  3727   003480                     
  3728                           ;ECU_Layer/ecu_layer_init.c: 152:      ret &= dc_motor_initialize(&dc_motor_1);
  3729   003480  0EEB               	movlw	low _dc_motor_1
  3730   003482  6E1B               	movwf	dc_motor_initialize@_dc_motor^0,c
  3731   003484  0E00               	movlw	high _dc_motor_1
  3732   003486  6E1C               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3733   003488  ECAF  F019         	call	_dc_motor_initialize	;wreg free
  3734   00348C  1625               	andwf	ecu_layer_initialize@ret^0,f,c
  3735   00348E                     
  3736                           ;ECU_Layer/ecu_layer_init.c: 153:      ret &= dc_motor_initialize(&dc_motor_2);
  3737   00348E  0EE9               	movlw	low _dc_motor_2
  3738   003490  6E1B               	movwf	dc_motor_initialize@_dc_motor^0,c
  3739   003492  0E00               	movlw	high _dc_motor_2
  3740   003494  6E1C               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
  3741   003496  ECAF  F019         	call	_dc_motor_initialize	;wreg free
  3742   00349A  1625               	andwf	ecu_layer_initialize@ret^0,f,c
  3743   00349C  0012               	return		;funcret
  3744   00349E                     __end_of_ecu_layer_initialize:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _lcd_4bit_initialize *****************
  3748 ;; Defined at:
  3749 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  lcd             2   30[COMRAM] PTR const struct .
  3752 ;;		 -> lcd1(6), 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  l_data_pins_    1   35[COMRAM] unsigned char 
  3755 ;;  ret             1   34[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      unsigned char 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 7
  3772 ;; This function calls:
  3773 ;;		_gpio_pin_initialize
  3774 ;;		_lcd_4bit_send_command
  3775 ;; This function is called by:
  3776 ;;		_ecu_layer_initialize
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text22
  3781   0025BE                     __ptext22:
  3782                           	callstack 0
  3783   0025BE                     _lcd_4bit_initialize:
  3784                           	callstack 21
  3785   0025BE                     
  3786                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  3787   0025BE  0E00               	movlw	0
  3788   0025C0  6E24               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  3789   0025C2                     
  3790                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  3791   0025C2  501F               	movf	lcd_4bit_initialize@lcd^0,w,c
  3792   0025C4  1020               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  3793   0025C6  A4D8               	btfss	status,2,c
  3794   0025C8  EFE8  F012         	goto	u3441
  3795   0025CC  EFEA  F012         	goto	u3440
  3796   0025D0                     u3441:
  3797   0025D0  EFEE  F012         	goto	l4380
  3798   0025D4                     u3440:
  3799   0025D4                     
  3800                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  3801   0025D4  0E00               	movlw	0
  3802   0025D6  6E23               	movwf	lcd_4bit_initialize@ret^0,c
  3803                           
  3804                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  3805   0025D8  EF4B  F013         	goto	l4408
  3806   0025DC                     l4380:
  3807                           
  3808                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  3809   0025DC  C01F  F017         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  3810   0025E0  C020  F018         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  3811   0025E4  ECAB  F016         	call	_gpio_pin_initialize	;wreg free
  3812   0025E8  6E23               	movwf	lcd_4bit_initialize@ret^0,c
  3813                           
  3814                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  3815   0025EA  0E01               	movlw	1
  3816   0025EC  241F               	addwf	lcd_4bit_initialize@lcd^0,w,c
  3817   0025EE  6E17               	movwf	gpio_pin_initialize@pin_config^0,c
  3818   0025F0  0E00               	movlw	0
  3819   0025F2  2020               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  3820   0025F4  6E18               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  3821   0025F6  ECAB  F016         	call	_gpio_pin_initialize	;wreg free
  3822   0025FA  6E23               	movwf	lcd_4bit_initialize@ret^0,c
  3823   0025FC                     
  3824                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  3825   0025FC  0E00               	movlw	0
  3826   0025FE  6E24               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  3827   002600                     l4388:
  3828   002600  5024               	movf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  3829   002602  241F               	addwf	lcd_4bit_initialize@lcd^0,w,c
  3830   002604  6E21               	movwf	??_lcd_4bit_initialize^0,c
  3831   002606  0E00               	movlw	0
  3832   002608  2020               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  3833   00260A  6E22               	movwf	(??_lcd_4bit_initialize+1)^0,c
  3834   00260C  0E02               	movlw	2
  3835   00260E  2421               	addwf	??_lcd_4bit_initialize^0,w,c
  3836   002610  6E17               	movwf	gpio_pin_initialize@pin_config^0,c
  3837   002612  0E00               	movlw	0
  3838   002614  2022               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  3839   002616  6E18               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  3840   002618  ECAB  F016         	call	_gpio_pin_initialize	;wreg free
  3841   00261C                     
  3842                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  3843   00261C  2A24               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  3844   00261E  0E03               	movlw	3
  3845   002620  6424               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  3846   002622  EF15  F013         	goto	u3451
  3847   002626  EF17  F013         	goto	u3450
  3848   00262A                     u3451:
  3849   00262A  EF00  F013         	goto	l4388
  3850   00262E                     u3450:
  3851   00262E  C01F  F01B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3852   002632  C020  F01C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3853   002636  0E33               	movlw	51
  3854   002638  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3855   00263A  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  3856   00263E                     
  3857                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((150)*(4000000/4000
      +                          000.0)));
  3858   00263E  0E32               	movlw	50
  3859   002640                     u6147:
  3860   002640  2EE8               	decfsz	wreg,f,c
  3861   002642  D7FE               	bra	u6147
  3862   002644  C01F  F01B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3863   002648  C020  F01C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3864   00264C  0E32               	movlw	50
  3865   00264E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3866   002650  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  3867   002654  C01F  F01B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3868   002658  C020  F01C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3869   00265C  0E28               	movlw	40
  3870   00265E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3871   002660  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  3872   002664  C01F  F01B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3873   002668  C020  F01C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3874   00266C  0E01               	movlw	1
  3875   00266E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3876   002670  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  3877   002674  C01F  F01B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3878   002678  C020  F01C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3879   00267C  0E06               	movlw	6
  3880   00267E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3881   002680  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  3882   002684                     
  3883                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret=lcd_4bit_send_command(lcd,0X0C);
  3884   002684  C01F  F01B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3885   002688  C020  F01C         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3886   00268C  0E0C               	movlw	12
  3887   00268E  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3888   002690  ECAA  F017         	call	_lcd_4bit_send_command	;wreg free
  3889   002694  6E23               	movwf	lcd_4bit_initialize@ret^0,c
  3890   002696                     l4408:
  3891                           
  3892                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     return ret;
  3893   002696  5023               	movf	lcd_4bit_initialize@ret^0,w,c
  3894   002698  0012               	return		;funcret
  3895   00269A                     __end_of_lcd_4bit_initialize:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _lcd_4bit_send_command *****************
  3899 ;; Defined at:
  3900 ;;		line 43 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  lcd             2   26[COMRAM] PTR const struct .
  3903 ;;		 -> lcd1(6), 
  3904 ;;  command         1   28[COMRAM] unsigned char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  ret             1   29[COMRAM] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      unsigned char 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;Total ram usage:        4 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 6
  3923 ;; This function calls:
  3924 ;;		_gpio_pin_write_logic
  3925 ;;		_lcd_4bit_send_enable_signal
  3926 ;;		_lcd_send_4bits
  3927 ;; This function is called by:
  3928 ;;		_lcd_4bit_initialize
  3929 ;;		_lcd_4bit_set_cursor
  3930 ;;		_main
  3931 ;;		_lcd_4bit_send_custom_char
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text23
  3936   002F54                     __ptext23:
  3937                           	callstack 0
  3938   002F54                     _lcd_4bit_send_command:
  3939                           	callstack 22
  3940   002F54                     
  3941                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:     if(lcd==((void*)0)){
  3942   002F54  501B               	movf	lcd_4bit_send_command@lcd^0,w,c
  3943   002F56  101C               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  3944   002F58  A4D8               	btfss	status,2,c
  3945   002F5A  EFB1  F017         	goto	u3401
  3946   002F5E  EFB3  F017         	goto	u3400
  3947   002F62                     u3401:
  3948   002F62  EFB7  F017         	goto	l4338
  3949   002F66                     u3400:
  3950   002F66                     
  3951                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         ret=(Std_ReturnType)0x00;
  3952   002F66  0E00               	movlw	0
  3953   002F68  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3954                           
  3955                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:     }
  3956   002F6A  EFE1  F017         	goto	l4340
  3957   002F6E                     l4338:
  3958                           
  3959                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  3960   002F6E  C01B  F00D         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  3961   002F72  C01C  F00E         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  3962   002F76  0E00               	movlw	0
  3963   002F78  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  3964   002F7A  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  3965   002F7E  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3966                           
  3967                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=lcd_send_4bits(lcd, command >> 4);
  3968   002F80  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3969   002F84  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  3970   002F88  381D               	swapf	lcd_4bit_send_command@command^0,w,c
  3971   002F8A  0B0F               	andlw	15
  3972   002F8C  6E19               	movwf	lcd_send_4bits@_data_command^0,c
  3973   002F8E  ECF0  F016         	call	_lcd_send_4bits	;wreg free
  3974   002F92  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3975                           
  3976                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_4bit_send_enable_signal(lcd);
  3977   002F94  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3978   002F98  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  3979   002F9C  ECB7  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  3980   002FA0  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3981                           
  3982                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_send_4bits(lcd, command);
  3983   002FA2  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3984   002FA6  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  3985   002FAA  C01D  F019         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  3986   002FAE  ECF0  F016         	call	_lcd_send_4bits	;wreg free
  3987   002FB2  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3988                           
  3989                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_4bit_send_enable_signal(lcd);
  3990   002FB4  C01B  F017         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3991   002FB8  C01C  F018         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  3992   002FBC  ECB7  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  3993   002FC0  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3994   002FC2                     l4340:
  3995                           
  3996                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:     return ret;
  3997   002FC2  501E               	movf	lcd_4bit_send_command@ret^0,w,c
  3998   002FC4  0012               	return		;funcret
  3999   002FC6                     __end_of_lcd_4bit_send_command:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _lcd_send_4bits *****************
  4003 ;; Defined at:
  4004 ;;		line 396 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  lcd             2   22[COMRAM] PTR const struct .
  4007 ;;		 -> lcd1(6), 
  4008 ;;  _data_comman    1   24[COMRAM] unsigned char 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  ret             1   25[COMRAM] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      unsigned char 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;Total ram usage:        4 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 5
  4027 ;; This function calls:
  4028 ;;		_gpio_pin_write_logic
  4029 ;; This function is called by:
  4030 ;;		_lcd_4bit_send_command
  4031 ;;		_lcd_4bit_send_char_data
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text24
  4036   002DE0                     __ptext24:
  4037                           	callstack 0
  4038   002DE0                     _lcd_send_4bits:
  4039                           	callstack 22
  4040   002DE0                     
  4041                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:     if(lcd==((void*)0)){
  4042   002DE0  5017               	movf	lcd_send_4bits@lcd^0,w,c
  4043   002DE2  1018               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  4044   002DE4  A4D8               	btfss	status,2,c
  4045   002DE6  EFF7  F016         	goto	u3251
  4046   002DEA  EFF9  F016         	goto	u3250
  4047   002DEE                     u3251:
  4048   002DEE  EFFD  F016         	goto	l4246
  4049   002DF2                     u3250:
  4050   002DF2                     
  4051                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret=(Std_ReturnType)0x00;
  4052   002DF2  0E00               	movlw	0
  4053   002DF4  6E1A               	movwf	lcd_send_4bits@ret^0,c
  4054                           
  4055                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:     }
  4056   002DF6  EF32  F017         	goto	l4248
  4057   002DFA                     l4246:
  4058                           
  4059                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  4060   002DFA  0E02               	movlw	2
  4061   002DFC  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4062   002DFE  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  4063   002E00  0E00               	movlw	0
  4064   002E02  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4065   002E04  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4066   002E06  5019               	movf	lcd_send_4bits@_data_command^0,w,c
  4067   002E08  0B01               	andlw	1
  4068   002E0A  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4069   002E0C  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4070   002E10  6E1A               	movwf	lcd_send_4bits@ret^0,c
  4071                           
  4072                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  4073   002E12  0E03               	movlw	3
  4074   002E14  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4075   002E16  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  4076   002E18  0E00               	movlw	0
  4077   002E1A  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4078   002E1C  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4079   002E1E  90D8               	bcf	status,0,c
  4080   002E20  3019               	rrcf	lcd_send_4bits@_data_command^0,w,c
  4081   002E22  0B01               	andlw	1
  4082   002E24  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4083   002E26  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4084   002E2A  6E1A               	movwf	lcd_send_4bits@ret^0,c
  4085                           
  4086                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  4087   002E2C  0E04               	movlw	4
  4088   002E2E  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4089   002E30  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  4090   002E32  0E00               	movlw	0
  4091   002E34  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4092   002E36  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4093   002E38  4019               	rrncf	lcd_send_4bits@_data_command^0,w,c
  4094   002E3A  42E8               	rrncf	wreg,f,c
  4095   002E3C  0B3F               	andlw	63
  4096   002E3E  0B01               	andlw	1
  4097   002E40  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4098   002E42  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4099   002E46  6E1A               	movwf	lcd_send_4bits@ret^0,c
  4100                           
  4101                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  4102   002E48  0E05               	movlw	5
  4103   002E4A  2417               	addwf	lcd_send_4bits@lcd^0,w,c
  4104   002E4C  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  4105   002E4E  0E00               	movlw	0
  4106   002E50  2018               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  4107   002E52  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4108   002E54  3819               	swapf	lcd_send_4bits@_data_command^0,w,c
  4109   002E56  46E8               	rlncf	wreg,f,c
  4110   002E58  0B1F               	andlw	31
  4111   002E5A  0B01               	andlw	1
  4112   002E5C  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4113   002E5E  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4114   002E62  6E1A               	movwf	lcd_send_4bits@ret^0,c
  4115   002E64                     l4248:
  4116                           
  4117                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:     return ret;
  4118   002E64  501A               	movf	lcd_send_4bits@ret^0,w,c
  4119   002E66  0012               	return		;funcret
  4120   002E68                     __end_of_lcd_send_4bits:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4124 ;; Defined at:
  4125 ;;		line 409 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  lcd             2   22[COMRAM] PTR const struct .
  4128 ;;		 -> lcd1(6), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  ret             1   24[COMRAM] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        3 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 5
  4147 ;; This function calls:
  4148 ;;		_gpio_pin_write_logic
  4149 ;; This function is called by:
  4150 ;;		_lcd_4bit_send_command
  4151 ;;		_lcd_4bit_send_char_data
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text25
  4156   00316E                     __ptext25:
  4157                           	callstack 0
  4158   00316E                     _lcd_4bit_send_enable_signal:
  4159                           	callstack 22
  4160   00316E                     
  4161                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 411:     if(lcd==((void*)0)){
  4162   00316E  5017               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4163   003170  1018               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4164   003172  A4D8               	btfss	status,2,c
  4165   003174  EFBE  F018         	goto	u3261
  4166   003178  EFC0  F018         	goto	u3260
  4167   00317C                     u3261:
  4168   00317C  EFC4  F018         	goto	l4258
  4169   003180                     u3260:
  4170   003180                     
  4171                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 412:         ret=(Std_ReturnType)0x00;
  4172   003180  0E00               	movlw	0
  4173   003182  6E19               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4174                           
  4175                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:     }
  4176   003184  EFDC  F018         	goto	l4262
  4177   003188                     l4258:
  4178   003188  0E01               	movlw	1
  4179   00318A  2417               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4180   00318C  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  4181   00318E  0E00               	movlw	0
  4182   003190  2018               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4183   003192  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4184   003194  0E01               	movlw	1
  4185   003196  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4186   003198  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4187   00319C                     
  4188                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  4189   00319C  D000               	nop2		;2 cycle nop
  4190   00319E  D000               	nop2		;2 cycle nop
  4191   0031A0  F000               	nop	
  4192                           
  4193                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  4194   0031A2  0E01               	movlw	1
  4195   0031A4  2417               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4196   0031A6  6E0D               	movwf	gpio_pin_write_logic@pin_config^0,c
  4197   0031A8  0E00               	movlw	0
  4198   0031AA  2018               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4199   0031AC  6E0E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4200   0031AE  0E00               	movlw	0
  4201   0031B0  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4202   0031B2  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4203   0031B6  6E19               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4204   0031B8                     l4262:
  4205                           
  4206                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:     return ret;
  4207   0031B8  5019               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4208   0031BA  0012               	return		;funcret
  4209   0031BC                     __end_of_lcd_4bit_send_enable_signal:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function _dc_motor_initialize *****************
  4213 ;; Defined at:
  4214 ;;		line 7 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  _dc_motor       2   26[COMRAM] PTR const struct .
  4217 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  ret             1   28[COMRAM] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;Total ram usage:        3 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 6
  4236 ;; This function calls:
  4237 ;;		_gpio_pin_initialize
  4238 ;; This function is called by:
  4239 ;;		_ecu_layer_initialize
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text26
  4244   00335E                     __ptext26:
  4245                           	callstack 0
  4246   00335E                     _dc_motor_initialize:
  4247                           	callstack 22
  4248   00335E                     
  4249                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 9:     if(_dc_motor==((void*)0)){
  4250   00335E  501B               	movf	dc_motor_initialize@_dc_motor^0,w,c
  4251   003360  101C               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4252   003362  A4D8               	btfss	status,2,c
  4253   003364  EFB6  F019         	goto	u3461
  4254   003368  EFB8  F019         	goto	u3460
  4255   00336C                     u3461:
  4256   00336C  EFBC  F019         	goto	l4418
  4257   003370                     u3460:
  4258   003370                     
  4259                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 10:         ret=(Std_ReturnType)0x00;
  4260   003370  0E00               	movlw	0
  4261   003372  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4262                           
  4263                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 11:     }
  4264   003374  EFCC  F019         	goto	l4420
  4265   003378                     l4418:
  4266                           
  4267                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 13:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0X00U]));
  4268   003378  C01B  F017         	movff	dc_motor_initialize@_dc_motor,gpio_pin_initialize@pin_config
  4269   00337C  C01C  F018         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_initialize@pin_config+1
  4270   003380  ECAB  F016         	call	_gpio_pin_initialize	;wreg free
  4271   003384  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4272                           
  4273                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 14:         ret=gpio_pin_initialize(&(_dc_motor->dc_
      +                          motor_pin[0X01U]));
  4274   003386  0E01               	movlw	1
  4275   003388  241B               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  4276   00338A  6E17               	movwf	gpio_pin_initialize@pin_config^0,c
  4277   00338C  0E00               	movlw	0
  4278   00338E  201C               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  4279   003390  6E18               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  4280   003392  ECAB  F016         	call	_gpio_pin_initialize	;wreg free
  4281   003396  6E1D               	movwf	dc_motor_initialize@ret^0,c
  4282   003398                     l4420:
  4283                           
  4284                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 16:     return ret;
  4285   003398  501D               	movf	dc_motor_initialize@ret^0,w,c
  4286   00339A  0012               	return		;funcret
  4287   00339C                     __end_of_dc_motor_initialize:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _gpio_pin_initialize *****************
  4291 ;; Defined at:
  4292 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  pin_config      2   22[COMRAM] PTR const struct .
  4295 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4296 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  ret             1   25[COMRAM] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      unsigned char 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;Total ram usage:        4 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 5
  4315 ;; This function calls:
  4316 ;;		_gpio_pin_direction_initialize
  4317 ;;		_gpio_pin_write_logic
  4318 ;; This function is called by:
  4319 ;;		_lcd_4bit_initialize
  4320 ;;		_dc_motor_initialize
  4321 ;;		_seven_segment_initialize
  4322 ;;		_lcd_8bit_initialize
  4323 ;;		_keypad_initialize
  4324 ;;		_led_initialize
  4325 ;;		_relay_initialize
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text27
  4330   002D56                     __ptext27:
  4331                           	callstack 0
  4332   002D56                     _gpio_pin_initialize:
  4333                           	callstack 22
  4334   002D56                     
  4335                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4336   002D56  5017               	movf	gpio_pin_initialize@pin_config^0,w,c
  4337   002D58  1018               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
  4338   002D5A  B4D8               	btfsc	status,2,c
  4339   002D5C  EFB2  F016         	goto	u3371
  4340   002D60  EFB4  F016         	goto	u3370
  4341   002D64                     u3371:
  4342   002D64  EFD4  F016         	goto	l4324
  4343   002D68                     u3370:
  4344   002D68  C017  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4345   002D6C  C018  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4346   002D70  30DF               	rrcf	223,w,c
  4347   002D72  32E8               	rrcf	wreg,f,c
  4348   002D74  32E8               	rrcf	wreg,f,c
  4349   002D76  0B07               	andlw	7
  4350   002D78  6E19               	movwf	??_gpio_pin_initialize^0,c
  4351   002D7A  0E08               	movlw	8
  4352   002D7C  6019               	cpfslt	??_gpio_pin_initialize^0,c
  4353   002D7E  EFC3  F016         	goto	u3381
  4354   002D82  EFC5  F016         	goto	u3380
  4355   002D86                     u3381:
  4356   002D86  EFD4  F016         	goto	l4324
  4357   002D8A                     u3380:
  4358   002D8A  C017  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4359   002D8E  C018  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4360   002D92  50DF               	movf	223,w,c
  4361   002D94  0B07               	andlw	7
  4362   002D96  6E19               	movwf	??_gpio_pin_initialize^0,c
  4363   002D98  0E04               	movlw	4
  4364   002D9A  6419               	cpfsgt	??_gpio_pin_initialize^0,c
  4365   002D9C  EFD2  F016         	goto	u3391
  4366   002DA0  EFD4  F016         	goto	u3390
  4367   002DA4                     u3391:
  4368   002DA4  EFD8  F016         	goto	l4326
  4369   002DA8                     u3390:
  4370   002DA8                     l4324:
  4371                           
  4372                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  4373   002DA8  0E00               	movlw	0
  4374   002DAA  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  4375                           
  4376                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  4377   002DAC  EFEE  F016         	goto	l4328
  4378   002DB0                     l4326:
  4379                           
  4380                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  4381   002DB0  C017  F00D         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  4382   002DB4  C018  F00E         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  4383   002DB8  EC70  F010         	call	_gpio_pin_direction_initialize	;wreg free
  4384   002DBC  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  4385                           
  4386                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  4387   002DBE  C017  F00D         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  4388   002DC2  C018  F00E         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  4389   002DC6  C017  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4390   002DCA  C018  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4391   002DCE  0E00               	movlw	0
  4392   002DD0  BEDF               	btfsc	indf2,7,c
  4393   002DD2  0E01               	movlw	1
  4394   002DD4  6E0F               	movwf	gpio_pin_write_logic@logic^0,c
  4395   002DD6  EC21  F011         	call	_gpio_pin_write_logic	;wreg free
  4396   002DDA  6E1A               	movwf	gpio_pin_initialize@ret^0,c
  4397   002DDC                     l4328:
  4398                           
  4399                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  4400   002DDC  501A               	movf	gpio_pin_initialize@ret^0,w,c
  4401   002DDE  0012               	return		;funcret
  4402   002DE0                     __end_of_gpio_pin_initialize:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _gpio_pin_write_logic *****************
  4406 ;; Defined at:
  4407 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  pin_config      2   12[COMRAM] PTR const struct .
  4410 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4411 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  4412 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4413 ;;  logic           1   14[COMRAM] enum E3137
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  ret             1   21[COMRAM] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      unsigned char 
  4418 ;; Registers used:
  4419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4425 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;Total ram usage:       10 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 4
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_lcd_4bit_send_command
  4436 ;;		_lcd_4bit_send_char_data
  4437 ;;		_lcd_send_4bits
  4438 ;;		_lcd_4bit_send_enable_signal
  4439 ;;		_dc_motor_move_right
  4440 ;;		_dc_motor_move_left
  4441 ;;		_dc_motor_stop
  4442 ;;		_gpio_pin_initialize
  4443 ;;		_seven_segment_write_number
  4444 ;;		_lcd_8bit_send_command
  4445 ;;		_lcd_8bit_send_char_data
  4446 ;;		_lcd_8bit_send_enable_signal
  4447 ;;		_keypad_get_value
  4448 ;;		_led_turn_on
  4449 ;;		_led_turn_off
  4450 ;;		_relay_turn_on
  4451 ;;		_relay_turn_off
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text28
  4456   002242                     __ptext28:
  4457                           	callstack 0
  4458   002242                     _gpio_pin_write_logic:
  4459                           	callstack 22
  4460   002242                     
  4461                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  4462   002242  0E01               	movlw	1
  4463   002244  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4464   002246                     
  4465                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4466   002246  500D               	movf	gpio_pin_write_logic@pin_config^0,w,c
  4467   002248  100E               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  4468   00224A  B4D8               	btfsc	status,2,c
  4469   00224C  EF2A  F011         	goto	u2981
  4470   002250  EF2C  F011         	goto	u2980
  4471   002254                     u2981:
  4472   002254  EF4C  F011         	goto	l4098
  4473   002258                     u2980:
  4474   002258  C00D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4475   00225C  C00E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4476   002260  30DF               	rrcf	223,w,c
  4477   002262  32E8               	rrcf	wreg,f,c
  4478   002264  32E8               	rrcf	wreg,f,c
  4479   002266  0B07               	andlw	7
  4480   002268  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4481   00226A  0E08               	movlw	8
  4482   00226C  6010               	cpfslt	??_gpio_pin_write_logic^0,c
  4483   00226E  EF3B  F011         	goto	u2991
  4484   002272  EF3D  F011         	goto	u2990
  4485   002276                     u2991:
  4486   002276  EF4C  F011         	goto	l4098
  4487   00227A                     u2990:
  4488   00227A  C00D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4489   00227E  C00E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4490   002282  50DF               	movf	223,w,c
  4491   002284  0B07               	andlw	7
  4492   002286  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4493   002288  0E04               	movlw	4
  4494   00228A  6410               	cpfsgt	??_gpio_pin_write_logic^0,c
  4495   00228C  EF4A  F011         	goto	u3001
  4496   002290  EF4C  F011         	goto	u3000
  4497   002294                     u3001:
  4498   002294  EFAF  F011         	goto	l4106
  4499   002298                     u3000:
  4500   002298                     l4098:
  4501                           
  4502                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  4503   002298  0E00               	movlw	0
  4504   00229A  6E16               	movwf	gpio_pin_write_logic@ret^0,c
  4505                           
  4506                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  4507   00229C  EFC4  F011         	goto	l4108
  4508   0022A0                     l4100:
  4509                           
  4510                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  4511   0022A0  C00D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4512   0022A4  C00E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4513   0022A8  30DF               	rrcf	223,w,c
  4514   0022AA  32E8               	rrcf	wreg,f,c
  4515   0022AC  32E8               	rrcf	wreg,f,c
  4516   0022AE  0B07               	andlw	7
  4517   0022B0  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4518   0022B2  0E01               	movlw	1
  4519   0022B4  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4520   0022B6  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  4521   0022B8  EF60  F011         	goto	u3014
  4522   0022BC                     u3015:
  4523   0022BC  90D8               	bcf	status,0,c
  4524   0022BE  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4525   0022C0                     u3014:
  4526   0022C0  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  4527   0022C2  EF5E  F011         	goto	u3015
  4528   0022C6  C00D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4529   0022CA  C00E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4530   0022CE  50DF               	movf	223,w,c
  4531   0022D0  0B07               	andlw	7
  4532   0022D2  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4533   0022D4  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4534   0022D6  0D02               	mullw	2
  4535   0022D8  0EC9               	movlw	low _lat_registers
  4536   0022DA  24F3               	addwf	243,w,c
  4537   0022DC  6ED9               	movwf	fsr2l,c
  4538   0022DE  0E00               	movlw	high _lat_registers
  4539   0022E0  20F4               	addwfc	prodh,w,c
  4540   0022E2  6EDA               	movwf	fsr2h,c
  4541   0022E4  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+3
  4542   0022E8  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+4
  4543   0022EC  C013  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4544   0022F0  C014  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4545   0022F4  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4546   0022F6  12DF               	iorwf	indf2,f,c
  4547                           
  4548                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  4549   0022F8  EFC4  F011         	goto	l4108
  4550   0022FC                     l4102:
  4551                           
  4552                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  4553   0022FC  C00D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4554   002300  C00E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4555   002304  30DF               	rrcf	223,w,c
  4556   002306  32E8               	rrcf	wreg,f,c
  4557   002308  32E8               	rrcf	wreg,f,c
  4558   00230A  0B07               	andlw	7
  4559   00230C  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4560   00230E  0E01               	movlw	1
  4561   002310  6E11               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4562   002312  2A10               	incf	??_gpio_pin_write_logic^0,f,c
  4563   002314  EF8E  F011         	goto	u3024
  4564   002318                     u3025:
  4565   002318  90D8               	bcf	status,0,c
  4566   00231A  3611               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4567   00231C                     u3024:
  4568   00231C  2E10               	decfsz	??_gpio_pin_write_logic^0,f,c
  4569   00231E  EF8C  F011         	goto	u3025
  4570   002322  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4571   002324  0AFF               	xorlw	255
  4572   002326  6E12               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4573   002328  C00D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4574   00232C  C00E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4575   002330  50DF               	movf	223,w,c
  4576   002332  0B07               	andlw	7
  4577   002334  6E13               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4578   002336  5013               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4579   002338  0D02               	mullw	2
  4580   00233A  0EC9               	movlw	low _lat_registers
  4581   00233C  24F3               	addwf	243,w,c
  4582   00233E  6ED9               	movwf	fsr2l,c
  4583   002340  0E00               	movlw	high _lat_registers
  4584   002342  20F4               	addwfc	prodh,w,c
  4585   002344  6EDA               	movwf	fsr2h,c
  4586   002346  CFDE F014          	movff	postinc2,??_gpio_pin_write_logic+4
  4587   00234A  CFDD F015          	movff	postdec2,??_gpio_pin_write_logic+5
  4588   00234E  C014  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4589   002352  C015  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4590   002356  5012               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4591   002358  16DF               	andwf	indf2,f,c
  4592                           
  4593                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  4594   00235A  EFC4  F011         	goto	l4108
  4595   00235E                     l4106:
  4596   00235E  500F               	movf	gpio_pin_write_logic@logic^0,w,c
  4597   002360  6E10               	movwf	??_gpio_pin_write_logic^0,c
  4598   002362  6A11               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4599                           
  4600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4601                           ; Switch size 1, requested type "simple"
  4602                           ; Number of cases is 1, Range of values is 0 to 0
  4603                           ; switch strategies available:
  4604                           ; Name         Instructions Cycles
  4605                           ; simple_byte            4     3 (average)
  4606                           ;	Chosen strategy is simple_byte
  4607   002364  5011               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4608   002366  0A00               	xorlw	0	; case 0
  4609   002368  B4D8               	btfsc	status,2,c
  4610   00236A  EFB9  F011         	goto	l6786
  4611   00236E  EF4C  F011         	goto	l4098
  4612   002372                     l6786:
  4613                           
  4614                           ; Switch size 1, requested type "simple"
  4615                           ; Number of cases is 2, Range of values is 0 to 1
  4616                           ; switch strategies available:
  4617                           ; Name         Instructions Cycles
  4618                           ; simple_byte            7     4 (average)
  4619                           ;	Chosen strategy is simple_byte
  4620   002372  5010               	movf	??_gpio_pin_write_logic^0,w,c
  4621   002374  0A00               	xorlw	0	; case 0
  4622   002376  B4D8               	btfsc	status,2,c
  4623   002378  EF7E  F011         	goto	l4102
  4624   00237C  0A01               	xorlw	1	; case 1
  4625   00237E  B4D8               	btfsc	status,2,c
  4626   002380  EF50  F011         	goto	l4100
  4627   002384  EF4C  F011         	goto	l4098
  4628   002388                     l4108:
  4629                           
  4630                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  4631   002388  5016               	movf	gpio_pin_write_logic@ret^0,w,c
  4632   00238A  0012               	return		;funcret
  4633   00238C                     __end_of_gpio_pin_write_logic:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _gpio_pin_direction_initialize *****************
  4637 ;; Defined at:
  4638 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  pin_config      2   12[COMRAM] PTR const struct .
  4641 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  4642 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  ret             1   20[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      unsigned char 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        9 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; Hardware stack levels required when called: 4
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_gpio_pin_initialize
  4665 ;;		_button_initialize
  4666 ;;		_keypad_initialize
  4667 ;;		_Interrupt_INTx_Pin_Init
  4668 ;;		_Interrupt_RBx_Pin_Init
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text29
  4673   0020E0                     __ptext29:
  4674                           	callstack 0
  4675   0020E0                     _gpio_pin_direction_initialize:
  4676                           	callstack 22
  4677   0020E0                     
  4678                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  4679   0020E0  0E01               	movlw	1
  4680   0020E2  6E15               	movwf	gpio_pin_direction_initialize@ret^0,c
  4681   0020E4                     
  4682                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4683   0020E4  500D               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  4684   0020E6  100E               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  4685   0020E8  B4D8               	btfsc	status,2,c
  4686   0020EA  EF79  F010         	goto	u3181
  4687   0020EE  EF7B  F010         	goto	u3180
  4688   0020F2                     u3181:
  4689   0020F2  EF9B  F010         	goto	l4222
  4690   0020F6                     u3180:
  4691   0020F6  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4692   0020FA  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4693   0020FE  30DF               	rrcf	223,w,c
  4694   002100  32E8               	rrcf	wreg,f,c
  4695   002102  32E8               	rrcf	wreg,f,c
  4696   002104  0B07               	andlw	7
  4697   002106  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  4698   002108  0E08               	movlw	8
  4699   00210A  600F               	cpfslt	??_gpio_pin_direction_initialize^0,c
  4700   00210C  EF8A  F010         	goto	u3191
  4701   002110  EF8C  F010         	goto	u3190
  4702   002114                     u3191:
  4703   002114  EF9B  F010         	goto	l4222
  4704   002118                     u3190:
  4705   002118  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4706   00211C  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4707   002120  50DF               	movf	223,w,c
  4708   002122  0B07               	andlw	7
  4709   002124  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  4710   002126  0E04               	movlw	4
  4711   002128  640F               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4712   00212A  EF99  F010         	goto	u3201
  4713   00212E  EF9B  F010         	goto	u3200
  4714   002132                     u3201:
  4715   002132  EFFE  F010         	goto	l4230
  4716   002136                     u3200:
  4717   002136                     l4222:
  4718                           
  4719                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  4720   002136  0E00               	movlw	0
  4721   002138  6E15               	movwf	gpio_pin_direction_initialize@ret^0,c
  4722                           
  4723                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  4724   00213A  EF1F  F011         	goto	l4232
  4725   00213E                     l4224:
  4726                           
  4727                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  4728   00213E  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4729   002142  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4730   002146  30DF               	rrcf	223,w,c
  4731   002148  32E8               	rrcf	wreg,f,c
  4732   00214A  32E8               	rrcf	wreg,f,c
  4733   00214C  0B07               	andlw	7
  4734   00214E  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  4735   002150  0E01               	movlw	1
  4736   002152  6E10               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4737   002154  2A0F               	incf	??_gpio_pin_direction_initialize^0,f,c
  4738   002156  EFAF  F010         	goto	u3214
  4739   00215A                     u3215:
  4740   00215A  90D8               	bcf	status,0,c
  4741   00215C  3610               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4742   00215E                     u3214:
  4743   00215E  2E0F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4744   002160  EFAD  F010         	goto	u3215
  4745   002164  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4746   002166  0AFF               	xorlw	255
  4747   002168  6E11               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4748   00216A  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4749   00216E  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4750   002172  50DF               	movf	223,w,c
  4751   002174  0B07               	andlw	7
  4752   002176  6E12               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4753   002178  5012               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4754   00217A  0D02               	mullw	2
  4755   00217C  0ED3               	movlw	low _tris_registers
  4756   00217E  24F3               	addwf	243,w,c
  4757   002180  6ED9               	movwf	fsr2l,c
  4758   002182  0E00               	movlw	high _tris_registers
  4759   002184  20F4               	addwfc	prodh,w,c
  4760   002186  6EDA               	movwf	fsr2h,c
  4761   002188  CFDE F013          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4762   00218C  CFDD F014          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4763   002190  C013  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4764   002194  C014  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4765   002198  5011               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4766   00219A  16DF               	andwf	indf2,f,c
  4767                           
  4768                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  4769   00219C  EF1F  F011         	goto	l4232
  4770   0021A0                     l4226:
  4771                           
  4772                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  4773   0021A0  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4774   0021A4  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4775   0021A8  30DF               	rrcf	223,w,c
  4776   0021AA  32E8               	rrcf	wreg,f,c
  4777   0021AC  32E8               	rrcf	wreg,f,c
  4778   0021AE  0B07               	andlw	7
  4779   0021B0  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  4780   0021B2  0E01               	movlw	1
  4781   0021B4  6E10               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4782   0021B6  2A0F               	incf	??_gpio_pin_direction_initialize^0,f,c
  4783   0021B8  EFE0  F010         	goto	u3224
  4784   0021BC                     u3225:
  4785   0021BC  90D8               	bcf	status,0,c
  4786   0021BE  3610               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4787   0021C0                     u3224:
  4788   0021C0  2E0F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4789   0021C2  EFDE  F010         	goto	u3225
  4790   0021C6  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4791   0021CA  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4792   0021CE  50DF               	movf	223,w,c
  4793   0021D0  0B07               	andlw	7
  4794   0021D2  6E11               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4795   0021D4  5011               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4796   0021D6  0D02               	mullw	2
  4797   0021D8  0ED3               	movlw	low _tris_registers
  4798   0021DA  24F3               	addwf	243,w,c
  4799   0021DC  6ED9               	movwf	fsr2l,c
  4800   0021DE  0E00               	movlw	high _tris_registers
  4801   0021E0  20F4               	addwfc	prodh,w,c
  4802   0021E2  6EDA               	movwf	fsr2h,c
  4803   0021E4  CFDE F012          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4804   0021E8  CFDD F013          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4805   0021EC  C012  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4806   0021F0  C013  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4807   0021F4  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4808   0021F6  12DF               	iorwf	indf2,f,c
  4809                           
  4810                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  4811   0021F8  EF1F  F011         	goto	l4232
  4812   0021FC                     l4230:
  4813   0021FC  C00D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4814   002200  C00E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4815   002204  BCDF               	btfsc	indf2,6,c
  4816   002206  EF07  F011         	goto	u3231
  4817   00220A  EF0A  F011         	goto	u3230
  4818   00220E                     u3231:
  4819   00220E  0E01               	movlw	1
  4820   002210  EF0B  F011         	goto	u3240
  4821   002214                     u3230:
  4822   002214  0E00               	movlw	0
  4823   002216                     u3240:
  4824   002216  6E0F               	movwf	??_gpio_pin_direction_initialize^0,c
  4825   002218  6A10               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4826                           
  4827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4828                           ; Switch size 1, requested type "simple"
  4829                           ; Number of cases is 1, Range of values is 0 to 0
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte            4     3 (average)
  4833                           ;	Chosen strategy is simple_byte
  4834   00221A  5010               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4835   00221C  0A00               	xorlw	0	; case 0
  4836   00221E  B4D8               	btfsc	status,2,c
  4837   002220  EF14  F011         	goto	l6788
  4838   002224  EF9B  F010         	goto	l4222
  4839   002228                     l6788:
  4840                           
  4841                           ; Switch size 1, requested type "simple"
  4842                           ; Number of cases is 2, Range of values is 0 to 1
  4843                           ; switch strategies available:
  4844                           ; Name         Instructions Cycles
  4845                           ; simple_byte            7     4 (average)
  4846                           ;	Chosen strategy is simple_byte
  4847   002228  500F               	movf	??_gpio_pin_direction_initialize^0,w,c
  4848   00222A  0A00               	xorlw	0	; case 0
  4849   00222C  B4D8               	btfsc	status,2,c
  4850   00222E  EF9F  F010         	goto	l4224
  4851   002232  0A01               	xorlw	1	; case 1
  4852   002234  B4D8               	btfsc	status,2,c
  4853   002236  EFD0  F010         	goto	l4226
  4854   00223A  EF9B  F010         	goto	l4222
  4855   00223E                     l4232:
  4856                           
  4857                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  4858   00223E  5015               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4859   002240  0012               	return		;funcret
  4860   002242                     __end_of_gpio_pin_direction_initialize:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _ADC_Init *****************
  4864 ;; Defined at:
  4865 ;;		line 23 in file "MCAL_Layer/ADC/hal_adc.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  _adc            2   16[COMRAM] PTR const struct .
  4868 ;;		 -> adc_1(6), 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  ret             1   19[COMRAM] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      unsigned char 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;Total ram usage:        4 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 5
  4887 ;; This function calls:
  4888 ;;		_adc_input_channel_port_configure
  4889 ;;		_configure_voltage_reference
  4890 ;;		_select_result_format
  4891 ;; This function is called by:
  4892 ;;		_application_initialize
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text30
  4897   0029DA                     __ptext30:
  4898                           	callstack 0
  4899   0029DA                     _ADC_Init:
  4900                           	callstack 24
  4901   0029DA                     
  4902                           ;MCAL_Layer/ADC/hal_adc.c: 24:       Std_ReturnType ret=(Std_ReturnType)0x01;
  4903   0029DA  0E01               	movlw	1
  4904   0029DC  6E14               	movwf	ADC_Init@ret^0,c
  4905   0029DE                     
  4906                           ;MCAL_Layer/ADC/hal_adc.c: 25:     if(_adc==((void*)0)){
  4907   0029DE  5011               	movf	ADC_Init@_adc^0,w,c
  4908   0029E0  1012               	iorwf	(ADC_Init@_adc+1)^0,w,c
  4909   0029E2  A4D8               	btfss	status,2,c
  4910   0029E4  EFF6  F014         	goto	u3681
  4911   0029E8  EFF8  F014         	goto	u3680
  4912   0029EC                     u3681:
  4913   0029EC  EFFC  F014         	goto	l875
  4914   0029F0                     u3680:
  4915   0029F0                     
  4916                           ;MCAL_Layer/ADC/hal_adc.c: 26:         ret=(Std_ReturnType)0x00;
  4917   0029F0  0E00               	movlw	0
  4918   0029F2  6E14               	movwf	ADC_Init@ret^0,c
  4919                           
  4920                           ;MCAL_Layer/ADC/hal_adc.c: 27:     }
  4921   0029F4  EF4B  F015         	goto	l4676
  4922   0029F8                     l875:
  4923                           
  4924                           ;MCAL_Layer/ADC/hal_adc.c: 30:         ((*((volatile ADCON0_t *)(0xFC2))).ADON=0);
  4925   0029F8  90C2               	bcf	194,0,c	;volatile
  4926   0029FA                     
  4927                           ;MCAL_Layer/ADC/hal_adc.c: 32:         (*((volatile ADCON2_t *)(0xFC0))).ACQT = _adc->ac
      +                          quisition_time;
  4928   0029FA  EE20 F002          	lfsr	2,2
  4929   0029FE  5011               	movf	ADC_Init@_adc^0,w,c
  4930   002A00  26D9               	addwf	fsr2l,f,c
  4931   002A02  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  4932   002A04  22DA               	addwfc	fsr2h,f,c
  4933   002A06  50DF               	movf	indf2,w,c
  4934   002A08  6E13               	movwf	??_ADC_Init^0,c
  4935   002A0A  4613               	rlncf	??_ADC_Init^0,f,c
  4936   002A0C  4613               	rlncf	??_ADC_Init^0,f,c
  4937   002A0E  4613               	rlncf	??_ADC_Init^0,f,c
  4938   002A10  50C0               	movf	192,w,c	;volatile
  4939   002A12  1813               	xorwf	??_ADC_Init^0,w,c
  4940   002A14  0BC7               	andlw	-57
  4941   002A16  1813               	xorwf	??_ADC_Init^0,w,c
  4942   002A18  6EC0               	movwf	192,c	;volatile
  4943                           
  4944                           ;MCAL_Layer/ADC/hal_adc.c: 34:         (*((volatile ADCON2_t *)(0xFC0))).ADCS = _adc->co
      +                          nversion_clock;
  4945   002A1A  EE20 F003          	lfsr	2,3
  4946   002A1E  5011               	movf	ADC_Init@_adc^0,w,c
  4947   002A20  26D9               	addwf	fsr2l,f,c
  4948   002A22  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  4949   002A24  22DA               	addwfc	fsr2h,f,c
  4950   002A26  50DF               	movf	indf2,w,c
  4951   002A28  6E13               	movwf	??_ADC_Init^0,c
  4952   002A2A  50C0               	movf	192,w,c	;volatile
  4953   002A2C  1813               	xorwf	??_ADC_Init^0,w,c
  4954   002A2E  0BF8               	andlw	-8
  4955   002A30  1813               	xorwf	??_ADC_Init^0,w,c
  4956   002A32  6EC0               	movwf	192,c	;volatile
  4957                           
  4958                           ;MCAL_Layer/ADC/hal_adc.c: 36:         (*((volatile ADCON0_t *)(0xFC2))).CHS =_adc->adc_
      +                          channel;
  4959   002A34  EE20 F004          	lfsr	2,4
  4960   002A38  5011               	movf	ADC_Init@_adc^0,w,c
  4961   002A3A  26D9               	addwf	fsr2l,f,c
  4962   002A3C  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  4963   002A3E  22DA               	addwfc	fsr2h,f,c
  4964   002A40  50DF               	movf	indf2,w,c
  4965   002A42  6E13               	movwf	??_ADC_Init^0,c
  4966   002A44  4613               	rlncf	??_ADC_Init^0,f,c
  4967   002A46  4613               	rlncf	??_ADC_Init^0,f,c
  4968   002A48  50C2               	movf	194,w,c	;volatile
  4969   002A4A  1813               	xorwf	??_ADC_Init^0,w,c
  4970   002A4C  0BC3               	andlw	-61
  4971   002A4E  1813               	xorwf	??_ADC_Init^0,w,c
  4972   002A50  6EC2               	movwf	194,c	;volatile
  4973   002A52                     
  4974                           ;MCAL_Layer/ADC/hal_adc.c: 37:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  4975   002A52  EE20 F004          	lfsr	2,4
  4976   002A56  5011               	movf	ADC_Init@_adc^0,w,c
  4977   002A58  26D9               	addwf	fsr2l,f,c
  4978   002A5A  5012               	movf	(ADC_Init@_adc+1)^0,w,c
  4979   002A5C  22DA               	addwfc	fsr2h,f,c
  4980   002A5E  50DF               	movf	indf2,w,c
  4981   002A60  ECBA  F013         	call	_adc_input_channel_port_configure
  4982   002A64                     
  4983                           ;MCAL_Layer/ADC/hal_adc.c: 40:             ADC_InterruptHandler = _adc->ADC_InterruptHan
      +                          dler;
  4984   002A64  C011  FFD9         	movff	ADC_Init@_adc,fsr2l
  4985   002A68  C012  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  4986   002A6C  CFDE F0AB          	movff	postinc2,_ADC_InterruptHandler
  4987   002A70  CFDD F0AC          	movff	postdec2,_ADC_InterruptHandler+1
  4988   002A74                     
  4989                           ;MCAL_Layer/ADC/hal_adc.c: 42:                 ((*((volatile INTCON_t *)(0xFF2))).GIE = 
      +                          1);
  4990   002A74  8EF2               	bsf	242,7,c	;volatile
  4991   002A76                     
  4992                           ;MCAL_Layer/ADC/hal_adc.c: 43:                 ((*((volatile INTCON_t *)(0xFF2))).PEIE =
      +                           1);
  4993   002A76  8CF2               	bsf	242,6,c	;volatile
  4994   002A78                     
  4995                           ;MCAL_Layer/ADC/hal_adc.c: 45:             ((*((volatile PIE1_t *)(0xF9D))).ADIE=1);
  4996   002A78  8C9D               	bsf	157,6,c	;volatile
  4997   002A7A                     
  4998                           ;MCAL_Layer/ADC/hal_adc.c: 46:             ((*((volatile PIR1_t *)(0xF9E))).ADIF=0);
  4999   002A7A  9C9E               	bcf	158,6,c	;volatile
  5000   002A7C                     
  5001                           ;MCAL_Layer/ADC/hal_adc.c: 60:         select_result_format(_adc);
  5002   002A7C  C011  F00D         	movff	ADC_Init@_adc,select_result_format@_adc
  5003   002A80  C012  F00E         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  5004   002A84  EC11  F018         	call	_select_result_format	;wreg free
  5005   002A88                     
  5006                           ;MCAL_Layer/ADC/hal_adc.c: 62:         configure_voltage_reference(_adc);
  5007   002A88  C011  F00D         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5008   002A8C  C012  F00E         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  5009   002A90  ECE3  F017         	call	_configure_voltage_reference	;wreg free
  5010   002A94                     
  5011                           ;MCAL_Layer/ADC/hal_adc.c: 64:         ((*((volatile ADCON0_t *)(0xFC2))).ADON=1);
  5012   002A94  80C2               	bsf	194,0,c	;volatile
  5013   002A96                     l4676:
  5014                           
  5015                           ;MCAL_Layer/ADC/hal_adc.c: 66:     return ret;
  5016   002A96  5014               	movf	ADC_Init@ret^0,w,c
  5017   002A98  0012               	return		;funcret
  5018   002A9A                     __end_of_ADC_Init:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _select_result_format *****************
  5022 ;; Defined at:
  5023 ;;		line 251 in file "MCAL_Layer/ADC/hal_adc.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  _adc            2   12[COMRAM] PTR const struct .
  5026 ;;		 -> adc_1(6), 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:        4 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 4
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_ADC_Init
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text31
  5053   003022                     __ptext31:
  5054                           	callstack 0
  5055   003022                     _select_result_format:
  5056                           	callstack 24
  5057   003022                     
  5058                           ;MCAL_Layer/ADC/hal_adc.c: 252:     switch (_adc->result_format){
  5059   003022  EF19  F018         	goto	l4490
  5060   003026                     l949:
  5061   003026  9EC0               	bcf	192,7,c	;volatile
  5062   003028  EF3C  F018         	goto	l953
  5063   00302C                     l951:
  5064   00302C  8EC0               	bsf	192,7,c	;volatile
  5065   00302E  EF3C  F018         	goto	l953
  5066   003032                     l4490:
  5067   003032  EE20 F005          	lfsr	2,5
  5068   003036  500D               	movf	select_result_format@_adc^0,w,c
  5069   003038  26D9               	addwf	fsr2l,f,c
  5070   00303A  500E               	movf	(select_result_format@_adc+1)^0,w,c
  5071   00303C  22DA               	addwfc	fsr2h,f,c
  5072   00303E  B2DF               	btfsc	indf2,1,c
  5073   003040  EF24  F018         	goto	u3521
  5074   003044  EF27  F018         	goto	u3520
  5075   003048                     u3521:
  5076   003048  0E01               	movlw	1
  5077   00304A  EF28  F018         	goto	u3530
  5078   00304E                     u3520:
  5079   00304E  0E00               	movlw	0
  5080   003050                     u3530:
  5081   003050  6E0F               	movwf	??_select_result_format^0,c
  5082   003052  6A10               	clrf	(??_select_result_format+1)^0,c
  5083                           
  5084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5085                           ; Switch size 1, requested type "simple"
  5086                           ; Number of cases is 1, Range of values is 0 to 0
  5087                           ; switch strategies available:
  5088                           ; Name         Instructions Cycles
  5089                           ; simple_byte            4     3 (average)
  5090                           ;	Chosen strategy is simple_byte
  5091   003054  5010               	movf	(??_select_result_format+1)^0,w,c
  5092   003056  0A00               	xorlw	0	; case 0
  5093   003058  B4D8               	btfsc	status,2,c
  5094   00305A  EF31  F018         	goto	l6790
  5095   00305E  EF16  F018         	goto	l951
  5096   003062                     l6790:
  5097                           
  5098                           ; Switch size 1, requested type "simple"
  5099                           ; Number of cases is 2, Range of values is 0 to 1
  5100                           ; switch strategies available:
  5101                           ; Name         Instructions Cycles
  5102                           ; simple_byte            7     4 (average)
  5103                           ;	Chosen strategy is simple_byte
  5104   003062  500F               	movf	??_select_result_format^0,w,c
  5105   003064  0A00               	xorlw	0	; case 0
  5106   003066  B4D8               	btfsc	status,2,c
  5107   003068  EF13  F018         	goto	l949
  5108   00306C  0A01               	xorlw	1	; case 1
  5109   00306E  B4D8               	btfsc	status,2,c
  5110   003070  EF16  F018         	goto	l951
  5111   003074  EF16  F018         	goto	l951
  5112   003078                     l953:
  5113   003078  0012               	return		;funcret
  5114   00307A                     __end_of_select_result_format:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function _configure_voltage_reference *****************
  5118 ;; Defined at:
  5119 ;;		line 258 in file "MCAL_Layer/ADC/hal_adc.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  _adc            2   12[COMRAM] PTR const struct .
  5122 ;;		 -> adc_1(6), 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        4 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 4
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_ADC_Init
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text32
  5149   002FC6                     __ptext32:
  5150                           	callstack 0
  5151   002FC6                     _configure_voltage_reference:
  5152                           	callstack 24
  5153   002FC6                     
  5154                           ;MCAL_Layer/ADC/hal_adc.c: 259:     switch (_adc->voltage_reference){
  5155   002FC6  EFED  F017         	goto	l4506
  5156   002FCA                     l4498:
  5157   002FCA  0E30               	movlw	48
  5158   002FCC  12C1               	iorwf	193,f,c	;volatile
  5159   002FCE  EF10  F018         	goto	l961
  5160   002FD2                     l4500:
  5161   002FD2  0ECF               	movlw	-49
  5162   002FD4  16C1               	andwf	193,f,c	;volatile
  5163   002FD6  EF10  F018         	goto	l961
  5164   002FDA                     l4506:
  5165   002FDA  EE20 F005          	lfsr	2,5
  5166   002FDE  500D               	movf	configure_voltage_reference@_adc^0,w,c
  5167   002FE0  26D9               	addwf	fsr2l,f,c
  5168   002FE2  500E               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  5169   002FE4  22DA               	addwfc	fsr2h,f,c
  5170   002FE6  B0DF               	btfsc	indf2,0,c
  5171   002FE8  EFF8  F017         	goto	u3541
  5172   002FEC  EFFB  F017         	goto	u3540
  5173   002FF0                     u3541:
  5174   002FF0  0E01               	movlw	1
  5175   002FF2  EFFC  F017         	goto	u3550
  5176   002FF6                     u3540:
  5177   002FF6  0E00               	movlw	0
  5178   002FF8                     u3550:
  5179   002FF8  6E0F               	movwf	??_configure_voltage_reference^0,c
  5180   002FFA  6A10               	clrf	(??_configure_voltage_reference+1)^0,c
  5181                           
  5182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5183                           ; Switch size 1, requested type "simple"
  5184                           ; Number of cases is 1, Range of values is 0 to 0
  5185                           ; switch strategies available:
  5186                           ; Name         Instructions Cycles
  5187                           ; simple_byte            4     3 (average)
  5188                           ;	Chosen strategy is simple_byte
  5189   002FFC  5010               	movf	(??_configure_voltage_reference+1)^0,w,c
  5190   002FFE  0A00               	xorlw	0	; case 0
  5191   003000  B4D8               	btfsc	status,2,c
  5192   003002  EF05  F018         	goto	l6792
  5193   003006  EFE9  F017         	goto	l4500
  5194   00300A                     l6792:
  5195                           
  5196                           ; Switch size 1, requested type "simple"
  5197                           ; Number of cases is 2, Range of values is 0 to 1
  5198                           ; switch strategies available:
  5199                           ; Name         Instructions Cycles
  5200                           ; simple_byte            7     4 (average)
  5201                           ;	Chosen strategy is simple_byte
  5202   00300A  500F               	movf	??_configure_voltage_reference^0,w,c
  5203   00300C  0A00               	xorlw	0	; case 0
  5204   00300E  B4D8               	btfsc	status,2,c
  5205   003010  EFE9  F017         	goto	l4500
  5206   003014  0A01               	xorlw	1	; case 1
  5207   003016  B4D8               	btfsc	status,2,c
  5208   003018  EFE5  F017         	goto	l4498
  5209   00301C  EFE9  F017         	goto	l4500
  5210   003020                     l961:
  5211   003020  0012               	return		;funcret
  5212   003022                     __end_of_configure_voltage_reference:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function ___xxtofl *****************
  5216 ;; Defined at:
  5217 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  sign            1    wreg     unsigned char 
  5220 ;;  val             4   12[COMRAM] long 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  sign            1   20[COMRAM] unsigned char 
  5223 ;;  arg             4   22[COMRAM] unsigned long 
  5224 ;;  exp             1   21[COMRAM] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  4   12[COMRAM] unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:       14 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 4
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text33
  5249   001A90                     __ptext33:
  5250                           	callstack 0
  5251   001A90                     ___xxtofl:
  5252                           	callstack 26
  5253                           
  5254                           ;incstack = 0
  5255                           ;___xxtofl@sign stored from wreg
  5256   001A90  6E15               	movwf	___xxtofl@sign^0,c
  5257   001A92  5015               	movf	___xxtofl@sign^0,w,c
  5258   001A94  B4D8               	btfsc	status,2,c
  5259   001A96  EF4F  F00D         	goto	u4431
  5260   001A9A  EF51  F00D         	goto	u4430
  5261   001A9E                     u4431:
  5262   001A9E  EF73  F00D         	goto	l1619
  5263   001AA2                     u4430:
  5264   001AA2  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  5265   001AA4  EF58  F00D         	goto	u4440
  5266   001AA8  EF56  F00D         	goto	u4441
  5267   001AAC                     u4441:
  5268   001AAC  EF73  F00D         	goto	l1619
  5269   001AB0                     u4440:
  5270   001AB0  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  5271   001AB4  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  5272   001AB8  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  5273   001ABC  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  5274   001AC0  1E11               	comf	??___xxtofl^0,f,c
  5275   001AC2  1E12               	comf	(??___xxtofl+1)^0,f,c
  5276   001AC4  1E13               	comf	(??___xxtofl+2)^0,f,c
  5277   001AC6  1E14               	comf	(??___xxtofl+3)^0,f,c
  5278   001AC8  2A11               	incf	??___xxtofl^0,f,c
  5279   001ACA  0E00               	movlw	0
  5280   001ACC  2212               	addwfc	(??___xxtofl+1)^0,f,c
  5281   001ACE  2213               	addwfc	(??___xxtofl+2)^0,f,c
  5282   001AD0  2214               	addwfc	(??___xxtofl+3)^0,f,c
  5283   001AD2  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  5284   001AD6  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  5285   001ADA  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  5286   001ADE  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  5287   001AE2  EF7B  F00D         	goto	l5252
  5288   001AE6                     l1619:
  5289   001AE6  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  5290   001AEA  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5291   001AEE  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5292   001AF2  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5293   001AF6                     l5252:
  5294   001AF6  500D               	movf	___xxtofl@val^0,w,c
  5295   001AF8  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  5296   001AFA  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  5297   001AFC  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  5298   001AFE  A4D8               	btfss	status,2,c
  5299   001B00  EF84  F00D         	goto	u4451
  5300   001B04  EF86  F00D         	goto	u4450
  5301   001B08                     u4451:
  5302   001B08  EF90  F00D         	goto	l5258
  5303   001B0C                     u4450:
  5304   001B0C  0E00               	movlw	0
  5305   001B0E  6E0D               	movwf	?___xxtofl^0,c
  5306   001B10  0E00               	movlw	0
  5307   001B12  6E0E               	movwf	(?___xxtofl+1)^0,c
  5308   001B14  0E00               	movlw	0
  5309   001B16  6E0F               	movwf	(?___xxtofl+2)^0,c
  5310   001B18  0E00               	movlw	0
  5311   001B1A  6E10               	movwf	(?___xxtofl+3)^0,c
  5312   001B1C  EF21  F00E         	goto	l1622
  5313   001B20                     l5258:
  5314   001B20  0E96               	movlw	150
  5315   001B22  6E16               	movwf	___xxtofl@exp^0,c
  5316   001B24  EF9A  F00D         	goto	l5262
  5317   001B28                     l5260:
  5318   001B28  2A16               	incf	___xxtofl@exp^0,f,c
  5319   001B2A  90D8               	bcf	status,0,c
  5320   001B2C  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  5321   001B2E  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  5322   001B30  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  5323   001B32  3217               	rrcf	___xxtofl@arg^0,f,c
  5324   001B34                     l5262:
  5325   001B34  0E00               	movlw	0
  5326   001B36  1417               	andwf	___xxtofl@arg^0,w,c
  5327   001B38  6E11               	movwf	??___xxtofl^0,c
  5328   001B3A  0E00               	movlw	0
  5329   001B3C  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  5330   001B3E  6E12               	movwf	(??___xxtofl+1)^0,c
  5331   001B40  0E00               	movlw	0
  5332   001B42  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  5333   001B44  6E13               	movwf	(??___xxtofl+2)^0,c
  5334   001B46  0EFE               	movlw	254
  5335   001B48  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  5336   001B4A  6E14               	movwf	(??___xxtofl+3)^0,c
  5337   001B4C  5011               	movf	??___xxtofl^0,w,c
  5338   001B4E  1012               	iorwf	(??___xxtofl+1)^0,w,c
  5339   001B50  1013               	iorwf	(??___xxtofl+2)^0,w,c
  5340   001B52  1014               	iorwf	(??___xxtofl+3)^0,w,c
  5341   001B54  A4D8               	btfss	status,2,c
  5342   001B56  EFAF  F00D         	goto	u4461
  5343   001B5A  EFB1  F00D         	goto	u4460
  5344   001B5E                     u4461:
  5345   001B5E  EF94  F00D         	goto	l5260
  5346   001B62                     u4460:
  5347   001B62  EFBF  F00D         	goto	l1626
  5348   001B66                     l5264:
  5349   001B66  2A16               	incf	___xxtofl@exp^0,f,c
  5350   001B68  0E01               	movlw	1
  5351   001B6A  2617               	addwf	___xxtofl@arg^0,f,c
  5352   001B6C  0E00               	movlw	0
  5353   001B6E  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  5354   001B70  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  5355   001B72  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  5356   001B74  90D8               	bcf	status,0,c
  5357   001B76  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  5358   001B78  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  5359   001B7A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  5360   001B7C  3217               	rrcf	___xxtofl@arg^0,f,c
  5361   001B7E                     l1626:
  5362   001B7E  0E00               	movlw	0
  5363   001B80  1417               	andwf	___xxtofl@arg^0,w,c
  5364   001B82  6E11               	movwf	??___xxtofl^0,c
  5365   001B84  0E00               	movlw	0
  5366   001B86  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  5367   001B88  6E12               	movwf	(??___xxtofl+1)^0,c
  5368   001B8A  0E00               	movlw	0
  5369   001B8C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  5370   001B8E  6E13               	movwf	(??___xxtofl+2)^0,c
  5371   001B90  0EFF               	movlw	255
  5372   001B92  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  5373   001B94  6E14               	movwf	(??___xxtofl+3)^0,c
  5374   001B96  5011               	movf	??___xxtofl^0,w,c
  5375   001B98  1012               	iorwf	(??___xxtofl+1)^0,w,c
  5376   001B9A  1013               	iorwf	(??___xxtofl+2)^0,w,c
  5377   001B9C  1014               	iorwf	(??___xxtofl+3)^0,w,c
  5378   001B9E  A4D8               	btfss	status,2,c
  5379   001BA0  EFD4  F00D         	goto	u4471
  5380   001BA4  EFD6  F00D         	goto	u4470
  5381   001BA8                     u4471:
  5382   001BA8  EFB3  F00D         	goto	l5264
  5383   001BAC                     u4470:
  5384   001BAC  EFDE  F00D         	goto	l5272
  5385   001BB0                     l5270:
  5386   001BB0  0616               	decf	___xxtofl@exp^0,f,c
  5387   001BB2  90D8               	bcf	status,0,c
  5388   001BB4  3617               	rlcf	___xxtofl@arg^0,f,c
  5389   001BB6  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  5390   001BB8  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  5391   001BBA  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  5392   001BBC                     l5272:
  5393   001BBC  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  5394   001BBE  EFE3  F00D         	goto	u4481
  5395   001BC2  EFE5  F00D         	goto	u4480
  5396   001BC6                     u4481:
  5397   001BC6  EFED  F00D         	goto	l1633
  5398   001BCA                     u4480:
  5399   001BCA  0E02               	movlw	2
  5400   001BCC  6016               	cpfslt	___xxtofl@exp^0,c
  5401   001BCE  EFEB  F00D         	goto	u4491
  5402   001BD2  EFED  F00D         	goto	u4490
  5403   001BD6                     u4491:
  5404   001BD6  EFD8  F00D         	goto	l5270
  5405   001BDA                     u4490:
  5406   001BDA                     l1633:
  5407   001BDA  B016               	btfsc	___xxtofl@exp^0,0,c
  5408   001BDC  EFF2  F00D         	goto	u4501
  5409   001BE0  EFF4  F00D         	goto	u4500
  5410   001BE4                     u4501:
  5411   001BE4  EFF5  F00D         	goto	l5278
  5412   001BE8                     u4500:
  5413   001BE8  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  5414   001BEA                     l5278:
  5415   001BEA  90D8               	bcf	status,0,c
  5416   001BEC  3216               	rrcf	___xxtofl@exp^0,f,c
  5417   001BEE  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  5418   001BF2  6A12               	clrf	(??___xxtofl+1)^0,c
  5419   001BF4  6A13               	clrf	(??___xxtofl+2)^0,c
  5420   001BF6  6A14               	clrf	(??___xxtofl+3)^0,c
  5421   001BF8  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  5422   001BFC  6A13               	clrf	(??___xxtofl+2)^0,c
  5423   001BFE  6A12               	clrf	(??___xxtofl+1)^0,c
  5424   001C00  6A11               	clrf	??___xxtofl^0,c
  5425   001C02  5011               	movf	??___xxtofl^0,w,c
  5426   001C04  1217               	iorwf	___xxtofl@arg^0,f,c
  5427   001C06  5012               	movf	(??___xxtofl+1)^0,w,c
  5428   001C08  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  5429   001C0A  5013               	movf	(??___xxtofl+2)^0,w,c
  5430   001C0C  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  5431   001C0E  5014               	movf	(??___xxtofl+3)^0,w,c
  5432   001C10  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  5433   001C12  5015               	movf	___xxtofl@sign^0,w,c
  5434   001C14  B4D8               	btfsc	status,2,c
  5435   001C16  EF0F  F00E         	goto	u4511
  5436   001C1A  EF11  F00E         	goto	u4510
  5437   001C1E                     u4511:
  5438   001C1E  EF19  F00E         	goto	l5288
  5439   001C22                     u4510:
  5440   001C22  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  5441   001C24  EF18  F00E         	goto	u4520
  5442   001C28  EF16  F00E         	goto	u4521
  5443   001C2C                     u4521:
  5444   001C2C  EF19  F00E         	goto	l5288
  5445   001C30                     u4520:
  5446   001C30  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  5447   001C32                     l5288:
  5448   001C32  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  5449   001C36  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  5450   001C3A  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  5451   001C3E  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  5452   001C42                     l1622:
  5453   001C42  0012               	return		;funcret
  5454   001C44                     __end_of___xxtofl:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function ___fltol *****************
  5458 ;; Defined at:
  5459 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  f1              4   76[COMRAM] unsigned char 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  exp1            1   85[COMRAM] unsigned char 
  5464 ;;  sign1           1   84[COMRAM] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  4   76[COMRAM] long 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:       10 bytes
  5479 ;; Hardware stack levels used: 1
  5480 ;; Hardware stack levels required when called: 4
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_main
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text34
  5489   0024B8                     __ptext34:
  5490                           	callstack 0
  5491   0024B8                     ___fltol:
  5492                           	callstack 26
  5493   0024B8  344F               	rlcf	(___fltol@f1+2)^0,w,c
  5494   0024BA  3450               	rlcf	(___fltol@f1+3)^0,w,c
  5495   0024BC  6E56               	movwf	___fltol@exp1^0,c
  5496   0024BE  5056               	movf	___fltol@exp1^0,w,c
  5497   0024C0  A4D8               	btfss	status,2,c
  5498   0024C2  EF65  F012         	goto	u4361
  5499   0024C6  EF67  F012         	goto	u4360
  5500   0024CA                     u4361:
  5501   0024CA  EF71  F012         	goto	l5208
  5502   0024CE                     u4360:
  5503   0024CE                     l5204:
  5504   0024CE  0E00               	movlw	0
  5505   0024D0  6E4D               	movwf	?___fltol^0,c
  5506   0024D2  0E00               	movlw	0
  5507   0024D4  6E4E               	movwf	(?___fltol+1)^0,c
  5508   0024D6  0E00               	movlw	0
  5509   0024D8  6E4F               	movwf	(?___fltol+2)^0,c
  5510   0024DA  0E00               	movlw	0
  5511   0024DC  6E50               	movwf	(?___fltol+3)^0,c
  5512   0024DE  EFDE  F012         	goto	l1261
  5513   0024E2                     l5208:
  5514   0024E2  C04D  F051         	movff	___fltol@f1,??___fltol
  5515   0024E6  C04E  F052         	movff	___fltol@f1+1,??___fltol+1
  5516   0024EA  C04F  F053         	movff	___fltol@f1+2,??___fltol+2
  5517   0024EE  C050  F054         	movff	___fltol@f1+3,??___fltol+3
  5518   0024F2  0E20               	movlw	32
  5519   0024F4  EF81  F012         	goto	u4370
  5520   0024F8                     u4375:
  5521   0024F8  90D8               	bcf	status,0,c
  5522   0024FA  3254               	rrcf	(??___fltol+3)^0,f,c
  5523   0024FC  3253               	rrcf	(??___fltol+2)^0,f,c
  5524   0024FE  3252               	rrcf	(??___fltol+1)^0,f,c
  5525   002500  3251               	rrcf	??___fltol^0,f,c
  5526   002502                     u4370:
  5527   002502  2EE8               	decfsz	wreg,f,c
  5528   002504  EF7C  F012         	goto	u4375
  5529   002508  5051               	movf	??___fltol^0,w,c
  5530   00250A  6E55               	movwf	___fltol@sign1^0,c
  5531   00250C  8E4F               	bsf	(___fltol@f1+2)^0,7,c
  5532   00250E  0EFF               	movlw	255
  5533   002510  164D               	andwf	___fltol@f1^0,f,c
  5534   002512  0EFF               	movlw	255
  5535   002514  164E               	andwf	(___fltol@f1+1)^0,f,c
  5536   002516  0EFF               	movlw	255
  5537   002518  164F               	andwf	(___fltol@f1+2)^0,f,c
  5538   00251A  0E00               	movlw	0
  5539   00251C  1650               	andwf	(___fltol@f1+3)^0,f,c
  5540   00251E  0E96               	movlw	150
  5541   002520  5E56               	subwf	___fltol@exp1^0,f,c
  5542   002522  BE56               	btfsc	___fltol@exp1^0,7,c
  5543   002524  EF98  F012         	goto	u4380
  5544   002528  EF96  F012         	goto	u4381
  5545   00252C                     u4381:
  5546   00252C  EFAE  F012         	goto	l5228
  5547   002530                     u4380:
  5548   002530  5056               	movf	___fltol@exp1^0,w,c
  5549   002532  0A80               	xorlw	128
  5550   002534  0F97               	addlw	151
  5551   002536  B0D8               	btfsc	status,0,c
  5552   002538  EFA0  F012         	goto	u4391
  5553   00253C  EFA2  F012         	goto	u4390
  5554   002540                     u4391:
  5555   002540  EFA4  F012         	goto	l5224
  5556   002544                     u4390:
  5557   002544  EF67  F012         	goto	l5204
  5558   002548                     l5224:
  5559   002548  90D8               	bcf	status,0,c
  5560   00254A  3250               	rrcf	(___fltol@f1+3)^0,f,c
  5561   00254C  324F               	rrcf	(___fltol@f1+2)^0,f,c
  5562   00254E  324E               	rrcf	(___fltol@f1+1)^0,f,c
  5563   002550  324D               	rrcf	___fltol@f1^0,f,c
  5564   002552  3E56               	incfsz	___fltol@exp1^0,f,c
  5565   002554  EFA4  F012         	goto	l5224
  5566   002558  EFC6  F012         	goto	l5238
  5567   00255C                     l5228:
  5568   00255C  0E1F               	movlw	31
  5569   00255E  6456               	cpfsgt	___fltol@exp1^0,c
  5570   002560  EFB4  F012         	goto	u4401
  5571   002564  EFB6  F012         	goto	u4400
  5572   002568                     u4401:
  5573   002568  EFBE  F012         	goto	l5236
  5574   00256C                     u4400:
  5575   00256C  EF67  F012         	goto	l5204
  5576   002570                     l5234:
  5577   002570  90D8               	bcf	status,0,c
  5578   002572  364D               	rlcf	___fltol@f1^0,f,c
  5579   002574  364E               	rlcf	(___fltol@f1+1)^0,f,c
  5580   002576  364F               	rlcf	(___fltol@f1+2)^0,f,c
  5581   002578  3650               	rlcf	(___fltol@f1+3)^0,f,c
  5582   00257A  0656               	decf	___fltol@exp1^0,f,c
  5583   00257C                     l5236:
  5584   00257C  5056               	movf	___fltol@exp1^0,w,c
  5585   00257E  A4D8               	btfss	status,2,c
  5586   002580  EFC4  F012         	goto	u4411
  5587   002584  EFC6  F012         	goto	u4410
  5588   002588                     u4411:
  5589   002588  EFB8  F012         	goto	l5234
  5590   00258C                     u4410:
  5591   00258C                     l5238:
  5592   00258C  5055               	movf	___fltol@sign1^0,w,c
  5593   00258E  B4D8               	btfsc	status,2,c
  5594   002590  EFCC  F012         	goto	u4421
  5595   002594  EFCE  F012         	goto	u4420
  5596   002598                     u4421:
  5597   002598  EFD6  F012         	goto	l5242
  5598   00259C                     u4420:
  5599   00259C  1E50               	comf	(___fltol@f1+3)^0,f,c
  5600   00259E  1E4F               	comf	(___fltol@f1+2)^0,f,c
  5601   0025A0  1E4E               	comf	(___fltol@f1+1)^0,f,c
  5602   0025A2  6C4D               	negf	___fltol@f1^0,c
  5603   0025A4  0E00               	movlw	0
  5604   0025A6  224E               	addwfc	(___fltol@f1+1)^0,f,c
  5605   0025A8  224F               	addwfc	(___fltol@f1+2)^0,f,c
  5606   0025AA  2250               	addwfc	(___fltol@f1+3)^0,f,c
  5607   0025AC                     l5242:
  5608   0025AC  C04D  F04D         	movff	___fltol@f1,?___fltol
  5609   0025B0  C04E  F04E         	movff	___fltol@f1+1,?___fltol+1
  5610   0025B4  C04F  F04F         	movff	___fltol@f1+2,?___fltol+2
  5611   0025B8  C050  F050         	movff	___fltol@f1+3,?___fltol+3
  5612   0025BC                     l1261:
  5613   0025BC  0012               	return		;funcret
  5614   0025BE                     __end_of___fltol:
  5615                           	callstack 0
  5616                           
  5617 ;; *************** function ___flmul *****************
  5618 ;; Defined at:
  5619 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  b               4   26[COMRAM] long 
  5622 ;;  a               4   30[COMRAM] long 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  prod            4   45[COMRAM] struct .
  5625 ;;  grs             4   39[COMRAM] unsigned long 
  5626 ;;  temp            2   49[COMRAM] struct .
  5627 ;;  bexp            1   44[COMRAM] unsigned char 
  5628 ;;  aexp            1   43[COMRAM] unsigned char 
  5629 ;;  sign            1   38[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  4   26[COMRAM] unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, prodl, prodh
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:       25 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 4
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text35
  5654   001034                     __ptext35:
  5655                           	callstack 0
  5656   001034                     ___flmul:
  5657                           	callstack 26
  5658   001034  501E               	movf	(___flmul@b+3)^0,w,c
  5659   001036  0B80               	andlw	128
  5660   001038  6E27               	movwf	___flmul@sign^0,c
  5661   00103A  501E               	movf	(___flmul@b+3)^0,w,c
  5662   00103C  241E               	addwf	(___flmul@b+3)^0,w,c
  5663   00103E  6E2D               	movwf	___flmul@bexp^0,c
  5664   001040  AE1D               	btfss	(___flmul@b+2)^0,7,c
  5665   001042  EF25  F008         	goto	u4171
  5666   001046  EF27  F008         	goto	u4170
  5667   00104A                     u4171:
  5668   00104A  EF28  F008         	goto	l5078
  5669   00104E                     u4170:
  5670   00104E  802D               	bsf	___flmul@bexp^0,0,c
  5671   001050                     l5078:
  5672   001050  502D               	movf	___flmul@bexp^0,w,c
  5673   001052  B4D8               	btfsc	status,2,c
  5674   001054  EF2E  F008         	goto	u4181
  5675   001058  EF30  F008         	goto	u4180
  5676   00105C                     u4181:
  5677   00105C  EF43  F008         	goto	l5086
  5678   001060                     u4180:
  5679   001060  282D               	incf	___flmul@bexp^0,w,c
  5680   001062  A4D8               	btfss	status,2,c
  5681   001064  EF36  F008         	goto	u4191
  5682   001068  EF38  F008         	goto	u4190
  5683   00106C                     u4191:
  5684   00106C  EF40  F008         	goto	l5084
  5685   001070                     u4190:
  5686   001070  0E00               	movlw	0
  5687   001072  6E1B               	movwf	___flmul@b^0,c
  5688   001074  0E00               	movlw	0
  5689   001076  6E1C               	movwf	(___flmul@b+1)^0,c
  5690   001078  0E00               	movlw	0
  5691   00107A  6E1D               	movwf	(___flmul@b+2)^0,c
  5692   00107C  0E00               	movlw	0
  5693   00107E  6E1E               	movwf	(___flmul@b+3)^0,c
  5694   001080                     l5084:
  5695   001080  8E1D               	bsf	(___flmul@b+2)^0,7,c
  5696   001082  EF4B  F008         	goto	l5088
  5697   001086                     l5086:
  5698   001086  0E00               	movlw	0
  5699   001088  6E1B               	movwf	___flmul@b^0,c
  5700   00108A  0E00               	movlw	0
  5701   00108C  6E1C               	movwf	(___flmul@b+1)^0,c
  5702   00108E  0E00               	movlw	0
  5703   001090  6E1D               	movwf	(___flmul@b+2)^0,c
  5704   001092  0E00               	movlw	0
  5705   001094  6E1E               	movwf	(___flmul@b+3)^0,c
  5706   001096                     l5088:
  5707   001096  5022               	movf	(___flmul@a+3)^0,w,c
  5708   001098  0B80               	andlw	128
  5709   00109A  1A27               	xorwf	___flmul@sign^0,f,c
  5710   00109C  5022               	movf	(___flmul@a+3)^0,w,c
  5711   00109E  2422               	addwf	(___flmul@a+3)^0,w,c
  5712   0010A0  6E2C               	movwf	___flmul@aexp^0,c
  5713   0010A2  AE21               	btfss	(___flmul@a+2)^0,7,c
  5714   0010A4  EF56  F008         	goto	u4201
  5715   0010A8  EF58  F008         	goto	u4200
  5716   0010AC                     u4201:
  5717   0010AC  EF59  F008         	goto	l5096
  5718   0010B0                     u4200:
  5719   0010B0  802C               	bsf	___flmul@aexp^0,0,c
  5720   0010B2                     l5096:
  5721   0010B2  502C               	movf	___flmul@aexp^0,w,c
  5722   0010B4  B4D8               	btfsc	status,2,c
  5723   0010B6  EF5F  F008         	goto	u4211
  5724   0010BA  EF61  F008         	goto	u4210
  5725   0010BE                     u4211:
  5726   0010BE  EF74  F008         	goto	l5104
  5727   0010C2                     u4210:
  5728   0010C2  282C               	incf	___flmul@aexp^0,w,c
  5729   0010C4  A4D8               	btfss	status,2,c
  5730   0010C6  EF67  F008         	goto	u4221
  5731   0010CA  EF69  F008         	goto	u4220
  5732   0010CE                     u4221:
  5733   0010CE  EF71  F008         	goto	l5102
  5734   0010D2                     u4220:
  5735   0010D2  0E00               	movlw	0
  5736   0010D4  6E1F               	movwf	___flmul@a^0,c
  5737   0010D6  0E00               	movlw	0
  5738   0010D8  6E20               	movwf	(___flmul@a+1)^0,c
  5739   0010DA  0E00               	movlw	0
  5740   0010DC  6E21               	movwf	(___flmul@a+2)^0,c
  5741   0010DE  0E00               	movlw	0
  5742   0010E0  6E22               	movwf	(___flmul@a+3)^0,c
  5743   0010E2                     l5102:
  5744   0010E2  8E21               	bsf	(___flmul@a+2)^0,7,c
  5745   0010E4  EF7C  F008         	goto	l1578
  5746   0010E8                     l5104:
  5747   0010E8  0E00               	movlw	0
  5748   0010EA  6E1F               	movwf	___flmul@a^0,c
  5749   0010EC  0E00               	movlw	0
  5750   0010EE  6E20               	movwf	(___flmul@a+1)^0,c
  5751   0010F0  0E00               	movlw	0
  5752   0010F2  6E21               	movwf	(___flmul@a+2)^0,c
  5753   0010F4  0E00               	movlw	0
  5754   0010F6  6E22               	movwf	(___flmul@a+3)^0,c
  5755   0010F8                     l1578:
  5756   0010F8  502C               	movf	___flmul@aexp^0,w,c
  5757   0010FA  B4D8               	btfsc	status,2,c
  5758   0010FC  EF82  F008         	goto	u4231
  5759   001100  EF84  F008         	goto	u4230
  5760   001104                     u4231:
  5761   001104  EF8C  F008         	goto	l5108
  5762   001108                     u4230:
  5763   001108  502D               	movf	___flmul@bexp^0,w,c
  5764   00110A  A4D8               	btfss	status,2,c
  5765   00110C  EF8A  F008         	goto	u4241
  5766   001110  EF8C  F008         	goto	u4240
  5767   001114                     u4241:
  5768   001114  EF96  F008         	goto	l5112
  5769   001118                     u4240:
  5770   001118                     l5108:
  5771   001118  0E00               	movlw	0
  5772   00111A  6E1B               	movwf	?___flmul^0,c
  5773   00111C  0E00               	movlw	0
  5774   00111E  6E1C               	movwf	(?___flmul+1)^0,c
  5775   001120  0E00               	movlw	0
  5776   001122  6E1D               	movwf	(?___flmul+2)^0,c
  5777   001124  0E00               	movlw	0
  5778   001126  6E1E               	movwf	(?___flmul+3)^0,c
  5779   001128  EF2E  F00A         	goto	l1582
  5780   00112C                     l5112:
  5781   00112C  5021               	movf	(___flmul@a+2)^0,w,c
  5782   00112E  021B               	mulwf	___flmul@b^0,c
  5783   001130  CFF3 F032          	movff	prodl,___flmul@temp
  5784   001134  CFF4 F033          	movff	prodh,___flmul@temp+1
  5785   001138  5032               	movf	___flmul@temp^0,w,c
  5786   00113A  6E28               	movwf	___flmul@grs^0,c
  5787   00113C  6A29               	clrf	(___flmul@grs+1)^0,c
  5788   00113E  6A2A               	clrf	(___flmul@grs+2)^0,c
  5789   001140  6A2B               	clrf	(___flmul@grs+3)^0,c
  5790   001142  5033               	movf	(___flmul@temp+1)^0,w,c
  5791   001144  6E2E               	movwf	___flmul@prod^0,c
  5792   001146  6A2F               	clrf	(___flmul@prod+1)^0,c
  5793   001148  6A30               	clrf	(___flmul@prod+2)^0,c
  5794   00114A  6A31               	clrf	(___flmul@prod+3)^0,c
  5795   00114C  5020               	movf	(___flmul@a+1)^0,w,c
  5796   00114E  021C               	mulwf	(___flmul@b+1)^0,c
  5797   001150  CFF3 F032          	movff	prodl,___flmul@temp
  5798   001154  CFF4 F033          	movff	prodh,___flmul@temp+1
  5799   001158  5032               	movf	___flmul@temp^0,w,c
  5800   00115A  2628               	addwf	___flmul@grs^0,f,c
  5801   00115C  0E00               	movlw	0
  5802   00115E  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5803   001160  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5804   001162  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5805   001164  5033               	movf	(___flmul@temp+1)^0,w,c
  5806   001166  262E               	addwf	___flmul@prod^0,f,c
  5807   001168  0E00               	movlw	0
  5808   00116A  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5809   00116C  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5810   00116E  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5811   001170  501F               	movf	___flmul@a^0,w,c
  5812   001172  021D               	mulwf	(___flmul@b+2)^0,c
  5813   001174  CFF3 F032          	movff	prodl,___flmul@temp
  5814   001178  CFF4 F033          	movff	prodh,___flmul@temp+1
  5815   00117C  5032               	movf	___flmul@temp^0,w,c
  5816   00117E  2628               	addwf	___flmul@grs^0,f,c
  5817   001180  0E00               	movlw	0
  5818   001182  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5819   001184  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5820   001186  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5821   001188  5033               	movf	(___flmul@temp+1)^0,w,c
  5822   00118A  262E               	addwf	___flmul@prod^0,f,c
  5823   00118C  0E00               	movlw	0
  5824   00118E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5825   001190  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5826   001192  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5827   001194  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  5828   001198  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  5829   00119C  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  5830   0011A0  6A28               	clrf	___flmul@grs^0,c
  5831   0011A2  501F               	movf	___flmul@a^0,w,c
  5832   0011A4  021C               	mulwf	(___flmul@b+1)^0,c
  5833   0011A6  CFF3 F032          	movff	prodl,___flmul@temp
  5834   0011AA  CFF4 F033          	movff	prodh,___flmul@temp+1
  5835   0011AE  5032               	movf	___flmul@temp^0,w,c
  5836   0011B0  2628               	addwf	___flmul@grs^0,f,c
  5837   0011B2  5033               	movf	(___flmul@temp+1)^0,w,c
  5838   0011B4  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5839   0011B6  0E00               	movlw	0
  5840   0011B8  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5841   0011BA  0E00               	movlw	0
  5842   0011BC  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5843   0011BE  5020               	movf	(___flmul@a+1)^0,w,c
  5844   0011C0  021B               	mulwf	___flmul@b^0,c
  5845   0011C2  CFF3 F032          	movff	prodl,___flmul@temp
  5846   0011C6  CFF4 F033          	movff	prodh,___flmul@temp+1
  5847   0011CA  5032               	movf	___flmul@temp^0,w,c
  5848   0011CC  2628               	addwf	___flmul@grs^0,f,c
  5849   0011CE  5033               	movf	(___flmul@temp+1)^0,w,c
  5850   0011D0  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5851   0011D2  0E00               	movlw	0
  5852   0011D4  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5853   0011D6  0E00               	movlw	0
  5854   0011D8  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5855   0011DA  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  5856   0011DE  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  5857   0011E2  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  5858   0011E6  6A28               	clrf	___flmul@grs^0,c
  5859   0011E8  501F               	movf	___flmul@a^0,w,c
  5860   0011EA  021B               	mulwf	___flmul@b^0,c
  5861   0011EC  CFF3 F032          	movff	prodl,___flmul@temp
  5862   0011F0  CFF4 F033          	movff	prodh,___flmul@temp+1
  5863   0011F4  5032               	movf	___flmul@temp^0,w,c
  5864   0011F6  2628               	addwf	___flmul@grs^0,f,c
  5865   0011F8  5033               	movf	(___flmul@temp+1)^0,w,c
  5866   0011FA  2229               	addwfc	(___flmul@grs+1)^0,f,c
  5867   0011FC  0E00               	movlw	0
  5868   0011FE  222A               	addwfc	(___flmul@grs+2)^0,f,c
  5869   001200  0E00               	movlw	0
  5870   001202  222B               	addwfc	(___flmul@grs+3)^0,f,c
  5871   001204  5021               	movf	(___flmul@a+2)^0,w,c
  5872   001206  021C               	mulwf	(___flmul@b+1)^0,c
  5873   001208  CFF3 F032          	movff	prodl,___flmul@temp
  5874   00120C  CFF4 F033          	movff	prodh,___flmul@temp+1
  5875   001210  5032               	movf	___flmul@temp^0,w,c
  5876   001212  262E               	addwf	___flmul@prod^0,f,c
  5877   001214  5033               	movf	(___flmul@temp+1)^0,w,c
  5878   001216  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5879   001218  0E00               	movlw	0
  5880   00121A  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5881   00121C  0E00               	movlw	0
  5882   00121E  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5883   001220  5020               	movf	(___flmul@a+1)^0,w,c
  5884   001222  021D               	mulwf	(___flmul@b+2)^0,c
  5885   001224  CFF3 F032          	movff	prodl,___flmul@temp
  5886   001228  CFF4 F033          	movff	prodh,___flmul@temp+1
  5887   00122C  5032               	movf	___flmul@temp^0,w,c
  5888   00122E  262E               	addwf	___flmul@prod^0,f,c
  5889   001230  5033               	movf	(___flmul@temp+1)^0,w,c
  5890   001232  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5891   001234  0E00               	movlw	0
  5892   001236  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5893   001238  0E00               	movlw	0
  5894   00123A  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5895   00123C  5021               	movf	(___flmul@a+2)^0,w,c
  5896   00123E  021D               	mulwf	(___flmul@b+2)^0,c
  5897   001240  CFF3 F032          	movff	prodl,___flmul@temp
  5898   001244  CFF4 F033          	movff	prodh,___flmul@temp+1
  5899   001248  5032               	movf	___flmul@temp^0,w,c
  5900   00124A  6E23               	movwf	??___flmul^0,c
  5901   00124C  5033               	movf	(___flmul@temp+1)^0,w,c
  5902   00124E  6E24               	movwf	(??___flmul+1)^0,c
  5903   001250  6A25               	clrf	(??___flmul+2)^0,c
  5904   001252  6A26               	clrf	(??___flmul+3)^0,c
  5905   001254  C025  F026         	movff	??___flmul+2,??___flmul+3
  5906   001258  C024  F025         	movff	??___flmul+1,??___flmul+2
  5907   00125C  C023  F024         	movff	??___flmul,??___flmul+1
  5908   001260  6A23               	clrf	??___flmul^0,c
  5909   001262  5023               	movf	??___flmul^0,w,c
  5910   001264  262E               	addwf	___flmul@prod^0,f,c
  5911   001266  5024               	movf	(??___flmul+1)^0,w,c
  5912   001268  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5913   00126A  5025               	movf	(??___flmul+2)^0,w,c
  5914   00126C  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5915   00126E  5026               	movf	(??___flmul+3)^0,w,c
  5916   001270  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5917   001272  C028  F023         	movff	___flmul@grs,??___flmul
  5918   001276  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  5919   00127A  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  5920   00127E  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  5921   001282  0E19               	movlw	25
  5922   001284  EF49  F009         	goto	u4250
  5923   001288                     u4255:
  5924   001288  90D8               	bcf	status,0,c
  5925   00128A  3226               	rrcf	(??___flmul+3)^0,f,c
  5926   00128C  3225               	rrcf	(??___flmul+2)^0,f,c
  5927   00128E  3224               	rrcf	(??___flmul+1)^0,f,c
  5928   001290  3223               	rrcf	??___flmul^0,f,c
  5929   001292                     u4250:
  5930   001292  2EE8               	decfsz	wreg,f,c
  5931   001294  EF44  F009         	goto	u4255
  5932   001298  5023               	movf	??___flmul^0,w,c
  5933   00129A  262E               	addwf	___flmul@prod^0,f,c
  5934   00129C  5024               	movf	(??___flmul+1)^0,w,c
  5935   00129E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  5936   0012A0  5025               	movf	(??___flmul+2)^0,w,c
  5937   0012A2  2230               	addwfc	(___flmul@prod+2)^0,f,c
  5938   0012A4  5026               	movf	(??___flmul+3)^0,w,c
  5939   0012A6  2231               	addwfc	(___flmul@prod+3)^0,f,c
  5940   0012A8  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  5941   0012AC  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  5942   0012B0  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  5943   0012B4  6A28               	clrf	___flmul@grs^0,c
  5944   0012B6  502C               	movf	___flmul@aexp^0,w,c
  5945   0012B8  C02D  F023         	movff	___flmul@bexp,??___flmul
  5946   0012BC  6A24               	clrf	(??___flmul+1)^0,c
  5947   0012BE  2623               	addwf	??___flmul^0,f,c
  5948   0012C0  0E00               	movlw	0
  5949   0012C2  2224               	addwfc	(??___flmul+1)^0,f,c
  5950   0012C4  0E82               	movlw	130
  5951   0012C6  2423               	addwf	??___flmul^0,w,c
  5952   0012C8  6E32               	movwf	___flmul@temp^0,c
  5953   0012CA  0EFF               	movlw	255
  5954   0012CC  2024               	addwfc	(??___flmul+1)^0,w,c
  5955   0012CE  6E33               	movwf	(___flmul@temp+1)^0,c
  5956   0012D0  EF7F  F009         	goto	l5160
  5957   0012D4                     l5154:
  5958   0012D4  90D8               	bcf	status,0,c
  5959   0012D6  362E               	rlcf	___flmul@prod^0,f,c
  5960   0012D8  362F               	rlcf	(___flmul@prod+1)^0,f,c
  5961   0012DA  3630               	rlcf	(___flmul@prod+2)^0,f,c
  5962   0012DC  3631               	rlcf	(___flmul@prod+3)^0,f,c
  5963   0012DE  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  5964   0012E0  EF74  F009         	goto	u4261
  5965   0012E4  EF76  F009         	goto	u4260
  5966   0012E8                     u4261:
  5967   0012E8  EF77  F009         	goto	l1585
  5968   0012EC                     u4260:
  5969   0012EC  802E               	bsf	___flmul@prod^0,0,c
  5970   0012EE                     l1585:
  5971   0012EE  90D8               	bcf	status,0,c
  5972   0012F0  3628               	rlcf	___flmul@grs^0,f,c
  5973   0012F2  3629               	rlcf	(___flmul@grs+1)^0,f,c
  5974   0012F4  362A               	rlcf	(___flmul@grs+2)^0,f,c
  5975   0012F6  362B               	rlcf	(___flmul@grs+3)^0,f,c
  5976   0012F8  0632               	decf	___flmul@temp^0,f,c
  5977   0012FA  A0D8               	btfss	status,0,c
  5978   0012FC  0633               	decf	(___flmul@temp+1)^0,f,c
  5979   0012FE                     l5160:
  5980   0012FE  AE30               	btfss	(___flmul@prod+2)^0,7,c
  5981   001300  EF84  F009         	goto	u4271
  5982   001304  EF86  F009         	goto	u4270
  5983   001308                     u4271:
  5984   001308  EF6A  F009         	goto	l5154
  5985   00130C                     u4270:
  5986   00130C  0E00               	movlw	0
  5987   00130E  6E2C               	movwf	___flmul@aexp^0,c
  5988   001310  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  5989   001312  EF8D  F009         	goto	u4281
  5990   001316  EF8F  F009         	goto	u4280
  5991   00131A                     u4281:
  5992   00131A  EFB3  F009         	goto	l1587
  5993   00131E                     u4280:
  5994   00131E  0EFF               	movlw	255
  5995   001320  1428               	andwf	___flmul@grs^0,w,c
  5996   001322  6E23               	movwf	??___flmul^0,c
  5997   001324  0EFF               	movlw	255
  5998   001326  1429               	andwf	(___flmul@grs+1)^0,w,c
  5999   001328  6E24               	movwf	(??___flmul+1)^0,c
  6000   00132A  0EFF               	movlw	255
  6001   00132C  142A               	andwf	(___flmul@grs+2)^0,w,c
  6002   00132E  6E25               	movwf	(??___flmul+2)^0,c
  6003   001330  0E7F               	movlw	127
  6004   001332  142B               	andwf	(___flmul@grs+3)^0,w,c
  6005   001334  6E26               	movwf	(??___flmul+3)^0,c
  6006   001336  5023               	movf	??___flmul^0,w,c
  6007   001338  1024               	iorwf	(??___flmul+1)^0,w,c
  6008   00133A  1025               	iorwf	(??___flmul+2)^0,w,c
  6009   00133C  1026               	iorwf	(??___flmul+3)^0,w,c
  6010   00133E  B4D8               	btfsc	status,2,c
  6011   001340  EFA4  F009         	goto	u4291
  6012   001344  EFA6  F009         	goto	u4290
  6013   001348                     u4291:
  6014   001348  EFAA  F009         	goto	l1588
  6015   00134C                     u4290:
  6016   00134C                     l5168:
  6017   00134C  0E01               	movlw	1
  6018   00134E  6E2C               	movwf	___flmul@aexp^0,c
  6019   001350  EFB3  F009         	goto	l1587
  6020   001354                     l1588:
  6021   001354  A02E               	btfss	___flmul@prod^0,0,c
  6022   001356  EFAF  F009         	goto	u4301
  6023   00135A  EFB1  F009         	goto	u4300
  6024   00135E                     u4301:
  6025   00135E  EFB3  F009         	goto	l1587
  6026   001362                     u4300:
  6027   001362  EFA6  F009         	goto	l5168
  6028   001366                     l1587:
  6029   001366  502C               	movf	___flmul@aexp^0,w,c
  6030   001368  B4D8               	btfsc	status,2,c
  6031   00136A  EFB9  F009         	goto	u4311
  6032   00136E  EFBB  F009         	goto	u4310
  6033   001372                     u4311:
  6034   001372  EFDF  F009         	goto	l5180
  6035   001376                     u4310:
  6036   001376  0E01               	movlw	1
  6037   001378  262E               	addwf	___flmul@prod^0,f,c
  6038   00137A  0E00               	movlw	0
  6039   00137C  222F               	addwfc	(___flmul@prod+1)^0,f,c
  6040   00137E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  6041   001380  2231               	addwfc	(___flmul@prod+3)^0,f,c
  6042   001382  A031               	btfss	(___flmul@prod+3)^0,0,c
  6043   001384  EFC6  F009         	goto	u4321
  6044   001388  EFC8  F009         	goto	u4320
  6045   00138C                     u4321:
  6046   00138C  EFDF  F009         	goto	l5180
  6047   001390                     u4320:
  6048   001390  C02E  F023         	movff	___flmul@prod,??___flmul
  6049   001394  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  6050   001398  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  6051   00139C  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  6052   0013A0  3426               	rlcf	(??___flmul+3)^0,w,c
  6053   0013A2  3226               	rrcf	(??___flmul+3)^0,f,c
  6054   0013A4  3225               	rrcf	(??___flmul+2)^0,f,c
  6055   0013A6  3224               	rrcf	(??___flmul+1)^0,f,c
  6056   0013A8  3223               	rrcf	??___flmul^0,f,c
  6057   0013AA  C023  F02E         	movff	??___flmul,___flmul@prod
  6058   0013AE  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  6059   0013B2  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  6060   0013B6  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  6061   0013BA  4A32               	infsnz	___flmul@temp^0,f,c
  6062   0013BC  2A33               	incf	(___flmul@temp+1)^0,f,c
  6063   0013BE                     l5180:
  6064   0013BE  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  6065   0013C0  EFEA  F009         	goto	u4331
  6066   0013C4  5033               	movf	(___flmul@temp+1)^0,w,c
  6067   0013C6  E108               	bnz	u4330
  6068   0013C8  2832               	incf	___flmul@temp^0,w,c
  6069   0013CA  A0D8               	btfss	status,0,c
  6070   0013CC  EFEA  F009         	goto	u4331
  6071   0013D0  EFEC  F009         	goto	u4330
  6072   0013D4                     u4331:
  6073   0013D4  EFF6  F009         	goto	l5184
  6074   0013D8                     u4330:
  6075   0013D8  0E00               	movlw	0
  6076   0013DA  6E2E               	movwf	___flmul@prod^0,c
  6077   0013DC  0E00               	movlw	0
  6078   0013DE  6E2F               	movwf	(___flmul@prod+1)^0,c
  6079   0013E0  0E80               	movlw	128
  6080   0013E2  6E30               	movwf	(___flmul@prod+2)^0,c
  6081   0013E4  0E7F               	movlw	127
  6082   0013E6  6E31               	movwf	(___flmul@prod+3)^0,c
  6083   0013E8  EF24  F00A         	goto	l5196
  6084   0013EC                     l5184:
  6085   0013EC  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  6086   0013EE  EF03  F00A         	goto	u4340
  6087   0013F2  5033               	movf	(___flmul@temp+1)^0,w,c
  6088   0013F4  E106               	bnz	u4341
  6089   0013F6  0432               	decf	___flmul@temp^0,w,c
  6090   0013F8  B0D8               	btfsc	status,0,c
  6091   0013FA  EF01  F00A         	goto	u4341
  6092   0013FE  EF03  F00A         	goto	u4340
  6093   001402                     u4341:
  6094   001402  EF0F  F00A         	goto	l1595
  6095   001406                     u4340:
  6096   001406  0E00               	movlw	0
  6097   001408  6E2E               	movwf	___flmul@prod^0,c
  6098   00140A  0E00               	movlw	0
  6099   00140C  6E2F               	movwf	(___flmul@prod+1)^0,c
  6100   00140E  0E00               	movlw	0
  6101   001410  6E30               	movwf	(___flmul@prod+2)^0,c
  6102   001412  0E00               	movlw	0
  6103   001414  6E31               	movwf	(___flmul@prod+3)^0,c
  6104   001416  0E00               	movlw	0
  6105   001418  6E27               	movwf	___flmul@sign^0,c
  6106   00141A  EF24  F00A         	goto	l5196
  6107   00141E                     l1595:
  6108   00141E  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  6109   001422  0EFF               	movlw	255
  6110   001424  162E               	andwf	___flmul@prod^0,f,c
  6111   001426  0EFF               	movlw	255
  6112   001428  162F               	andwf	(___flmul@prod+1)^0,f,c
  6113   00142A  0E7F               	movlw	127
  6114   00142C  1630               	andwf	(___flmul@prod+2)^0,f,c
  6115   00142E  0E00               	movlw	0
  6116   001430  1631               	andwf	(___flmul@prod+3)^0,f,c
  6117   001432  A02D               	btfss	___flmul@bexp^0,0,c
  6118   001434  EF1E  F00A         	goto	u4351
  6119   001438  EF20  F00A         	goto	u4350
  6120   00143C                     u4351:
  6121   00143C  EF21  F00A         	goto	l5194
  6122   001440                     u4350:
  6123   001440  8E30               	bsf	(___flmul@prod+2)^0,7,c
  6124   001442                     l5194:
  6125   001442  90D8               	bcf	status,0,c
  6126   001444  302D               	rrcf	___flmul@bexp^0,w,c
  6127   001446  6E31               	movwf	(___flmul@prod+3)^0,c
  6128   001448                     l5196:
  6129   001448  5027               	movf	___flmul@sign^0,w,c
  6130   00144A  1231               	iorwf	(___flmul@prod+3)^0,f,c
  6131   00144C  C02E  F01B         	movff	___flmul@prod,?___flmul
  6132   001450  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  6133   001454  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  6134   001458  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  6135   00145C                     l1582:
  6136   00145C  0012               	return		;funcret
  6137   00145E                     __end_of___flmul:
  6138                           	callstack 0
  6139                           
  6140 ;; *************** function ___fldiv *****************
  6141 ;; Defined at:
  6142 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  b               4   51[COMRAM] unsigned char 
  6145 ;;  a               4   55[COMRAM] unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  grs             4   70[COMRAM] unsigned long 
  6148 ;;  rem             4   63[COMRAM] unsigned long 
  6149 ;;  new_exp         2   68[COMRAM] short 
  6150 ;;  aexp            1   75[COMRAM] unsigned char 
  6151 ;;  bexp            1   74[COMRAM] unsigned char 
  6152 ;;  sign            1   67[COMRAM] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  4   51[COMRAM] unsigned char 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6162 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;Total ram usage:       25 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 4
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_main
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text36
  6177   00145E                     __ptext36:
  6178                           	callstack 0
  6179   00145E                     ___fldiv:
  6180                           	callstack 26
  6181   00145E  5037               	movf	(___fldiv@b+3)^0,w,c
  6182   001460  0B80               	andlw	128
  6183   001462  6E44               	movwf	___fldiv@sign^0,c
  6184   001464  5037               	movf	(___fldiv@b+3)^0,w,c
  6185   001466  2437               	addwf	(___fldiv@b+3)^0,w,c
  6186   001468  6E4B               	movwf	___fldiv@bexp^0,c
  6187   00146A  AE36               	btfss	(___fldiv@b+2)^0,7,c
  6188   00146C  EF3A  F00A         	goto	u3941
  6189   001470  EF3C  F00A         	goto	u3940
  6190   001474                     u3941:
  6191   001474  EF3D  F00A         	goto	l4940
  6192   001478                     u3940:
  6193   001478  804B               	bsf	___fldiv@bexp^0,0,c
  6194   00147A                     l4940:
  6195   00147A  504B               	movf	___fldiv@bexp^0,w,c
  6196   00147C  B4D8               	btfsc	status,2,c
  6197   00147E  EF43  F00A         	goto	u3951
  6198   001482  EF45  F00A         	goto	u3950
  6199   001486                     u3951:
  6200   001486  EF5A  F00A         	goto	l4950
  6201   00148A                     u3950:
  6202   00148A  284B               	incf	___fldiv@bexp^0,w,c
  6203   00148C  A4D8               	btfss	status,2,c
  6204   00148E  EF4B  F00A         	goto	u3961
  6205   001492  EF4D  F00A         	goto	u3960
  6206   001496                     u3961:
  6207   001496  EF55  F00A         	goto	l4946
  6208   00149A                     u3960:
  6209   00149A  0E00               	movlw	0
  6210   00149C  6E34               	movwf	___fldiv@b^0,c
  6211   00149E  0E00               	movlw	0
  6212   0014A0  6E35               	movwf	(___fldiv@b+1)^0,c
  6213   0014A2  0E00               	movlw	0
  6214   0014A4  6E36               	movwf	(___fldiv@b+2)^0,c
  6215   0014A6  0E00               	movlw	0
  6216   0014A8  6E37               	movwf	(___fldiv@b+3)^0,c
  6217   0014AA                     l4946:
  6218   0014AA  8E36               	bsf	(___fldiv@b+2)^0,7,c
  6219   0014AC  0E00               	movlw	0
  6220   0014AE  6E37               	movwf	(___fldiv@b+3)^0,c
  6221   0014B0  EF62  F00A         	goto	l4952
  6222   0014B4                     l4950:
  6223   0014B4  0E00               	movlw	0
  6224   0014B6  6E34               	movwf	___fldiv@b^0,c
  6225   0014B8  0E00               	movlw	0
  6226   0014BA  6E35               	movwf	(___fldiv@b+1)^0,c
  6227   0014BC  0E00               	movlw	0
  6228   0014BE  6E36               	movwf	(___fldiv@b+2)^0,c
  6229   0014C0  0E00               	movlw	0
  6230   0014C2  6E37               	movwf	(___fldiv@b+3)^0,c
  6231   0014C4                     l4952:
  6232   0014C4  503B               	movf	(___fldiv@a+3)^0,w,c
  6233   0014C6  0B80               	andlw	128
  6234   0014C8  1A44               	xorwf	___fldiv@sign^0,f,c
  6235   0014CA  503B               	movf	(___fldiv@a+3)^0,w,c
  6236   0014CC  243B               	addwf	(___fldiv@a+3)^0,w,c
  6237   0014CE  6E4C               	movwf	___fldiv@aexp^0,c
  6238   0014D0  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  6239   0014D2  EF6D  F00A         	goto	u3971
  6240   0014D6  EF6F  F00A         	goto	u3970
  6241   0014DA                     u3971:
  6242   0014DA  EF70  F00A         	goto	l4960
  6243   0014DE                     u3970:
  6244   0014DE  804C               	bsf	___fldiv@aexp^0,0,c
  6245   0014E0                     l4960:
  6246   0014E0  504C               	movf	___fldiv@aexp^0,w,c
  6247   0014E2  B4D8               	btfsc	status,2,c
  6248   0014E4  EF76  F00A         	goto	u3981
  6249   0014E8  EF78  F00A         	goto	u3980
  6250   0014EC                     u3981:
  6251   0014EC  EF8D  F00A         	goto	l4970
  6252   0014F0                     u3980:
  6253   0014F0  284C               	incf	___fldiv@aexp^0,w,c
  6254   0014F2  A4D8               	btfss	status,2,c
  6255   0014F4  EF7E  F00A         	goto	u3991
  6256   0014F8  EF80  F00A         	goto	u3990
  6257   0014FC                     u3991:
  6258   0014FC  EF88  F00A         	goto	l4966
  6259   001500                     u3990:
  6260   001500  0E00               	movlw	0
  6261   001502  6E38               	movwf	___fldiv@a^0,c
  6262   001504  0E00               	movlw	0
  6263   001506  6E39               	movwf	(___fldiv@a+1)^0,c
  6264   001508  0E00               	movlw	0
  6265   00150A  6E3A               	movwf	(___fldiv@a+2)^0,c
  6266   00150C  0E00               	movlw	0
  6267   00150E  6E3B               	movwf	(___fldiv@a+3)^0,c
  6268   001510                     l4966:
  6269   001510  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  6270   001512  0E00               	movlw	0
  6271   001514  6E3B               	movwf	(___fldiv@a+3)^0,c
  6272   001516  EF95  F00A         	goto	l4972
  6273   00151A                     l4970:
  6274   00151A  0E00               	movlw	0
  6275   00151C  6E38               	movwf	___fldiv@a^0,c
  6276   00151E  0E00               	movlw	0
  6277   001520  6E39               	movwf	(___fldiv@a+1)^0,c
  6278   001522  0E00               	movlw	0
  6279   001524  6E3A               	movwf	(___fldiv@a+2)^0,c
  6280   001526  0E00               	movlw	0
  6281   001528  6E3B               	movwf	(___fldiv@a+3)^0,c
  6282   00152A                     l4972:
  6283   00152A  5038               	movf	___fldiv@a^0,w,c
  6284   00152C  1039               	iorwf	(___fldiv@a+1)^0,w,c
  6285   00152E  103A               	iorwf	(___fldiv@a+2)^0,w,c
  6286   001530  103B               	iorwf	(___fldiv@a+3)^0,w,c
  6287   001532  A4D8               	btfss	status,2,c
  6288   001534  EF9E  F00A         	goto	u4001
  6289   001538  EFA0  F00A         	goto	u4000
  6290   00153C                     u4001:
  6291   00153C  EFB8  F00A         	goto	l4984
  6292   001540                     u4000:
  6293   001540  0E00               	movlw	0
  6294   001542  6E34               	movwf	___fldiv@b^0,c
  6295   001544  0E00               	movlw	0
  6296   001546  6E35               	movwf	(___fldiv@b+1)^0,c
  6297   001548  0E00               	movlw	0
  6298   00154A  6E36               	movwf	(___fldiv@b+2)^0,c
  6299   00154C  0E00               	movlw	0
  6300   00154E  6E37               	movwf	(___fldiv@b+3)^0,c
  6301   001550  0E80               	movlw	128
  6302   001552  1236               	iorwf	(___fldiv@b+2)^0,f,c
  6303   001554  0E7F               	movlw	127
  6304   001556  1237               	iorwf	(___fldiv@b+3)^0,f,c
  6305   001558                     l4978:
  6306   001558  5044               	movf	___fldiv@sign^0,w,c
  6307   00155A  1237               	iorwf	(___fldiv@b+3)^0,f,c
  6308   00155C  C034  F034         	movff	___fldiv@b,?___fldiv
  6309   001560  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  6310   001564  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  6311   001568  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  6312   00156C  EFFB  F00B         	goto	l1546
  6313   001570                     l4984:
  6314   001570  504B               	movf	___fldiv@bexp^0,w,c
  6315   001572  A4D8               	btfss	status,2,c
  6316   001574  EFBE  F00A         	goto	u4011
  6317   001578  EFC0  F00A         	goto	u4010
  6318   00157C                     u4011:
  6319   00157C  EFCA  F00A         	goto	l4992
  6320   001580                     u4010:
  6321   001580  0E00               	movlw	0
  6322   001582  6E34               	movwf	?___fldiv^0,c
  6323   001584  0E00               	movlw	0
  6324   001586  6E35               	movwf	(?___fldiv+1)^0,c
  6325   001588  0E00               	movlw	0
  6326   00158A  6E36               	movwf	(?___fldiv+2)^0,c
  6327   00158C  0E00               	movlw	0
  6328   00158E  6E37               	movwf	(?___fldiv+3)^0,c
  6329   001590  EFFB  F00B         	goto	l1546
  6330   001594                     l4992:
  6331   001594  504C               	movf	___fldiv@aexp^0,w,c
  6332   001596  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  6333   00159A  6A3D               	clrf	(??___fldiv+1)^0,c
  6334   00159C  5E3C               	subwf	??___fldiv^0,f,c
  6335   00159E  0E00               	movlw	0
  6336   0015A0  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  6337   0015A2  0E7F               	movlw	127
  6338   0015A4  243C               	addwf	??___fldiv^0,w,c
  6339   0015A6  6E45               	movwf	___fldiv@new_exp^0,c
  6340   0015A8  0E00               	movlw	0
  6341   0015AA  203D               	addwfc	(??___fldiv+1)^0,w,c
  6342   0015AC  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6343   0015AE  C034  F040         	movff	___fldiv@b,___fldiv@rem
  6344   0015B2  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  6345   0015B6  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  6346   0015BA  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  6347   0015BE  0E00               	movlw	0
  6348   0015C0  6E34               	movwf	___fldiv@b^0,c
  6349   0015C2  0E00               	movlw	0
  6350   0015C4  6E35               	movwf	(___fldiv@b+1)^0,c
  6351   0015C6  0E00               	movlw	0
  6352   0015C8  6E36               	movwf	(___fldiv@b+2)^0,c
  6353   0015CA  0E00               	movlw	0
  6354   0015CC  6E37               	movwf	(___fldiv@b+3)^0,c
  6355   0015CE  0E00               	movlw	0
  6356   0015D0  6E47               	movwf	___fldiv@grs^0,c
  6357   0015D2  0E00               	movlw	0
  6358   0015D4  6E48               	movwf	(___fldiv@grs+1)^0,c
  6359   0015D6  0E00               	movlw	0
  6360   0015D8  6E49               	movwf	(___fldiv@grs+2)^0,c
  6361   0015DA  0E00               	movlw	0
  6362   0015DC  6E4A               	movwf	(___fldiv@grs+3)^0,c
  6363   0015DE  0E00               	movlw	0
  6364   0015E0  6E4C               	movwf	___fldiv@aexp^0,c
  6365   0015E2  EF2B  F00B         	goto	l1548
  6366   0015E6                     l5002:
  6367   0015E6  504C               	movf	___fldiv@aexp^0,w,c
  6368   0015E8  B4D8               	btfsc	status,2,c
  6369   0015EA  EFF9  F00A         	goto	u4021
  6370   0015EE  EFFB  F00A         	goto	u4020
  6371   0015F2                     u4021:
  6372   0015F2  EF12  F00B         	goto	l5010
  6373   0015F6                     u4020:
  6374   0015F6  90D8               	bcf	status,0,c
  6375   0015F8  3640               	rlcf	___fldiv@rem^0,f,c
  6376   0015FA  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  6377   0015FC  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  6378   0015FE  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  6379   001600  90D8               	bcf	status,0,c
  6380   001602  3634               	rlcf	___fldiv@b^0,f,c
  6381   001604  3635               	rlcf	(___fldiv@b+1)^0,f,c
  6382   001606  3636               	rlcf	(___fldiv@b+2)^0,f,c
  6383   001608  3637               	rlcf	(___fldiv@b+3)^0,f,c
  6384   00160A  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  6385   00160C  EF0A  F00B         	goto	u4031
  6386   001610  EF0C  F00B         	goto	u4030
  6387   001614                     u4031:
  6388   001614  EF0D  F00B         	goto	l1551
  6389   001618                     u4030:
  6390   001618  8034               	bsf	___fldiv@b^0,0,c
  6391   00161A                     l1551:
  6392   00161A  90D8               	bcf	status,0,c
  6393   00161C  3647               	rlcf	___fldiv@grs^0,f,c
  6394   00161E  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  6395   001620  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  6396   001622  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  6397   001624                     l5010:
  6398   001624  5038               	movf	___fldiv@a^0,w,c
  6399   001626  5C40               	subwf	___fldiv@rem^0,w,c
  6400   001628  5039               	movf	(___fldiv@a+1)^0,w,c
  6401   00162A  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  6402   00162C  503A               	movf	(___fldiv@a+2)^0,w,c
  6403   00162E  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  6404   001630  503B               	movf	(___fldiv@a+3)^0,w,c
  6405   001632  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  6406   001634  A0D8               	btfss	status,0,c
  6407   001636  EF1F  F00B         	goto	u4041
  6408   00163A  EF21  F00B         	goto	u4040
  6409   00163E                     u4041:
  6410   00163E  EF2A  F00B         	goto	l5016
  6411   001642                     u4040:
  6412   001642  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  6413   001644  5038               	movf	___fldiv@a^0,w,c
  6414   001646  5E40               	subwf	___fldiv@rem^0,f,c
  6415   001648  5039               	movf	(___fldiv@a+1)^0,w,c
  6416   00164A  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  6417   00164C  503A               	movf	(___fldiv@a+2)^0,w,c
  6418   00164E  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  6419   001650  503B               	movf	(___fldiv@a+3)^0,w,c
  6420   001652  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  6421   001654                     l5016:
  6422   001654  2A4C               	incf	___fldiv@aexp^0,f,c
  6423   001656                     l1548:
  6424   001656  0E19               	movlw	25
  6425   001658  644C               	cpfsgt	___fldiv@aexp^0,c
  6426   00165A  EF31  F00B         	goto	u4051
  6427   00165E  EF33  F00B         	goto	u4050
  6428   001662                     u4051:
  6429   001662  EFF3  F00A         	goto	l5002
  6430   001666                     u4050:
  6431   001666  5040               	movf	___fldiv@rem^0,w,c
  6432   001668  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  6433   00166A  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  6434   00166C  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  6435   00166E  B4D8               	btfsc	status,2,c
  6436   001670  EF3C  F00B         	goto	u4061
  6437   001674  EF3E  F00B         	goto	u4060
  6438   001678                     u4061:
  6439   001678  EF56  F00B         	goto	l5028
  6440   00167C                     u4060:
  6441   00167C  8047               	bsf	___fldiv@grs^0,0,c
  6442   00167E  EF56  F00B         	goto	l5028
  6443   001682                     l5022:
  6444   001682  90D8               	bcf	status,0,c
  6445   001684  3634               	rlcf	___fldiv@b^0,f,c
  6446   001686  3635               	rlcf	(___fldiv@b+1)^0,f,c
  6447   001688  3636               	rlcf	(___fldiv@b+2)^0,f,c
  6448   00168A  3637               	rlcf	(___fldiv@b+3)^0,f,c
  6449   00168C  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  6450   00168E  EF4B  F00B         	goto	u4071
  6451   001692  EF4D  F00B         	goto	u4070
  6452   001696                     u4071:
  6453   001696  EF4E  F00B         	goto	l1557
  6454   00169A                     u4070:
  6455   00169A  8034               	bsf	___fldiv@b^0,0,c
  6456   00169C                     l1557:
  6457   00169C  90D8               	bcf	status,0,c
  6458   00169E  3647               	rlcf	___fldiv@grs^0,f,c
  6459   0016A0  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  6460   0016A2  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  6461   0016A4  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  6462   0016A6  0645               	decf	___fldiv@new_exp^0,f,c
  6463   0016A8  A0D8               	btfss	status,0,c
  6464   0016AA  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  6465   0016AC                     l5028:
  6466   0016AC  AE36               	btfss	(___fldiv@b+2)^0,7,c
  6467   0016AE  EF5B  F00B         	goto	u4081
  6468   0016B2  EF5D  F00B         	goto	u4080
  6469   0016B6                     u4081:
  6470   0016B6  EF41  F00B         	goto	l5022
  6471   0016BA                     u4080:
  6472   0016BA  0E00               	movlw	0
  6473   0016BC  6E4C               	movwf	___fldiv@aexp^0,c
  6474   0016BE  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  6475   0016C0  EF64  F00B         	goto	u4091
  6476   0016C4  EF66  F00B         	goto	u4090
  6477   0016C8                     u4091:
  6478   0016C8  EF8A  F00B         	goto	l1559
  6479   0016CC                     u4090:
  6480   0016CC  0EFF               	movlw	255
  6481   0016CE  1447               	andwf	___fldiv@grs^0,w,c
  6482   0016D0  6E3C               	movwf	??___fldiv^0,c
  6483   0016D2  0EFF               	movlw	255
  6484   0016D4  1448               	andwf	(___fldiv@grs+1)^0,w,c
  6485   0016D6  6E3D               	movwf	(??___fldiv+1)^0,c
  6486   0016D8  0EFF               	movlw	255
  6487   0016DA  1449               	andwf	(___fldiv@grs+2)^0,w,c
  6488   0016DC  6E3E               	movwf	(??___fldiv+2)^0,c
  6489   0016DE  0E7F               	movlw	127
  6490   0016E0  144A               	andwf	(___fldiv@grs+3)^0,w,c
  6491   0016E2  6E3F               	movwf	(??___fldiv+3)^0,c
  6492   0016E4  503C               	movf	??___fldiv^0,w,c
  6493   0016E6  103D               	iorwf	(??___fldiv+1)^0,w,c
  6494   0016E8  103E               	iorwf	(??___fldiv+2)^0,w,c
  6495   0016EA  103F               	iorwf	(??___fldiv+3)^0,w,c
  6496   0016EC  B4D8               	btfsc	status,2,c
  6497   0016EE  EF7B  F00B         	goto	u4101
  6498   0016F2  EF7D  F00B         	goto	u4100
  6499   0016F6                     u4101:
  6500   0016F6  EF81  F00B         	goto	l1560
  6501   0016FA                     u4100:
  6502   0016FA                     l5036:
  6503   0016FA  0E01               	movlw	1
  6504   0016FC  6E4C               	movwf	___fldiv@aexp^0,c
  6505   0016FE  EF8A  F00B         	goto	l1559
  6506   001702                     l1560:
  6507   001702  A034               	btfss	___fldiv@b^0,0,c
  6508   001704  EF86  F00B         	goto	u4111
  6509   001708  EF88  F00B         	goto	u4110
  6510   00170C                     u4111:
  6511   00170C  EF8A  F00B         	goto	l1559
  6512   001710                     u4110:
  6513   001710  EF7D  F00B         	goto	l5036
  6514   001714                     l1559:
  6515   001714  504C               	movf	___fldiv@aexp^0,w,c
  6516   001716  B4D8               	btfsc	status,2,c
  6517   001718  EF90  F00B         	goto	u4121
  6518   00171C  EF92  F00B         	goto	u4120
  6519   001720                     u4121:
  6520   001720  EFB6  F00B         	goto	l5048
  6521   001724                     u4120:
  6522   001724  0E01               	movlw	1
  6523   001726  2634               	addwf	___fldiv@b^0,f,c
  6524   001728  0E00               	movlw	0
  6525   00172A  2235               	addwfc	(___fldiv@b+1)^0,f,c
  6526   00172C  2236               	addwfc	(___fldiv@b+2)^0,f,c
  6527   00172E  2237               	addwfc	(___fldiv@b+3)^0,f,c
  6528   001730  A037               	btfss	(___fldiv@b+3)^0,0,c
  6529   001732  EF9D  F00B         	goto	u4131
  6530   001736  EF9F  F00B         	goto	u4130
  6531   00173A                     u4131:
  6532   00173A  EFB6  F00B         	goto	l5048
  6533   00173E                     u4130:
  6534   00173E  C034  F03C         	movff	___fldiv@b,??___fldiv
  6535   001742  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  6536   001746  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  6537   00174A  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  6538   00174E  343F               	rlcf	(??___fldiv+3)^0,w,c
  6539   001750  323F               	rrcf	(??___fldiv+3)^0,f,c
  6540   001752  323E               	rrcf	(??___fldiv+2)^0,f,c
  6541   001754  323D               	rrcf	(??___fldiv+1)^0,f,c
  6542   001756  323C               	rrcf	??___fldiv^0,f,c
  6543   001758  C03C  F034         	movff	??___fldiv,___fldiv@b
  6544   00175C  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  6545   001760  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  6546   001764  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  6547   001768  4A45               	infsnz	___fldiv@new_exp^0,f,c
  6548   00176A  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  6549   00176C                     l5048:
  6550   00176C  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6551   00176E  EFC1  F00B         	goto	u4141
  6552   001772  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  6553   001774  E108               	bnz	u4140
  6554   001776  2845               	incf	___fldiv@new_exp^0,w,c
  6555   001778  A0D8               	btfss	status,0,c
  6556   00177A  EFC1  F00B         	goto	u4141
  6557   00177E  EFC3  F00B         	goto	u4140
  6558   001782                     u4141:
  6559   001782  EFCE  F00B         	goto	l5052
  6560   001786                     u4140:
  6561   001786  0E00               	movlw	0
  6562   001788  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6563   00178A  6845               	setf	___fldiv@new_exp^0,c
  6564   00178C  0E00               	movlw	0
  6565   00178E  6E34               	movwf	___fldiv@b^0,c
  6566   001790  0E00               	movlw	0
  6567   001792  6E35               	movwf	(___fldiv@b+1)^0,c
  6568   001794  0E00               	movlw	0
  6569   001796  6E36               	movwf	(___fldiv@b+2)^0,c
  6570   001798  0E00               	movlw	0
  6571   00179A  6E37               	movwf	(___fldiv@b+3)^0,c
  6572   00179C                     l5052:
  6573   00179C  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6574   00179E  EFDB  F00B         	goto	u4150
  6575   0017A2  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  6576   0017A4  E106               	bnz	u4151
  6577   0017A6  0445               	decf	___fldiv@new_exp^0,w,c
  6578   0017A8  B0D8               	btfsc	status,0,c
  6579   0017AA  EFD9  F00B         	goto	u4151
  6580   0017AE  EFDB  F00B         	goto	u4150
  6581   0017B2                     u4151:
  6582   0017B2  EFE9  F00B         	goto	l5056
  6583   0017B6                     u4150:
  6584   0017B6  0E00               	movlw	0
  6585   0017B8  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6586   0017BA  0E00               	movlw	0
  6587   0017BC  6E45               	movwf	___fldiv@new_exp^0,c
  6588   0017BE  0E00               	movlw	0
  6589   0017C0  6E34               	movwf	___fldiv@b^0,c
  6590   0017C2  0E00               	movlw	0
  6591   0017C4  6E35               	movwf	(___fldiv@b+1)^0,c
  6592   0017C6  0E00               	movlw	0
  6593   0017C8  6E36               	movwf	(___fldiv@b+2)^0,c
  6594   0017CA  0E00               	movlw	0
  6595   0017CC  6E37               	movwf	(___fldiv@b+3)^0,c
  6596   0017CE  0E00               	movlw	0
  6597   0017D0  6E44               	movwf	___fldiv@sign^0,c
  6598   0017D2                     l5056:
  6599   0017D2  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  6600   0017D6  A04B               	btfss	___fldiv@bexp^0,0,c
  6601   0017D8  EFF0  F00B         	goto	u4161
  6602   0017DC  EFF2  F00B         	goto	u4160
  6603   0017E0                     u4161:
  6604   0017E0  EFF5  F00B         	goto	l5062
  6605   0017E4                     u4160:
  6606   0017E4  8E36               	bsf	(___fldiv@b+2)^0,7,c
  6607   0017E6  EFF6  F00B         	goto	l5064
  6608   0017EA                     l5062:
  6609   0017EA  9E36               	bcf	(___fldiv@b+2)^0,7,c
  6610   0017EC                     l5064:
  6611   0017EC  90D8               	bcf	status,0,c
  6612   0017EE  304B               	rrcf	___fldiv@bexp^0,w,c
  6613   0017F0  6E37               	movwf	(___fldiv@b+3)^0,c
  6614   0017F2  EFAC  F00A         	goto	l4978
  6615   0017F6                     l1546:
  6616   0017F6  0012               	return		;funcret
  6617   0017F8                     __end_of___fldiv:
  6618                           	callstack 0
  6619                           
  6620 ;; *************** function _ADC_StartConversion_Interrupt *****************
  6621 ;; Defined at:
  6622 ;;		line 220 in file "MCAL_Layer/ADC/hal_adc.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  _adc            2   20[COMRAM] PTR const struct .
  6625 ;;		 -> adc_1(6), 
  6626 ;;  channel         1   22[COMRAM] enum E3205
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  ret             1   23[COMRAM] unsigned char 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      unsigned char 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6638 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;Total ram usage:        4 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 6
  6645 ;; This function calls:
  6646 ;;		_ADC_SelectChannel
  6647 ;;		_ADC_StartConversion
  6648 ;; This function is called by:
  6649 ;;		_main
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text37
  6654   00339C                     __ptext37:
  6655                           	callstack 0
  6656   00339C                     _ADC_StartConversion_Interrupt:
  6657                           	callstack 24
  6658   00339C                     
  6659                           ;MCAL_Layer/ADC/hal_adc.c: 222:      if(_adc==((void*)0)){
  6660   00339C  5015               	movf	ADC_StartConversion_Interrupt@_adc^0,w,c
  6661   00339E  1016               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)^0,w,c
  6662   0033A0  A4D8               	btfss	status,2,c
  6663   0033A2  EFD5  F019         	goto	u3931
  6664   0033A6  EFD7  F019         	goto	u3930
  6665   0033AA                     u3931:
  6666   0033AA  EFDB  F019         	goto	l4928
  6667   0033AE                     u3930:
  6668   0033AE                     
  6669                           ;MCAL_Layer/ADC/hal_adc.c: 223:         ret=(Std_ReturnType)0x00;
  6670   0033AE  0E00               	movlw	0
  6671   0033B0  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  6672                           
  6673                           ;MCAL_Layer/ADC/hal_adc.c: 224:     }
  6674   0033B2  EFEB  F019         	goto	l4930
  6675   0033B6                     l4928:
  6676                           
  6677                           ;MCAL_Layer/ADC/hal_adc.c: 227:          ret = ADC_SelectChannel(_adc ,channel);
  6678   0033B6  C015  F010         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  6679   0033BA  C016  F011         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
  6680   0033BE  C017  F012         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
  6681   0033C2  ECED  F019         	call	_ADC_SelectChannel	;wreg free
  6682   0033C6  6E18               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  6683                           
  6684                           ;MCAL_Layer/ADC/hal_adc.c: 229:          ret&= ADC_StartConversion(_adc);
  6685   0033C8  C015  F00D         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
  6686   0033CC  C016  F00E         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
  6687   0033D0  EC4F  F01A         	call	_ADC_StartConversion	;wreg free
  6688   0033D4  1618               	andwf	ADC_StartConversion_Interrupt@ret^0,f,c
  6689   0033D6                     l4930:
  6690                           
  6691                           ;MCAL_Layer/ADC/hal_adc.c: 231:     return ret;
  6692   0033D6  5018               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  6693   0033D8  0012               	return		;funcret
  6694   0033DA                     __end_of_ADC_StartConversion_Interrupt:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _ADC_StartConversion *****************
  6698 ;; Defined at:
  6699 ;;		line 120 in file "MCAL_Layer/ADC/hal_adc.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  _adc            2   12[COMRAM] PTR const struct .
  6702 ;;		 -> adc_1(6), 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  ret             1   14[COMRAM] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      unsigned char 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;Total ram usage:        3 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 4
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_ADC_StartConversion_Interrupt
  6725 ;;		_ADC_GetConversion_Blocking
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text38
  6730   00349E                     __ptext38:
  6731                           	callstack 0
  6732   00349E                     _ADC_StartConversion:
  6733                           	callstack 25
  6734   00349E                     
  6735                           ;MCAL_Layer/ADC/hal_adc.c: 121:     Std_ReturnType ret=(Std_ReturnType)0x01;
  6736   00349E  0E01               	movlw	1
  6737   0034A0  6E0F               	movwf	ADC_StartConversion@ret^0,c
  6738   0034A2                     
  6739                           ;MCAL_Layer/ADC/hal_adc.c: 122:     if(_adc==((void*)0)){
  6740   0034A2  500D               	movf	ADC_StartConversion@_adc^0,w,c
  6741   0034A4  100E               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  6742   0034A6  A4D8               	btfss	status,2,c
  6743   0034A8  EF58  F01A         	goto	u3721
  6744   0034AC  EF5A  F01A         	goto	u3720
  6745   0034B0                     u3721:
  6746   0034B0  EF5E  F01A         	goto	l890
  6747   0034B4                     u3720:
  6748   0034B4                     
  6749                           ;MCAL_Layer/ADC/hal_adc.c: 123:         ret=(Std_ReturnType)0x00;
  6750   0034B4  0E00               	movlw	0
  6751   0034B6  6E0F               	movwf	ADC_StartConversion@ret^0,c
  6752                           
  6753                           ;MCAL_Layer/ADC/hal_adc.c: 124:     }
  6754   0034B8  EF5F  F01A         	goto	l4712
  6755   0034BC                     l890:
  6756                           
  6757                           ;MCAL_Layer/ADC/hal_adc.c: 126:         ((*((volatile ADCON0_t *)(0xFC2))).GO_DONE=1);
  6758   0034BC  82C2               	bsf	194,1,c	;volatile
  6759   0034BE                     l4712:
  6760                           
  6761                           ;MCAL_Layer/ADC/hal_adc.c: 128:     return ret;
  6762   0034BE  500F               	movf	ADC_StartConversion@ret^0,w,c
  6763   0034C0  0012               	return		;funcret
  6764   0034C2                     __end_of_ADC_StartConversion:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function _ADC_SelectChannel *****************
  6768 ;; Defined at:
  6769 ;;		line 100 in file "MCAL_Layer/ADC/hal_adc.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  _adc            2   15[COMRAM] PTR const struct .
  6772 ;;		 -> adc_1(6), 
  6773 ;;  channel         1   17[COMRAM] enum E3205
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  ret             1   19[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      unsigned char 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6785 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;Total ram usage:        5 bytes
  6790 ;; Hardware stack levels used: 1
  6791 ;; Hardware stack levels required when called: 5
  6792 ;; This function calls:
  6793 ;;		_adc_input_channel_port_configure
  6794 ;; This function is called by:
  6795 ;;		_ADC_StartConversion_Interrupt
  6796 ;;		_ADC_GetConversion_Blocking
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text39
  6801   0033DA                     __ptext39:
  6802                           	callstack 0
  6803   0033DA                     _ADC_SelectChannel:
  6804                           	callstack 24
  6805   0033DA                     
  6806                           ;MCAL_Layer/ADC/hal_adc.c: 101:      Std_ReturnType ret=(Std_ReturnType)0x01;
  6807   0033DA  0E01               	movlw	1
  6808   0033DC  6E14               	movwf	ADC_SelectChannel@ret^0,c
  6809   0033DE                     
  6810                           ;MCAL_Layer/ADC/hal_adc.c: 102:     if(_adc==((void*)0)){
  6811   0033DE  5010               	movf	ADC_SelectChannel@_adc^0,w,c
  6812   0033E0  1011               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  6813   0033E2  A4D8               	btfss	status,2,c
  6814   0033E4  EFF6  F019         	goto	u3711
  6815   0033E8  EFF8  F019         	goto	u3710
  6816   0033EC                     u3711:
  6817   0033EC  EFFC  F019         	goto	l4698
  6818   0033F0                     u3710:
  6819   0033F0                     
  6820                           ;MCAL_Layer/ADC/hal_adc.c: 103:         ret=(Std_ReturnType)0x00;
  6821   0033F0  0E00               	movlw	0
  6822   0033F2  6E14               	movwf	ADC_SelectChannel@ret^0,c
  6823                           
  6824                           ;MCAL_Layer/ADC/hal_adc.c: 104:     }
  6825   0033F4  EF08  F01A         	goto	l4702
  6826   0033F8                     l4698:
  6827                           
  6828                           ;MCAL_Layer/ADC/hal_adc.c: 106:          (*((volatile ADCON0_t *)(0xFC2))).CHS =channel;
  6829   0033F8  C012  F013         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  6830   0033FC  4613               	rlncf	??_ADC_SelectChannel^0,f,c
  6831   0033FE  4613               	rlncf	??_ADC_SelectChannel^0,f,c
  6832   003400  50C2               	movf	194,w,c	;volatile
  6833   003402  1813               	xorwf	??_ADC_SelectChannel^0,w,c
  6834   003404  0BC3               	andlw	-61
  6835   003406  1813               	xorwf	??_ADC_SelectChannel^0,w,c
  6836   003408  6EC2               	movwf	194,c	;volatile
  6837   00340A                     
  6838                           ;MCAL_Layer/ADC/hal_adc.c: 107:         adc_input_channel_port_configure(channel);
  6839   00340A  5012               	movf	ADC_SelectChannel@channel^0,w,c
  6840   00340C  ECBA  F013         	call	_adc_input_channel_port_configure
  6841   003410                     l4702:
  6842                           
  6843                           ;MCAL_Layer/ADC/hal_adc.c: 109:     return ret;
  6844   003410  5014               	movf	ADC_SelectChannel@ret^0,w,c
  6845   003412  0012               	return		;funcret
  6846   003414                     __end_of_ADC_SelectChannel:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function _adc_input_channel_port_configure *****************
  6850 ;; Defined at:
  6851 ;;		line 233 in file "MCAL_Layer/ADC/hal_adc.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  channel         1    wreg     enum E3205
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  channel         1   14[COMRAM] enum E3205
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;Total ram usage:        3 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 4
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_ADC_Init
  6876 ;;		_ADC_SelectChannel
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text40
  6881   002774                     __ptext40:
  6882                           	callstack 0
  6883   002774                     _adc_input_channel_port_configure:
  6884                           	callstack 24
  6885                           
  6886                           ;incstack = 0
  6887                           ;adc_input_channel_port_configure@channel stored from wreg
  6888   002774  6E0F               	movwf	adc_input_channel_port_configure@channel^0,c
  6889   002776                     
  6890                           ;MCAL_Layer/ADC/hal_adc.c: 234:       switch(channel){
  6891   002776  EFE4  F013         	goto	l4480
  6892   00277A                     l4452:
  6893   00277A  8092               	bsf	146,0,c	;volatile
  6894   00277C  EF25  F014         	goto	l945
  6895   002780                     l4454:
  6896   002780  8292               	bsf	146,1,c	;volatile
  6897   002782  EF25  F014         	goto	l945
  6898   002786                     l4456:
  6899   002786  8492               	bsf	146,2,c	;volatile
  6900   002788  EF25  F014         	goto	l945
  6901   00278C                     l4458:
  6902   00278C  8692               	bsf	146,3,c	;volatile
  6903   00278E  EF25  F014         	goto	l945
  6904   002792                     l4460:
  6905   002792  8A92               	bsf	146,5,c	;volatile
  6906   002794  EF25  F014         	goto	l945
  6907   002798                     l4462:
  6908   002798  8096               	bsf	150,0,c	;volatile
  6909   00279A  EF25  F014         	goto	l945
  6910   00279E                     l4464:
  6911   00279E  8296               	bsf	150,1,c	;volatile
  6912   0027A0  EF25  F014         	goto	l945
  6913   0027A4                     l4466:
  6914   0027A4  8496               	bsf	150,2,c	;volatile
  6915   0027A6  EF25  F014         	goto	l945
  6916   0027AA                     l4468:
  6917   0027AA  8493               	bsf	147,2,c	;volatile
  6918   0027AC  EF25  F014         	goto	l945
  6919   0027B0                     l4470:
  6920   0027B0  8693               	bsf	147,3,c	;volatile
  6921   0027B2  EF25  F014         	goto	l945
  6922   0027B6                     l4472:
  6923   0027B6  8293               	bsf	147,1,c	;volatile
  6924   0027B8  EF25  F014         	goto	l945
  6925   0027BC                     l4474:
  6926   0027BC  8893               	bsf	147,4,c	;volatile
  6927   0027BE  EF25  F014         	goto	l945
  6928   0027C2                     l4476:
  6929   0027C2  8093               	bsf	147,0,c	;volatile
  6930   0027C4  EF25  F014         	goto	l945
  6931   0027C8                     l4480:
  6932   0027C8  500F               	movf	adc_input_channel_port_configure@channel^0,w,c
  6933   0027CA  6E0D               	movwf	??_adc_input_channel_port_configure^0,c
  6934   0027CC  6A0E               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  6935                           
  6936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6937                           ; Switch size 1, requested type "simple"
  6938                           ; Number of cases is 1, Range of values is 0 to 0
  6939                           ; switch strategies available:
  6940                           ; Name         Instructions Cycles
  6941                           ; simple_byte            4     3 (average)
  6942                           ;	Chosen strategy is simple_byte
  6943   0027CE  500E               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  6944   0027D0  0A00               	xorlw	0	; case 0
  6945   0027D2  B4D8               	btfsc	status,2,c
  6946   0027D4  EFEE  F013         	goto	l6794
  6947   0027D8  EF25  F014         	goto	l945
  6948   0027DC                     l6794:
  6949                           
  6950                           ; Switch size 1, requested type "simple"
  6951                           ; Number of cases is 13, Range of values is 0 to 12
  6952                           ; switch strategies available:
  6953                           ; Name         Instructions Cycles
  6954                           ; simple_byte           40    21 (average)
  6955                           ;	Chosen strategy is simple_byte
  6956   0027DC  500D               	movf	??_adc_input_channel_port_configure^0,w,c
  6957   0027DE  0A00               	xorlw	0	; case 0
  6958   0027E0  B4D8               	btfsc	status,2,c
  6959   0027E2  EFBD  F013         	goto	l4452
  6960   0027E6  0A01               	xorlw	1	; case 1
  6961   0027E8  B4D8               	btfsc	status,2,c
  6962   0027EA  EFC0  F013         	goto	l4454
  6963   0027EE  0A03               	xorlw	3	; case 2
  6964   0027F0  B4D8               	btfsc	status,2,c
  6965   0027F2  EFC3  F013         	goto	l4456
  6966   0027F6  0A01               	xorlw	1	; case 3
  6967   0027F8  B4D8               	btfsc	status,2,c
  6968   0027FA  EFC6  F013         	goto	l4458
  6969   0027FE  0A07               	xorlw	7	; case 4
  6970   002800  B4D8               	btfsc	status,2,c
  6971   002802  EFC9  F013         	goto	l4460
  6972   002806  0A01               	xorlw	1	; case 5
  6973   002808  B4D8               	btfsc	status,2,c
  6974   00280A  EFCC  F013         	goto	l4462
  6975   00280E  0A03               	xorlw	3	; case 6
  6976   002810  B4D8               	btfsc	status,2,c
  6977   002812  EFCF  F013         	goto	l4464
  6978   002816  0A01               	xorlw	1	; case 7
  6979   002818  B4D8               	btfsc	status,2,c
  6980   00281A  EFD2  F013         	goto	l4466
  6981   00281E  0A0F               	xorlw	15	; case 8
  6982   002820  B4D8               	btfsc	status,2,c
  6983   002822  EFD5  F013         	goto	l4468
  6984   002826  0A01               	xorlw	1	; case 9
  6985   002828  B4D8               	btfsc	status,2,c
  6986   00282A  EFD8  F013         	goto	l4470
  6987   00282E  0A03               	xorlw	3	; case 10
  6988   002830  B4D8               	btfsc	status,2,c
  6989   002832  EFDB  F013         	goto	l4472
  6990   002836  0A01               	xorlw	1	; case 11
  6991   002838  B4D8               	btfsc	status,2,c
  6992   00283A  EFDE  F013         	goto	l4474
  6993   00283E  0A07               	xorlw	7	; case 12
  6994   002840  B4D8               	btfsc	status,2,c
  6995   002842  EFE1  F013         	goto	l4476
  6996   002846  EF25  F014         	goto	l945
  6997   00284A                     l945:
  6998   00284A  0012               	return		;funcret
  6999   00284C                     __end_of_adc_input_channel_port_configure:
  7000                           	callstack 0
  7001                           
  7002 ;; *************** function _InterruptManager *****************
  7003 ;; Defined at:
  7004 ;;		line 76 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;		None
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;Total ram usage:        4 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 3
  7025 ;; This function calls:
  7026 ;;		_ADC_ISR
  7027 ;;		_INT0_ISR
  7028 ;;		_INT1_ISR
  7029 ;;		_INT2_ISR
  7030 ;;		_RB4_ISR
  7031 ;;		_RB5_ISR
  7032 ;;		_RB6_ISR
  7033 ;;		_RB7_ISR
  7034 ;; This function is called by:
  7035 ;;		Interrupt level 2
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	intcode
  7040   000008                     __pintcode:
  7041                           	callstack 0
  7042   000008                     _InterruptManager:
  7043                           	callstack 18
  7044                           
  7045                           ;incstack = 0
  7046   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7047   00000A  EDED  F00E         	call	int_func,f	;refresh shadow registers
  7048                           
  7049                           	psect	intcode_body
  7050   001DDA                     __pintcode_body:
  7051                           	callstack 18
  7052   001DDA                     int_func:
  7053                           	callstack 18
  7054   001DDA  0006               	pop		; remove dummy address from shadow register refresh
  7055   001DDC  CFFA F009          	movff	pclath,??_InterruptManager
  7056   001DE0  CFFB F00A          	movff	pclatu,??_InterruptManager+1
  7057   001DE4  CFD9 F00B          	movff	fsr2l,??_InterruptManager+2
  7058   001DE8  CFDA F00C          	movff	fsr2h,??_InterruptManager+3
  7059   001DEC                     
  7060                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 77:     if((1 == (*((volatile INTCON_t *
      +                          )(0xFF2))).INT0IE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).INT0IF)){
  7061   001DEC  A8F2               	btfss	242,4,c	;volatile
  7062   001DEE  EFFB  F00E         	goto	i2u535_41
  7063   001DF2  EFFD  F00E         	goto	i2u535_40
  7064   001DF6                     i2u535_41:
  7065   001DF6  EF06  F00F         	goto	i2l770
  7066   001DFA                     i2u535_40:
  7067   001DFA  A2F2               	btfss	242,1,c	;volatile
  7068   001DFC  EF02  F00F         	goto	i2u536_41
  7069   001E00  EF04  F00F         	goto	i2u536_40
  7070   001E04                     i2u536_41:
  7071   001E04  EF06  F00F         	goto	i2l770
  7072   001E08                     i2u536_40:
  7073   001E08                     
  7074                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:         INT0_ISR();
  7075   001E08  EC76  F01A         	call	_INT0_ISR	;wreg free
  7076   001E0C                     i2l770:
  7077                           
  7078                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT1IE)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  7079   001E0C  A6F0               	btfss	240,3,c	;volatile
  7080   001E0E  EF0B  F00F         	goto	i2u537_41
  7081   001E12  EF0D  F00F         	goto	i2u537_40
  7082   001E16                     i2u537_41:
  7083   001E16  EF16  F00F         	goto	i2l772
  7084   001E1A                     i2u537_40:
  7085   001E1A  A0F0               	btfss	240,0,c	;volatile
  7086   001E1C  EF12  F00F         	goto	i2u538_41
  7087   001E20  EF14  F00F         	goto	i2u538_40
  7088   001E24                     i2u538_41:
  7089   001E24  EF16  F00F         	goto	i2l772
  7090   001E28                     i2u538_40:
  7091   001E28                     
  7092                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         INT1_ISR();
  7093   001E28  EC74  F01A         	call	_INT1_ISR	;wreg free
  7094   001E2C                     i2l772:
  7095                           
  7096                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IE)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  7097   001E2C  A8F0               	btfss	240,4,c	;volatile
  7098   001E2E  EF1B  F00F         	goto	i2u539_41
  7099   001E32  EF1D  F00F         	goto	i2u539_40
  7100   001E36                     i2u539_41:
  7101   001E36  EF26  F00F         	goto	i2l774
  7102   001E3A                     i2u539_40:
  7103   001E3A  A2F0               	btfss	240,1,c	;volatile
  7104   001E3C  EF22  F00F         	goto	i2u540_41
  7105   001E40  EF24  F00F         	goto	i2u540_40
  7106   001E44                     i2u540_41:
  7107   001E44  EF26  F00F         	goto	i2l774
  7108   001E48                     i2u540_40:
  7109   001E48                     
  7110                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:         INT2_ISR();
  7111   001E48  EC72  F01A         	call	_INT2_ISR	;wreg free
  7112   001E4C                     i2l774:
  7113                           
  7114                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:     if((1 == (*((volatile INTCON_t *
      +                          )(0xFF2))).RBIE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile uint
      +                          8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  7115   001E4C  A6F2               	btfss	242,3,c	;volatile
  7116   001E4E  EF2B  F00F         	goto	i2u541_41
  7117   001E52  EF2D  F00F         	goto	i2u541_40
  7118   001E56                     i2u541_41:
  7119   001E56  EF43  F00F         	goto	i2l776
  7120   001E5A                     i2u541_40:
  7121   001E5A  A0F2               	btfss	242,0,c	;volatile
  7122   001E5C  EF32  F00F         	goto	i2u542_41
  7123   001E60  EF34  F00F         	goto	i2u542_40
  7124   001E64                     i2u542_41:
  7125   001E64  EF43  F00F         	goto	i2l776
  7126   001E68                     i2u542_40:
  7127   001E68  3881               	swapf	129,w,c	;volatile
  7128   001E6A  0B0F               	andlw	15
  7129   001E6C  0B01               	andlw	1
  7130   001E6E  186A               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  7131   001E70  B4D8               	btfsc	status,2,c
  7132   001E72  EF3D  F00F         	goto	i2u543_41
  7133   001E76  EF3F  F00F         	goto	i2u543_40
  7134   001E7A                     i2u543_41:
  7135   001E7A  EF43  F00F         	goto	i2l776
  7136   001E7E                     i2u543_40:
  7137   001E7E                     
  7138                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:         RB4_pin_init_value^=1;
  7139   001E7E  0E01               	movlw	1
  7140   001E80  1A6A               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  7141   001E82                     
  7142                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:         RB4_ISR();
  7143   001E82  EC70  F01A         	call	_RB4_ISR	;wreg free
  7144   001E86                     i2l776:
  7145                           
  7146                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:        if((1 == (*((volatile INTCON_
      +                          t *)(0xFF2))).RBIE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile u
      +                          int8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  7147   001E86  A6F2               	btfss	242,3,c	;volatile
  7148   001E88  EF48  F00F         	goto	i2u544_41
  7149   001E8C  EF4A  F00F         	goto	i2u544_40
  7150   001E90                     i2u544_41:
  7151   001E90  EF61  F00F         	goto	i2l778
  7152   001E94                     i2u544_40:
  7153   001E94  A0F2               	btfss	242,0,c	;volatile
  7154   001E96  EF4F  F00F         	goto	i2u545_41
  7155   001E9A  EF51  F00F         	goto	i2u545_40
  7156   001E9E                     i2u545_41:
  7157   001E9E  EF61  F00F         	goto	i2l778
  7158   001EA2                     i2u545_40:
  7159   001EA2  3881               	swapf	129,w,c	;volatile
  7160   001EA4  42E8               	rrncf	wreg,f,c
  7161   001EA6  0B07               	andlw	7
  7162   001EA8  0B01               	andlw	1
  7163   001EAA  1869               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  7164   001EAC  B4D8               	btfsc	status,2,c
  7165   001EAE  EF5B  F00F         	goto	i2u546_41
  7166   001EB2  EF5D  F00F         	goto	i2u546_40
  7167   001EB6                     i2u546_41:
  7168   001EB6  EF61  F00F         	goto	i2l778
  7169   001EBA                     i2u546_40:
  7170   001EBA                     
  7171                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         RB5_pin_init_value^=1;
  7172   001EBA  0E01               	movlw	1
  7173   001EBC  1A69               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  7174   001EBE                     
  7175                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 96:         RB5_ISR();
  7176   001EBE  EC6E  F01A         	call	_RB5_ISR	;wreg free
  7177   001EC2                     i2l778:
  7178                           
  7179                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:        if((1 == (*((volatile INTCON_
      +                          t *)(0xFF2))).RBIE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile u
      +                          int8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  7180   001EC2  A6F2               	btfss	242,3,c	;volatile
  7181   001EC4  EF66  F00F         	goto	i2u547_41
  7182   001EC8  EF68  F00F         	goto	i2u547_40
  7183   001ECC                     i2u547_41:
  7184   001ECC  EF7F  F00F         	goto	i2l780
  7185   001ED0                     i2u547_40:
  7186   001ED0  A0F2               	btfss	242,0,c	;volatile
  7187   001ED2  EF6D  F00F         	goto	i2u548_41
  7188   001ED6  EF6F  F00F         	goto	i2u548_40
  7189   001EDA                     i2u548_41:
  7190   001EDA  EF7F  F00F         	goto	i2l780
  7191   001EDE                     i2u548_40:
  7192   001EDE  4481               	rlncf	129,w,c	;volatile
  7193   001EE0  46E8               	rlncf	wreg,f,c
  7194   001EE2  0B03               	andlw	3
  7195   001EE4  0B01               	andlw	1
  7196   001EE6  1868               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  7197   001EE8  B4D8               	btfsc	status,2,c
  7198   001EEA  EF79  F00F         	goto	i2u549_41
  7199   001EEE  EF7B  F00F         	goto	i2u549_40
  7200   001EF2                     i2u549_41:
  7201   001EF2  EF7F  F00F         	goto	i2l780
  7202   001EF6                     i2u549_40:
  7203   001EF6                     
  7204                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         RB6_pin_init_value^=1;
  7205   001EF6  0E01               	movlw	1
  7206   001EF8  1A68               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  7207   001EFA                     
  7208                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 101:         RB6_ISR();
  7209   001EFA  EC6C  F01A         	call	_RB6_ISR	;wreg free
  7210   001EFE                     i2l780:
  7211                           
  7212                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:        if((1 == (*((volatile INTCON
      +                          _t *)(0xFF2))).RBIE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  7213   001EFE  A6F2               	btfss	242,3,c	;volatile
  7214   001F00  EF84  F00F         	goto	i2u550_41
  7215   001F04  EF86  F00F         	goto	i2u550_40
  7216   001F08                     i2u550_41:
  7217   001F08  EF9B  F00F         	goto	i2l782
  7218   001F0C                     i2u550_40:
  7219   001F0C  A0F2               	btfss	242,0,c	;volatile
  7220   001F0E  EF8B  F00F         	goto	i2u551_41
  7221   001F12  EF8D  F00F         	goto	i2u551_40
  7222   001F16                     i2u551_41:
  7223   001F16  EF9B  F00F         	goto	i2l782
  7224   001F1A                     i2u551_40:
  7225   001F1A  4481               	rlncf	129,w,c	;volatile
  7226   001F1C  0B01               	andlw	1
  7227   001F1E  1867               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  7228   001F20  B4D8               	btfsc	status,2,c
  7229   001F22  EF95  F00F         	goto	i2u552_41
  7230   001F26  EF97  F00F         	goto	i2u552_40
  7231   001F2A                     i2u552_41:
  7232   001F2A  EF9B  F00F         	goto	i2l782
  7233   001F2E                     i2u552_40:
  7234   001F2E                     
  7235                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         RB7_pin_init_value^=1;
  7236   001F2E  0E01               	movlw	1
  7237   001F30  1A67               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  7238   001F32                     
  7239                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:         RB7_ISR();
  7240   001F32  EC6A  F01A         	call	_RB7_ISR	;wreg free
  7241   001F36                     i2l782:
  7242                           
  7243                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:      if((1== (*((volatile PIE1_t *)
      +                          (0xF9D))).ADIE)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  7244   001F36  AC9D               	btfss	157,6,c	;volatile
  7245   001F38  EFA0  F00F         	goto	i2u553_41
  7246   001F3C  EFA2  F00F         	goto	i2u553_40
  7247   001F40                     i2u553_41:
  7248   001F40  EFAB  F00F         	goto	i2l785
  7249   001F44                     i2u553_40:
  7250   001F44  AC9E               	btfss	158,6,c	;volatile
  7251   001F46  EFA7  F00F         	goto	i2u554_41
  7252   001F4A  EFA9  F00F         	goto	i2u554_40
  7253   001F4E                     i2u554_41:
  7254   001F4E  EFAB  F00F         	goto	i2l785
  7255   001F52                     i2u554_40:
  7256   001F52                     
  7257                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 110:         ADC_ISR();
  7258   001F52  EC0A  F01A         	call	_ADC_ISR	;wreg free
  7259   001F56                     i2l785:
  7260   001F56  C00C  FFDA         	movff	??_InterruptManager+3,fsr2h
  7261   001F5A  C00B  FFD9         	movff	??_InterruptManager+2,fsr2l
  7262   001F5E  C00A  FFFB         	movff	??_InterruptManager+1,pclatu
  7263   001F62  C009  FFFA         	movff	??_InterruptManager,pclath
  7264   001F66  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7265   001F68  0011               	retfie		f
  7266   001F6A                     __end_of_InterruptManager:
  7267                           	callstack 0
  7268                           
  7269 ;; *************** function _RB7_ISR *****************
  7270 ;; Defined at:
  7271 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		None
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;Total ram usage:        0 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_InterruptManager
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text42
  7299   0034D4                     __ptext42:
  7300                           	callstack 0
  7301   0034D4                     _RB7_ISR:
  7302                           	callstack 20
  7303   0034D4                     
  7304                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7305   0034D4  90F2               	bcf	242,0,c	;volatile
  7306   0034D6  0012               	return		;funcret
  7307   0034D8                     __end_of_RB7_ISR:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _RB6_ISR *****************
  7311 ;; Defined at:
  7312 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;		None
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		None
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:        0 bytes
  7331 ;; Hardware stack levels used: 1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_InterruptManager
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text43
  7340   0034D8                     __ptext43:
  7341                           	callstack 0
  7342   0034D8                     _RB6_ISR:
  7343                           	callstack 20
  7344   0034D8                     
  7345                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7346   0034D8  90F2               	bcf	242,0,c	;volatile
  7347   0034DA  0012               	return		;funcret
  7348   0034DC                     __end_of_RB6_ISR:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function _RB5_ISR *****************
  7352 ;; Defined at:
  7353 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		None
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;Total ram usage:        0 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_InterruptManager
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text44
  7381   0034DC                     __ptext44:
  7382                           	callstack 0
  7383   0034DC                     _RB5_ISR:
  7384                           	callstack 20
  7385   0034DC                     
  7386                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7387   0034DC  90F2               	bcf	242,0,c	;volatile
  7388   0034DE  0012               	return		;funcret
  7389   0034E0                     __end_of_RB5_ISR:
  7390                           	callstack 0
  7391                           
  7392 ;; *************** function _RB4_ISR *****************
  7393 ;; Defined at:
  7394 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		None
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_InterruptManager
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text45
  7422   0034E0                     __ptext45:
  7423                           	callstack 0
  7424   0034E0                     _RB4_ISR:
  7425                           	callstack 20
  7426   0034E0                     
  7427                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7428   0034E0  90F2               	bcf	242,0,c	;volatile
  7429   0034E2  0012               	return		;funcret
  7430   0034E4                     __end_of_RB4_ISR:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function _INT2_ISR *****************
  7434 ;; Defined at:
  7435 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;		None
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		None
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used: 1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_InterruptManager
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text46
  7463   0034E4                     __ptext46:
  7464                           	callstack 0
  7465   0034E4                     _INT2_ISR:
  7466                           	callstack 20
  7467   0034E4                     
  7468                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  7469   0034E4  92F0               	bcf	240,1,c	;volatile
  7470   0034E6  0012               	return		;funcret
  7471   0034E8                     __end_of_INT2_ISR:
  7472                           	callstack 0
  7473                           
  7474 ;; *************** function _INT1_ISR *****************
  7475 ;; Defined at:
  7476 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		None
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_InterruptManager
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text47
  7504   0034E8                     __ptext47:
  7505                           	callstack 0
  7506   0034E8                     _INT1_ISR:
  7507                           	callstack 20
  7508   0034E8                     
  7509                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  7510   0034E8  90F0               	bcf	240,0,c	;volatile
  7511   0034EA  0012               	return		;funcret
  7512   0034EC                     __end_of_INT1_ISR:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function _INT0_ISR *****************
  7516 ;; Defined at:
  7517 ;;		line 132 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;		None
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;		None
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		None
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;Total ram usage:        0 bytes
  7536 ;; Hardware stack levels used: 1
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_InterruptManager
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text48
  7545   0034EC                     __ptext48:
  7546                           	callstack 0
  7547   0034EC                     _INT0_ISR:
  7548                           	callstack 20
  7549   0034EC                     
  7550                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).INT0IF=0);
  7551   0034EC  92F2               	bcf	242,1,c	;volatile
  7552   0034EE  0012               	return		;funcret
  7553   0034F0                     __end_of_INT0_ISR:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _ADC_ISR *****************
  7557 ;; Defined at:
  7558 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 2
  7579 ;; This function calls:
  7580 ;;		NULL
  7581 ;;		_ADC_ISR_HANDLER
  7582 ;; This function is called by:
  7583 ;;		_InterruptManager
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text49
  7588   003414                     __ptext49:
  7589                           	callstack 0
  7590   003414                     _ADC_ISR:
  7591                           	callstack 18
  7592   003414                     
  7593                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
  7594   003414  9C9E               	bcf	158,6,c	;volatile
  7595   003416                     
  7596                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 6:       if(ADC_InterruptHandler){
  7597   003416  0100               	movlb	0	; () banked
  7598   003418  51AB               	movf	_ADC_InterruptHandler& (0+255),w,b
  7599   00341A  11AC               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7600   00341C  B4D8               	btfsc	status,2,c
  7601   00341E  EF13  F01A         	goto	i2u388_41
  7602   003422  EF15  F01A         	goto	i2u388_40
  7603   003426                     i2u388_41:
  7604   003426  EF21  F01A         	goto	i2l492
  7605   00342A                     i2u388_40:
  7606   00342A                     
  7607                           ; BSR set to: 0
  7608                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 7:        ADC_InterruptHandler();
  7609   00342A  D802               	call	i2u389_48
  7610   00342C  EF21  F01A         	goto	i2u389_49
  7611   003430                     i2u389_48:
  7612   003430  0005               	push	
  7613   003432  6EFA               	movwf	pclath,c
  7614   003434  51AB               	movf	_ADC_InterruptHandler& (0+255),w,b
  7615   003436  6EFD               	movwf	tosl,c
  7616   003438  51AC               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7617   00343A  6EFE               	movwf	tosh,c
  7618   00343C  6AFF               	clrf	tosu,c
  7619   00343E  50FA               	movf	pclath,w,c
  7620   003440  0012               	return		;indir
  7621   003442                     i2u389_49:
  7622   003442                     i2l492:
  7623   003442  0012               	return		;funcret
  7624   003444                     __end_of_ADC_ISR:
  7625                           	callstack 0
  7626                           
  7627 ;; *************** function _ADC_ISR_HANDLER *****************
  7628 ;; Defined at:
  7629 ;;		line 65 in file "application.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used: 1
  7649 ;; Hardware stack levels required when called: 1
  7650 ;; This function calls:
  7651 ;;		_ADC_GetConversionResult
  7652 ;; This function is called by:
  7653 ;;		_ADC_ISR
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text50
  7658   00307A                     __ptext50:
  7659                           	callstack 0
  7660   00307A                     _ADC_ISR_HANDLER:
  7661                           	callstack 18
  7662   00307A                     
  7663                           ;application.c: 66:        if (ADC_Flag == 1){
  7664   00307A  0466               	decf	_ADC_Flag^0,w,c
  7665   00307C  A4D8               	btfss	status,2,c
  7666   00307E  EF43  F018         	goto	i2u369_41
  7667   003082  EF45  F018         	goto	i2u369_40
  7668   003086                     i2u369_41:
  7669   003086  EF53  F018         	goto	i2l4686
  7670   00308A                     i2u369_40:
  7671   00308A                     
  7672                           ;application.c: 67:            ADC_Flag = 0;
  7673   00308A  0E00               	movlw	0
  7674   00308C  6E66               	movwf	_ADC_Flag^0,c
  7675   00308E                     
  7676                           ;application.c: 68:            ADC_GetConversionResult(&adc_1,&lm35_res_2);
  7677   00308E  0EDD               	movlw	low _adc_1
  7678   003090  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7679   003092  0E00               	movlw	high _adc_1
  7680   003094  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7681   003096  0EBB               	movlw	low _lm35_res_2
  7682   003098  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7683   00309A  0E00               	movlw	high _lm35_res_2
  7684   00309C  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7685   00309E  EC4D  F013         	call	_ADC_GetConversionResult	;wreg free
  7686                           
  7687                           ;application.c: 69:        }
  7688   0030A2  EF67  F018         	goto	i2l860
  7689   0030A6                     i2l4686:
  7690   0030A6  5066               	movf	_ADC_Flag^0,w,c
  7691   0030A8  A4D8               	btfss	status,2,c
  7692   0030AA  EF59  F018         	goto	i2u370_41
  7693   0030AE  EF5B  F018         	goto	i2u370_40
  7694   0030B2                     i2u370_41:
  7695   0030B2  EF67  F018         	goto	i2l860
  7696   0030B6                     i2u370_40:
  7697   0030B6                     
  7698                           ;application.c: 71:            ADC_Flag=1;
  7699   0030B6  0E01               	movlw	1
  7700   0030B8  6E66               	movwf	_ADC_Flag^0,c
  7701   0030BA                     
  7702                           ;application.c: 72:            ADC_GetConversionResult(&adc_1,&lm35_res_1);
  7703   0030BA  0EDD               	movlw	low _adc_1
  7704   0030BC  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  7705   0030BE  0E00               	movlw	high _adc_1
  7706   0030C0  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
  7707   0030C2  0EBD               	movlw	low _lm35_res_1
  7708   0030C4  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
  7709   0030C6  0E00               	movlw	high _lm35_res_1
  7710   0030C8  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
  7711   0030CA  EC4D  F013         	call	_ADC_GetConversionResult	;wreg free
  7712   0030CE                     i2l860:
  7713   0030CE  0012               	return		;funcret
  7714   0030D0                     __end_of_ADC_ISR_HANDLER:
  7715                           	callstack 0
  7716                           
  7717 ;; *************** function _ADC_GetConversionResult *****************
  7718 ;; Defined at:
  7719 ;;		line 166 in file "MCAL_Layer/ADC/hal_adc.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  _adc            2    0[COMRAM] PTR const struct .
  7722 ;;		 -> adc_1(6), 
  7723 ;;  conversion_r    2    2[COMRAM] PTR unsigned int 
  7724 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  ret             1    7[COMRAM] unsigned char 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      unsigned char 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;Total ram usage:        8 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_ADC_ISR_HANDLER
  7746 ;;		_ADC_GetConversion_Blocking
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text51
  7751   00269A                     __ptext51:
  7752                           	callstack 0
  7753   00269A                     _ADC_GetConversionResult:
  7754                           	callstack 18
  7755   00269A                     
  7756                           ;MCAL_Layer/ADC/hal_adc.c: 167:     Std_ReturnType ret=(Std_ReturnType)0x01;
  7757   00269A  0E01               	movlw	1
  7758   00269C  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  7759   00269E                     
  7760                           ;MCAL_Layer/ADC/hal_adc.c: 168:      if((_adc==((void*)0))||(conversion_result==((void*)
      +                          0))){
  7761   00269E  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7762   0026A0  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7763   0026A2  B4D8               	btfsc	status,2,c
  7764   0026A4  EF56  F013         	goto	i2u347_41
  7765   0026A8  EF58  F013         	goto	i2u347_40
  7766   0026AC                     i2u347_41:
  7767   0026AC  EF61  F013         	goto	i2l4430
  7768   0026B0                     i2u347_40:
  7769   0026B0  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7770   0026B2  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  7771   0026B4  A4D8               	btfss	status,2,c
  7772   0026B6  EF5F  F013         	goto	i2u348_41
  7773   0026BA  EF61  F013         	goto	i2u348_40
  7774   0026BE                     i2u348_41:
  7775   0026BE  EF95  F013         	goto	i2l4440
  7776   0026C2                     i2u348_40:
  7777   0026C2                     i2l4430:
  7778                           
  7779                           ;MCAL_Layer/ADC/hal_adc.c: 169:         ret=(Std_ReturnType)0x00;
  7780   0026C2  0E00               	movlw	0
  7781   0026C4  6E08               	movwf	ADC_GetConversionResult@ret^0,c
  7782                           
  7783                           ;MCAL_Layer/ADC/hal_adc.c: 170:     }
  7784   0026C6  EFB8  F013         	goto	i2l4442
  7785   0026CA                     i2l4432:
  7786   0026CA  50C3               	movf	195,w,c	;volatile
  7787   0026CC  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7788   0026D0  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7789   0026D2  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7790   0026D6  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7791   0026D8  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7792   0026DA  0E00               	movlw	0
  7793   0026DC  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7794   0026DE  0E06               	movlw	6
  7795   0026E0  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
  7796   0026E2                     i2u349_45:
  7797   0026E2  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  7798   0026E4  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  7799   0026E6  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
  7800   0026E8  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  7801   0026EA  EF71  F013         	goto	i2u349_45
  7802   0026EE  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7803   0026F2  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7804   0026F6  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7805   0026FA  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7806   0026FE  EFB8  F013         	goto	i2l4442
  7807   002702                     i2l4434:
  7808   002702  50C3               	movf	195,w,c	;volatile
  7809   002704  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7810   002708  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7811   00270A  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7812   00270E  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7813   002710  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7814   002712  0E00               	movlw	0
  7815   002714  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7816   002716  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  7817   00271A  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  7818   00271E  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7819   002722  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7820   002726  EFB8  F013         	goto	i2l4442
  7821   00272A                     i2l4440:
  7822   00272A  EE20 F005          	lfsr	2,5
  7823   00272E  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  7824   002730  26D9               	addwf	fsr2l,f,c
  7825   002732  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  7826   002734  22DA               	addwfc	fsr2h,f,c
  7827   002736  B2DF               	btfsc	indf2,1,c
  7828   002738  EFA0  F013         	goto	i2u350_41
  7829   00273C  EFA3  F013         	goto	i2u350_40
  7830   002740                     i2u350_41:
  7831   002740  0E01               	movlw	1
  7832   002742  EFA4  F013         	goto	i2u351_40
  7833   002746                     i2u350_40:
  7834   002746  0E00               	movlw	0
  7835   002748                     i2u351_40:
  7836   002748  6E05               	movwf	??_ADC_GetConversionResult^0,c
  7837   00274A  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7838                           
  7839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7840                           ; Switch size 1, requested type "simple"
  7841                           ; Number of cases is 1, Range of values is 0 to 0
  7842                           ; switch strategies available:
  7843                           ; Name         Instructions Cycles
  7844                           ; simple_byte            4     3 (average)
  7845                           ;	Chosen strategy is simple_byte
  7846   00274C  5006               	movf	(??_ADC_GetConversionResult+1)^0,w,c
  7847   00274E  0A00               	xorlw	0	; case 0
  7848   002750  B4D8               	btfsc	status,2,c
  7849   002752  EFAD  F013         	goto	i2l6796
  7850   002756  EF81  F013         	goto	i2l4434
  7851   00275A                     i2l6796:
  7852                           
  7853                           ; Switch size 1, requested type "simple"
  7854                           ; Number of cases is 2, Range of values is 0 to 1
  7855                           ; switch strategies available:
  7856                           ; Name         Instructions Cycles
  7857                           ; simple_byte            7     4 (average)
  7858                           ;	Chosen strategy is simple_byte
  7859   00275A  5005               	movf	??_ADC_GetConversionResult^0,w,c
  7860   00275C  0A00               	xorlw	0	; case 0
  7861   00275E  B4D8               	btfsc	status,2,c
  7862   002760  EF65  F013         	goto	i2l4432
  7863   002764  0A01               	xorlw	1	; case 1
  7864   002766  B4D8               	btfsc	status,2,c
  7865   002768  EF81  F013         	goto	i2l4434
  7866   00276C  EF81  F013         	goto	i2l4434
  7867   002770                     i2l4442:
  7868                           
  7869                           ;MCAL_Layer/ADC/hal_adc.c: 178:     return ret;
  7870   002770  5008               	movf	ADC_GetConversionResult@ret^0,w,c
  7871   002772  0012               	return		;funcret
  7872   002774                     __end_of_ADC_GetConversionResult:
  7873                           	callstack 0
  7874                           
  7875                           	psect	text52
  7876   000000                     __ptext52:
  7877                           	callstack 0
  7878   000000                     
  7879                           	psect	rparam
  7880   000000                     
  7881                           	psect	temp
  7882   000073                     btemp:
  7883                           	callstack 0
  7884   000073                     	ds	1
  7885   000000                     int$flags	set	btemp
  7886   000000                     wtemp8	set	btemp+1
  7887   000000                     ttemp5	set	btemp+1
  7888   000000                     ttemp6	set	btemp+4
  7889   000000                     ttemp7	set	btemp+8
  7890                           
  7891                           	psect	config
  7892                           
  7893                           ; Padding undefined space
  7894   300000                     	org	3145728
  7895   300000  FF                 	db	255
  7896                           
  7897                           ;Config register CONFIG1H @ 0x300001
  7898                           ;	Oscillator Selection bits
  7899                           ;	OSC = HS, HS oscillator
  7900                           ;	Fail-Safe Clock Monitor Enable bit
  7901                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7902                           ;	Internal/External Oscillator Switchover bit
  7903                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7904   300001                     	org	3145729
  7905   300001  02                 	db	2
  7906                           
  7907                           ;Config register CONFIG2L @ 0x300002
  7908                           ;	Power-up Timer Enable bit
  7909                           ;	PWRT = OFF, PWRT disabled
  7910                           ;	Brown-out Reset Enable bits
  7911                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7912                           ;	Brown Out Reset Voltage bits
  7913                           ;	BORV = 1, 
  7914   300002                     	org	3145730
  7915   300002  09                 	db	9
  7916                           
  7917                           ;Config register CONFIG2H @ 0x300003
  7918                           ;	Watchdog Timer Enable bit
  7919                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7920                           ;	Watchdog Timer Postscale Select bits
  7921                           ;	WDTPS = 32768, 1:32768
  7922   300003                     	org	3145731
  7923   300003  1E                 	db	30
  7924                           
  7925                           ; Padding undefined space
  7926   300004                     	org	3145732
  7927   300004  FF                 	db	255
  7928                           
  7929                           ;Config register CONFIG3H @ 0x300005
  7930                           ;	CCP2 MUX bit
  7931                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7932                           ;	PORTB A/D Enable bit
  7933                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7934                           ;	Low-Power Timer1 Oscillator Enable bit
  7935                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7936                           ;	MCLR Pin Enable bit
  7937                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7938   300005                     	org	3145733
  7939   300005  81                 	db	129
  7940                           
  7941                           ;Config register CONFIG4L @ 0x300006
  7942                           ;	Stack Full/Underflow Reset Enable bit
  7943                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7944                           ;	Single-Supply ICSP Enable bit
  7945                           ;	LVP = OFF, Single-Supply ICSP disabled
  7946                           ;	Extended Instruction Set Enable bit
  7947                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7948                           ;	Background Debugger Enable bit
  7949                           ;	DEBUG = 0x1, unprogrammed default
  7950   300006                     	org	3145734
  7951   300006  81                 	db	129
  7952                           
  7953                           ; Padding undefined space
  7954   300007                     	org	3145735
  7955   300007  FF                 	db	255
  7956                           
  7957                           ;Config register CONFIG5L @ 0x300008
  7958                           ;	Code Protection bit
  7959                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7960                           ;	Code Protection bit
  7961                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7962                           ;	Code Protection bit
  7963                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7964                           ;	Code Protection bit
  7965                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7966   300008                     	org	3145736
  7967   300008  0F                 	db	15
  7968                           
  7969                           ;Config register CONFIG5H @ 0x300009
  7970                           ;	Boot Block Code Protection bit
  7971                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7972                           ;	Data EEPROM Code Protection bit
  7973                           ;	CPD = OFF, Data EEPROM not code-protected
  7974   300009                     	org	3145737
  7975   300009  C0                 	db	192
  7976                           
  7977                           ;Config register CONFIG6L @ 0x30000A
  7978                           ;	Write Protection bit
  7979                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7980                           ;	Write Protection bit
  7981                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7982                           ;	Write Protection bit
  7983                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7984                           ;	Write Protection bit
  7985                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7986   30000A                     	org	3145738
  7987   30000A  0F                 	db	15
  7988                           
  7989                           ;Config register CONFIG6H @ 0x30000B
  7990                           ;	Configuration Register Write Protection bit
  7991                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7992                           ;	Boot Block Write Protection bit
  7993                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7994                           ;	Data EEPROM Write Protection bit
  7995                           ;	WRTD = OFF, Data EEPROM not write-protected
  7996   30000B                     	org	3145739
  7997   30000B  E0                 	db	224
  7998                           
  7999                           ;Config register CONFIG7L @ 0x30000C
  8000                           ;	Table Read Protection bit
  8001                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8002                           ;	Table Read Protection bit
  8003                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8004                           ;	Table Read Protection bit
  8005                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8006                           ;	Table Read Protection bit
  8007                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8008   30000C                     	org	3145740
  8009   30000C  0F                 	db	15
  8010                           
  8011                           ;Config register CONFIG7H @ 0x30000D
  8012                           ;	Boot Block Table Read Protection bit
  8013                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8014   30000D                     	org	3145741
  8015   30000D  40                 	db	64
  8016                           tosu	equ	0xFFF
  8017                           tosh	equ	0xFFE
  8018                           tosl	equ	0xFFD
  8019                           stkptr	equ	0xFFC
  8020                           pclatu	equ	0xFFB
  8021                           pclath	equ	0xFFA
  8022                           pcl	equ	0xFF9
  8023                           tblptru	equ	0xFF8
  8024                           tblptrh	equ	0xFF7
  8025                           tblptrl	equ	0xFF6
  8026                           tablat	equ	0xFF5
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           indf0	equ	0xFEF
  8030                           postinc0	equ	0xFEE
  8031                           postdec0	equ	0xFED
  8032                           preinc0	equ	0xFEC
  8033                           plusw0	equ	0xFEB
  8034                           fsr0h	equ	0xFEA
  8035                           fsr0l	equ	0xFE9
  8036                           wreg	equ	0xFE8
  8037                           indf1	equ	0xFE7
  8038                           postinc1	equ	0xFE6
  8039                           postdec1	equ	0xFE5
  8040                           preinc1	equ	0xFE4
  8041                           plusw1	equ	0xFE3
  8042                           fsr1h	equ	0xFE2
  8043                           fsr1l	equ	0xFE1
  8044                           bsr	equ	0xFE0
  8045                           indf2	equ	0xFDF
  8046                           postinc2	equ	0xFDE
  8047                           postdec2	equ	0xFDD
  8048                           preinc2	equ	0xFDC
  8049                           plusw2	equ	0xFDB
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    16
    Data        46
    BSS         108
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    100     114
    BANK0           128     10     119
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2123$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_str(COMRAM[11]), convert_uint16_to_string@Temp_str(BANK0[6]), convert_uint8_to_string@Temp_str(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2070$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2070$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned int  size(2) Largest target is 2
		 -> lm35_res_2(BANK0[2]), lm35_res_1(BANK0[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(BANK0[6]), 

    S1320$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), 

    Interrupt_RBx_set_pin_init_value@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S922$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S885$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_ISR_HANDLER(), NULL(), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 10
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), STR_8(CODE[10]), STR_6(CODE[10]), 
		 -> STR_4(CODE[10]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _application_initialize->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_Init->_configure_voltage_reference
    _ADC_Init->_select_result_format
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _ADC_ISR_HANDLER->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  118779
                                              8 BANK0      2     2      0
      _ADC_StartConversion_Interrupt
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _application_initialize
           _convert_uint16_to_string
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   37170
                                             36 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   18688
                                             30 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16782
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5157
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5081
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    5081
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10234
                                             96 COMRAM     4     0      4
                                              0 BANK0      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             74 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             66 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             52 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   32724
                           _ADC_Init
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   32228
                                             36 COMRAM     1     1      0
                _dc_motor_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   25188
                                             30 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   17998
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5747
                                             22 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5309
                                             22 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7036
                                             26 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6792
                                             22 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4913
                                             12 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     581
                                             12 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     494
                                             16 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 4     2      2      98
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          4     2      2      98
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             76 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             51 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3    1032
                                             20 COMRAM     4     1      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     198
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     416
                                             15 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    4     4      0     612
                                              8 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     612
                                NULL *
                    _ADC_ISR_HANDLER *
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR_HANDLER                                     0     0      0     612
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversionResult                             8     4      4     612
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _application_initialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _ecu_layer_initialize
       _dc_motor_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_ISR_HANDLER *
       _ADC_GetConversionResult
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      39        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      77       5       93.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     64      72       1       90.5%
BITBIGSFRl          43      0       0      38        0.0%
BITBIGSFRh          3B      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     109      12        0.0%
DATA                 0      0     109       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 04 01:27:54 2023

                      ??_InterruptManager 0009                              ___fldiv@aexp 004C  
                            ___fldiv@bexp 004B                              ___fldiv@sign 0044  
                         ?_lcd_send_4bits 0017                                        l71 2698  
                                      l81 2F52                                        l76 2FC4  
                            ___awdiv@sign 0012                                       l102 2D54  
                                     l241 3292                                       l411 2DDE  
                                     l251 324C                                       l227 2C02  
                                     l236 339A                                       l246 32D8  
                                     l423 2240                                       l193 2E66  
                                     l442 238A                                       l178 2B52  
                                     l198 31BA                                       l358 349C  
                                     l852 34D2                                       l926 33D8  
                                     l951 302C                                       l945 284A  
                                     l961 3020                                       l953 3078  
                                     l890 34BC                                       l875 29F8  
                                     l892 34C0                                       l949 3026  
                                     l877 2A98                                       l887 3412  
     __end_of_configure_voltage_reference 3022               _configure_voltage_reference 2FC6  
           gpio_pin_initialize@pin_config 0017                                       _abs 331E  
                                     _pad 2E68                           __end_of_ADC_ISR 3444  
                                     _ret 0072       __end_of_lcd_4bit_send_enable_signal 31BC  
             _lcd_4bit_send_enable_signal 316E                              ___awmod@sign 0012  
                     led_initialize@F3217 0071                                       prod 0FF3  
                                     tosl 0FFD                     relay_initialize@F3211 006D  
                                     wreg 0FE8                              ___flmul@aexp 002C  
                            ___flmul@bexp 002D               lcd_send_4bits@_data_command 0019  
          ?_ADC_StartConversion_Interrupt 0015                              ___flmul@sign 0027  
                            ___flmul@temp 0032                              ___flmul@prod 002E  
               ?_convert_uint16_to_string 0061                           __end_of_RB4_ISR 34E4  
                         __end_of_RB5_ISR 34E0                           __end_of_RB6_ISR 34DC  
                         __end_of_RB7_ISR 34D8                              ___fltol@exp1 0056  
                                    ?_abs 0013                                      l1208 2CB2  
                                    l1261 25BC                                      l1195 29D8  
                                    l4100 22A0                                      l1622 1C42  
                                    l4102 22FC                                      l1710 311E  
                                    l1551 161A                                      l1560 1702  
                                    l5000 15DE                                      l1704 24B6  
                                    l1633 1BDA                                      l5010 1624  
                                    l5002 15E6                                      l1546 17F6  
                                    l1626 1B7E                                      l4106 235E  
                                    l1714 3354                                      l1619 1AE6  
                                    l5020 167C                                      l5012 1642  
                                    l5004 15F6                                      l1548 1656  
                                    l5100 10D2                                      l4220 2118  
                                    l4108 2388                                      l1740 34F0  
                                    l1652 3206                                      l1557 169C  
                                    l1717 335C                                      l5030 16BA  
                                    l5022 1682                                      l5014 1644  
                                    l5006 160A                                      l1582 145C  
                                    l5102 10E2                                      l4230 21FC  
                                    l4222 2136                                      l4214 20E0  
                                    l1559 1714                                      l1639 20DE  
                                    l5040 1724                                      l5032 16BE  
                                    l5024 168C                                      l5016 1654  
                                    l5008 1618                                      l5120 1164  
                                    l5112 112C                                      l5104 10E8  
                                    l4224 213E                                      l4232 223E  
                                    l4216 20E4                                      l4320 2D68  
                                    l4240 2DE0                                      l4400 2654  
                                    l1585 12EE                                      l1729 2914  
                                    l1737 331C                                      l5050 1786  
                                    l5042 1730                                      l5034 16CC  
                                    l5026 169A                                      l5018 1666  
                                    l5130 11AE                                      l5122 117C  
                                    l5114 1138                                      l5106 1108  
                                    l1578 10F8                                      l5210 250C  
                                    l5202 24B8                                      l4226 21A0  
                                    l4218 20F6                                      l4090 2242  
                                    l4322 2D8A                                      l4242 2DE0  
                                    l4402 2664                                      l1674 2E8A  
                                    l1595 141E                                      l1587 1366  
                                    l1683 1C8C                                      l5060 17E4  
                                    l5052 179C                                      l5044 173E  
                                    l5036 16FA                                      l5028 16AC  
                                    l1588 1354                                      l5140 1204  
                                    l5132 11BE                                      l5124 1188  
                                    l5116 1142                                      l5108 1118  
                                    l5212 250E                                      l5204 24CE  
                                    l4500 2FD2                                      l4092 2246  
                                    l4324 2DA8                                      l4316 2D56  
                                    l4420 3398                                      l4412 335E  
                                    l4260 319C                                      l4252 316E  
                                    l4244 2DF2                                      l4340 2FC2  
                                    l4332 2F54                                      l4404 2674  
                                    l1685 1C94                                      l5062 17EA  
                                    l5054 17B6                                      l5046 1768  
                                    l5150 12A8                                      l5142 1220  
                                    l5134 11CA                                      l5126 1194  
                                    l5118 1158                                      l5214 251E  
                                    l4094 2258                                      l4326 2DB0  
                                    l4318 2D56                                      l4414 335E  
                                    l4262 31B8                                      l4254 316E  
                                    l4246 2DFA                                      l4334 2F54  
                                    l4406 2684                                      l1678 2EE0  
                                    l1686 1CDA                                      l5064 17EC  
                                    l5056 17D2                                      l5048 176C  
                                    l5160 12FE                                      l5152 12B6  
                                    l5144 122C                                      l5136 11DA  
                                    l5128 11A2                                      l5080 1060  
                                    l5072 1034                                      l5240 259C  
                                    l5224 2548                                      l5216 2522  
                                    l5208 24E2                                      l4096 227A  
                                    l4328 2DDC                                      l4416 3370  
                                    l4256 3180                                      l4248 2E64  
                                    l4336 2F66                                      l4408 2696  
                                    l1697 1DD8                                      l4450 2776  
                                    l5058 17D6                                      l5162 130C  
                                    l5154 12D4                                      l5146 1248  
                                    l5138 11F4                                      l5090 109C  
                                    l5082 1070                                      l5074 1040  
                                    l5242 25AC                                      l5234 2570  
                                    l5226 2552                                      l5218 2530  
                                    l5250 1AB0                                      l4506 2FDA  
                                    l4098 2298                                      l4418 3378  
                                    l4258 3188                                      l4338 2F6E  
                                    l4530 2F50                                      l4522 2EE2  
                                    l4460 2792                                      l4452 277A  
                                    l4700 340A                                      l5172 1376  
                                    l5180 13BE                                      l5164 1310  
                                    l5156 12DE                                      l5148 1272  
                                    l5092 10A2                                      l5084 1080  
                                    l5076 104E                                      l5236 257C  
                                    l5228 255C                                      l5260 1B28  
                                    l5252 1AF6                                      l4380 25DC  
                                    l6300 291A                                      l4524 2EE2  
                                    l4540 2B6A                                      l4470 27B0  
                                    l4462 2798                                      l4454 2780  
                                    l4702 3410                                      l4710 34B4  
                                    l5190 1432                                      l5182 13D8  
                                    l5174 1382                                      l5166 131E  
                                    l5158 12EC                                      l5094 10B0  
                                    l5086 1086                                      l5078 1050  
                                    l5238 258C                                      l5270 1BB0  
                                    l5262 1B34                                      l5254 1B0C  
                                    l5246 1A92                                      l4390 261C  
                                    l4382 25FC                                      l4374 25BE  
                                    l6310 294A                                      l6302 2928  
                                    l4526 2EF4                                      l4542 2B70  
                                    l4534 2B54                                      ?_pad 001D  
                                    l4472 27B6                                      l4464 279E  
                                    l4456 2786                                      l4480 27C8  
                                    l4712 34BE                                      l5192 1440  
                                    l5184 13EC                                      l5176 1390  
                                    l5168 134C                                      l5096 10B2  
                                    l5088 1096                                      l5280 1BEE  
                                    l5272 1BBC                                      l5264 1B66  
                                    l5248 1AA2                                      l4392 261E  
                                    l4376 25C2                                      l6320 2978  
                                    l6312 294E                                      l6304 2930  
                                    l6400 1C68                                      l4528 2EFC  
                                    l4544 2B86                                      l4536 2B54  
                                    l4474 27BC                                      l4466 27A4  
                                    l4458 278C                                      l4706 349E  
                                    l5194 1442                                      l5186 1406  
                                    l5178 13BA                                      l5098 10C2  
                                    l5282 1C12                                      l5274 1BCA  
                                    l5266 1B68                                      l5258 1B20  
                                    l4490 3032                                      l4650 29DA  
                                    l4394 262E                                      l4378 25D4  
                                    l4642 3472                                      l6330 29AC  
                                    l6322 2986                                      l6314 2956  
                                    l6306 2934                                      l6410 1CB2  
                                    l6402 1C70                                      l4810 324E  
                                    l4546 2B9C                                      l4554 2BC8  
                                    l4538 2B66                                      l4730 2CB8  
                                    l4476 27C2                                      l4468 27AA  
                                    l4708 34A2                                      l5188 1422  
                                    l5196 1448                                      l5284 1C22  
                                    l5276 1BE8                                      l5268 1B74  
                                    l4660 2A64                                      l4652 29DE  
                                    l4396 263E                                      l4388 2600  
                                    l4644 3472                                      l6332 29B2  
                                    l6324 298C                                      l6316 2968  
                                    l6308 2942                                      l6420 1CEC  
                                    l6412 1CC2                                      l6404 1C80  
                                    l4812 324E                                      l4548 2BB2  
                                    l4740 2D20                                      l4732 2CCA  
                                    l5198 144C                                      l5286 1C30  
                                    l5278 1BEA                                      l4486 3022  
                                    l4670 2A7C                                      l4662 2A74  
                                    l4654 29F0                                      l4398 2644  
                                    l4646 3480                                      l6510 20B6  
                                    l6502 203C                                      l6326 29A2  
                                    l6318 2970                                      l6334 29B8  
                                    l6350 2C22                                      l6342 2C04  
                                    l6422 1CF2                                      l6430 1D4C  
                                    l6414 1CCE                                      l6406 1C9C  
                                    l4830 32D6                                      l4822 3294  
                                    l4814 3260                                      l4742 2D52  
                                    l4734 2CD2                                      l5288 1C32  
                                    l4496 2FC6                                      l4672 2A88  
                                    l4664 2A76                                      l4656 29FA  
                                    l4648 348E                                      l4920 34C6  
                                    l6512 20C2                                      l6504 2068  
                                    l6336 29C8                                      l6328 29AA  
                                    l6360 2C5A                                      l6352 2C30  
                                    l6344 2C08                                      l6280 2870  
                                    l6440 1DA8                                      l6432 1D66  
                                    l6424 1D24                                      l6416 1CD6  
                                    l6408 1CAC                                      l6520 31CC  
                                    l4824 3294                                      l4816 3268  
                                    l4840 3222                                      l4736 2CEA  
                                    l4728 2CB4                                      l6600 17F8  
                                    l4930 33D6                                      l4922 339C  
                                    l4498 2FCA                                      l4674 2A94  
                                    l4666 2A78                                      l4658 2A52  
                                    l6514 20C8                                      l6338 29D0  
                                    l6362 2C68                                      l6370 2C92  
                                    l6354 2C38                                      l6346 2C16  
                                    l6282 287A                                      l6290 32DA  
                                    l6442 1DB8                                      l6434 1D78  
                                    l6426 1D2A                                      l6418 1CE2  
                                    l6450 23C0                                      l6522 31D4  
                                    l6530 2A9A                                      l4826 32A6  
                                    l4818 3290                                      l4842 324A  
                                    l4834 3208                                      l4738 2D1C  
                                    l6610 1862                                      l6602 17FC  
                                    l4692 33DA                                      l4924 339C  
                                    l4940 147A                                      l4668 2A7A  
                                    l4676 2A96                                      l4916 34C2  
                                    l6516 20CC                                      l6508 2082  
                                    l6372 2CA2                                      l6364 2C7E  
                                    l6356 2C4A                                      l6348 2C1E  
                                    l6284 2898                                      l6276 284C  
                                    l6292 32E6                                      l6380 2E76  
                                    l6436 1D92                                      l6428 1D30  
                                    l6460 241E                                      l6452 23CE  
                                    l6524 31DC                                      l6540 2ACA  
                                    l6532 2AA0                                      l4828 32AE  
                                    l4836 3208                                      l6620 18C4  
                                    l6612 1880                                      l6604 181A  
                                    l4694 33DE                                      l4926 33AE  
                                    l4942 148A                                      l4950 14B4  
                                    l4934 145E                                      l4918 34C2  
                                    l6374 2CAA                                      l6366 2C86  
                                    l6358 2C52                                      l6286 28CE  
                                    l6278 285E                                      l6294 32F8  
                                    l6390 2ECC                                      l6382 2E82  
                                    l6438 1DA2                                      l6462 2462  
                                    l6454 23D2                                      l6470 248C  
                                    l6446 238C                                      l6526 31F8  
                                    l6518 31BC                                      l6550 2B42  
                                    l6542 2AE6                                      l6534 2AAC  
                                    l4838 321A                                      l6630 19FA  
                                    l6622 193A                                      l6614 1890  
                                    l6606 1832                                      l4696 33F0  
                                    l4928 33B6                                      l4960 14E0  
                                    l4952 14C4                                      l4944 149A  
                                    l4936 146A                                      l6368 2C8C  
                                    l6392 331E                                      l6296 32FC  
                                    l6384 2E96                                      l6456 23E2  
                                    l6448 23B2                                      l6480 30F8  
                                    l6544 2B06                                      l6552 2B50  
                                    l6536 2AB0                                      l6640 1A68  
                                    l6632 1A18                                      l6624 19B0  
                                    l6616 18A2                                      l6608 1844  
                                    l4698 33F8                                      l4962 14F0  
                                    l4970 151A                                      l4954 14CA  
                                    l4946 14AA                                      l4938 1478  
                                    l6490 1F88                                      l6298 2916  
                                    l6394 3338                                      l6386 2EAA  
                                    l6378 2E68                                      l6466 247A  
                                    l6458 2400                                      l6482 3116  
                                    l6546 2B22                                      l6538 2AC2  
                                    l6642 1A7A                                      l6634 1A30  
                                    l6626 19C6                                      l6618 18B2  
                                    l4980 155C                                      l4972 152A  
                                    l4964 1500                                      l4956 14D0  
                                    l4948 14AC                                      l6492 1F94  
                                    l6388 2EAE                                      l6396 1C44  
                                    l6476 30D0                                      l6548 2B24  
                                    l6636 1A42                                      l6628 19DC  
                                    l4974 1540                                      l4966 1510  
                                    l4958 14DE                                      l6486 1F6A  
                                    l6398 1C58                                      l6478 30DC  
                                    l6638 1A50                                      l4992 1594  
                                    l4976 1550                                      l4984 1570  
                                    l4968 1512                                      l6496 1FCA  
                                    l4994 15AE                                      l4986 1580  
                                    l4978 1558                                      l6498 2022  
                                    l4996 15BE                                      l4988 1580  
                                    l4998 15CE                                      l6790 3062  
                                    l6792 300A                                      l6784 2BDC  
                                    l6794 27DC                                      l6786 2372  
                                    l6788 2228                                      STR_1 102F  
                                    STR_2 102F                                      STR_4 1025  
                                    STR_5 1011                                      STR_6 1011  
                                    STR_7 101B                                      STR_8 101B  
                                    u3000 2298                                      u3001 2294  
                                    u3014 22C0                                      u3015 22BC  
                                    u4000 1540                                      u3200 2136  
                                    u3024 231C                                      u4001 153C  
                                    u3201 2132                                      u3025 2318  
                                    u4010 1580                                      u4011 157C  
                                    u4100 16FA                                      u4020 15F6  
                                    u4101 16F6                                      u4021 15F2  
                                    u4110 1710                                      u4030 1618  
                                    u3230 2214                                      u3214 215E  
                                    u4111 170C                                      u4031 1614  
                                    u3231 220E                                      u3215 215A  
                                    u4120 1724                                      u4040 1642  
                                    u4200 10B0                                      u3240 2216  
                                    u3224 21C0                                      u3400 2F66  
                                    u4121 1720                                      u4041 163E  
                                    u4201 10AC                                      u3225 21BC  
                                    u3401 2F62                                      u4130 173E  
                                    u4050 1666                                      u4210 10C2  
                                    u3250 2DF2                                      u4131 173A  
                                    u4051 1662                                      u4211 10BE  
                                    u3251 2DEE                                      u4140 1786  
                                    u4060 167C                                      u4300 1362  
                                    u4220 10D2                                      u3180 20F6  
                                    u3260 3180                                      u4141 1782  
                                    u4061 1678                                      u4301 135E  
                                    u4221 10CE                                      u3181 20F2  
                                    u3261 317C                                      u4150 17B6  
                                    u4070 169A                                      u4310 1376  
                                    u4230 1108                                      u3190 2118  
                                    u4151 17B2                                      u4071 1696  
                                    u4311 1372                                      u4231 1104  
                                    u3191 2114                                      u4160 17E4  
                                    u4080 16BA                                      u4320 1390  
                                    u4240 1118                                      u4400 256C  
                                    u3520 304E                                      u3440 25D4  
                                    u6000 20DE                                      u4161 17E0  
                                    u4081 16B6                                      u4321 138C  
                                    u4241 1114                                      u4401 2568  
                                    u3521 3048                                      u3441 25D0  
                                    u6001 20DA                                      u4090 16CC  
                                    u4330 13D8                                      u4250 1292  
                                    u4170 104E                                      u4410 258C  
                                    u3530 3050                                      u3370 2D68  
                                    u3450 262E                                      u4091 16C8  
                                    u4331 13D4                                      u4171 104A  
                                    u4411 2588                                      u3371 2D64  
                                    u3451 262A                                      u6011 2AA6  
                                    u4340 1406                                      u4260 12EC  
                                    u4180 1060                                      u4420 259C  
                                    u4500 1BE8                                      u3540 2FF6  
                                    u3380 2D8A                                      u3460 3370  
                                    u6020 2AC2                                      u6100 18B2  
                                    u4341 1402                                      u4261 12E8  
                                    u4181 105C                                      u4421 2598  
                                    u4501 1BE4                                      u3541 2FF0  
                                    u3381 2D86                                      u3461 336C  
                                    u6021 2ABE                                      u6101 18AE  
                                    u3710 33F0                                      u4350 1440  
                                    u4270 130C                                      u4190 1070  
                                    u4510 1C22                                      u4430 1AA2  
                                    u3550 2FF8                                      u3390 2DA8  
                                    u6030 2B42                                      u6110 1A30  
                                    u3711 33EC                                      u4351 143C  
                                    u4271 1308                                      u4255 1288  
                                    u4191 106C                                      u4511 1C1E  
                                    u4431 1A9E                                      u3391 2DA4  
                                    u6031 2B3E                                      u6111 1A2C  
                                    u3720 34B4                                      u4280 131E  
                                    u4360 24CE                                      u4520 1C30  
                                    u4440 1AB0                                      u6120 1A68  
                                    u3721 34B0                                      u4281 131A  
                                    u4361 24CA                                      u4521 1C2C  
                                    u4441 1AAC                                      u6121 1A64  
                                    u4290 134C                                      u4370 2502  
                                    u4450 1B0C                                      u3570 2EF4  
                                    u4291 1348                                      u4451 1B08  
                                    u3571 2EF0                                      u4380 2530  
                                    u4460 1B62                                      u3580 2B66  
                                    u3740 2CCA                                      u4381 252C  
                                    u4461 1B5E                                      u3581 2B62  
                                    u3741 2CC6                                      u4390 2544  
                                    u4470 1BAC                                      u3750 2D14  
                                    u4391 2540                                      u4375 24F8  
                                    u4471 1BA8                                      u4480 1BCA  
                                    u3680 29F0                                      u3760 2D42  
                                    u4481 1BC6                                      u3681 29EC  
                                    u6137 1826                                      u3930 33AE  
                                    u4490 1BDA                                      u3850 3260  
                                    u3770 2D52                                      u6090 1890  
                                    u3931 33AA                                      u4491 1BD6  
                                    u6147 2640                                      u3851 325C  
                                    u3771 2D4E                                      u6091 188C  
                                    u3940 1478                                      u2980 2258  
                                    u5700 2986                                      u5620 285E  
                                    u3860 32A6                                      u3941 1474  
                                    u2981 2254                                      u5701 2982  
                                    u5621 285A                                      u3861 32A2  
                                    u3757 2D0A                                      u3950 148A  
                                    u2990 227A                                      u5710 29A2  
                                    u5630 2870                                      u3870 321A  
                                    u3951 1486                                      u2991 2276  
                                    u5711 299E                                      u5631 286C  
                                    u3871 3216                                      u3767 2D38  
                                    u3960 149A                                      u5720 29C8  
                                    u5640 2898                                      u5800 2ECC  
                                    u3961 1496                                      u5721 29C4  
                                    u5641 2894                                      u5801 2EC8  
                                    u3970 14DE                                      u5730 2C16  
                                    u5810 3338                                      u5650 28CE  
                                    u3971 14DA                                      u5731 2C12  
                                    u5811 3334                                      u5651 28CA  
                                    u3980 14F0                                      u5740 2C30  
                                    u5660 331C                                      u5900 1D92  
                                    u5820 1C54                                      u3981 14EC  
                                    u5741 2C2C                                      u5661 3318  
                                    u5901 1D8E                                      u5821 1C4E  
                                    u3990 1500                                      u5670 2928  
                                    u5750 2C4A                                      u5910 1DA2  
                                    u5830 1C56                                      u3991 14FC  
                                    u5671 2924                                      u5751 2C46  
                                    u5911 1D9E                                      u5680 2942  
                                    u5760 2C68                                      u5840 1C68  
                                    u5920 23B2                                      u5681 293E  
                                    u5761 2C64                                      u5841 1C64  
                                    u5921 23AE                                      u5690 2968  
                                    u5770 2C7E                                      u5850 1C80  
                                    u5930 2400                                      u5691 2964  
                                    u5771 2C7A                                      u5851 1C7C  
                                    u5931 23FC                                      u5780 2CA2  
                                    u5860 1CAC                                      u5940 241E  
                                    u5781 2C9E                                      u5861 1CA8  
                                    u5941 241A                                      u5790 2E76  
                                    u5870 1CC2                                      u5950 3116  
                                    u5791 2E72                                      u5871 1CBE  
                                    u5951 3112                                      u5960 1F84  
                                    u5880 1D66                                      u5961 1F80  
                                    u5881 1D62                                      u5970 1FC6  
                                    u5890 1D78                                      u5971 1FC2  
                                    u5891 1D74                                      u5980 2038  
                                    u5981 2034                                      u5990 207E  
                                    u5991 207A             ??_lcd_4bit_send_enable_signal 0019  
                                    abs@a 0013                                      _lcd1 00E3  
                                    _dbuf 0100                                      _main 17F8  
                                    _dtoa 1C44                                      _prec 0097  
                                    pad@i 0024                                      pad@p 0021  
                                    fsr0h 0FEA                                      fsr1h 0FE2  
                                    indf0 0FEF                                      fsr2h 0FDA  
                                    fsr0l 0FE9                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    pad@w 0026                                      fsr2l 0FD9  
                                    btemp 0073                          __end_of_ADC_Init 2A9A  
                                    prodh 0FF4                                      prodl 0FF3  
                                    start 000E                           ___fldiv@new_exp 0045  
                    _RB7_InterruptHandler 009D                              ___param_bank 0000  
                          _lm35_res_1_txt 00B4                     _lcd_4bit_send_command 2F54  
                          _lm35_res_2_txt 00AD                    dc_motor_initialize@ret 001D  
                                   ??_abs 0015                      _gpio_pin_write_logic 2242  
          lcd_4bit_send_string_pos@column 0028                                     ??_pad 0023  
                        __end_of_INT0_ISR 34F0                          __end_of_INT1_ISR 34EC  
                        __end_of_INT2_ISR 34E8                             ___fltol@sign1 0055  
                                   ?_main 0001                                     ?_dtoa 0028  
                ??_application_initialize 0026                           __end_of___fldiv 17F8  
                         __end_of___awdiv 29DA                           __end_of___awmod 2CB4  
                         __end_of___flmul 145E                           __end_of___fltol 25BE  
                         ___awdiv@divisor 000F                                     i2l570 34EE  
                                   i2l492 3442                                     i2l574 34EA  
                                   i2l582 34E2                                     i2l590 34DA  
                                   i2l911 2772                                     i2l578 34E6  
                                   i2l586 34DE                                     i2l594 34D6  
                                   i2l770 1E0C                                     i2l860 30CE  
                                   i2l780 1EFE                                     i2l772 1E2C  
                                   i2l782 1F36                                     i2l774 1E4C  
                                   i2l776 1E86                                     i2l785 1F56  
                                   i2l778 1EC2                           ___awdiv@counter 0011  
                     relay_turn_off@F3221 006B                              vfpfcnvrt@fmt 0037  
               lcd_4bit_set_cursor@column 0022                                     _adc_1 00DD  
                                   _flags 0065                                     _fputc 284C  
                                   _fputs 32DA                                     pad@fp 001D  
                                   _width 0095                                     _putch 34F0  
                                   dtoa@d 002A                                     dtoa@i 0033  
                                   dtoa@p 002E                                     dtoa@s 0032  
                                   dtoa@w 0030                                     pclath 0FFA  
                                   pclatu 0FFB                                     tablat 0FF5  
                                   ttemp5 0074                                     ttemp6 0077  
                                   ttemp7 007B                                     status 0FD8  
                                   wtemp8 0074                           __end_of_sprintf 3208  
          ?_gpio_pin_direction_initialize 000D                           __initialization 3120  
                            __end_of_main 1A90                              __end_of_dtoa 1DDA  
                   ?_gpio_pin_write_logic 000D                                 ??_ADC_ISR 0009  
                           _lat_registers 00C9               __end_of_dc_motor_initialize 339C  
                                  ??_main 00F5                                    ??_dtoa 002C  
                           __activetblptr 0003                          led_turn_on@F3222 0070  
                               ??_RB4_ISR 0001                                 ??_RB5_ISR 0001  
                               ??_RB6_ISR 0001                                 ??_RB7_ISR 0001  
                 ecu_layer_initialize@ret 0025                        _RB4_pin_init_value 006A  
                                  ?_fputc 000D                                    ?_fputs 0016  
                                  _ADRESH 0FC4                                    _ADRESL 0FC3  
                        ___awdiv@dividend 000D                                    ?_putch 0001  
                                  i2l4430 26C2                                    i2l6030 1DFA  
                                  i2l4432 26CA                                    i2l4440 272A  
                                  i2l4424 269A                                    i2l6040 1E48  
                                  i2l6032 1E08                                    i2l4434 2702  
                                  i2l4442 2770                                    i2l4426 269E  
                                  i2l6050 1E94                                    i2l6042 1E5A  
                                  i2l6034 1E1A                                    i2l4428 26B0  
                                  i2l6060 1EDE                                    i2l6052 1EA2  
                                  i2l6044 1E68                                    i2l6036 1E28  
                                  i2l6028 1DEC                                    i2l6070 1F2E  
                                  i2l6062 1EF6                                    i2l6054 1EBA  
                                  i2l6046 1E7E                                    i2l6038 1E3A  
                                  i2l6072 1F32                                    i2l6064 1EFA  
                                  i2l6056 1EBE                                    i2l6048 1E82  
                                  i2l6074 1F44                                    i2l6066 1F0C  
                                  i2l6058 1ED0                                    i2l6076 1F52  
                                  i2l6068 1F1A                                    i2l4680 307A  
                                  i2l4690 30BA                                    i2l4682 308A  
                                  i2l4850 342A                                    i2l4684 308E  
                                  i2l4852 34EC                                    i2l4860 34E4  
                                  i2l4686 30A6                                    i2l4846 3414  
                                  i2l4688 30B6                                    i2l4848 3416  
                                  i2l4856 34E8                                    i2l4864 34E0  
                                  i2l4872 34D8                                    i2l4868 34DC  
                                  i2l4876 34D4                                    i2l6796 275A  
                        __end_of___xxtofl 1C44          __end_of_lcd_4bit_send_string_pos 2D56  
             __end_of_dc_motor_move_right 3294                    ?_lcd_4bit_send_command 001B  
                            vfprintf@cfmt 0049                                 ??___fldiv 003C  
                               ??___awdiv 0011                                 ??___awmod 0011  
                               ??___flmul 0023                                 ??___fltol 0051  
                                  _memset 1F6A                                    clear_0 3146  
                                  clear_1 3152                                    clear_2 315E  
                        ___awdiv@quotient 0013                           ___awmod@divisor 000F  
                                  isa$std 0001                           ___awmod@counter 0011  
                                  pad@buf 001F                                    dtoa@fp 0028  
                                  fputc@c 000D                                    fputs@c 001A  
                                  fputs@i 001B                                    fputs@s 0016  
                               ?_ADC_Init 0011                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                    putch@c 0001  
                        __end_of_vfprintf 3120                                 ??_sprintf 0053  
            __end_of_select_result_format 307A                              ___xxtofl@arg 0017  
                            ___xxtofl@exp 0016                              ___xxtofl@val 000D  
                      _RB6_pin_init_value 0068                                __accesstop 0080  
                 __end_of__initialization 3164                                 ?_INT0_ISR 0001  
                               ?_INT1_ISR 0001                                 ?_INT2_ISR 0001  
                              _lm35_res_1 00BD                                _lm35_res_2 00BB  
                           ___rparam_used 0001                                ___fltol@f1 004D  
                        ??_lcd_send_4bits 001A               dc_motor_move_left@_dc_motor 0017  
                 _lcd_4bit_send_char_data 2EE2                    ??_gpio_pin_write_logic 0010  
                          __pcstackCOMRAM 0001                        fp__ADC_ISR_HANDLER 0000  
                            __pidataBANK0 3444                             __end_of_fputc 2916  
                           __end_of_fputs 331E                             __end_of_putch 34F2  
                lcd_4bit_send_command@lcd 001B                  lcd_4bit_send_command@ret 001E  
                 _ADC_GetConversionResult 269A                                ??_ADC_Init 0013  
                    ADC_SelectChannel@ret 0014                                   ??_fputc 0011  
                              _dc_motor_1 00EB                                _dc_motor_2 00E9  
                                 ??_fputs 001A                                   ??_putch 000D  
                  ADC_StartConversion@ret 000F                                __pbssBANK0 0080  
                              __pbssBANK1 0100                     _INT0_InterruptHandler 00A9  
                              ??_INT0_ISR 0001                                ??_INT1_ISR 0001  
                              ??_INT2_ISR 0001                    _application_initialize 34C2  
                              __pnvCOMRAM 0072                ADC_GetConversionResult@ret 0008  
                       led_turn_off@F3227 006F               convert_uint16_to_string@cnt 00F4  
             convert_uint16_to_string@ret 00F3                                   _ADC_ISR 3414  
                         led_toggle@F3232 006E               convert_uint16_to_string@str 0063  
                                 ?_memset 000D                                   _RB4_ISR 34E0  
                                 _RB5_ISR 34DC                                   _RB6_ISR 34D8  
                                 _RB7_ISR 34D4                                 ?___xxtofl 000D  
               ?_lcd_4bit_send_string_pos 0025                                _btn_values 1001  
                          _tris_registers 00D3                 ??_lcd_4bit_send_char_data 001E  
  lcd_4bit_initialize@l_data_pins_counter 0024                      _ADC_InterruptHandler 00AB  
                                 __Hparam 0000                              ADC_Init@_adc 0011  
                                 __Lparam 0000                     dc_motor_move_left@ret 0019  
                     _gpio_pin_initialize 2D56                                   ___fldiv 145E  
                                 ___awdiv 2916                                   ___awmod 2C04  
                                 ___flmul 1034                                   ___fltol 24B8  
                               ?_vfprintf 0043                              __psmallconst 1000  
               ??_ADC_GetConversionResult 0005                                   __pcinit 3120  
                    _select_result_format 3022                                   __ramtop 1000  
                       ??_ADC_ISR_HANDLER 0009                                   __ptext0 17F8  
                                 __ptext1 2CB4                                   __ptext2 2B54  
                                 __ptext3 2EE2                                   __ptext4 3208  
                                 __ptext5 324E                                   __ptext6 3294  
                                 __ptext7 2A9A                                   __ptext8 31BC  
                                 __ptext9 30D0           ??_gpio_pin_direction_initialize 000F  
                _convert_uint16_to_string 2A9A                                ??___xxtofl 0011  
                        ___awmod@dividend 000D                      ?_gpio_pin_initialize 0017  
                                 _sprintf 31BC                            __pintcode_body 1DDA  
                    end_of_initialization 3164                         lcd_send_4bits@lcd 0017  
                       lcd_send_4bits@ret 001A                  select_result_format@_adc 000D  
                                 fputc@fp 000F                                   memset@c 000F  
                                 memset@k 0015                                   memset@n 0011  
                                 memset@s 0017                                   int_func 1DDA  
                                 fputs@fp 0018                   ??_lcd_4bit_send_command 001E  
                           _dc_motor_stop 3208                         __end_of_vfpfcnvrt 24B8  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                          vfpfcnvrt@convarg 003D  
                              ??_vfprintf 0049                     ?_select_result_format 000D  
        ADC_StartConversion_Interrupt@ret 0018                       _lcd_4bit_initialize 25BE  
         __end_of_lcd_4bit_send_char_data 2F54                     _INT1_InterruptHandler 00A7  
                        _InterruptManager 0008                lcd_4bit_send_char_data@lcd 001B  
              lcd_4bit_send_char_data@ret 001E                             ___xxtofl@sign 0015  
                   ??_gpio_pin_initialize 0019                       _ADC_StartConversion 349E  
                             ___fldiv@grs 0047                               ___fldiv@rem 0040  
                    ?_lcd_4bit_initialize 001F                               ___flmul@grs 0028  
                          ?_dc_motor_stop 0017                       _lcd_4bit_set_cursor 2B54  
                      relay_turn_on@F3216 006C                      ?_ADC_StartConversion 000D  
             lcd_4bit_send_string_pos@lcd 0025               lcd_4bit_send_string_pos@ret 002B  
             lcd_4bit_send_string_pos@row 0027               lcd_4bit_send_string_pos@str 0029  
           convert_uint16_to_string@F3370 008B             convert_uint32_to_string@F3377 0080  
                             vfpfcnvrt@ap 0039                               vfpfcnvrt@cp 0041  
                             vfpfcnvrt@fp 0035   adc_input_channel_port_configure@channel 000F  
       ADC_StartConversion_Interrupt@_adc 0015                            __end_of_memset 20E0  
            ?_configure_voltage_reference 000D                       start_initialization 3120  
            ?_lcd_4bit_send_enable_signal 0017                      ?_lcd_4bit_set_cursor 001F  
                    _RB4_InterruptHandler 00A3             convert_uint16_to_string@value 0061  
                             __end_of_abs 335E                               __end_of_pad 2EE2  
   __end_of_gpio_pin_direction_initialize 2242             _gpio_pin_direction_initialize 20E0  
                 ?_application_initialize 0001  ADC_GetConversionResult@conversion_result 0003  
                   ??_lcd_4bit_initialize 0021                    dc_motor_stop@_dc_motor 0017  
                   ADC_SelectChannel@_adc 0010      ADC_StartConversion_Interrupt@channel 0017  
                   ??_ADC_StartConversion 000F                __end_of_dc_motor_move_left 32DA  
                             vfprintf@fmt 0045                    ??_select_result_format 000F  
                             __pdataBANK0 00BF              convert_uint8_to_string@F3363 0091  
                                ?_ADC_ISR 0001                                  ??_memset 0013  
            __end_of_ecu_layer_initialize 349E                                memset@dest 000D  
            lcd_4bit_send_command@command 001D                          dc_motor_stop@ret 0019  
                 ADC_StartConversion@_adc 000D                                 ___fldiv@a 0038  
                               ___fldiv@b 0034                                  ?_RB4_ISR 0001  
                                ?_RB5_ISR 0001                                  ?_RB6_ISR 0001  
                                ?_RB7_ISR 0001                                 ___flmul@a 001F  
                               ___flmul@b 001B                               __pbssCOMRAM 0065  
                   ??_lcd_4bit_set_cursor 0023                             __pcstackBANK0 00ED  
           ??_configure_voltage_reference 000F            __end_of_application_initialize 34D4  
             ADC_GetConversionResult@_adc 0001          convert_uint16_to_string@Temp_str 00ED  
                   _INT2_InterruptHandler 00A5            gpio_pin_write_logic@pin_config 000D  
                         ??_dc_motor_stop 0019                           _ADC_ISR_HANDLER 307A  
                               _dtoa$2150 002C                                 __pintcode 0008  
__end_of_adc_input_channel_port_configure 284C        ??_adc_input_channel_port_configure 000D  
       ?_adc_input_channel_port_configure 0001          _adc_input_channel_port_configure 2774  
                       _ADC_SelectChannel 33DA                ??_convert_uint16_to_string 0065  
                                ?___fldiv 0034                                  ?___awdiv 000D  
                                ?___awmod 000D                                  ?___flmul 001B  
                                ?___fltol 004D                        ?_ADC_SelectChannel 0010  
               gpio_pin_write_logic@logic 000F                               __smallconst 1000  
                     ??_ADC_SelectChannel 0013                                  _ADC_Flag 0066  
                                _ADC_Init 29DA                               ADC_Init@ret 0014  
                                ?_sprintf 004B                        _RB5_pin_init_value 0069  
                                _INT0_ISR 34EC                                  _INT1_ISR 34E8  
                                _INT2_ISR 34E4                  __end_of_InterruptManager 1F6A  
               __end_of_ADC_SelectChannel 3414             __end_of_lcd_4bit_send_command 2FC6  
                                i2u350_40 2746                                  i2u350_41 2740  
                                i2u351_40 2748                                  i2u370_40 30B6  
                                i2u370_41 30B2                                  i2u347_40 26B0  
                                i2u347_41 26AC                                  i2u348_40 26C2  
                                i2u540_40 1E48                                  i2u348_41 26BE  
                                i2u540_41 1E44                                  i2u541_40 1E5A  
                    _RB5_InterruptHandler 00A1                                  i2u541_41 1E56  
                                i2u349_45 26E2                                  i2u550_40 1F0C  
                                i2u542_40 1E68                                  i2u550_41 1F08  
                                i2u542_41 1E64                                  i2u551_40 1F1A  
                                i2u543_40 1E7E                                  i2u535_40 1DFA  
                                i2u551_41 1F16                                  i2u543_41 1E7A  
                                i2u535_41 1DF6                                  i2u552_40 1F2E  
                                i2u544_40 1E94                                  i2u536_40 1E08  
                                i2u552_41 1F2A                                  i2u544_41 1E90  
                                i2u536_41 1E04                                  i2u369_40 308A  
                                i2u553_40 1F44                                  i2u545_40 1EA2  
                                i2u537_40 1E1A                                  i2u369_41 3086  
                                i2u553_41 1F40                                  i2u545_41 1E9E  
                                i2u537_41 1E16                                  i2u554_40 1F52  
                                i2u546_40 1EBA                                  i2u538_40 1E28  
                                i2u554_41 1F4E                                  i2u546_41 1EB6  
                                i2u538_41 1E24                                  i2u547_40 1ED0  
                                i2u539_40 1E3A                                  i2u547_41 1ECC  
                                i2u539_41 1E36                                  i2u388_40 342A  
                                i2u548_40 1EDE                                  i2u388_41 3426  
                                i2u548_41 1EDA                                  i2u549_40 1EF6  
                                i2u549_41 1EF2                                  i2u389_48 3430  
                                i2u389_49 3442                       _dc_motor_initialize 335E  
            dc_motor_initialize@_dc_motor 001B           ??_ADC_StartConversion_Interrupt 0018  
        gpio_pin_direction_initialize@ret 0015                                 _vfpfcnvrt 238C  
                _lcd_4bit_send_string_pos 2CB4                  ADC_SelectChannel@channel 0012  
 gpio_pin_direction_initialize@pin_config 000D                    gpio_pin_initialize@ret 001A  
                    ?_dc_motor_initialize 001B                   gpio_pin_write_logic@ret 0016  
                ?_lcd_4bit_send_char_data 001B                                 copy_data0 3134  
                 __end_of_ADC_ISR_HANDLER 30D0                     _lm35_res_1_Celsius_mv 009B  
                     _dc_motor_move_right 324E                      _ecu_layer_initialize 3472  
                      _RB7_pin_init_value 0067                                  __Hrparam 0000  
                              vfprintf@ap 0047                                  __Lrparam 0000  
                              vfprintf@fp 0043                  ?_ADC_GetConversionResult 0001  
                  lcd_4bit_set_cursor@lcd 001F                                ?_vfpfcnvrt 0035  
                  lcd_4bit_set_cursor@row 0021                     _lm35_res_2_Celsius_mv 0099  
                    ?_dc_motor_move_right 0017               __end_of_gpio_pin_initialize 2DE0  
                      __end_of_btn_values 1011                                sprintf@fmt 004D  
                                ___xxtofl 1A90                     ??_dc_motor_initialize 001D  
                                __ptext10 238C                                  __ptext11 1C44  
                                __ptext20 34C2                                  __ptext12 2E68  
                                __ptext21 3472                                  __ptext13 32DA  
                                __ptext30 29DA                                  __ptext22 25BE  
                                __ptext14 284C                                  __ptext31 3022  
                                __ptext23 2F54                                  __ptext15 34F0  
                                __ptext40 2774                                  __ptext32 2FC6  
                                __ptext24 2DE0                                  __ptext16 331E  
                                __ptext33 1A90                                  __ptext25 316E  
                                __ptext17 2C04                                  __ptext50 307A  
                                __ptext42 34D4                                  __ptext34 24B8  
                                __ptext26 335E                                  __ptext18 2916  
                                __ptext51 269A                                  __ptext43 34D8  
                                __ptext35 1034                                  __ptext27 2D56  
                                __ptext19 1F6A                                  __ptext52 0000  
                                __ptext44 34DC                                  __ptext36 145E  
                                __ptext28 2242                                  __ptext45 34E0  
                                __ptext37 339C                                  __ptext29 20E0  
                                __ptext46 34E4                                  __ptext38 349E  
                                __ptext47 34E8                                  __ptext39 33DA  
                                __ptext48 34EC                                  __ptext49 3414  
         configure_voltage_reference@_adc 000D                    dc_motor_move_right@ret 0019  
                   ?_ecu_layer_initialize 0001          __end_of_convert_uint16_to_string 2B54  
                                isa$xinst 0000                                  int$flags 0073  
                                _vfprintf 30D0                     ??_dc_motor_move_right 0019  
                          _lcd_send_4bits 2DE0     __end_of_ADC_StartConversion_Interrupt 33DA  
           _ADC_StartConversion_Interrupt 339C                        _dc_motor_move_left 3294  
             __end_of_lcd_4bit_initialize 269A                      _RB6_InterruptHandler 009F  
            __end_of_gpio_pin_write_logic 238C                       ?_dc_motor_move_left 0017  
                                intlevel2 0000                                 sprintf@ap 0053  
                        ?_ADC_ISR_HANDLER 0001               __end_of_ADC_StartConversion 34C2  
          lcd_4bit_send_enable_signal@lcd 0017            lcd_4bit_send_enable_signal@ret 0019  
         __end_of_ADC_GetConversionResult 2774                      ??_dc_motor_move_left 0019  
                  __end_of_lcd_send_4bits 2E68              dc_motor_move_right@_dc_motor 0017  
                             ??_vfpfcnvrt 003B               __end_of_lcd_4bit_set_cursor 2C04  
                                sprintf@f 0055                                  sprintf@s 004B  
                          _port_registers 00BF                    ??_ecu_layer_initialize 0025  
             lcd_4bit_send_char_data@data 001D                         ?_InterruptManager 0001  
                   __end_of_dc_motor_stop 324E                ??_lcd_4bit_send_string_pos 002B  
                  lcd_4bit_initialize@lcd 001F                    lcd_4bit_initialize@ret 0023  
