

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 03 23:33:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 23/03/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4620 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataBANK0
   106   002F38                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _port_registers
   110   002F38  80                 	db	128
   111   002F39  0F                 	db	15
   112   002F3A  81                 	db	129
   113   002F3B  0F                 	db	15
   114   002F3C  82                 	db	130
   115   002F3D  0F                 	db	15
   116   002F3E  83                 	db	131
   117   002F3F  0F                 	db	15
   118   002F40  84                 	db	132
   119   002F41  0F                 	db	15
   120                           
   121                           ;initializer for _lat_registers
   122   002F42  89                 	db	137
   123   002F43  0F                 	db	15
   124   002F44  8A                 	db	138
   125   002F45  0F                 	db	15
   126   002F46  8B                 	db	139
   127   002F47  0F                 	db	15
   128   002F48  8C                 	db	140
   129   002F49  0F                 	db	15
   130   002F4A  8D                 	db	141
   131   002F4B  0F                 	db	15
   132                           
   133                           ;initializer for _tris_registers
   134   002F4C  92                 	db	146
   135   002F4D  0F                 	db	15
   136   002F4E  93                 	db	147
   137   002F4F  0F                 	db	15
   138   002F50  94                 	db	148
   139   002F51  0F                 	db	15
   140   002F52  95                 	db	149
   141   002F53  0F                 	db	15
   142   002F54  96                 	db	150
   143   002F55  0F                 	db	15
   144                           
   145                           ;initializer for _lcd1
   146   002F56  02                 	db	2
   147   002F57  0A                 	db	10
   148   002F58  12                 	db	18
   149   002F59  1A                 	db	26
   150   002F5A  22                 	db	34
   151   002F5B  2A                 	db	42
   152                           
   153                           ;initializer for _adc_1
   154   002F5C  05                 	db	5
   155   002F5D  05                 	db	5
   156   002F5E  00                 	db	0
   157   002F5F  02                 	db	2
   158                           
   159                           ;initializer for _dc_motor_2
   160   002F60  13                 	db	19
   161   002F61  1B                 	db	27
   162                           
   163                           ;initializer for _dc_motor_1
   164   002F62  03                 	db	3
   165   002F63  0B                 	db	11
   166                           
   167                           	psect	smallconst
   168   001000                     __psmallconst:
   169                           	callstack 0
   170   001000  00                 	db	0
   171   001001                     _btn_values:
   172                           	callstack 0
   173   001001  37                 	db	55
   174   001002  38                 	db	56
   175   001003  39                 	db	57
   176   001004  2F                 	db	47
   177   001005  34                 	db	52
   178   001006  35                 	db	53
   179   001007  36                 	db	54
   180   001008  2A                 	db	42
   181   001009  31                 	db	49
   182   00100A  32                 	db	50
   183   00100B  33                 	db	51
   184   00100C  2D                 	db	45
   185   00100D  23                 	db	35
   186   00100E  30                 	db	48
   187   00100F  3D                 	db	61
   188   001010  2B                 	db	43
   189   001011                     __end_of_btn_values:
   190                           	callstack 0
   191   001011                     STR_4:
   192   001011  20                 	db	32
   193   001012  4C                 	db	76	;'L'
   194   001013  4D                 	db	77	;'M'
   195   001014  33                 	db	51	;'3'
   196   001015  35                 	db	53	;'5'
   197   001016  20                 	db	32
   198   001017  54                 	db	84	;'T'
   199   001018  65                 	db	101	;'e'
   200   001019  73                 	db	115	;'s'
   201   00101A  74                 	db	116	;'t'
   202   00101B  00                 	db	0
   203   00101C                     STR_5:
   204   00101C  20                 	db	32
   205   00101D  54                 	db	84	;'T'
   206   00101E  65                 	db	101	;'e'
   207   00101F  6D                 	db	109	;'m'
   208   001020  70                 	db	112	;'p'
   209   001021  31                 	db	49	;'1'
   210   001022  20                 	db	32
   211   001023  3A                 	db	58	;':'
   212   001024  20                 	db	32
   213   001025  00                 	db	0
   214   001026                     STR_7:
   215   001026  20                 	db	32
   216   001027  54                 	db	84	;'T'
   217   001028  65                 	db	101	;'e'
   218   001029  6D                 	db	109	;'m'
   219   00102A  70                 	db	112	;'p'
   220   00102B  32                 	db	50	;'2'
   221   00102C  20                 	db	32
   222   00102D  3A                 	db	58	;':'
   223   00102E  20                 	db	32
   224   00102F  00                 	db	0
   225   001030                     STR_1:
   226   001030  25                 	db	37
   227   001031  69                 	db	105	;'i'
   228   001032  00                 	db	0
   229   001033  00                 	db	0	; dummy byte at the end
   230   000000                     
   231                           	psect	nvCOMRAM
   232   000076                     __pnvCOMRAM:
   233                           	callstack 0
   234   000076                     _ret:
   235                           	callstack 0
   236   000076                     	ds	1
   237   000000                     _ADRESL	set	4035
   238   000000                     _ADRESH	set	4036
   239                           
   240                           ; #config settings
   241                           
   242                           	psect	cinit
   243   002E7C                     __pcinit:
   244                           	callstack 0
   245   002E7C                     start_initialization:
   246                           	callstack 0
   247   002E7C                     __initialization:
   248                           	callstack 0
   249                           
   250                           ; Initialize objects allocated to BANK0 (44 bytes)
   251                           ; load TBLPTR registers with __pidataBANK0
   252   002E7C  0E38               	movlw	low __pidataBANK0
   253   002E7E  6EF6               	movwf	tblptrl,c
   254   002E80  0E2F               	movlw	high __pidataBANK0
   255   002E82  6EF7               	movwf	tblptrh,c
   256   002E84  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   257   002E86  6EF8               	movwf	tblptru,c
   258   002E88  EE00  F0D1         	lfsr	0,__pdataBANK0
   259   002E8C  EE10 F02C          	lfsr	1,44
   260   002E90                     copy_data0:
   261   002E90  0009               	tblrd		*+
   262   002E92  CFF5 FFEE          	movff	tablat,postinc0
   263   002E96  50E5               	movf	postdec1,w,c
   264   002E98  50E1               	movf	fsr1l,w,c
   265   002E9A  E1FA               	bnz	copy_data0
   266                           
   267                           ; Clear objects allocated to BANK0 (81 bytes)
   268   002E9C  EE00  F080         	lfsr	0,__pbssBANK0
   269   002EA0  0E51               	movlw	81
   270   002EA2                     clear_0:
   271   002EA2  6AEE               	clrf	postinc0,c
   272   002EA4  06E8               	decf	wreg,f,c
   273   002EA6  E1FD               	bnz	clear_0
   274                           
   275                           ; Clear objects allocated to COMRAM (24 bytes)
   276   002EA8  EE00  F05E         	lfsr	0,__pbssCOMRAM
   277   002EAC  0E18               	movlw	24
   278   002EAE                     clear_1:
   279   002EAE  6AEE               	clrf	postinc0,c
   280   002EB0  06E8               	decf	wreg,f,c
   281   002EB2  E1FD               	bnz	clear_1
   282   002EB4                     end_of_initialization:
   283                           	callstack 0
   284   002EB4                     __end_of__initialization:
   285                           	callstack 0
   286   002EB4  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   287   002EB6  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   288   002EB8  0100               	movlb	0
   289   002EBA  EFFC  F00B         	goto	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMRAM
   292   00005E                     __pbssCOMRAM:
   293                           	callstack 0
   294   00005E                     _RB7_InterruptHandler:
   295                           	callstack 0
   296   00005E                     	ds	2
   297   000060                     _RB6_InterruptHandler:
   298                           	callstack 0
   299   000060                     	ds	2
   300   000062                     _RB5_InterruptHandler:
   301                           	callstack 0
   302   000062                     	ds	2
   303   000064                     _RB4_InterruptHandler:
   304                           	callstack 0
   305   000064                     	ds	2
   306   000066                     _INT2_InterruptHandler:
   307                           	callstack 0
   308   000066                     	ds	2
   309   000068                     _INT1_InterruptHandler:
   310                           	callstack 0
   311   000068                     	ds	2
   312   00006A                     _flags:
   313                           	callstack 0
   314   00006A                     	ds	1
   315   00006B                     _RB7_pin_init_value:
   316                           	callstack 0
   317   00006B                     	ds	1
   318   00006C                     _RB6_pin_init_value:
   319                           	callstack 0
   320   00006C                     	ds	1
   321   00006D                     _RB5_pin_init_value:
   322                           	callstack 0
   323   00006D                     	ds	1
   324   00006E                     _RB4_pin_init_value:
   325                           	callstack 0
   326   00006E                     	ds	1
   327   00006F                     relay_turn_off@F3221:
   328                           	callstack 0
   329   00006F                     	ds	1
   330   000070                     relay_turn_on@F3216:
   331                           	callstack 0
   332   000070                     	ds	1
   333   000071                     relay_initialize@F3211:
   334                           	callstack 0
   335   000071                     	ds	1
   336   000072                     led_toggle@F3232:
   337                           	callstack 0
   338   000072                     	ds	1
   339   000073                     led_turn_off@F3227:
   340                           	callstack 0
   341   000073                     	ds	1
   342   000074                     led_turn_on@F3222:
   343                           	callstack 0
   344   000074                     	ds	1
   345   000075                     led_initialize@F3217:
   346                           	callstack 0
   347   000075                     	ds	1
   348                           
   349                           	psect	bssBANK0
   350   000080                     __pbssBANK0:
   351                           	callstack 0
   352   000080                     	ds	11
   353   00008B                     	ds	6
   354   000091                     	ds	4
   355   000095                     _width:
   356                           	callstack 0
   357   000095                     	ds	2
   358   000097                     _prec:
   359                           	callstack 0
   360   000097                     	ds	2
   361   000099                     _lm35_res_2_Celsius_mv:
   362                           	callstack 0
   363   000099                     	ds	2
   364   00009B                     _lm35_res_1_Celsius_mv:
   365                           	callstack 0
   366   00009B                     	ds	2
   367   00009D                     _INT0_InterruptHandler:
   368                           	callstack 0
   369   00009D                     	ds	2
   370   00009F                     _dbuf:
   371                           	callstack 0
   372   00009F                     	ds	32
   373   0000BF                     _lm35_res_2_txt:
   374                           	callstack 0
   375   0000BF                     	ds	7
   376   0000C6                     _lm35_res_1_txt:
   377                           	callstack 0
   378   0000C6                     	ds	7
   379   0000CD                     _lm35_res_2:
   380                           	callstack 0
   381   0000CD                     	ds	2
   382   0000CF                     _lm35_res_1:
   383                           	callstack 0
   384   0000CF                     	ds	2
   385                           
   386                           	psect	dataBANK0
   387   0000D1                     __pdataBANK0:
   388                           	callstack 0
   389   0000D1                     _port_registers:
   390                           	callstack 0
   391   0000D1                     	ds	10
   392   0000DB                     _lat_registers:
   393                           	callstack 0
   394   0000DB                     	ds	10
   395   0000E5                     _tris_registers:
   396                           	callstack 0
   397   0000E5                     	ds	10
   398   0000EF                     _lcd1:
   399                           	callstack 0
   400   0000EF                     	ds	6
   401   0000F5                     _adc_1:
   402                           	callstack 0
   403   0000F5                     	ds	4
   404   0000F9                     _dc_motor_2:
   405                           	callstack 0
   406   0000F9                     	ds	2
   407   0000FB                     _dc_motor_1:
   408                           	callstack 0
   409   0000FB                     	ds	2
   410                           
   411                           	psect	cstackBANK1
   412   000100                     __pcstackBANK1:
   413                           	callstack 0
   414   000100                     convert_uint16_to_string@Temp_str:
   415                           	callstack 0
   416                           
   417                           ; 6 bytes @ 0x0
   418   000100                     	ds	6
   419   000106                     convert_uint16_to_string@ret:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x6
   423   000106                     	ds	1
   424   000107                     convert_uint16_to_string@cnt:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x7
   428   000107                     	ds	1
   429                           
   430                           	psect	cstackCOMRAM
   431   000001                     __pcstackCOMRAM:
   432                           	callstack 0
   433   000001                     ??_InterruptManagerLow:
   434   000001                     
   435                           ; 1 bytes @ 0x0
   436   000001                     	ds	3
   437   000004                     ??_adc_input_channel_port_configure:
   438   000004                     ?___awdiv:
   439                           	callstack 0
   440   000004                     ?___awmod:
   441                           	callstack 0
   442   000004                     ?___xxtofl:
   443                           	callstack 0
   444   000004                     gpio_pin_write_logic@pin_config:
   445                           	callstack 0
   446   000004                     ADC_StartConversion@_adc:
   447                           	callstack 0
   448   000004                     ADC_GetConversionResult@_adc:
   449                           	callstack 0
   450   000004                     ___awdiv@dividend:
   451                           	callstack 0
   452   000004                     ___awmod@dividend:
   453                           	callstack 0
   454   000004                     memset@dest:
   455                           	callstack 0
   456   000004                     fputc@c:
   457                           	callstack 0
   458   000004                     ___xxtofl@val:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x3
   462   000004                     	ds	2
   463   000006                     gpio_pin_write_logic@logic:
   464                           	callstack 0
   465   000006                     ADC_StartConversion@ret:
   466                           	callstack 0
   467   000006                     adc_input_channel_port_configure@channel:
   468                           	callstack 0
   469   000006                     ADC_GetConversionResult@conversion_result:
   470                           	callstack 0
   471   000006                     ___awdiv@divisor:
   472                           	callstack 0
   473   000006                     ___awmod@divisor:
   474                           	callstack 0
   475   000006                     memset@c:
   476                           	callstack 0
   477   000006                     fputc@fp:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x5
   481   000006                     	ds	1
   482   000007                     ??_gpio_pin_write_logic:
   483   000007                     ADC_SelectChannel@_adc:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x6
   487   000007                     	ds	1
   488   000008                     ??_fputc:
   489   000008                     ??_ADC_GetConversionResult:
   490   000008                     ??___xxtofl:
   491   000008                     ___awdiv@counter:
   492                           	callstack 0
   493   000008                     ___awmod@counter:
   494                           	callstack 0
   495   000008                     memset@n:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x7
   499   000008                     	ds	1
   500   000009                     ADC_SelectChannel@channel:
   501                           	callstack 0
   502   000009                     ___awdiv@sign:
   503                           	callstack 0
   504   000009                     ___awmod@sign:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x8
   508   000009                     	ds	1
   509   00000A                     ??_memset:
   510   00000A                     ??_ADC_SelectChannel:
   511   00000A                     ?_abs:
   512                           	callstack 0
   513   00000A                     ___awdiv@quotient:
   514                           	callstack 0
   515   00000A                     abs@a:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x9
   519   00000A                     	ds	1
   520   00000B                     ADC_SelectChannel@ret:
   521                           	callstack 0
   522   00000B                     ADC_GetConversionResult@ret:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0xA
   526   00000B                     	ds	1
   527   00000C                     ??_abs:
   528   00000C                     ___xxtofl@sign:
   529                           	callstack 0
   530   00000C                     ADC_GetConversion_Blocking@_adc:
   531                           	callstack 0
   532   00000C                     memset@k:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xB
   536   00000C                     	ds	1
   537   00000D                     gpio_pin_write_logic@ret:
   538                           	callstack 0
   539   00000D                     ___xxtofl@exp:
   540                           	callstack 0
   541   00000D                     fputs@s:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xC
   545   00000D                     	ds	1
   546   00000E                     ADC_GetConversion_Blocking@channel:
   547                           	callstack 0
   548   00000E                     lcd_send_4bits@lcd:
   549                           	callstack 0
   550   00000E                     lcd_4bit_send_enable_signal@lcd:
   551                           	callstack 0
   552   00000E                     dc_motor_move_right@_dc_motor:
   553                           	callstack 0
   554   00000E                     dc_motor_move_left@_dc_motor:
   555                           	callstack 0
   556   00000E                     dc_motor_stop@_dc_motor:
   557                           	callstack 0
   558   00000E                     memset@s:
   559                           	callstack 0
   560   00000E                     ___xxtofl@arg:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0xD
   564   00000E                     	ds	1
   565   00000F                     ADC_GetConversion_Blocking@conversion_result:
   566                           	callstack 0
   567   00000F                     fputs@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xE
   571   00000F                     	ds	1
   572   000010                     lcd_send_4bits@_data_command:
   573                           	callstack 0
   574   000010                     lcd_4bit_send_enable_signal@ret:
   575                           	callstack 0
   576   000010                     dc_motor_move_right@ret:
   577                           	callstack 0
   578   000010                     dc_motor_move_left@ret:
   579                           	callstack 0
   580   000010                     dc_motor_stop@ret:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0xF
   584   000010                     	ds	1
   585   000011                     lcd_send_4bits@ret:
   586                           	callstack 0
   587   000011                     ADC_GetConversion_Blocking@ret:
   588                           	callstack 0
   589   000011                     fputs@c:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x10
   593   000011                     	ds	1
   594   000012                     ?___flmul:
   595                           	callstack 0
   596   000012                     lcd_4bit_send_command@lcd:
   597                           	callstack 0
   598   000012                     lcd_4bit_send_char_data@lcd:
   599                           	callstack 0
   600   000012                     fputs@i:
   601                           	callstack 0
   602   000012                     ___flmul@b:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x11
   606   000012                     	ds	2
   607   000014                     lcd_4bit_send_command@command:
   608                           	callstack 0
   609   000014                     lcd_4bit_send_char_data@data:
   610                           	callstack 0
   611   000014                     pad@fp:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x13
   615   000014                     	ds	1
   616   000015                     lcd_4bit_send_command@ret:
   617                           	callstack 0
   618   000015                     lcd_4bit_send_char_data@ret:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x14
   622   000015                     	ds	1
   623   000016                     lcd_4bit_set_cursor@lcd:
   624                           	callstack 0
   625   000016                     pad@buf:
   626                           	callstack 0
   627   000016                     ___flmul@a:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x15
   631   000016                     	ds	2
   632   000018                     lcd_4bit_set_cursor@row:
   633                           	callstack 0
   634   000018                     pad@p:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x17
   638   000018                     	ds	1
   639   000019                     lcd_4bit_set_cursor@column:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x18
   643   000019                     	ds	1
   644   00001A                     ??_lcd_4bit_set_cursor:
   645   00001A                     ??___flmul:
   646   00001A                     ??_pad:
   647                           
   648                           ; 1 bytes @ 0x19
   649   00001A                     	ds	1
   650   00001B                     pad@i:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x1A
   654   00001B                     	ds	1
   655   00001C                     lcd_4bit_send_string_pos@lcd:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x1B
   659   00001C                     	ds	1
   660   00001D                     pad@w:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x1C
   664   00001D                     	ds	1
   665   00001E                     lcd_4bit_send_string_pos@row:
   666                           	callstack 0
   667   00001E                     ___flmul@sign:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x1D
   671   00001E                     	ds	1
   672   00001F                     lcd_4bit_send_string_pos@column:
   673                           	callstack 0
   674   00001F                     dtoa@fp:
   675                           	callstack 0
   676   00001F                     ___flmul@grs:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x1E
   680   00001F                     	ds	1
   681   000020                     lcd_4bit_send_string_pos@str:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x1F
   685   000020                     	ds	1
   686   000021                     dtoa@d:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x20
   690   000021                     	ds	1
   691   000022                     lcd_4bit_send_string_pos@ret:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x21
   695   000022                     	ds	1
   696   000023                     ___flmul@aexp:
   697                           	callstack 0
   698   000023                     _dtoa$2141:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x22
   702   000023                     	ds	1
   703   000024                     ___flmul@bexp:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x23
   707   000024                     	ds	1
   708   000025                     dtoa@p:
   709                           	callstack 0
   710   000025                     ___flmul@prod:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x24
   714   000025                     	ds	2
   715   000027                     dtoa@w:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x26
   719   000027                     	ds	2
   720   000029                     dtoa@s:
   721                           	callstack 0
   722   000029                     ___flmul@temp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x28
   726   000029                     	ds	1
   727   00002A                     dtoa@i:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x29
   731   00002A                     	ds	1
   732   00002B                     ?___fldiv:
   733                           	callstack 0
   734   00002B                     ___fldiv@b:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x2A
   738   00002B                     	ds	1
   739   00002C                     vfpfcnvrt@fp:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x2B
   743   00002C                     	ds	2
   744   00002E                     vfpfcnvrt@fmt:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x2D
   748   00002E                     	ds	1
   749   00002F                     ___fldiv@a:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x2E
   753   00002F                     	ds	1
   754   000030                     vfpfcnvrt@ap:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x2F
   758   000030                     	ds	2
   759   000032                     ??_vfpfcnvrt:
   760                           
   761                           ; 1 bytes @ 0x31
   762   000032                     	ds	1
   763   000033                     ??___fldiv:
   764                           
   765                           ; 1 bytes @ 0x32
   766   000033                     	ds	1
   767   000034                     vfpfcnvrt@convarg:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x33
   771   000034                     	ds	3
   772   000037                     ___fldiv@rem:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x36
   776   000037                     	ds	1
   777   000038                     vfpfcnvrt@cp:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x37
   781   000038                     	ds	2
   782   00003A                     ?_vfprintf:
   783                           	callstack 0
   784   00003A                     vfprintf@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x39
   788   00003A                     	ds	1
   789   00003B                     ___fldiv@sign:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x3A
   793   00003B                     	ds	1
   794   00003C                     ___fldiv@new_exp:
   795                           	callstack 0
   796   00003C                     vfprintf@fmt:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x3B
   800   00003C                     	ds	2
   801   00003E                     vfprintf@ap:
   802                           	callstack 0
   803   00003E                     ___fldiv@grs:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x3D
   807   00003E                     	ds	2
   808   000040                     vfprintf@cfmt:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x3F
   812   000040                     	ds	2
   813   000042                     ?_sprintf:
   814                           	callstack 0
   815   000042                     ___fldiv@bexp:
   816                           	callstack 0
   817   000042                     sprintf@s:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x41
   821   000042                     	ds	1
   822   000043                     ___fldiv@aexp:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x42
   826   000043                     	ds	1
   827   000044                     ?___fltol:
   828                           	callstack 0
   829   000044                     sprintf@fmt:
   830                           	callstack 0
   831   000044                     ___fltol@f1:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x43
   835   000044                     	ds	4
   836   000048                     ??___fltol:
   837                           
   838                           ; 1 bytes @ 0x47
   839   000048                     	ds	2
   840   00004A                     sprintf@ap:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x49
   844   00004A                     	ds	2
   845   00004C                     ___fltol@sign1:
   846                           	callstack 0
   847   00004C                     sprintf@f:
   848                           	callstack 0
   849                           
   850                           ; 12 bytes @ 0x4B
   851   00004C                     	ds	1
   852   00004D                     ___fltol@exp1:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x4C
   856   00004D                     	ds	11
   857   000058                     convert_uint16_to_string@value:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x57
   861   000058                     	ds	2
   862   00005A                     convert_uint16_to_string@str:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x59
   866   00005A                     	ds	2
   867   00005C                     ??_main:
   868                           
   869                           ; 1 bytes @ 0x5B
   870   00005C                     	ds	2
   871                           
   872 ;;
   873 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   874 ;;
   875 ;; *************** function _main *****************
   876 ;; Defined at:
   877 ;;		line 15 in file "application.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2  889[None  ] int 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels required when called: 13
   897 ;; This function calls:
   898 ;;		_ADC_GetConversion_Blocking
   899 ;;		___fldiv
   900 ;;		___flmul
   901 ;;		___fltol
   902 ;;		___xxtofl
   903 ;;		_convert_uint16_to_string
   904 ;;		_dc_motor_move_left
   905 ;;		_dc_motor_move_right
   906 ;;		_dc_motor_stop
   907 ;;		_lcd_4bit_send_command
   908 ;;		_lcd_4bit_send_string_pos
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text0
   915   0017F8                     __ptext0:
   916                           	callstack 0
   917   0017F8                     _main:
   918                           	callstack 18
   919   0017F8                     
   920                           ;application.c: 17:     ret = lcd_4bit_send_string_pos(&lcd1,1,7," LM35 Test");
   921   0017F8  0EEF               	movlw	low _lcd1
   922   0017FA  6E1C               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   923   0017FC  0E00               	movlw	high _lcd1
   924   0017FE  6E1D               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   925   001800  0E01               	movlw	1
   926   001802  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
   927   001804  0E07               	movlw	7
   928   001806  6E1F               	movwf	lcd_4bit_send_string_pos@column^0,c
   929   001808  0E11               	movlw	low STR_4
   930   00180A  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
   931   00180C  0E10               	movlw	high STR_4
   932   00180E  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   933   001810  ECC0  F014         	call	_lcd_4bit_send_string_pos	;wreg free
   934   001814  6E76               	movwf	_ret^0,c
   935   001816                     
   936                           ;application.c: 18:     _delay((unsigned long)((1400)*(4000000/4000.0)));
   937   001816  0E08               	movlw	8
   938   001818  6E5D               	movwf	(??_main+1)^0,c
   939   00181A  0E1B               	movlw	27
   940   00181C  6E5C               	movwf	??_main^0,c
   941   00181E  0E27               	movlw	39
   942   001820                     u6247:
   943   001820  2EE8               	decfsz	wreg,f,c
   944   001822  D7FE               	bra	u6247
   945   001824  2E5C               	decfsz	??_main^0,f,c
   946   001826  D7FC               	bra	u6247
   947   001828  2E5D               	decfsz	(??_main+1)^0,f,c
   948   00182A  D7FA               	bra	u6247
   949   00182C  F000               	nop	
   950   00182E                     
   951                           ;application.c: 19:     ret&= lcd_4bit_send_command(&lcd1,0X01);
   952   00182E  0EEF               	movlw	low _lcd1
   953   001830  6E12               	movwf	lcd_4bit_send_command@lcd^0,c
   954   001832  0E00               	movlw	high _lcd1
   955   001834  6E13               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
   956   001836  0E01               	movlw	1
   957   001838  6E14               	movwf	lcd_4bit_send_command@command^0,c
   958   00183A  ECCC  F015         	call	_lcd_4bit_send_command	;wreg free
   959   00183E  1676               	andwf	_ret^0,f,c
   960   001840                     
   961                           ;application.c: 20:     ret &= lcd_4bit_send_string_pos(&lcd1,1,1," Temp1 : ");
   962   001840  0EEF               	movlw	low _lcd1
   963   001842  6E1C               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   964   001844  0E00               	movlw	high _lcd1
   965   001846  6E1D               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   966   001848  0E01               	movlw	1
   967   00184A  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
   968   00184C  0E01               	movlw	1
   969   00184E  6E1F               	movwf	lcd_4bit_send_string_pos@column^0,c
   970   001850  0E1C               	movlw	low STR_5
   971   001852  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
   972   001854  0E10               	movlw	high STR_5
   973   001856  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   974   001858  ECC0  F014         	call	_lcd_4bit_send_string_pos	;wreg free
   975   00185C  1676               	andwf	_ret^0,f,c
   976   00185E                     
   977                           ;application.c: 21:     ret &= lcd_4bit_send_string_pos(&lcd1,2,1," Temp2 : ");
   978   00185E  0EEF               	movlw	low _lcd1
   979   001860  6E1C               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   980   001862  0E00               	movlw	high _lcd1
   981   001864  6E1D               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   982   001866  0E02               	movlw	2
   983   001868  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
   984   00186A  0E01               	movlw	1
   985   00186C  6E1F               	movwf	lcd_4bit_send_string_pos@column^0,c
   986   00186E  0E26               	movlw	low STR_7
   987   001870  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
   988   001872  0E10               	movlw	high STR_7
   989   001874  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   990   001876  ECC0  F014         	call	_lcd_4bit_send_string_pos	;wreg free
   991   00187A  1676               	andwf	_ret^0,f,c
   992   00187C                     l6546:
   993                           
   994                           ;application.c: 23:     {;application.c: 24:        ret &= ADC_GetConversion_Blocking(&a
      +                          dc_1,ADC_CHANNEL_AN0 , &lm35_res_1);
   995   00187C  0EF5               	movlw	low _adc_1
   996   00187E  6E0C               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   997   001880  0E00               	movlw	high _adc_1
   998   001882  6E0D               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   999   001884  0E00               	movlw	0
  1000   001886  6E0E               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1001   001888  0ECF               	movlw	low _lm35_res_1
  1002   00188A  6E0F               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1003   00188C  0E00               	movlw	high _lm35_res_1
  1004   00188E  6E10               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1005   001890  EC92  F015         	call	_ADC_GetConversion_Blocking	;wreg free
  1006   001894  1676               	andwf	_ret^0,f,c
  1007   001896                     
  1008                           ;application.c: 25:        ret &= ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN1 , &l
      +                          m35_res_2);
  1009   001896  0EF5               	movlw	low _adc_1
  1010   001898  6E0C               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1011   00189A  0E00               	movlw	high _adc_1
  1012   00189C  6E0D               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1013   00189E  0E01               	movlw	1
  1014   0018A0  6E0E               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1015   0018A2  0ECD               	movlw	low _lm35_res_2
  1016   0018A4  6E0F               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1017   0018A6  0E00               	movlw	high _lm35_res_2
  1018   0018A8  6E10               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1019   0018AA  EC92  F015         	call	_ADC_GetConversion_Blocking	;wreg free
  1020   0018AE  1676               	andwf	_ret^0,f,c
  1021   0018B0                     
  1022                           ;application.c: 26:        lm35_res_1_Celsius_mv = (lm35_res_1 *4.88f)/10;
  1023   0018B0  0E00               	movlw	0
  1024   0018B2  6E2F               	movwf	___fldiv@a^0,c
  1025   0018B4  0E00               	movlw	0
  1026   0018B6  6E30               	movwf	(___fldiv@a+1)^0,c
  1027   0018B8  0E20               	movlw	32
  1028   0018BA  6E31               	movwf	(___fldiv@a+2)^0,c
  1029   0018BC  0E41               	movlw	65
  1030   0018BE  6E32               	movwf	(___fldiv@a+3)^0,c
  1031   0018C0  0EF6               	movlw	246
  1032   0018C2  6E16               	movwf	___flmul@a^0,c
  1033   0018C4  0E28               	movlw	40
  1034   0018C6  6E17               	movwf	(___flmul@a+1)^0,c
  1035   0018C8  0E9C               	movlw	156
  1036   0018CA  6E18               	movwf	(___flmul@a+2)^0,c
  1037   0018CC  0E40               	movlw	64
  1038   0018CE  6E19               	movwf	(___flmul@a+3)^0,c
  1039   0018D0  C0CF  F004         	movff	_lm35_res_1,___xxtofl@val
  1040   0018D4  C0D0  F005         	movff	_lm35_res_1+1,___xxtofl@val+1
  1041   0018D8  6A06               	clrf	(___xxtofl@val+2)^0,c
  1042   0018DA  6A07               	clrf	(___xxtofl@val+3)^0,c
  1043   0018DC  0E00               	movlw	0
  1044   0018DE  EC3E  F00D         	call	___xxtofl
  1045   0018E2  C004  F012         	movff	?___xxtofl,___flmul@b
  1046   0018E6  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1047   0018EA  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1048   0018EE  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1049   0018F2  EC1A  F008         	call	___flmul	;wreg free
  1050   0018F6  C012  F02B         	movff	?___flmul,___fldiv@b
  1051   0018FA  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
  1052   0018FE  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
  1053   001902  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
  1054   001906  EC2F  F00A         	call	___fldiv	;wreg free
  1055   00190A  C02B  F044         	movff	?___fldiv,___fltol@f1
  1056   00190E  C02C  F045         	movff	?___fldiv+1,___fltol@f1+1
  1057   001912  C02D  F046         	movff	?___fldiv+2,___fltol@f1+2
  1058   001916  C02E  F047         	movff	?___fldiv+3,___fltol@f1+3
  1059   00191A  EC90  F011         	call	___fltol	;wreg free
  1060   00191E  C044  F09B         	movff	?___fltol,_lm35_res_1_Celsius_mv
  1061   001922  C045  F09C         	movff	?___fltol+1,_lm35_res_1_Celsius_mv+1
  1062   001926                     
  1063                           ;application.c: 27:        lm35_res_2_Celsius_mv = (lm35_res_2 *4.88f)/10;
  1064   001926  0E00               	movlw	0
  1065   001928  6E2F               	movwf	___fldiv@a^0,c
  1066   00192A  0E00               	movlw	0
  1067   00192C  6E30               	movwf	(___fldiv@a+1)^0,c
  1068   00192E  0E20               	movlw	32
  1069   001930  6E31               	movwf	(___fldiv@a+2)^0,c
  1070   001932  0E41               	movlw	65
  1071   001934  6E32               	movwf	(___fldiv@a+3)^0,c
  1072   001936  0EF6               	movlw	246
  1073   001938  6E16               	movwf	___flmul@a^0,c
  1074   00193A  0E28               	movlw	40
  1075   00193C  6E17               	movwf	(___flmul@a+1)^0,c
  1076   00193E  0E9C               	movlw	156
  1077   001940  6E18               	movwf	(___flmul@a+2)^0,c
  1078   001942  0E40               	movlw	64
  1079   001944  6E19               	movwf	(___flmul@a+3)^0,c
  1080   001946  C0CD  F004         	movff	_lm35_res_2,___xxtofl@val
  1081   00194A  C0CE  F005         	movff	_lm35_res_2+1,___xxtofl@val+1
  1082   00194E  6A06               	clrf	(___xxtofl@val+2)^0,c
  1083   001950  6A07               	clrf	(___xxtofl@val+3)^0,c
  1084   001952  0E00               	movlw	0
  1085   001954  EC3E  F00D         	call	___xxtofl
  1086   001958  C004  F012         	movff	?___xxtofl,___flmul@b
  1087   00195C  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1088   001960  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1089   001964  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1090   001968  EC1A  F008         	call	___flmul	;wreg free
  1091   00196C  C012  F02B         	movff	?___flmul,___fldiv@b
  1092   001970  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
  1093   001974  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
  1094   001978  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
  1095   00197C  EC2F  F00A         	call	___fldiv	;wreg free
  1096   001980  C02B  F044         	movff	?___fldiv,___fltol@f1
  1097   001984  C02C  F045         	movff	?___fldiv+1,___fltol@f1+1
  1098   001988  C02D  F046         	movff	?___fldiv+2,___fltol@f1+2
  1099   00198C  C02E  F047         	movff	?___fldiv+3,___fltol@f1+3
  1100   001990  EC90  F011         	call	___fltol	;wreg free
  1101   001994  C044  F099         	movff	?___fltol,_lm35_res_2_Celsius_mv
  1102   001998  C045  F09A         	movff	?___fltol+1,_lm35_res_2_Celsius_mv+1
  1103   00199C                     
  1104                           ;application.c: 28:        ret&=convert_uint16_to_string(lm35_res_1_Celsius_mv , lm35_re
      +                          s_1_txt);
  1105   00199C  C09B  F058         	movff	_lm35_res_1_Celsius_mv,convert_uint16_to_string@value
  1106   0019A0  C09C  F059         	movff	_lm35_res_1_Celsius_mv+1,convert_uint16_to_string@value+1
  1107   0019A4  0EC6               	movlw	low _lm35_res_1_txt
  1108   0019A6  6E5A               	movwf	convert_uint16_to_string@str^0,c
  1109   0019A8  0E00               	movlw	high _lm35_res_1_txt
  1110   0019AA  6E5B               	movwf	(convert_uint16_to_string@str+1)^0,c
  1111   0019AC  ECB3  F013         	call	_convert_uint16_to_string	;wreg free
  1112   0019B0  1676               	andwf	_ret^0,f,c
  1113   0019B2                     
  1114                           ;application.c: 29:        ret&=convert_uint16_to_string(lm35_res_2_Celsius_mv , lm35_re
      +                          s_2_txt);
  1115   0019B2  C099  F058         	movff	_lm35_res_2_Celsius_mv,convert_uint16_to_string@value
  1116   0019B6  C09A  F059         	movff	_lm35_res_2_Celsius_mv+1,convert_uint16_to_string@value+1
  1117   0019BA  0EBF               	movlw	low _lm35_res_2_txt
  1118   0019BC  6E5A               	movwf	convert_uint16_to_string@str^0,c
  1119   0019BE  0E00               	movlw	high _lm35_res_2_txt
  1120   0019C0  6E5B               	movwf	(convert_uint16_to_string@str+1)^0,c
  1121   0019C2  ECB3  F013         	call	_convert_uint16_to_string	;wreg free
  1122   0019C6  1676               	andwf	_ret^0,f,c
  1123   0019C8                     
  1124                           ;application.c: 30:        ret &= lcd_4bit_send_string_pos(&lcd1,1,10,lm35_res_1_txt);
  1125   0019C8  0EEF               	movlw	low _lcd1
  1126   0019CA  6E1C               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1127   0019CC  0E00               	movlw	high _lcd1
  1128   0019CE  6E1D               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1129   0019D0  0E01               	movlw	1
  1130   0019D2  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
  1131   0019D4  0E0A               	movlw	10
  1132   0019D6  6E1F               	movwf	lcd_4bit_send_string_pos@column^0,c
  1133   0019D8  0EC6               	movlw	low _lm35_res_1_txt
  1134   0019DA  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
  1135   0019DC  0E00               	movlw	high _lm35_res_1_txt
  1136   0019DE  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1137   0019E0  ECC0  F014         	call	_lcd_4bit_send_string_pos	;wreg free
  1138   0019E4  1676               	andwf	_ret^0,f,c
  1139   0019E6                     
  1140                           ;application.c: 31:        ret &= lcd_4bit_send_string_pos(&lcd1,2,10,lm35_res_2_txt);
  1141   0019E6  0EEF               	movlw	low _lcd1
  1142   0019E8  6E1C               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1143   0019EA  0E00               	movlw	high _lcd1
  1144   0019EC  6E1D               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1145   0019EE  0E02               	movlw	2
  1146   0019F0  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
  1147   0019F2  0E0A               	movlw	10
  1148   0019F4  6E1F               	movwf	lcd_4bit_send_string_pos@column^0,c
  1149   0019F6  0EBF               	movlw	low _lm35_res_2_txt
  1150   0019F8  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
  1151   0019FA  0E00               	movlw	high _lm35_res_2_txt
  1152   0019FC  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1153   0019FE  ECC0  F014         	call	_lcd_4bit_send_string_pos	;wreg free
  1154   001A02  1676               	andwf	_ret^0,f,c
  1155   001A04                     
  1156                           ;application.c: 32:        if(lm35_res_1_Celsius_mv > 20){
  1157   001A04  0100               	movlb	0	; () banked
  1158   001A06  519C               	movf	(_lm35_res_1_Celsius_mv+1)& (0+255),w,b
  1159   001A08  E109               	bnz	u6220
  1160   001A0A  0E15               	movlw	21
  1161   001A0C  5D9B               	subwf	_lm35_res_1_Celsius_mv& (0+255),w,b
  1162   001A0E  A0D8               	btfss	status,0,c
  1163   001A10  EF0C  F00D         	goto	u6221
  1164   001A14  EF0E  F00D         	goto	u6220
  1165   001A18                     u6221:
  1166   001A18  EF17  F00D         	goto	l6566
  1167   001A1C                     u6220:
  1168   001A1C                     
  1169                           ; BSR set to: 0
  1170                           ;application.c: 33:            ret&= dc_motor_move_right(&dc_motor_1);
  1171   001A1C  0EFB               	movlw	low _dc_motor_1
  1172   001A1E  6E0E               	movwf	dc_motor_move_right@_dc_motor^0,c
  1173   001A20  0E00               	movlw	high _dc_motor_1
  1174   001A22  6E0F               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
  1175   001A24  ECD6  F016         	call	_dc_motor_move_right	;wreg free
  1176   001A28  1676               	andwf	_ret^0,f,c
  1177                           
  1178                           ;application.c: 34:        }
  1179   001A2A  EF1E  F00D         	goto	l6568
  1180   001A2E                     l6566:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;application.c: 36:             ret&= dc_motor_stop(&dc_motor_1);
  1184   001A2E  0EFB               	movlw	low _dc_motor_1
  1185   001A30  6E0E               	movwf	dc_motor_stop@_dc_motor^0,c
  1186   001A32  0E00               	movlw	high _dc_motor_1
  1187   001A34  6E0F               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1188   001A36  ECB3  F016         	call	_dc_motor_stop	;wreg free
  1189   001A3A  1676               	andwf	_ret^0,f,c
  1190   001A3C                     l6568:
  1191                           
  1192                           ;application.c: 38:        if(lm35_res_2_Celsius_mv > 25){
  1193   001A3C  0100               	movlb	0	; () banked
  1194   001A3E  519A               	movf	(_lm35_res_2_Celsius_mv+1)& (0+255),w,b
  1195   001A40  E109               	bnz	u6230
  1196   001A42  0E1A               	movlw	26
  1197   001A44  5D99               	subwf	_lm35_res_2_Celsius_mv& (0+255),w,b
  1198   001A46  A0D8               	btfss	status,0,c
  1199   001A48  EF28  F00D         	goto	u6231
  1200   001A4C  EF2A  F00D         	goto	u6230
  1201   001A50                     u6231:
  1202   001A50  EF33  F00D         	goto	l6572
  1203   001A54                     u6230:
  1204   001A54                     
  1205                           ; BSR set to: 0
  1206                           ;application.c: 39:            ret&= dc_motor_move_left(&dc_motor_2);
  1207   001A54  0EF9               	movlw	low _dc_motor_2
  1208   001A56  6E0E               	movwf	dc_motor_move_left@_dc_motor^0,c
  1209   001A58  0E00               	movlw	high _dc_motor_2
  1210   001A5A  6E0F               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  1211   001A5C  ECF9  F016         	call	_dc_motor_move_left	;wreg free
  1212   001A60  1676               	andwf	_ret^0,f,c
  1213                           
  1214                           ;application.c: 40:        }
  1215   001A62  EF3E  F00C         	goto	l6546
  1216   001A66                     l6572:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;application.c: 42:             ret&= dc_motor_stop(&dc_motor_2);
  1220   001A66  0EF9               	movlw	low _dc_motor_2
  1221   001A68  6E0E               	movwf	dc_motor_stop@_dc_motor^0,c
  1222   001A6A  0E00               	movlw	high _dc_motor_2
  1223   001A6C  6E0F               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1224   001A6E  ECB3  F016         	call	_dc_motor_stop	;wreg free
  1225   001A72  1676               	andwf	_ret^0,f,c
  1226   001A74  EF3E  F00C         	goto	l6546
  1227   001A78  EFC0  F000         	goto	start
  1228   001A7C                     __end_of_main:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _lcd_4bit_send_string_pos *****************
  1232 ;; Defined at:
  1233 ;;		line 122 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  lcd             2   27[COMRAM] PTR const struct .
  1236 ;;		 -> lcd1(6), 
  1237 ;;  row             1   29[COMRAM] unsigned char 
  1238 ;;  column          1   30[COMRAM] unsigned char 
  1239 ;;  str             2   31[COMRAM] PTR unsigned char 
  1240 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_8(10), STR_6(10), 
  1241 ;;		 -> STR_4(11), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  ret             1   33[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      unsigned char 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        7 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 8
  1260 ;; This function calls:
  1261 ;;		_lcd_4bit_send_char_data
  1262 ;;		_lcd_4bit_set_cursor
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text1
  1269   002980                     __ptext1:
  1270                           	callstack 0
  1271   002980                     _lcd_4bit_send_string_pos:
  1272                           	callstack 22
  1273   002980                     
  1274                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 123:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1275   002980  0E01               	movlw	1
  1276   002982  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1277   002984                     
  1278                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:     if(lcd==((void*)0)){
  1279   002984  501C               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1280   002986  101D               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1281   002988  A4D8               	btfss	status,2,c
  1282   00298A  EFC9  F014         	goto	u3931
  1283   00298E  EFCB  F014         	goto	u3930
  1284   002992                     u3931:
  1285   002992  EFCF  F014         	goto	l4810
  1286   002996                     u3930:
  1287   002996                     
  1288                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:         ret=(Std_ReturnType)0x00;
  1289   002996  0E00               	movlw	0
  1290   002998  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1291                           
  1292                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:     }
  1293   00299A  EF0F  F015         	goto	l4818
  1294   00299E                     l4810:
  1295                           
  1296                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:        lcd_4bit_set_cursor(lcd,row,column);
  1297   00299E  C01C  F016         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1298   0029A2  C01D  F017         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1299   0029A6  C01E  F018         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1300   0029AA  C01F  F019         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1301   0029AE  EC10  F014         	call	_lcd_4bit_set_cursor	;wreg free
  1302                           
  1303                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
  1304   0029B2  EFF6  F014         	goto	l4816
  1305   0029B6                     l4812:
  1306                           
  1307                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 130:             ret=lcd_4bit_send_char_data(lcd,*str+
      +                          +);
  1308   0029B6  C01C  F012         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1309   0029BA  C01D  F013         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1310   0029BE  C020  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1311   0029C2  C021  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1312   0029C6  0E00               	movlw	low (__smallconst shr (0+16))
  1313   0029C8  6EF8               	movwf	tblptru,c
  1314   0029CA  0E0F               	movlw	(high __ramtop+-1)
  1315   0029CC  64F7               	cpfsgt	tblptrh,c
  1316   0029CE  D003               	bra	u3947
  1317   0029D0  0008               	tblrd		*
  1318   0029D2  50F5               	movf	tablat,w,c
  1319   0029D4  D005               	bra	u3940
  1320   0029D6                     u3947:
  1321   0029D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1322   0029DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1323   0029DE  50EF               	movf	indf0,w,c
  1324   0029E0                     u3940:
  1325   0029E0  6E14               	movwf	lcd_4bit_send_char_data@data^0,c
  1326   0029E2  EC05  F016         	call	_lcd_4bit_send_char_data	;wreg free
  1327   0029E6  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1328   0029E8  4A20               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1329   0029EA  2A21               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1330   0029EC                     l4816:
  1331                           
  1332                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
  1333   0029EC  C020  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1334   0029F0  C021  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1335   0029F4  0E00               	movlw	low (__smallconst shr (0+16))
  1336   0029F6  6EF8               	movwf	tblptru,c
  1337   0029F8  0E0F               	movlw	(high __ramtop+-1)
  1338   0029FA  64F7               	cpfsgt	tblptrh,c
  1339   0029FC  D003               	bra	u3957
  1340   0029FE  0008               	tblrd		*
  1341   002A00  50F5               	movf	tablat,w,c
  1342   002A02  D005               	bra	u3950
  1343   002A04                     u3957:
  1344   002A04  CFF6 FFE9          	movff	tblptrl,fsr0l
  1345   002A08  CFF7 FFEA          	movff	tblptrh,fsr0h
  1346   002A0C  50EF               	movf	indf0,w,c
  1347   002A0E                     u3950:
  1348   002A0E  0900               	iorlw	0
  1349   002A10  A4D8               	btfss	status,2,c
  1350   002A12  EF0D  F015         	goto	u3961
  1351   002A16  EF0F  F015         	goto	u3960
  1352   002A1A                     u3961:
  1353   002A1A  EFDB  F014         	goto	l4812
  1354   002A1E                     u3960:
  1355   002A1E                     l4818:
  1356                           
  1357                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 133:     return ret;
  1358   002A1E  5022               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1359   002A20  0012               	return		;funcret
  1360   002A22                     __end_of_lcd_4bit_send_string_pos:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _lcd_4bit_set_cursor *****************
  1364 ;; Defined at:
  1365 ;;		line 450 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  lcd             2   21[COMRAM] PTR const struct .
  1368 ;;		 -> lcd1(6), 
  1369 ;;  row             1   23[COMRAM] unsigned char 
  1370 ;;  column          1   24[COMRAM] unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  ret             1    0        unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      unsigned char 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        6 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 7
  1389 ;; This function calls:
  1390 ;;		_lcd_4bit_send_command
  1391 ;; This function is called by:
  1392 ;;		_lcd_4bit_send_string_pos
  1393 ;;		_lcd_4bit_send_char_data_pos
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text2
  1398   002820                     __ptext2:
  1399                           	callstack 0
  1400   002820                     _lcd_4bit_set_cursor:
  1401                           	callstack 22
  1402   002820                     
  1403                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 452:     if(lcd==((void*)0)){
  1404   002820  5016               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1405   002822  1017               	iorwf	(lcd_4bit_set_cursor@lcd+1)^0,w,c
  1406   002824  A4D8               	btfss	status,2,c
  1407   002826  EF17  F014         	goto	u3741
  1408   00282A  EF19  F014         	goto	u3740
  1409   00282E                     u3741:
  1410   00282E  EF1B  F014         	goto	l4628
  1411   002832                     u3740:
  1412   002832                     l4626:
  1413                           
  1414                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 454:     }
  1415   002832  EF67  F014         	goto	l227
  1416   002836                     l4628:
  1417                           
  1418                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 456:         column--;
  1419   002836  0619               	decf	lcd_4bit_set_cursor@column^0,f,c
  1420                           
  1421                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:         switch (row){
  1422   002838  EF4A  F014         	goto	l4642
  1423   00283C                     l4630:
  1424   00283C  C016  F012         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1425   002840  C017  F013         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1426   002844  5019               	movf	lcd_4bit_set_cursor@column^0,w,c
  1427   002846  0F80               	addlw	128
  1428   002848  6E14               	movwf	lcd_4bit_send_command@command^0,c
  1429   00284A  ECCC  F015         	call	_lcd_4bit_send_command	;wreg free
  1430   00284E  EF67  F014         	goto	l227
  1431   002852                     l4632:
  1432   002852  C016  F012         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1433   002856  C017  F013         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1434   00285A  5019               	movf	lcd_4bit_set_cursor@column^0,w,c
  1435   00285C  0FC0               	addlw	192
  1436   00285E  6E14               	movwf	lcd_4bit_send_command@command^0,c
  1437   002860  ECCC  F015         	call	_lcd_4bit_send_command	;wreg free
  1438   002864  EF67  F014         	goto	l227
  1439   002868                     l4634:
  1440   002868  C016  F012         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1441   00286C  C017  F013         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1442   002870  5019               	movf	lcd_4bit_set_cursor@column^0,w,c
  1443   002872  0F94               	addlw	148
  1444   002874  6E14               	movwf	lcd_4bit_send_command@command^0,c
  1445   002876  ECCC  F015         	call	_lcd_4bit_send_command	;wreg free
  1446   00287A  EF67  F014         	goto	l227
  1447   00287E                     l4636:
  1448   00287E  C016  F012         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1449   002882  C017  F013         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1450   002886  5019               	movf	lcd_4bit_set_cursor@column^0,w,c
  1451   002888  0FD4               	addlw	212
  1452   00288A  6E14               	movwf	lcd_4bit_send_command@command^0,c
  1453   00288C  ECCC  F015         	call	_lcd_4bit_send_command	;wreg free
  1454   002890  EF67  F014         	goto	l227
  1455   002894                     l4642:
  1456   002894  5018               	movf	lcd_4bit_set_cursor@row^0,w,c
  1457   002896  6E1A               	movwf	??_lcd_4bit_set_cursor^0,c
  1458   002898  6A1B               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "simple"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ;	Chosen strategy is simple_byte
  1467   00289A  501B               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1468   00289C  0A00               	xorlw	0	; case 0
  1469   00289E  B4D8               	btfsc	status,2,c
  1470   0028A0  EF54  F014         	goto	l6654
  1471   0028A4  EF19  F014         	goto	l4626
  1472   0028A8                     l6654:
  1473                           
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 4, Range of values is 1 to 4
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte           13     7 (average)
  1479                           ;	Chosen strategy is simple_byte
  1480   0028A8  501A               	movf	??_lcd_4bit_set_cursor^0,w,c
  1481   0028AA  0A01               	xorlw	1	; case 1
  1482   0028AC  B4D8               	btfsc	status,2,c
  1483   0028AE  EF1E  F014         	goto	l4630
  1484   0028B2  0A03               	xorlw	3	; case 2
  1485   0028B4  B4D8               	btfsc	status,2,c
  1486   0028B6  EF29  F014         	goto	l4632
  1487   0028BA  0A01               	xorlw	1	; case 3
  1488   0028BC  B4D8               	btfsc	status,2,c
  1489   0028BE  EF34  F014         	goto	l4634
  1490   0028C2  0A07               	xorlw	7	; case 4
  1491   0028C4  B4D8               	btfsc	status,2,c
  1492   0028C6  EF3F  F014         	goto	l4636
  1493   0028CA  EF19  F014         	goto	l4626
  1494   0028CE                     l227:
  1495   0028CE  0012               	return		;funcret
  1496   0028D0                     __end_of_lcd_4bit_set_cursor:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _lcd_4bit_send_command *****************
  1500 ;; Defined at:
  1501 ;;		line 43 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  lcd             2   17[COMRAM] PTR const struct .
  1504 ;;		 -> lcd1(6), 
  1505 ;;  command         1   19[COMRAM] unsigned char 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  ret             1   20[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      unsigned char 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        4 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 6
  1524 ;; This function calls:
  1525 ;;		_gpio_pin_write_logic
  1526 ;;		_lcd_4bit_send_enable_signal
  1527 ;;		_lcd_send_4bits
  1528 ;; This function is called by:
  1529 ;;		_lcd_4bit_set_cursor
  1530 ;;		_main
  1531 ;;		_lcd_4bit_initialize
  1532 ;;		_lcd_4bit_send_custom_char
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text3
  1537   002B98                     __ptext3:
  1538                           	callstack 0
  1539   002B98                     _lcd_4bit_send_command:
  1540                           	callstack 22
  1541   002B98                     
  1542                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:     if(lcd==((void*)0)){
  1543   002B98  5012               	movf	lcd_4bit_send_command@lcd^0,w,c
  1544   002B9A  1013               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  1545   002B9C  A4D8               	btfss	status,2,c
  1546   002B9E  EFD3  F015         	goto	u3691
  1547   002BA2  EFD5  F015         	goto	u3690
  1548   002BA6                     u3691:
  1549   002BA6  EFD9  F015         	goto	l4520
  1550   002BAA                     u3690:
  1551   002BAA                     
  1552                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         ret=(Std_ReturnType)0x00;
  1553   002BAA  0E00               	movlw	0
  1554   002BAC  6E15               	movwf	lcd_4bit_send_command@ret^0,c
  1555                           
  1556                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:     }
  1557   002BAE  EF03  F016         	goto	l4522
  1558   002BB2                     l4520:
  1559                           
  1560                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  1561   002BB2  C012  F004         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1562   002BB6  C013  F005         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  1563   002BBA  0E00               	movlw	0
  1564   002BBC  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1565   002BBE  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1566   002BC2  6E15               	movwf	lcd_4bit_send_command@ret^0,c
  1567                           
  1568                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=lcd_send_4bits(lcd, command >> 4);
  1569   002BC4  C012  F00E         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1570   002BC8  C013  F00F         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1571   002BCC  3814               	swapf	lcd_4bit_send_command@command^0,w,c
  1572   002BCE  0B0F               	andlw	15
  1573   002BD0  6E10               	movwf	lcd_send_4bits@_data_command^0,c
  1574   002BD2  EC11  F015         	call	_lcd_send_4bits	;wreg free
  1575   002BD6  6E15               	movwf	lcd_4bit_send_command@ret^0,c
  1576                           
  1577                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_4bit_send_enable_signal(lcd);
  1578   002BD8  C012  F00E         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1579   002BDC  C013  F00F         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1580   002BE0  EC66  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  1581   002BE4  6E15               	movwf	lcd_4bit_send_command@ret^0,c
  1582                           
  1583                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_send_4bits(lcd, command);
  1584   002BE6  C012  F00E         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1585   002BEA  C013  F00F         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1586   002BEE  C014  F010         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1587   002BF2  EC11  F015         	call	_lcd_send_4bits	;wreg free
  1588   002BF6  6E15               	movwf	lcd_4bit_send_command@ret^0,c
  1589                           
  1590                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_4bit_send_enable_signal(lcd);
  1591   002BF8  C012  F00E         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1592   002BFC  C013  F00F         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1593   002C00  EC66  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  1594   002C04  6E15               	movwf	lcd_4bit_send_command@ret^0,c
  1595   002C06                     l4522:
  1596                           
  1597                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:     return ret;
  1598   002C06  5015               	movf	lcd_4bit_send_command@ret^0,w,c
  1599   002C08  0012               	return		;funcret
  1600   002C0A                     __end_of_lcd_4bit_send_command:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _lcd_4bit_send_char_data *****************
  1604 ;; Defined at:
  1605 ;;		line 63 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  lcd             2   17[COMRAM] PTR const struct .
  1608 ;;		 -> lcd1(6), 
  1609 ;;  data            1   19[COMRAM] unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  ret             1   20[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      unsigned char 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1621 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;Total ram usage:        4 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 6
  1628 ;; This function calls:
  1629 ;;		_gpio_pin_write_logic
  1630 ;;		_lcd_4bit_send_enable_signal
  1631 ;;		_lcd_send_4bits
  1632 ;; This function is called by:
  1633 ;;		_lcd_4bit_send_string_pos
  1634 ;;		_lcd_4bit_send_char_data_pos
  1635 ;;		_lcd_4bit_send_string
  1636 ;;		_lcd_4bit_send_custom_char
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text4
  1641   002C0A                     __ptext4:
  1642                           	callstack 0
  1643   002C0A                     _lcd_4bit_send_char_data:
  1644                           	callstack 23
  1645   002C0A                     
  1646                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     if(lcd==((void*)0)){
  1647   002C0A  5012               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1648   002C0C  1013               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1649   002C0E  A4D8               	btfss	status,2,c
  1650   002C10  EF0C  F016         	goto	u3731
  1651   002C14  EF0E  F016         	goto	u3730
  1652   002C18                     u3731:
  1653   002C18  EF12  F016         	goto	l4616
  1654   002C1C                     u3730:
  1655   002C1C                     
  1656                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret=(Std_ReturnType)0x00;
  1657   002C1C  0E00               	movlw	0
  1658   002C1E  6E15               	movwf	lcd_4bit_send_char_data@ret^0,c
  1659                           
  1660                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:     }
  1661   002C20  EF3C  F016         	goto	l4618
  1662   002C24                     l4616:
  1663                           
  1664                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  1665   002C24  C012  F004         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1666   002C28  C013  F005         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1667   002C2C  0E01               	movlw	1
  1668   002C2E  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1669   002C30  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1670   002C34  6E15               	movwf	lcd_4bit_send_char_data@ret^0,c
  1671                           
  1672                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret=lcd_send_4bits(lcd, data >> 4);
  1673   002C36  C012  F00E         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1674   002C3A  C013  F00F         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1675   002C3E  3814               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1676   002C40  0B0F               	andlw	15
  1677   002C42  6E10               	movwf	lcd_send_4bits@_data_command^0,c
  1678   002C44  EC11  F015         	call	_lcd_send_4bits	;wreg free
  1679   002C48  6E15               	movwf	lcd_4bit_send_char_data@ret^0,c
  1680                           
  1681                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_4bit_send_enable_signal(lcd);
  1682   002C4A  C012  F00E         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1683   002C4E  C013  F00F         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1684   002C52  EC66  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  1685   002C56  6E15               	movwf	lcd_4bit_send_char_data@ret^0,c
  1686                           
  1687                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_send_4bits(lcd, data);
  1688   002C58  C012  F00E         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1689   002C5C  C013  F00F         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1690   002C60  C014  F010         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1691   002C64  EC11  F015         	call	_lcd_send_4bits	;wreg free
  1692   002C68  6E15               	movwf	lcd_4bit_send_char_data@ret^0,c
  1693                           
  1694                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_4bit_send_enable_signal(lcd);
  1695   002C6A  C012  F00E         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1696   002C6E  C013  F00F         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1697   002C72  EC66  F016         	call	_lcd_4bit_send_enable_signal	;wreg free
  1698   002C76  6E15               	movwf	lcd_4bit_send_char_data@ret^0,c
  1699   002C78                     l4618:
  1700                           
  1701                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:     return ret;
  1702   002C78  5015               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1703   002C7A  0012               	return		;funcret
  1704   002C7C                     __end_of_lcd_4bit_send_char_data:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _lcd_send_4bits *****************
  1708 ;; Defined at:
  1709 ;;		line 396 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  lcd             2   13[COMRAM] PTR const struct .
  1712 ;;		 -> lcd1(6), 
  1713 ;;  _data_comman    1   15[COMRAM] unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  ret             1   16[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 5
  1732 ;; This function calls:
  1733 ;;		_gpio_pin_write_logic
  1734 ;; This function is called by:
  1735 ;;		_lcd_4bit_send_command
  1736 ;;		_lcd_4bit_send_char_data
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text5
  1741   002A22                     __ptext5:
  1742                           	callstack 0
  1743   002A22                     _lcd_send_4bits:
  1744                           	callstack 22
  1745   002A22                     
  1746                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:     if(lcd==((void*)0)){
  1747   002A22  500E               	movf	lcd_send_4bits@lcd^0,w,c
  1748   002A24  100F               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  1749   002A26  A4D8               	btfss	status,2,c
  1750   002A28  EF18  F015         	goto	u3611
  1751   002A2C  EF1A  F015         	goto	u3610
  1752   002A30                     u3611:
  1753   002A30  EF1E  F015         	goto	l4448
  1754   002A34                     u3610:
  1755   002A34                     
  1756                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret=(Std_ReturnType)0x00;
  1757   002A34  0E00               	movlw	0
  1758   002A36  6E11               	movwf	lcd_send_4bits@ret^0,c
  1759                           
  1760                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:     }
  1761   002A38  EF53  F015         	goto	l4450
  1762   002A3C                     l4448:
  1763                           
  1764                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  1765   002A3C  0E02               	movlw	2
  1766   002A3E  240E               	addwf	lcd_send_4bits@lcd^0,w,c
  1767   002A40  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1768   002A42  0E00               	movlw	0
  1769   002A44  200F               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1770   002A46  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1771   002A48  5010               	movf	lcd_send_4bits@_data_command^0,w,c
  1772   002A4A  0B01               	andlw	1
  1773   002A4C  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1774   002A4E  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1775   002A52  6E11               	movwf	lcd_send_4bits@ret^0,c
  1776                           
  1777                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  1778   002A54  0E03               	movlw	3
  1779   002A56  240E               	addwf	lcd_send_4bits@lcd^0,w,c
  1780   002A58  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1781   002A5A  0E00               	movlw	0
  1782   002A5C  200F               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1783   002A5E  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1784   002A60  90D8               	bcf	status,0,c
  1785   002A62  3010               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1786   002A64  0B01               	andlw	1
  1787   002A66  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1788   002A68  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1789   002A6C  6E11               	movwf	lcd_send_4bits@ret^0,c
  1790                           
  1791                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  1792   002A6E  0E04               	movlw	4
  1793   002A70  240E               	addwf	lcd_send_4bits@lcd^0,w,c
  1794   002A72  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1795   002A74  0E00               	movlw	0
  1796   002A76  200F               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1797   002A78  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1798   002A7A  4010               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1799   002A7C  42E8               	rrncf	wreg,f,c
  1800   002A7E  0B3F               	andlw	63
  1801   002A80  0B01               	andlw	1
  1802   002A82  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1803   002A84  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1804   002A88  6E11               	movwf	lcd_send_4bits@ret^0,c
  1805                           
  1806                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  1807   002A8A  0E05               	movlw	5
  1808   002A8C  240E               	addwf	lcd_send_4bits@lcd^0,w,c
  1809   002A8E  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1810   002A90  0E00               	movlw	0
  1811   002A92  200F               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1812   002A94  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1813   002A96  3810               	swapf	lcd_send_4bits@_data_command^0,w,c
  1814   002A98  46E8               	rlncf	wreg,f,c
  1815   002A9A  0B1F               	andlw	31
  1816   002A9C  0B01               	andlw	1
  1817   002A9E  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1818   002AA0  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1819   002AA4  6E11               	movwf	lcd_send_4bits@ret^0,c
  1820   002AA6                     l4450:
  1821                           
  1822                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:     return ret;
  1823   002AA6  5011               	movf	lcd_send_4bits@ret^0,w,c
  1824   002AA8  0012               	return		;funcret
  1825   002AAA                     __end_of_lcd_send_4bits:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1829 ;; Defined at:
  1830 ;;		line 409 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  lcd             2   13[COMRAM] PTR const struct .
  1833 ;;		 -> lcd1(6), 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  ret             1   15[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      unsigned char 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;Total ram usage:        3 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 5
  1852 ;; This function calls:
  1853 ;;		_gpio_pin_write_logic
  1854 ;; This function is called by:
  1855 ;;		_lcd_4bit_send_command
  1856 ;;		_lcd_4bit_send_char_data
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text6
  1861   002CCC                     __ptext6:
  1862                           	callstack 0
  1863   002CCC                     _lcd_4bit_send_enable_signal:
  1864                           	callstack 22
  1865   002CCC                     
  1866                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 411:     if(lcd==((void*)0)){
  1867   002CCC  500E               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1868   002CCE  100F               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1869   002CD0  A4D8               	btfss	status,2,c
  1870   002CD2  EF6D  F016         	goto	u3621
  1871   002CD6  EF6F  F016         	goto	u3620
  1872   002CDA                     u3621:
  1873   002CDA  EF73  F016         	goto	l4460
  1874   002CDE                     u3620:
  1875   002CDE                     
  1876                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 412:         ret=(Std_ReturnType)0x00;
  1877   002CDE  0E00               	movlw	0
  1878   002CE0  6E10               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1879                           
  1880                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:     }
  1881   002CE2  EF8B  F016         	goto	l4464
  1882   002CE6                     l4460:
  1883   002CE6  0E01               	movlw	1
  1884   002CE8  240E               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1885   002CEA  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1886   002CEC  0E00               	movlw	0
  1887   002CEE  200F               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1888   002CF0  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1889   002CF2  0E01               	movlw	1
  1890   002CF4  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1891   002CF6  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1892   002CFA                     
  1893                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  1894   002CFA  D000               	nop2		;2 cycle nop
  1895   002CFC  D000               	nop2		;2 cycle nop
  1896   002CFE  F000               	nop	
  1897                           
  1898                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  1899   002D00  0E01               	movlw	1
  1900   002D02  240E               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1901   002D04  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1902   002D06  0E00               	movlw	0
  1903   002D08  200F               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1904   002D0A  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1905   002D0C  0E00               	movlw	0
  1906   002D0E  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1907   002D10  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1908   002D14  6E10               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1909   002D16                     l4464:
  1910                           
  1911                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:     return ret;
  1912   002D16  5010               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1913   002D18  0012               	return		;funcret
  1914   002D1A                     __end_of_lcd_4bit_send_enable_signal:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _dc_motor_stop *****************
  1918 ;; Defined at:
  1919 ;;		line 55 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  _dc_motor       2   13[COMRAM] PTR const struct .
  1922 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  ret             1   15[COMRAM] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      unsigned char 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;Total ram usage:        3 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 5
  1941 ;; This function calls:
  1942 ;;		_gpio_pin_write_logic
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text7
  1949   002D66                     __ptext7:
  1950                           	callstack 0
  1951   002D66                     _dc_motor_stop:
  1952                           	callstack 25
  1953   002D66                     
  1954                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:     if(_dc_motor==((void*)0)){
  1955   002D66  500E               	movf	dc_motor_stop@_dc_motor^0,w,c
  1956   002D68  100F               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  1957   002D6A  A4D8               	btfss	status,2,c
  1958   002D6C  EFBA  F016         	goto	u4061
  1959   002D70  EFBC  F016         	goto	u4060
  1960   002D74                     u4061:
  1961   002D74  EFC0  F016         	goto	l4916
  1962   002D78                     u4060:
  1963   002D78                     
  1964                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:         ret=(Std_ReturnType)0x00;
  1965   002D78  0E00               	movlw	0
  1966   002D7A  6E10               	movwf	dc_motor_stop@ret^0,c
  1967                           
  1968                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 59:     }
  1969   002D7C  EFD4  F016         	goto	l4918
  1970   002D80                     l4916:
  1971                           
  1972                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
  1973   002D80  C00E  F004         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@pin_config
  1974   002D84  C00F  F005         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  1975   002D88  0E00               	movlw	0
  1976   002D8A  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1977   002D8C  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1978   002D90  6E10               	movwf	dc_motor_stop@ret^0,c
  1979                           
  1980                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
  1981   002D92  0E01               	movlw	1
  1982   002D94  240E               	addwf	dc_motor_stop@_dc_motor^0,w,c
  1983   002D96  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  1984   002D98  0E00               	movlw	0
  1985   002D9A  200F               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  1986   002D9C  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1987   002D9E  0E00               	movlw	0
  1988   002DA0  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  1989   002DA2  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  1990   002DA6  6E10               	movwf	dc_motor_stop@ret^0,c
  1991   002DA8                     l4918:
  1992                           
  1993                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:       return ret;
  1994   002DA8  5010               	movf	dc_motor_stop@ret^0,w,c
  1995   002DAA  0012               	return		;funcret
  1996   002DAC                     __end_of_dc_motor_stop:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _dc_motor_move_right *****************
  2000 ;; Defined at:
  2001 ;;		line 23 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  _dc_motor       2   13[COMRAM] PTR const struct .
  2004 ;;		 -> dc_motor_1(2), 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  ret             1   15[COMRAM] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      unsigned char 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:        3 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 5
  2023 ;; This function calls:
  2024 ;;		_gpio_pin_write_logic
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text8
  2031   002DAC                     __ptext8:
  2032                           	callstack 0
  2033   002DAC                     _dc_motor_move_right:
  2034                           	callstack 25
  2035   002DAC                     
  2036                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:     if(_dc_motor==((void*)0)){
  2037   002DAC  500E               	movf	dc_motor_move_right@_dc_motor^0,w,c
  2038   002DAE  100F               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2039   002DB0  A4D8               	btfss	status,2,c
  2040   002DB2  EFDD  F016         	goto	u4041
  2041   002DB6  EFDF  F016         	goto	u4040
  2042   002DBA                     u4041:
  2043   002DBA  EFE3  F016         	goto	l4892
  2044   002DBE                     u4040:
  2045   002DBE                     
  2046                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         ret=(Std_ReturnType)0x00;
  2047   002DBE  0E00               	movlw	0
  2048   002DC0  6E10               	movwf	dc_motor_move_right@ret^0,c
  2049                           
  2050                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:     }
  2051   002DC2  EFF7  F016         	goto	l4894
  2052   002DC6                     l4892:
  2053                           
  2054                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),HIGH);
  2055   002DC6  C00E  F004         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@pin_config
  2056   002DCA  C00F  F005         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  2057   002DCE  0E01               	movlw	1
  2058   002DD0  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  2059   002DD2  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  2060   002DD6  6E10               	movwf	dc_motor_move_right@ret^0,c
  2061                           
  2062                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),LOW);
  2063   002DD8  0E01               	movlw	1
  2064   002DDA  240E               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  2065   002DDC  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  2066   002DDE  0E00               	movlw	0
  2067   002DE0  200F               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2068   002DE2  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2069   002DE4  0E00               	movlw	0
  2070   002DE6  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  2071   002DE8  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  2072   002DEC  6E10               	movwf	dc_motor_move_right@ret^0,c
  2073   002DEE                     l4894:
  2074                           
  2075                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 32:     return ret;
  2076   002DEE  5010               	movf	dc_motor_move_right@ret^0,w,c
  2077   002DF0  0012               	return		;funcret
  2078   002DF2                     __end_of_dc_motor_move_right:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _dc_motor_move_left *****************
  2082 ;; Defined at:
  2083 ;;		line 39 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  _dc_motor       2   13[COMRAM] PTR const struct .
  2086 ;;		 -> dc_motor_2(2), 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  ret             1   15[COMRAM] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      unsigned char 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;Total ram usage:        3 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 5
  2105 ;; This function calls:
  2106 ;;		_gpio_pin_write_logic
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text9
  2113   002DF2                     __ptext9:
  2114                           	callstack 0
  2115   002DF2                     _dc_motor_move_left:
  2116                           	callstack 25
  2117   002DF2                     
  2118                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     if(_dc_motor==((void*)0)){
  2119   002DF2  500E               	movf	dc_motor_move_left@_dc_motor^0,w,c
  2120   002DF4  100F               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
  2121   002DF6  A4D8               	btfss	status,2,c
  2122   002DF8  EF00  F017         	goto	u4051
  2123   002DFC  EF02  F017         	goto	u4050
  2124   002E00                     u4051:
  2125   002E00  EF06  F017         	goto	l4904
  2126   002E04                     u4050:
  2127   002E04                     
  2128                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:         ret=(Std_ReturnType)0x00;
  2129   002E04  0E00               	movlw	0
  2130   002E06  6E10               	movwf	dc_motor_move_left@ret^0,c
  2131                           
  2132                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
  2133   002E08  EF1A  F017         	goto	l4906
  2134   002E0C                     l4904:
  2135                           
  2136                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X00U]),LOW);
  2137   002E0C  C00E  F004         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@pin_config
  2138   002E10  C00F  F005         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@pin_config+1
  2139   002E14  0E00               	movlw	0
  2140   002E16  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  2141   002E18  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  2142   002E1C  6E10               	movwf	dc_motor_move_left@ret^0,c
  2143                           
  2144                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:         ret=gpio_pin_write_logic(&(_dc_motor->dc
      +                          _motor_pin[0X01U]),HIGH);
  2145   002E1E  0E01               	movlw	1
  2146   002E20  240E               	addwf	dc_motor_move_left@_dc_motor^0,w,c
  2147   002E22  6E04               	movwf	gpio_pin_write_logic@pin_config^0,c
  2148   002E24  0E00               	movlw	0
  2149   002E26  200F               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
  2150   002E28  6E05               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2151   002E2A  0E01               	movlw	1
  2152   002E2C  6E06               	movwf	gpio_pin_write_logic@logic^0,c
  2153   002E2E  EC55  F010         	call	_gpio_pin_write_logic	;wreg free
  2154   002E32  6E10               	movwf	dc_motor_move_left@ret^0,c
  2155   002E34                     l4906:
  2156                           
  2157                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 48:       return ret;
  2158   002E34  5010               	movf	dc_motor_move_left@ret^0,w,c
  2159   002E36  0012               	return		;funcret
  2160   002E38                     __end_of_dc_motor_move_left:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _gpio_pin_write_logic *****************
  2164 ;; Defined at:
  2165 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  pin_config      2    3[COMRAM] PTR const struct .
  2168 ;;		 -> dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), 
  2169 ;;		 -> lcd1.lcd_data(4), lcd1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  2170 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2171 ;;  logic           1    5[COMRAM] enum E3137
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  ret             1   12[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2183 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:       10 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 4
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_lcd_4bit_send_command
  2194 ;;		_lcd_4bit_send_char_data
  2195 ;;		_lcd_send_4bits
  2196 ;;		_lcd_4bit_send_enable_signal
  2197 ;;		_dc_motor_move_right
  2198 ;;		_dc_motor_move_left
  2199 ;;		_dc_motor_stop
  2200 ;;		_seven_segment_write_number
  2201 ;;		_lcd_8bit_send_command
  2202 ;;		_lcd_8bit_send_char_data
  2203 ;;		_lcd_8bit_send_enable_signal
  2204 ;;		_keypad_get_value
  2205 ;;		_led_turn_on
  2206 ;;		_led_turn_off
  2207 ;;		_relay_turn_on
  2208 ;;		_relay_turn_off
  2209 ;;		_gpio_pin_initialize
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text10
  2214   0020AA                     __ptext10:
  2215                           	callstack 0
  2216   0020AA                     _gpio_pin_write_logic:
  2217                           	callstack 22
  2218   0020AA                     
  2219                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  2220   0020AA  0E01               	movlw	1
  2221   0020AC  6E0D               	movwf	gpio_pin_write_logic@ret^0,c
  2222   0020AE                     
  2223                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2224   0020AE  5004               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2225   0020B0  1005               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  2226   0020B2  B4D8               	btfsc	status,2,c
  2227   0020B4  EF5E  F010         	goto	u3391
  2228   0020B8  EF60  F010         	goto	u3390
  2229   0020BC                     u3391:
  2230   0020BC  EF80  F010         	goto	l4348
  2231   0020C0                     u3390:
  2232   0020C0  C004  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2233   0020C4  C005  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2234   0020C8  30DF               	rrcf	223,w,c
  2235   0020CA  32E8               	rrcf	wreg,f,c
  2236   0020CC  32E8               	rrcf	wreg,f,c
  2237   0020CE  0B07               	andlw	7
  2238   0020D0  6E07               	movwf	??_gpio_pin_write_logic^0,c
  2239   0020D2  0E08               	movlw	8
  2240   0020D4  6007               	cpfslt	??_gpio_pin_write_logic^0,c
  2241   0020D6  EF6F  F010         	goto	u3401
  2242   0020DA  EF71  F010         	goto	u3400
  2243   0020DE                     u3401:
  2244   0020DE  EF80  F010         	goto	l4348
  2245   0020E2                     u3400:
  2246   0020E2  C004  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2247   0020E6  C005  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2248   0020EA  50DF               	movf	223,w,c
  2249   0020EC  0B07               	andlw	7
  2250   0020EE  6E07               	movwf	??_gpio_pin_write_logic^0,c
  2251   0020F0  0E04               	movlw	4
  2252   0020F2  6407               	cpfsgt	??_gpio_pin_write_logic^0,c
  2253   0020F4  EF7E  F010         	goto	u3411
  2254   0020F8  EF80  F010         	goto	u3410
  2255   0020FC                     u3411:
  2256   0020FC  EFE3  F010         	goto	l4356
  2257   002100                     u3410:
  2258   002100                     l4348:
  2259                           
  2260                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  2261   002100  0E00               	movlw	0
  2262   002102  6E0D               	movwf	gpio_pin_write_logic@ret^0,c
  2263                           
  2264                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  2265   002104  EFF8  F010         	goto	l4358
  2266   002108                     l4350:
  2267                           
  2268                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  2269   002108  C004  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2270   00210C  C005  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2271   002110  30DF               	rrcf	223,w,c
  2272   002112  32E8               	rrcf	wreg,f,c
  2273   002114  32E8               	rrcf	wreg,f,c
  2274   002116  0B07               	andlw	7
  2275   002118  6E07               	movwf	??_gpio_pin_write_logic^0,c
  2276   00211A  0E01               	movlw	1
  2277   00211C  6E08               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2278   00211E  2A07               	incf	??_gpio_pin_write_logic^0,f,c
  2279   002120  EF94  F010         	goto	u3424
  2280   002124                     u3425:
  2281   002124  90D8               	bcf	status,0,c
  2282   002126  3608               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2283   002128                     u3424:
  2284   002128  2E07               	decfsz	??_gpio_pin_write_logic^0,f,c
  2285   00212A  EF92  F010         	goto	u3425
  2286   00212E  C004  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2287   002132  C005  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2288   002136  50DF               	movf	223,w,c
  2289   002138  0B07               	andlw	7
  2290   00213A  6E09               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2291   00213C  5009               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2292   00213E  0D02               	mullw	2
  2293   002140  0EDB               	movlw	low _lat_registers
  2294   002142  24F3               	addwf	243,w,c
  2295   002144  6ED9               	movwf	fsr2l,c
  2296   002146  0E00               	movlw	high _lat_registers
  2297   002148  20F4               	addwfc	prodh,w,c
  2298   00214A  6EDA               	movwf	fsr2h,c
  2299   00214C  CFDE F00A          	movff	postinc2,??_gpio_pin_write_logic+3
  2300   002150  CFDD F00B          	movff	postdec2,??_gpio_pin_write_logic+4
  2301   002154  C00A  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2302   002158  C00B  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2303   00215C  5008               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2304   00215E  12DF               	iorwf	indf2,f,c
  2305                           
  2306                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  2307   002160  EFF8  F010         	goto	l4358
  2308   002164                     l4352:
  2309                           
  2310                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  2311   002164  C004  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2312   002168  C005  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2313   00216C  30DF               	rrcf	223,w,c
  2314   00216E  32E8               	rrcf	wreg,f,c
  2315   002170  32E8               	rrcf	wreg,f,c
  2316   002172  0B07               	andlw	7
  2317   002174  6E07               	movwf	??_gpio_pin_write_logic^0,c
  2318   002176  0E01               	movlw	1
  2319   002178  6E08               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2320   00217A  2A07               	incf	??_gpio_pin_write_logic^0,f,c
  2321   00217C  EFC2  F010         	goto	u3434
  2322   002180                     u3435:
  2323   002180  90D8               	bcf	status,0,c
  2324   002182  3608               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2325   002184                     u3434:
  2326   002184  2E07               	decfsz	??_gpio_pin_write_logic^0,f,c
  2327   002186  EFC0  F010         	goto	u3435
  2328   00218A  5008               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2329   00218C  0AFF               	xorlw	255
  2330   00218E  6E09               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2331   002190  C004  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2332   002194  C005  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2333   002198  50DF               	movf	223,w,c
  2334   00219A  0B07               	andlw	7
  2335   00219C  6E0A               	movwf	(??_gpio_pin_write_logic+3)^0,c
  2336   00219E  500A               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  2337   0021A0  0D02               	mullw	2
  2338   0021A2  0EDB               	movlw	low _lat_registers
  2339   0021A4  24F3               	addwf	243,w,c
  2340   0021A6  6ED9               	movwf	fsr2l,c
  2341   0021A8  0E00               	movlw	high _lat_registers
  2342   0021AA  20F4               	addwfc	prodh,w,c
  2343   0021AC  6EDA               	movwf	fsr2h,c
  2344   0021AE  CFDE F00B          	movff	postinc2,??_gpio_pin_write_logic+4
  2345   0021B2  CFDD F00C          	movff	postdec2,??_gpio_pin_write_logic+5
  2346   0021B6  C00B  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2347   0021BA  C00C  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2348   0021BE  5009               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2349   0021C0  16DF               	andwf	indf2,f,c
  2350                           
  2351                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  2352   0021C2  EFF8  F010         	goto	l4358
  2353   0021C6                     l4356:
  2354   0021C6  5006               	movf	gpio_pin_write_logic@logic^0,w,c
  2355   0021C8  6E07               	movwf	??_gpio_pin_write_logic^0,c
  2356   0021CA  6A08               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2357                           
  2358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 1, Range of values is 0 to 0
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte            4     3 (average)
  2364                           ;	Chosen strategy is simple_byte
  2365   0021CC  5008               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2366   0021CE  0A00               	xorlw	0	; case 0
  2367   0021D0  B4D8               	btfsc	status,2,c
  2368   0021D2  EFED  F010         	goto	l6656
  2369   0021D6  EF80  F010         	goto	l4348
  2370   0021DA                     l6656:
  2371                           
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 2, Range of values is 0 to 1
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            7     4 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378   0021DA  5007               	movf	??_gpio_pin_write_logic^0,w,c
  2379   0021DC  0A00               	xorlw	0	; case 0
  2380   0021DE  B4D8               	btfsc	status,2,c
  2381   0021E0  EFB2  F010         	goto	l4352
  2382   0021E4  0A01               	xorlw	1	; case 1
  2383   0021E6  B4D8               	btfsc	status,2,c
  2384   0021E8  EF84  F010         	goto	l4350
  2385   0021EC  EF80  F010         	goto	l4348
  2386   0021F0                     l4358:
  2387                           
  2388                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  2389   0021F0  500D               	movf	gpio_pin_write_logic@ret^0,w,c
  2390   0021F2  0012               	return		;funcret
  2391   0021F4                     __end_of_gpio_pin_write_logic:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _convert_uint16_to_string *****************
  2395 ;; Defined at:
  2396 ;;		line 349 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  value           2   87[COMRAM] unsigned int 
  2399 ;;  str             2   89[COMRAM] PTR unsigned char 
  2400 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  Temp_str        6    0[BANK1 ] unsigned char [6]
  2403 ;;  cnt             1    7[BANK1 ] unsigned char 
  2404 ;;  ret             1    6[BANK1 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      unsigned char 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Totals:         4       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;Total ram usage:       12 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 12
  2421 ;; This function calls:
  2422 ;;		_memset
  2423 ;;		_sprintf
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text11
  2430   002766                     __ptext11:
  2431                           	callstack 0
  2432   002766                     _convert_uint16_to_string:
  2433                           	callstack 18
  2434   002766                     
  2435                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 350:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2436   002766  0E01               	movlw	1
  2437   002768  0101               	movlb	1	; () banked
  2438   00276A  6F06               	movwf	convert_uint16_to_string@ret& (0+255),b
  2439   00276C                     
  2440                           ; BSR set to: 1
  2441                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 351:    uint8 Temp_str[6]={0};
  2442   00276C  EE21  F000         	lfsr	2,convert_uint16_to_string@Temp_str
  2443   002770  0E05               	movlw	5
  2444   002772                     u6141:
  2445   002772  6ADE               	clrf	postinc2,c
  2446   002774  06E8               	decf	wreg,f,c
  2447   002776  E2FD               	bc	u6141
  2448   002778                     
  2449                           ; BSR set to: 1
  2450                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:    uint8 cnt =0;
  2451   002778  0E00               	movlw	0
  2452   00277A  6F07               	movwf	convert_uint16_to_string@cnt& (0+255),b
  2453   00277C                     
  2454                           ; BSR set to: 1
  2455                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 353:     if(str==((void*)0)){
  2456   00277C  505A               	movf	convert_uint16_to_string@str^0,w,c
  2457   00277E  105B               	iorwf	(convert_uint16_to_string@str+1)^0,w,c
  2458   002780  A4D8               	btfss	status,2,c
  2459   002782  EFC5  F013         	goto	u6151
  2460   002786  EFC7  F013         	goto	u6150
  2461   00278A                     u6151:
  2462   00278A  EFCB  F013         	goto	l6476
  2463   00278E                     u6150:
  2464   00278E                     
  2465                           ; BSR set to: 1
  2466                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 354:         ret=(Std_ReturnType)0x00;
  2467   00278E  0E00               	movlw	0
  2468   002790  6F06               	movwf	convert_uint16_to_string@ret& (0+255),b
  2469                           
  2470                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 355:     }
  2471   002792  EF0E  F014         	goto	l6488
  2472   002796                     l6476:
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 357:         memset(str,' ',6);
  2476   002796  C05A  F004         	movff	convert_uint16_to_string@str,memset@dest
  2477   00279A  C05B  F005         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2478   00279E  0E00               	movlw	0
  2479   0027A0  6E07               	movwf	(memset@c+1)^0,c
  2480   0027A2  0E20               	movlw	32
  2481   0027A4  6E06               	movwf	memset@c^0,c
  2482   0027A6  0E00               	movlw	0
  2483   0027A8  6E09               	movwf	(memset@n+1)^0,c
  2484   0027AA  0E06               	movlw	6
  2485   0027AC  6E08               	movwf	memset@n^0,c
  2486   0027AE  ECE2  F00E         	call	_memset	;wreg free
  2487   0027B2                     
  2488                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 358:         sprintf(Temp_str,"%i",value);
  2489   0027B2  0E00               	movlw	low convert_uint16_to_string@Temp_str
  2490   0027B4  6E42               	movwf	sprintf@s^0,c
  2491   0027B6  0E01               	movlw	high convert_uint16_to_string@Temp_str
  2492   0027B8  6E43               	movwf	(sprintf@s+1)^0,c
  2493   0027BA  0E30               	movlw	low STR_1
  2494   0027BC  6E44               	movwf	sprintf@fmt^0,c
  2495   0027BE  0E10               	movlw	high STR_1
  2496   0027C0  6E45               	movwf	(sprintf@fmt+1)^0,c
  2497   0027C2  C058  F046         	movff	convert_uint16_to_string@value,?_sprintf+4
  2498   0027C6  C059  F047         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2499   0027CA  EC8D  F016         	call	_sprintf	;wreg free
  2500                           
  2501                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:         while (Temp_str[cnt] != '\0'){
  2502   0027CE  EFF8  F013         	goto	l6484
  2503   0027D2                     l6480:
  2504                           
  2505                           ; BSR set to: 1
  2506                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 360:             str[cnt] = Temp_str [cnt];
  2507   0027D2  0E00               	movlw	low convert_uint16_to_string@Temp_str
  2508   0027D4  2507               	addwf	convert_uint16_to_string@cnt& (0+255),w,b
  2509   0027D6  6ED9               	movwf	fsr2l,c
  2510   0027D8  6ADA               	clrf	fsr2h,c
  2511   0027DA  0E01               	movlw	high convert_uint16_to_string@Temp_str
  2512   0027DC  22DA               	addwfc	fsr2h,f,c
  2513   0027DE  5107               	movf	convert_uint16_to_string@cnt& (0+255),w,b
  2514   0027E0  245A               	addwf	convert_uint16_to_string@str^0,w,c
  2515   0027E2  6EE1               	movwf	fsr1l,c
  2516   0027E4  0E00               	movlw	0
  2517   0027E6  205B               	addwfc	(convert_uint16_to_string@str+1)^0,w,c
  2518   0027E8  6EE2               	movwf	fsr1h,c
  2519   0027EA  CFDF FFE7          	movff	indf2,indf1
  2520   0027EE                     
  2521                           ; BSR set to: 1
  2522                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 361:             cnt++;
  2523   0027EE  2B07               	incf	convert_uint16_to_string@cnt& (0+255),f,b
  2524   0027F0                     l6484:
  2525                           
  2526                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 359:         while (Temp_str[cnt] != '\0'){
  2527   0027F0  0E00               	movlw	low convert_uint16_to_string@Temp_str
  2528   0027F2  0101               	movlb	1	; () banked
  2529   0027F4  2507               	addwf	convert_uint16_to_string@cnt& (0+255),w,b
  2530   0027F6  6ED9               	movwf	fsr2l,c
  2531   0027F8  6ADA               	clrf	fsr2h,c
  2532   0027FA  0E01               	movlw	high convert_uint16_to_string@Temp_str
  2533   0027FC  22DA               	addwfc	fsr2h,f,c
  2534   0027FE  50DF               	movf	indf2,w,c
  2535   002800  A4D8               	btfss	status,2,c
  2536   002802  EF05  F014         	goto	u6161
  2537   002806  EF07  F014         	goto	u6160
  2538   00280A                     u6161:
  2539   00280A  EFE9  F013         	goto	l6480
  2540   00280E                     u6160:
  2541   00280E                     
  2542                           ; BSR set to: 1
  2543                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 363:         str[5] = '\0';
  2544   00280E  EE20 F005          	lfsr	2,5
  2545   002812  505A               	movf	convert_uint16_to_string@str^0,w,c
  2546   002814  26D9               	addwf	fsr2l,f,c
  2547   002816  505B               	movf	(convert_uint16_to_string@str+1)^0,w,c
  2548   002818  22DA               	addwfc	fsr2h,f,c
  2549   00281A  6ADF               	clrf	indf2,c
  2550   00281C                     l6488:
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 365:     return ret;
  2554   00281C  5106               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2555   00281E                     
  2556                           ; BSR set to: 1
  2557   00281E  0012               	return		;funcret
  2558   002820                     __end_of_convert_uint16_to_string:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _sprintf *****************
  2562 ;; Defined at:
  2563 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  s               2   65[COMRAM] PTR unsigned char 
  2566 ;;		 -> convert_uint32_to_string@Temp_str(11), convert_uint16_to_string@Temp_str(6), convert_uint8_to_string@Temp_str(4)
      +, 
  2567 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  2568 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  f              12   75[COMRAM] struct _IO_FILE
  2571 ;;  ap              2   73[COMRAM] PTR void [1]
  2572 ;;		 -> ?_sprintf(2), 
  2573 ;;  ret             2    0        int 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2   65[COMRAM] int 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:       22 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 11
  2590 ;; This function calls:
  2591 ;;		_vfprintf
  2592 ;; This function is called by:
  2593 ;;		_convert_uint16_to_string
  2594 ;;		_convert_uint8_to_string
  2595 ;;		_convert_uint32_to_string
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text12
  2600   002D1A                     __ptext12:
  2601                           	callstack 0
  2602   002D1A                     _sprintf:
  2603                           	callstack 18
  2604   002D1A  0E46               	movlw	low (?_sprintf+4)
  2605   002D1C  6E4A               	movwf	sprintf@ap^0,c
  2606   002D1E  0E00               	movlw	high (?_sprintf+4)
  2607   002D20  6E4B               	movwf	(sprintf@ap+1)^0,c
  2608   002D22  C042  F04C         	movff	sprintf@s,sprintf@f
  2609   002D26  C043  F04D         	movff	sprintf@s+1,sprintf@f+1
  2610   002D2A  0E00               	movlw	0
  2611   002D2C  6E50               	movwf	(sprintf@f+4)^0,c
  2612   002D2E  0E00               	movlw	0
  2613   002D30  6E4F               	movwf	(sprintf@f+3)^0,c
  2614   002D32  0E00               	movlw	0
  2615   002D34  6E57               	movwf	(sprintf@f+11)^0,c
  2616   002D36  0E00               	movlw	0
  2617   002D38  6E56               	movwf	(sprintf@f+10)^0,c
  2618   002D3A  0E4C               	movlw	low sprintf@f
  2619   002D3C  6E3A               	movwf	vfprintf@fp^0,c
  2620   002D3E  0E00               	movlw	high sprintf@f
  2621   002D40  6E3B               	movwf	(vfprintf@fp+1)^0,c
  2622   002D42  C044  F03C         	movff	sprintf@fmt,vfprintf@fmt
  2623   002D46  C045  F03D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2624   002D4A  0E4A               	movlw	low sprintf@ap
  2625   002D4C  6E3E               	movwf	vfprintf@ap^0,c
  2626   002D4E  0E00               	movlw	high sprintf@ap
  2627   002D50  6E3F               	movwf	(vfprintf@ap+1)^0,c
  2628   002D52  EC3E  F016         	call	_vfprintf	;wreg free
  2629   002D56  504F               	movf	(sprintf@f+3)^0,w,c
  2630   002D58  2442               	addwf	sprintf@s^0,w,c
  2631   002D5A  6ED9               	movwf	fsr2l,c
  2632   002D5C  5050               	movf	(sprintf@f+4)^0,w,c
  2633   002D5E  2043               	addwfc	(sprintf@s+1)^0,w,c
  2634   002D60  6EDA               	movwf	fsr2h,c
  2635   002D62  6ADF               	clrf	indf2,c
  2636   002D64  0012               	return		;funcret
  2637   002D66                     __end_of_sprintf:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _vfprintf *****************
  2641 ;; Defined at:
  2642 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  2645 ;;		 -> sprintf@f(12), 
  2646 ;;  fmt             2   59[COMRAM] PTR const unsigned char 
  2647 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2648 ;;  ap              2   61[COMRAM] PTR PTR void 
  2649 ;;		 -> sprintf@ap(2), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  cfmt            2   63[COMRAM] PTR unsigned char 
  2652 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2   57[COMRAM] int 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        8 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 10
  2669 ;; This function calls:
  2670 ;;		_vfpfcnvrt
  2671 ;; This function is called by:
  2672 ;;		_sprintf
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text13
  2677   002C7C                     __ptext13:
  2678                           	callstack 0
  2679   002C7C                     _vfprintf:
  2680                           	callstack 18
  2681   002C7C                     
  2682                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2683   002C7C  C03C  F040         	movff	vfprintf@fmt,vfprintf@cfmt
  2684   002C80  C03D  F041         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2687   002C84  EF52  F016         	goto	l6416
  2688   002C88                     l6414:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2691   002C88  C03A  F02C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2692   002C8C  C03B  F02D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2693   002C90  0E40               	movlw	low vfprintf@cfmt
  2694   002C92  6E2E               	movwf	vfpfcnvrt@fmt^0,c
  2695   002C94  0E00               	movlw	high vfprintf@cfmt
  2696   002C96  6E2F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2697   002C98  C03E  F030         	movff	vfprintf@ap,vfpfcnvrt@ap
  2698   002C9C  C03F  F031         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2699   002CA0  ECFA  F010         	call	_vfpfcnvrt	;wreg free
  2700   002CA4                     l6416:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2703   002CA4  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
  2704   002CA8  C041  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2705   002CAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2706   002CAC  6AF8               	clrf	tblptru,c
  2707   002CAE                     	endif
  2708   002CAE                     	if	0	;tblptru may be non-zero
  2709   002CAE                     	endif
  2710   002CAE  0008               	tblrd		*
  2711   002CB0  50F5               	movf	tablat,w,c
  2712   002CB2  0900               	iorlw	0
  2713   002CB4  A4D8               	btfss	status,2,c
  2714   002CB6  EF5F  F016         	goto	u6081
  2715   002CBA  EF61  F016         	goto	u6080
  2716   002CBE                     u6081:
  2717   002CBE  EF44  F016         	goto	l6414
  2718   002CC2                     u6080:
  2719   002CC2                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2721   002CC2  0E00               	movlw	0
  2722   002CC4  6E3B               	movwf	(?_vfprintf+1)^0,c
  2723   002CC6  0E00               	movlw	0
  2724   002CC8  6E3A               	movwf	?_vfprintf^0,c
  2725   002CCA  0012               	return		;funcret
  2726   002CCC                     __end_of_vfprintf:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _vfpfcnvrt *****************
  2730 ;; Defined at:
  2731 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  2734 ;;		 -> sprintf@f(12), 
  2735 ;;  fmt             2   45[COMRAM] PTR PTR unsigned char 
  2736 ;;		 -> vfprintf@cfmt(2), 
  2737 ;;  ap              2   47[COMRAM] PTR PTR void 
  2738 ;;		 -> sprintf@ap(2), 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  convarg         4   51[COMRAM] struct .
  2741 ;;  cp              2   55[COMRAM] PTR unsigned char 
  2742 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2743 ;;  i               2    0        int 
  2744 ;;  done            2    0        int 
  2745 ;;  c               1    0        unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2755 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;Total ram usage:       14 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 9
  2762 ;; This function calls:
  2763 ;;		_dtoa
  2764 ;;		_fputc
  2765 ;; This function is called by:
  2766 ;;		_vfprintf
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text14
  2771   0021F4                     __ptext14:
  2772                           	callstack 0
  2773   0021F4                     _vfpfcnvrt:
  2774                           	callstack 18
  2775   0021F4                     
  2776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2777   0021F4  C02E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2778   0021F8  C02F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2779   0021FC  CFDE FFF6          	movff	postinc2,tblptrl
  2780   002200  CFDD FFF7          	movff	postdec2,tblptrh
  2781   002204                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2782   002204  6AF8               	clrf	tblptru,c
  2783   002206                     	endif
  2784   002206                     	if	0	;tblptru may be non-zero
  2785   002206                     	endif
  2786   002206  0008               	tblrd		*
  2787   002208  50F5               	movf	tablat,w,c
  2788   00220A  0A25               	xorlw	37
  2789   00220C  A4D8               	btfss	status,2,c
  2790   00220E  EF0B  F011         	goto	u6051
  2791   002212  EF0D  F011         	goto	u6050
  2792   002216                     u6051:
  2793   002216  EF7A  F011         	goto	l6406
  2794   00221A                     u6050:
  2795   00221A                     
  2796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2797   00221A  C02E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2798   00221E  C02F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2799   002222  2ADE               	incf	postinc2,f,c
  2800   002224  0E00               	movlw	0
  2801   002226  22DD               	addwfc	postdec2,f,c
  2802   002228                     
  2803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2804   002228  0E00               	movlw	0
  2805   00222A  0100               	movlb	0	; () banked
  2806   00222C  6F96               	movwf	(_width+1)& (0+255),b
  2807   00222E  0E00               	movlw	0
  2808   002230  6F95               	movwf	_width& (0+255),b
  2809   002232  C095  F06A         	movff	_width,_flags
  2810   002236                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2813   002236  6997               	setf	_prec& (0+255),b
  2814   002238  6998               	setf	(_prec+1)& (0+255),b
  2815   00223A                     
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2818   00223A  C02E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2819   00223E  C02F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2820   002242  CFDE F038          	movff	postinc2,vfpfcnvrt@cp
  2821   002246  CFDD F039          	movff	postdec2,vfpfcnvrt@cp+1
  2822   00224A                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2825   00224A  C038  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2826   00224E  C039  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2827   002252                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2828   002252  6AF8               	clrf	tblptru,c
  2829   002254                     	endif
  2830   002254                     	if	0	;tblptru may be non-zero
  2831   002254                     	endif
  2832   002254  0008               	tblrd		*
  2833   002256  50F5               	movf	tablat,w,c
  2834   002258  0A64               	xorlw	100
  2835   00225A  B4D8               	btfsc	status,2,c
  2836   00225C  EF32  F011         	goto	u6061
  2837   002260  EF34  F011         	goto	u6060
  2838   002264                     u6061:
  2839   002264  EF43  F011         	goto	l6396
  2840   002268                     u6060:
  2841   002268                     
  2842                           ; BSR set to: 0
  2843   002268  C038  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2844   00226C  C039  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2845   002270                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2846   002270  6AF8               	clrf	tblptru,c
  2847   002272                     	endif
  2848   002272                     	if	0	;tblptru may be non-zero
  2849   002272                     	endif
  2850   002272  0008               	tblrd		*
  2851   002274  50F5               	movf	tablat,w,c
  2852   002276  0A69               	xorlw	105
  2853   002278  A4D8               	btfss	status,2,c
  2854   00227A  EF41  F011         	goto	u6071
  2855   00227E  EF43  F011         	goto	u6070
  2856   002282                     u6071:
  2857   002282  EF71  F011         	goto	l6402
  2858   002286                     u6070:
  2859   002286                     l6396:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2863   002286  C030  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2864   00228A  C031  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2865   00228E  CFDF F032          	movff	indf2,??_vfpfcnvrt
  2866   002292  0E02               	movlw	2
  2867   002294  26DE               	addwf	postinc2,f,c
  2868   002296  CFDF F033          	movff	indf2,??_vfpfcnvrt+1
  2869   00229A  0E00               	movlw	0
  2870   00229C  22DD               	addwfc	postdec2,f,c
  2871   00229E  C032  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2872   0022A2  C033  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2873   0022A6  CFDE F034          	movff	postinc2,vfpfcnvrt@convarg
  2874   0022AA  CFDD F035          	movff	postdec2,vfpfcnvrt@convarg+1
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2877   0022AE  0E01               	movlw	1
  2878   0022B0  2438               	addwf	vfpfcnvrt@cp^0,w,c
  2879   0022B2  6E32               	movwf	??_vfpfcnvrt^0,c
  2880   0022B4  0E00               	movlw	0
  2881   0022B6  2039               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2882   0022B8  6E33               	movwf	(??_vfpfcnvrt+1)^0,c
  2883   0022BA  C02E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2884   0022BE  C02F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2885   0022C2  C032  FFDE         	movff	??_vfpfcnvrt,postinc2
  2886   0022C6  C033  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2887   0022CA                     
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2890   0022CA  C02C  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  2891   0022CE  C02D  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2892   0022D2  C034  F021         	movff	vfpfcnvrt@convarg,dtoa@d
  2893   0022D6  C035  F022         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2894   0022DA  EC18  F00E         	call	_dtoa	;wreg free
  2895   0022DE  EF8F  F011         	goto	l1744
  2896   0022E2                     l6402:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2899   0022E2  C02E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2900   0022E6  C02F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2901   0022EA  2ADE               	incf	postinc2,f,c
  2902   0022EC  0E00               	movlw	0
  2903   0022EE  22DD               	addwfc	postdec2,f,c
  2904   0022F0  EF8F  F011         	goto	l1744
  2905   0022F4                     l6406:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2908   0022F4  C02E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2909   0022F8  C02F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2910   0022FC  CFDE FFF6          	movff	postinc2,tblptrl
  2911   002300  CFDD FFF7          	movff	postdec2,tblptrh
  2912   002304                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2913   002304  6AF8               	clrf	tblptru,c
  2914   002306                     	endif
  2915   002306                     	if	0	;tblptru may be non-zero
  2916   002306                     	endif
  2917   002306  0008               	tblrd		*
  2918   002308  50F5               	movf	tablat,w,c
  2919   00230A  6E04               	movwf	fputc@c^0,c
  2920   00230C  6A05               	clrf	(fputc@c+1)^0,c
  2921   00230E  C02C  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2922   002312  C02D  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2923   002316  ECEC  F012         	call	_fputc	;wreg free
  2924   00231A  EF71  F011         	goto	l6402
  2925   00231E                     l1744:
  2926   00231E  0012               	return		;funcret
  2927   002320                     __end_of_vfpfcnvrt:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _dtoa *****************
  2931 ;; Defined at:
  2932 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2935 ;;		 -> sprintf@f(12), 
  2936 ;;  d               2   32[COMRAM] int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  i               2   41[COMRAM] int 
  2939 ;;  w               2   38[COMRAM] int 
  2940 ;;  p               2   36[COMRAM] int 
  2941 ;;  s               1   40[COMRAM] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;Total ram usage:       13 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 8
  2958 ;; This function calls:
  2959 ;;		___awdiv
  2960 ;;		___awmod
  2961 ;;		_abs
  2962 ;;		_pad
  2963 ;; This function is called by:
  2964 ;;		_vfpfcnvrt
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text15
  2969   001C30                     __ptext15:
  2970                           	callstack 0
  2971   001C30                     _dtoa:
  2972                           	callstack 18
  2973   001C30                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2975   001C30  BE22               	btfsc	(dtoa@d+1)^0,7,c
  2976   001C32  EF1D  F00E         	goto	u5951
  2977   001C36  EF20  F00E         	goto	u5950
  2978   001C3A                     u5951:
  2979   001C3A  0E01               	movlw	1
  2980   001C3C  EF21  F00E         	goto	u5960
  2981   001C40                     u5950:
  2982   001C40  0E00               	movlw	0
  2983   001C42                     u5960:
  2984   001C42  6E29               	movwf	dtoa@s^0,c
  2985   001C44                     
  2986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2987   001C44  5029               	movf	dtoa@s^0,w,c
  2988   001C46  B4D8               	btfsc	status,2,c
  2989   001C48  EF28  F00E         	goto	u5971
  2990   001C4C  EF2A  F00E         	goto	u5970
  2991   001C50                     u5971:
  2992   001C50  EF2E  F00E         	goto	l6338
  2993   001C54                     u5970:
  2994   001C54                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2996   001C54  6C21               	negf	dtoa@d^0,c
  2997   001C56  1E22               	comf	(dtoa@d+1)^0,f,c
  2998   001C58  B0D8               	btfsc	status,0,c
  2999   001C5A  2A22               	incf	(dtoa@d+1)^0,f,c
  3000   001C5C                     l6338:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3003   001C5C  0100               	movlb	0	; () banked
  3004   001C5E  BF98               	btfsc	(_prec+1)& (0+255),7,b
  3005   001C60  EF36  F00E         	goto	u5980
  3006   001C64  EF34  F00E         	goto	u5981
  3007   001C68                     u5981:
  3008   001C68  EF3C  F00E         	goto	l1723
  3009   001C6C                     u5980:
  3010   001C6C                     
  3011                           ; BSR set to: 0
  3012   001C6C  0E00               	movlw	0
  3013   001C6E  6E26               	movwf	(dtoa@p+1)^0,c
  3014   001C70  0E01               	movlw	1
  3015   001C72  6E25               	movwf	dtoa@p^0,c
  3016   001C74  EF40  F00E         	goto	l1725
  3017   001C78                     l1723:
  3018                           
  3019                           ; BSR set to: 0
  3020   001C78  C097  F025         	movff	_prec,dtoa@p
  3021   001C7C  C098  F026         	movff	_prec+1,dtoa@p+1
  3022   001C80                     l1725:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3026   001C80  C095  F027         	movff	_width,dtoa@w
  3027   001C84  C096  F028         	movff	_width+1,dtoa@w+1
  3028   001C88                     
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3031   001C88  5029               	movf	dtoa@s^0,w,c
  3032   001C8A  B4D8               	btfsc	status,2,c
  3033   001C8C  EF4A  F00E         	goto	u5991
  3034   001C90  EF4C  F00E         	goto	u5990
  3035   001C94                     u5991:
  3036   001C94  EF63  F00E         	goto	l1726
  3037   001C98                     u5990:
  3038   001C98                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3041   001C98  0627               	decf	dtoa@w^0,f,c
  3042   001C9A  A0D8               	btfss	status,0,c
  3043   001C9C  0628               	decf	(dtoa@w+1)^0,f,c
  3044   001C9E                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3047   001C9E  5029               	movf	dtoa@s^0,w,c
  3048   001CA0  A4D8               	btfss	status,2,c
  3049   001CA2  EF55  F00E         	goto	u6001
  3050   001CA6  EF57  F00E         	goto	u6000
  3051   001CAA                     u6001:
  3052   001CAA  EF5D  F00E         	goto	l6350
  3053   001CAE                     u6000:
  3054   001CAE                     
  3055                           ; BSR set to: 0
  3056   001CAE  0E00               	movlw	0
  3057   001CB0  6E24               	movwf	(_dtoa$2141+1)^0,c
  3058   001CB2  0E2B               	movlw	43
  3059   001CB4  6E23               	movwf	_dtoa$2141^0,c
  3060   001CB6  EF61  F00E         	goto	l6352
  3061   001CBA                     l6350:
  3062                           
  3063                           ; BSR set to: 0
  3064   001CBA  0E00               	movlw	0
  3065   001CBC  6E24               	movwf	(_dtoa$2141+1)^0,c
  3066   001CBE  0E2D               	movlw	45
  3067   001CC0  6E23               	movwf	_dtoa$2141^0,c
  3068   001CC2                     l6352:
  3069                           
  3070                           ; BSR set to: 0
  3071   001CC2  C023  F029         	movff	_dtoa$2141,dtoa@s
  3072   001CC6                     l1726:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3076   001CC6  0E00               	movlw	0
  3077   001CC8  6E2B               	movwf	(dtoa@i+1)^0,c
  3078   001CCA  0E1F               	movlw	31
  3079   001CCC  6E2A               	movwf	dtoa@i^0,c
  3080   001CCE                     
  3081                           ; BSR set to: 0
  3082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3083   001CCE  0E00               	movlw	0
  3084   001CD0  6FBE               	movwf	(_dbuf+31)& (0+255),b
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3087   001CD2  EF9B  F00E         	goto	l6366
  3088   001CD6                     l6356:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3091   001CD6  062A               	decf	dtoa@i^0,f,c
  3092   001CD8  A0D8               	btfss	status,0,c
  3093   001CDA  062B               	decf	(dtoa@i+1)^0,f,c
  3094   001CDC                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3096   001CDC  0E9F               	movlw	low _dbuf
  3097   001CDE  242A               	addwf	dtoa@i^0,w,c
  3098   001CE0  6ED9               	movwf	fsr2l,c
  3099   001CE2  0E00               	movlw	high _dbuf
  3100   001CE4  202B               	addwfc	(dtoa@i+1)^0,w,c
  3101   001CE6  6EDA               	movwf	fsr2h,c
  3102   001CE8  C021  F004         	movff	dtoa@d,___awmod@dividend
  3103   001CEC  C022  F005         	movff	dtoa@d+1,___awmod@dividend+1
  3104   001CF0  0E00               	movlw	0
  3105   001CF2  6E07               	movwf	(___awmod@divisor+1)^0,c
  3106   001CF4  0E0A               	movlw	10
  3107   001CF6  6E06               	movwf	___awmod@divisor^0,c
  3108   001CF8  EC68  F014         	call	___awmod	;wreg free
  3109   001CFC  C004  F00A         	movff	?___awmod,abs@a
  3110   001D00  C005  F00B         	movff	?___awmod+1,abs@a+1
  3111   001D04  EC5F  F017         	call	_abs	;wreg free
  3112   001D08  500A               	movf	?_abs^0,w,c
  3113   001D0A  0F30               	addlw	48
  3114   001D0C  6EDF               	movwf	indf2,c
  3115   001D0E                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3117   001D0E  0625               	decf	dtoa@p^0,f,c
  3118   001D10  A0D8               	btfss	status,0,c
  3119   001D12  0626               	decf	(dtoa@p+1)^0,f,c
  3120   001D14                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3122   001D14  0627               	decf	dtoa@w^0,f,c
  3123   001D16  A0D8               	btfss	status,0,c
  3124   001D18  0628               	decf	(dtoa@w+1)^0,f,c
  3125   001D1A                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3127   001D1A  C021  F004         	movff	dtoa@d,___awdiv@dividend
  3128   001D1E  C022  F005         	movff	dtoa@d+1,___awdiv@dividend+1
  3129   001D22  0E00               	movlw	0
  3130   001D24  6E07               	movwf	(___awdiv@divisor+1)^0,c
  3131   001D26  0E0A               	movlw	10
  3132   001D28  6E06               	movwf	___awdiv@divisor^0,c
  3133   001D2A  EC51  F013         	call	___awdiv	;wreg free
  3134   001D2E  C004  F021         	movff	?___awdiv,dtoa@d
  3135   001D32  C005  F022         	movff	?___awdiv+1,dtoa@d+1
  3136   001D36                     l6366:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3139   001D36  BE2B               	btfsc	(dtoa@i+1)^0,7,c
  3140   001D38  EFA6  F00E         	goto	u6011
  3141   001D3C  502B               	movf	(dtoa@i+1)^0,w,c
  3142   001D3E  E108               	bnz	u6010
  3143   001D40  042A               	decf	dtoa@i^0,w,c
  3144   001D42  A0D8               	btfss	status,0,c
  3145   001D44  EFA6  F00E         	goto	u6011
  3146   001D48  EFA8  F00E         	goto	u6010
  3147   001D4C                     u6011:
  3148   001D4C  EFBE  F00E         	goto	l6372
  3149   001D50                     u6010:
  3150   001D50  5021               	movf	dtoa@d^0,w,c
  3151   001D52  1022               	iorwf	(dtoa@d+1)^0,w,c
  3152   001D54  A4D8               	btfss	status,2,c
  3153   001D56  EFAF  F00E         	goto	u6021
  3154   001D5A  EFB1  F00E         	goto	u6020
  3155   001D5E                     u6021:
  3156   001D5E  EF6B  F00E         	goto	l6356
  3157   001D62                     u6020:
  3158   001D62  BE26               	btfsc	(dtoa@p+1)^0,7,c
  3159   001D64  EFBE  F00E         	goto	u6030
  3160   001D68  5026               	movf	(dtoa@p+1)^0,w,c
  3161   001D6A  E106               	bnz	u6031
  3162   001D6C  0425               	decf	dtoa@p^0,w,c
  3163   001D6E  B0D8               	btfsc	status,0,c
  3164   001D70  EFBC  F00E         	goto	u6031
  3165   001D74  EFBE  F00E         	goto	u6030
  3166   001D78                     u6031:
  3167   001D78  EF6B  F00E         	goto	l6356
  3168   001D7C                     u6030:
  3169   001D7C                     l6372:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3172   001D7C  5029               	movf	dtoa@s^0,w,c
  3173   001D7E  B4D8               	btfsc	status,2,c
  3174   001D80  EFC4  F00E         	goto	u6041
  3175   001D84  EFC6  F00E         	goto	u6040
  3176   001D88                     u6041:
  3177   001D88  EFD1  F00E         	goto	l6378
  3178   001D8C                     u6040:
  3179   001D8C                     
  3180                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3181   001D8C  062A               	decf	dtoa@i^0,f,c
  3182   001D8E  A0D8               	btfss	status,0,c
  3183   001D90  062B               	decf	(dtoa@i+1)^0,f,c
  3184   001D92                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3186   001D92  0E9F               	movlw	low _dbuf
  3187   001D94  242A               	addwf	dtoa@i^0,w,c
  3188   001D96  6ED9               	movwf	fsr2l,c
  3189   001D98  0E00               	movlw	high _dbuf
  3190   001D9A  202B               	addwfc	(dtoa@i+1)^0,w,c
  3191   001D9C  6EDA               	movwf	fsr2h,c
  3192   001D9E  C029  FFDF         	movff	dtoa@s,indf2
  3193   001DA2                     l6378:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3196   001DA2  C01F  F014         	movff	dtoa@fp,pad@fp
  3197   001DA6  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  3198   001DAA  0E9F               	movlw	low _dbuf
  3199   001DAC  242A               	addwf	dtoa@i^0,w,c
  3200   001DAE  6E16               	movwf	pad@buf^0,c
  3201   001DB0  0E00               	movlw	high _dbuf
  3202   001DB2  202B               	addwfc	(dtoa@i+1)^0,w,c
  3203   001DB4  6E17               	movwf	(pad@buf+1)^0,c
  3204   001DB6  C027  F018         	movff	dtoa@w,pad@p
  3205   001DBA  C028  F019         	movff	dtoa@w+1,pad@p+1
  3206   001DBE  EC55  F015         	call	_pad	;wreg free
  3207   001DC2  0012               	return		;funcret
  3208   001DC4                     __end_of_dtoa:
  3209                           	callstack 0
  3210                           
  3211 ;; *************** function _pad *****************
  3212 ;; Defined at:
  3213 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  3216 ;;		 -> sprintf@f(12), 
  3217 ;;  buf             2   21[COMRAM] PTR unsigned char 
  3218 ;;		 -> dbuf(32), 
  3219 ;;  p               2   23[COMRAM] int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  w               2   28[COMRAM] int 
  3222 ;;  i               2   26[COMRAM] int 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3232 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;Total ram usage:       11 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 7
  3239 ;; This function calls:
  3240 ;;		_fputc
  3241 ;;		_fputs
  3242 ;; This function is called by:
  3243 ;;		_dtoa
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text16
  3248   002AAA                     __ptext16:
  3249                           	callstack 0
  3250   002AAA                     _pad:
  3251                           	callstack 18
  3252   002AAA                     
  3253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3254   002AAA  BE19               	btfsc	(pad@p+1)^0,7,c
  3255   002AAC  EF5A  F015         	goto	u5921
  3256   002AB0  EF5C  F015         	goto	u5920
  3257   002AB4                     u5921:
  3258   002AB4  EF62  F015         	goto	l6318
  3259   002AB8                     u5920:
  3260   002AB8  C018  F01D         	movff	pad@p,pad@w
  3261   002ABC  C019  F01E         	movff	pad@p+1,pad@w+1
  3262   002AC0  EF66  F015         	goto	l1714
  3263   002AC4                     l6318:
  3264   002AC4  0E00               	movlw	0
  3265   002AC6  6E1E               	movwf	(pad@w+1)^0,c
  3266   002AC8  0E00               	movlw	0
  3267   002ACA  6E1D               	movwf	pad@w^0,c
  3268   002ACC                     l1714:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3271   002ACC  0E00               	movlw	0
  3272   002ACE  6E1C               	movwf	(pad@i+1)^0,c
  3273   002AD0  0E00               	movlw	0
  3274   002AD2  6E1B               	movwf	pad@i^0,c
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3277   002AD4  EF78  F015         	goto	l6324
  3278   002AD8                     l6320:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3281   002AD8  0E00               	movlw	0
  3282   002ADA  6E05               	movwf	(fputc@c+1)^0,c
  3283   002ADC  0E20               	movlw	32
  3284   002ADE  6E04               	movwf	fputc@c^0,c
  3285   002AE0  C014  F006         	movff	pad@fp,fputc@fp
  3286   002AE4  C015  F007         	movff	pad@fp+1,fputc@fp+1
  3287   002AE8  ECEC  F012         	call	_fputc	;wreg free
  3288   002AEC                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3290   002AEC  4A1B               	infsnz	pad@i^0,f,c
  3291   002AEE  2A1C               	incf	(pad@i+1)^0,f,c
  3292   002AF0                     l6324:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3295   002AF0  501D               	movf	pad@w^0,w,c
  3296   002AF2  5C1B               	subwf	pad@i^0,w,c
  3297   002AF4  501C               	movf	(pad@i+1)^0,w,c
  3298   002AF6  0A80               	xorlw	128
  3299   002AF8  6E1A               	movwf	??_pad^0,c
  3300   002AFA  501E               	movf	(pad@w+1)^0,w,c
  3301   002AFC  0A80               	xorlw	128
  3302   002AFE  581A               	subwfb	??_pad^0,w,c
  3303   002B00  A0D8               	btfss	status,0,c
  3304   002B02  EF85  F015         	goto	u5931
  3305   002B06  EF87  F015         	goto	u5930
  3306   002B0A                     u5931:
  3307   002B0A  EF6C  F015         	goto	l6320
  3308   002B0E                     u5930:
  3309   002B0E                     
  3310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3311   002B0E  C016  F00D         	movff	pad@buf,fputs@s
  3312   002B12  C017  F00E         	movff	pad@buf+1,fputs@s+1
  3313   002B16  C014  F00F         	movff	pad@fp,fputs@fp
  3314   002B1A  C015  F010         	movff	pad@fp+1,fputs@fp+1
  3315   002B1E  EC1C  F017         	call	_fputs	;wreg free
  3316   002B22  0012               	return		;funcret
  3317   002B24                     __end_of_pad:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function _fputs *****************
  3321 ;; Defined at:
  3322 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3325 ;;		 -> dbuf(32), 
  3326 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  3327 ;;		 -> sprintf@f(12), 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  i               2   17[COMRAM] int 
  3330 ;;  c               1   16[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2   12[COMRAM] int 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        7 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 6
  3347 ;; This function calls:
  3348 ;;		_fputc
  3349 ;; This function is called by:
  3350 ;;		_pad
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text17
  3355   002E38                     __ptext17:
  3356                           	callstack 0
  3357   002E38                     _fputs:
  3358                           	callstack 18
  3359   002E38  0E00               	movlw	0
  3360   002E3A  6E13               	movwf	(fputs@i+1)^0,c
  3361   002E3C  0E00               	movlw	0
  3362   002E3E  6E12               	movwf	fputs@i^0,c
  3363   002E40  EF2D  F017         	goto	l6232
  3364   002E44                     l6228:
  3365   002E44  C011  F004         	movff	fputs@c,fputc@c
  3366   002E48  6A05               	clrf	(fputc@c+1)^0,c
  3367   002E4A  C00F  F006         	movff	fputs@fp,fputc@fp
  3368   002E4E  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  3369   002E52  ECEC  F012         	call	_fputc	;wreg free
  3370   002E56  4A12               	infsnz	fputs@i^0,f,c
  3371   002E58  2A13               	incf	(fputs@i+1)^0,f,c
  3372   002E5A                     l6232:
  3373   002E5A  5012               	movf	fputs@i^0,w,c
  3374   002E5C  240D               	addwf	fputs@s^0,w,c
  3375   002E5E  6ED9               	movwf	fsr2l,c
  3376   002E60  5013               	movf	(fputs@i+1)^0,w,c
  3377   002E62  200E               	addwfc	(fputs@s+1)^0,w,c
  3378   002E64  6EDA               	movwf	fsr2h,c
  3379   002E66  50DF               	movf	indf2,w,c
  3380   002E68  6E11               	movwf	fputs@c^0,c
  3381   002E6A  5011               	movf	fputs@c^0,w,c
  3382   002E6C  A4D8               	btfss	status,2,c
  3383   002E6E  EF3B  F017         	goto	u5791
  3384   002E72  EF3D  F017         	goto	u5790
  3385   002E76                     u5791:
  3386   002E76  EF22  F017         	goto	l6228
  3387   002E7A                     u5790:
  3388   002E7A  0012               	return		;funcret
  3389   002E7C                     __end_of_fputs:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _fputc *****************
  3393 ;; Defined at:
  3394 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  c               2    3[COMRAM] int 
  3397 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  3398 ;;		 -> sprintf@f(12), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  2    3[COMRAM] int 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        9 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 5
  3417 ;; This function calls:
  3418 ;;		_putch
  3419 ;; This function is called by:
  3420 ;;		_pad
  3421 ;;		_vfpfcnvrt
  3422 ;;		_fputs
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text18
  3427   0025D8                     __ptext18:
  3428                           	callstack 0
  3429   0025D8                     _fputc:
  3430                           	callstack 21
  3431   0025D8  5006               	movf	fputc@fp^0,w,c
  3432   0025DA  1007               	iorwf	(fputc@fp+1)^0,w,c
  3433   0025DC  B4D8               	btfsc	status,2,c
  3434   0025DE  EFF3  F012         	goto	u5751
  3435   0025E2  EFF5  F012         	goto	u5750
  3436   0025E6                     u5751:
  3437   0025E6  EFFE  F012         	goto	l6216
  3438   0025EA                     u5750:
  3439   0025EA  5006               	movf	fputc@fp^0,w,c
  3440   0025EC  1007               	iorwf	(fputc@fp+1)^0,w,c
  3441   0025EE  A4D8               	btfss	status,2,c
  3442   0025F0  EFFC  F012         	goto	u5761
  3443   0025F4  EFFE  F012         	goto	u5760
  3444   0025F8                     u5761:
  3445   0025F8  EF03  F013         	goto	l6218
  3446   0025FC                     u5760:
  3447   0025FC                     l6216:
  3448   0025FC  5004               	movf	fputc@c^0,w,c
  3449   0025FE  ECDE  F017         	call	_putch
  3450   002602  EF50  F013         	goto	l1769
  3451   002606                     l6218:
  3452   002606  EE20 F00A          	lfsr	2,10
  3453   00260A  5006               	movf	fputc@fp^0,w,c
  3454   00260C  26D9               	addwf	fsr2l,f,c
  3455   00260E  5007               	movf	(fputc@fp+1)^0,w,c
  3456   002610  22DA               	addwfc	fsr2h,f,c
  3457   002612  50DE               	movf	postinc2,w,c
  3458   002614  10DE               	iorwf	postinc2,w,c
  3459   002616  B4D8               	btfsc	status,2,c
  3460   002618  EF10  F013         	goto	u5771
  3461   00261C  EF12  F013         	goto	u5770
  3462   002620                     u5771:
  3463   002620  EF2D  F013         	goto	l6222
  3464   002624                     u5770:
  3465   002624  EE20 F00A          	lfsr	2,10
  3466   002628  5006               	movf	fputc@fp^0,w,c
  3467   00262A  26D9               	addwf	fsr2l,f,c
  3468   00262C  5007               	movf	(fputc@fp+1)^0,w,c
  3469   00262E  22DA               	addwfc	fsr2h,f,c
  3470   002630  EE10 F003          	lfsr	1,3
  3471   002634  5006               	movf	fputc@fp^0,w,c
  3472   002636  26E1               	addwf	fsr1l,f,c
  3473   002638  5007               	movf	(fputc@fp+1)^0,w,c
  3474   00263A  22E2               	addwfc	fsr1h,f,c
  3475   00263C  50DE               	movf	postinc2,w,c
  3476   00263E  5CE6               	subwf	postinc1,w,c
  3477   002640  50E6               	movf	postinc1,w,c
  3478   002642  0A80               	xorlw	128
  3479   002644  6E0C               	movwf	(??_fputc+4)^0,c
  3480   002646  50DE               	movf	postinc2,w,c
  3481   002648  0A80               	xorlw	128
  3482   00264A  580C               	subwfb	(??_fputc+4)^0,w,c
  3483   00264C  B0D8               	btfsc	status,0,c
  3484   00264E  EF2B  F013         	goto	u5781
  3485   002652  EF2D  F013         	goto	u5780
  3486   002656                     u5781:
  3487   002656  EF50  F013         	goto	l1769
  3488   00265A                     u5780:
  3489   00265A                     l6222:
  3490   00265A  EE20 F003          	lfsr	2,3
  3491   00265E  5006               	movf	fputc@fp^0,w,c
  3492   002660  26D9               	addwf	fsr2l,f,c
  3493   002662  5007               	movf	(fputc@fp+1)^0,w,c
  3494   002664  22DA               	addwfc	fsr2h,f,c
  3495   002666  CFDE F008          	movff	postinc2,??_fputc
  3496   00266A  CFDD F009          	movff	postdec2,??_fputc+1
  3497   00266E  C006  FFD9         	movff	fputc@fp,fsr2l
  3498   002672  C007  FFDA         	movff	fputc@fp+1,fsr2h
  3499   002676  CFDE F00A          	movff	postinc2,??_fputc+2
  3500   00267A  CFDD F00B          	movff	postdec2,??_fputc+3
  3501   00267E  5008               	movf	??_fputc^0,w,c
  3502   002680  240A               	addwf	(??_fputc+2)^0,w,c
  3503   002682  6ED9               	movwf	fsr2l,c
  3504   002684  5009               	movf	(??_fputc+1)^0,w,c
  3505   002686  200B               	addwfc	(??_fputc+3)^0,w,c
  3506   002688  6EDA               	movwf	fsr2h,c
  3507   00268A  C004  FFDF         	movff	fputc@c,indf2
  3508   00268E  EE20 F003          	lfsr	2,3
  3509   002692  5006               	movf	fputc@fp^0,w,c
  3510   002694  26D9               	addwf	fsr2l,f,c
  3511   002696  5007               	movf	(fputc@fp+1)^0,w,c
  3512   002698  22DA               	addwfc	fsr2h,f,c
  3513   00269A  2ADE               	incf	postinc2,f,c
  3514   00269C  0E00               	movlw	0
  3515   00269E  22DD               	addwfc	postdec2,f,c
  3516   0026A0                     l1769:
  3517   0026A0  0012               	return		;funcret
  3518   0026A2                     __end_of_fputc:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _putch *****************
  3522 ;; Defined at:
  3523 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  c               1    wreg     unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  c               1    0[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used: 1
  3543 ;; Hardware stack levels required when called: 4
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_fputc
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text19
  3552   002FBC                     __ptext19:
  3553                           	callstack 0
  3554   002FBC                     _putch:
  3555                           	callstack 21
  3556   002FBC  0012               	return		;funcret
  3557   002FBE                     __end_of_putch:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _abs *****************
  3561 ;; Defined at:
  3562 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  a               2    9[COMRAM] int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  2    9[COMRAM] int 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;Total ram usage:        4 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 4
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_dtoa
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text20
  3591   002EBE                     __ptext20:
  3592                           	callstack 0
  3593   002EBE                     _abs:
  3594                           	callstack 21
  3595   002EBE  BE0B               	btfsc	(abs@a+1)^0,7,c
  3596   002EC0  EF6C  F017         	goto	u5940
  3597   002EC4  500B               	movf	(abs@a+1)^0,w,c
  3598   002EC6  E106               	bnz	u5941
  3599   002EC8  040A               	decf	abs@a^0,w,c
  3600   002ECA  B0D8               	btfsc	status,0,c
  3601   002ECC  EF6A  F017         	goto	u5941
  3602   002ED0  EF6C  F017         	goto	u5940
  3603   002ED4                     u5941:
  3604   002ED4  EF7A  F017         	goto	l1754
  3605   002ED8                     u5940:
  3606   002ED8  C00A  F00C         	movff	abs@a,??_abs
  3607   002EDC  C00B  F00D         	movff	abs@a+1,??_abs+1
  3608   002EE0  1E0C               	comf	??_abs^0,f,c
  3609   002EE2  1E0D               	comf	(??_abs+1)^0,f,c
  3610   002EE4  4A0C               	infsnz	??_abs^0,f,c
  3611   002EE6  2A0D               	incf	(??_abs+1)^0,f,c
  3612   002EE8  C00C  F00A         	movff	??_abs,?_abs
  3613   002EEC  C00D  F00B         	movff	??_abs+1,?_abs+1
  3614   002EF0  EF7E  F017         	goto	l1757
  3615   002EF4                     l1754:
  3616   002EF4  C00A  F00A         	movff	abs@a,?_abs
  3617   002EF8  C00B  F00B         	movff	abs@a+1,?_abs+1
  3618   002EFC                     l1757:
  3619   002EFC  0012               	return		;funcret
  3620   002EFE                     __end_of_abs:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function ___awmod *****************
  3624 ;; Defined at:
  3625 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  dividend        2    3[COMRAM] int 
  3628 ;;  divisor         2    5[COMRAM] int 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  sign            1    8[COMRAM] unsigned char 
  3631 ;;  counter         1    7[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2    3[COMRAM] int 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;Total ram usage:        6 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 4
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_dtoa
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text21
  3656   0028D0                     __ptext21:
  3657                           	callstack 0
  3658   0028D0                     ___awmod:
  3659                           	callstack 21
  3660   0028D0  0E00               	movlw	0
  3661   0028D2  6E09               	movwf	___awmod@sign^0,c
  3662   0028D4  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  3663   0028D6  EF71  F014         	goto	u5860
  3664   0028DA  EF6F  F014         	goto	u5861
  3665   0028DE                     u5861:
  3666   0028DE  EF77  F014         	goto	l6286
  3667   0028E2                     u5860:
  3668   0028E2  6C04               	negf	___awmod@dividend^0,c
  3669   0028E4  1E05               	comf	(___awmod@dividend+1)^0,f,c
  3670   0028E6  B0D8               	btfsc	status,0,c
  3671   0028E8  2A05               	incf	(___awmod@dividend+1)^0,f,c
  3672   0028EA  0E01               	movlw	1
  3673   0028EC  6E09               	movwf	___awmod@sign^0,c
  3674   0028EE                     l6286:
  3675   0028EE  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  3676   0028F0  EF7E  F014         	goto	u5870
  3677   0028F4  EF7C  F014         	goto	u5871
  3678   0028F8                     u5871:
  3679   0028F8  EF82  F014         	goto	l6290
  3680   0028FC                     u5870:
  3681   0028FC  6C06               	negf	___awmod@divisor^0,c
  3682   0028FE  1E07               	comf	(___awmod@divisor+1)^0,f,c
  3683   002900  B0D8               	btfsc	status,0,c
  3684   002902  2A07               	incf	(___awmod@divisor+1)^0,f,c
  3685   002904                     l6290:
  3686   002904  5006               	movf	___awmod@divisor^0,w,c
  3687   002906  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  3688   002908  B4D8               	btfsc	status,2,c
  3689   00290A  EF89  F014         	goto	u5881
  3690   00290E  EF8B  F014         	goto	u5880
  3691   002912                     u5881:
  3692   002912  EFAF  F014         	goto	l6306
  3693   002916                     u5880:
  3694   002916  0E01               	movlw	1
  3695   002918  6E08               	movwf	___awmod@counter^0,c
  3696   00291A  EF93  F014         	goto	l6296
  3697   00291E                     l6294:
  3698   00291E  90D8               	bcf	status,0,c
  3699   002920  3606               	rlcf	___awmod@divisor^0,f,c
  3700   002922  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  3701   002924  2A08               	incf	___awmod@counter^0,f,c
  3702   002926                     l6296:
  3703   002926  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  3704   002928  EF98  F014         	goto	u5891
  3705   00292C  EF9A  F014         	goto	u5890
  3706   002930                     u5891:
  3707   002930  EF8F  F014         	goto	l6294
  3708   002934                     u5890:
  3709   002934                     l6298:
  3710   002934  5006               	movf	___awmod@divisor^0,w,c
  3711   002936  5C04               	subwf	___awmod@dividend^0,w,c
  3712   002938  5007               	movf	(___awmod@divisor+1)^0,w,c
  3713   00293A  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  3714   00293C  A0D8               	btfss	status,0,c
  3715   00293E  EFA3  F014         	goto	u5901
  3716   002942  EFA5  F014         	goto	u5900
  3717   002946                     u5901:
  3718   002946  EFA9  F014         	goto	l6302
  3719   00294A                     u5900:
  3720   00294A  5006               	movf	___awmod@divisor^0,w,c
  3721   00294C  5E04               	subwf	___awmod@dividend^0,f,c
  3722   00294E  5007               	movf	(___awmod@divisor+1)^0,w,c
  3723   002950  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  3724   002952                     l6302:
  3725   002952  90D8               	bcf	status,0,c
  3726   002954  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  3727   002956  3206               	rrcf	___awmod@divisor^0,f,c
  3728   002958  2E08               	decfsz	___awmod@counter^0,f,c
  3729   00295A  EF9A  F014         	goto	l6298
  3730   00295E                     l6306:
  3731   00295E  5009               	movf	___awmod@sign^0,w,c
  3732   002960  B4D8               	btfsc	status,2,c
  3733   002962  EFB5  F014         	goto	u5911
  3734   002966  EFB7  F014         	goto	u5910
  3735   00296A                     u5911:
  3736   00296A  EFBB  F014         	goto	l6310
  3737   00296E                     u5910:
  3738   00296E  6C04               	negf	___awmod@dividend^0,c
  3739   002970  1E05               	comf	(___awmod@dividend+1)^0,f,c
  3740   002972  B0D8               	btfsc	status,0,c
  3741   002974  2A05               	incf	(___awmod@dividend+1)^0,f,c
  3742   002976                     l6310:
  3743   002976  C004  F004         	movff	___awmod@dividend,?___awmod
  3744   00297A  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  3745   00297E  0012               	return		;funcret
  3746   002980                     __end_of___awmod:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function ___awdiv *****************
  3750 ;; Defined at:
  3751 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  dividend        2    3[COMRAM] int 
  3754 ;;  divisor         2    5[COMRAM] int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  quotient        2    9[COMRAM] int 
  3757 ;;  sign            1    8[COMRAM] unsigned char 
  3758 ;;  counter         1    7[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2    3[COMRAM] int 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;Total ram usage:        8 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 4
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_dtoa
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text22
  3783   0026A2                     __ptext22:
  3784                           	callstack 0
  3785   0026A2                     ___awdiv:
  3786                           	callstack 21
  3787   0026A2  0E00               	movlw	0
  3788   0026A4  6E09               	movwf	___awdiv@sign^0,c
  3789   0026A6  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  3790   0026A8  EF5A  F013         	goto	u5800
  3791   0026AC  EF58  F013         	goto	u5801
  3792   0026B0                     u5801:
  3793   0026B0  EF60  F013         	goto	l6242
  3794   0026B4                     u5800:
  3795   0026B4  6C06               	negf	___awdiv@divisor^0,c
  3796   0026B6  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  3797   0026B8  B0D8               	btfsc	status,0,c
  3798   0026BA  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  3799   0026BC  0E01               	movlw	1
  3800   0026BE  6E09               	movwf	___awdiv@sign^0,c
  3801   0026C0                     l6242:
  3802   0026C0  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  3803   0026C2  EF67  F013         	goto	u5810
  3804   0026C6  EF65  F013         	goto	u5811
  3805   0026CA                     u5811:
  3806   0026CA  EF6D  F013         	goto	l6248
  3807   0026CE                     u5810:
  3808   0026CE  6C04               	negf	___awdiv@dividend^0,c
  3809   0026D0  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  3810   0026D2  B0D8               	btfsc	status,0,c
  3811   0026D4  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  3812   0026D6  0E01               	movlw	1
  3813   0026D8  1A09               	xorwf	___awdiv@sign^0,f,c
  3814   0026DA                     l6248:
  3815   0026DA  0E00               	movlw	0
  3816   0026DC  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  3817   0026DE  0E00               	movlw	0
  3818   0026E0  6E0A               	movwf	___awdiv@quotient^0,c
  3819   0026E2  5006               	movf	___awdiv@divisor^0,w,c
  3820   0026E4  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  3821   0026E6  B4D8               	btfsc	status,2,c
  3822   0026E8  EF78  F013         	goto	u5821
  3823   0026EC  EF7A  F013         	goto	u5820
  3824   0026F0                     u5821:
  3825   0026F0  EFA2  F013         	goto	l6270
  3826   0026F4                     u5820:
  3827   0026F4  0E01               	movlw	1
  3828   0026F6  6E08               	movwf	___awdiv@counter^0,c
  3829   0026F8  EF82  F013         	goto	l6256
  3830   0026FC                     l6254:
  3831   0026FC  90D8               	bcf	status,0,c
  3832   0026FE  3606               	rlcf	___awdiv@divisor^0,f,c
  3833   002700  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  3834   002702  2A08               	incf	___awdiv@counter^0,f,c
  3835   002704                     l6256:
  3836   002704  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  3837   002706  EF87  F013         	goto	u5831
  3838   00270A  EF89  F013         	goto	u5830
  3839   00270E                     u5831:
  3840   00270E  EF7E  F013         	goto	l6254
  3841   002712                     u5830:
  3842   002712                     l6258:
  3843   002712  90D8               	bcf	status,0,c
  3844   002714  360A               	rlcf	___awdiv@quotient^0,f,c
  3845   002716  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  3846   002718  5006               	movf	___awdiv@divisor^0,w,c
  3847   00271A  5C04               	subwf	___awdiv@dividend^0,w,c
  3848   00271C  5007               	movf	(___awdiv@divisor+1)^0,w,c
  3849   00271E  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  3850   002720  A0D8               	btfss	status,0,c
  3851   002722  EF95  F013         	goto	u5841
  3852   002726  EF97  F013         	goto	u5840
  3853   00272A                     u5841:
  3854   00272A  EF9C  F013         	goto	l6266
  3855   00272E                     u5840:
  3856   00272E  5006               	movf	___awdiv@divisor^0,w,c
  3857   002730  5E04               	subwf	___awdiv@dividend^0,f,c
  3858   002732  5007               	movf	(___awdiv@divisor+1)^0,w,c
  3859   002734  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  3860   002736  800A               	bsf	___awdiv@quotient^0,0,c
  3861   002738                     l6266:
  3862   002738  90D8               	bcf	status,0,c
  3863   00273A  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  3864   00273C  3206               	rrcf	___awdiv@divisor^0,f,c
  3865   00273E  2E08               	decfsz	___awdiv@counter^0,f,c
  3866   002740  EF89  F013         	goto	l6258
  3867   002744                     l6270:
  3868   002744  5009               	movf	___awdiv@sign^0,w,c
  3869   002746  B4D8               	btfsc	status,2,c
  3870   002748  EFA8  F013         	goto	u5851
  3871   00274C  EFAA  F013         	goto	u5850
  3872   002750                     u5851:
  3873   002750  EFAE  F013         	goto	l6274
  3874   002754                     u5850:
  3875   002754  6C0A               	negf	___awdiv@quotient^0,c
  3876   002756  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  3877   002758  B0D8               	btfsc	status,0,c
  3878   00275A  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  3879   00275C                     l6274:
  3880   00275C  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  3881   002760  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  3882   002764  0012               	return		;funcret
  3883   002766                     __end_of___awdiv:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _memset *****************
  3887 ;; Defined at:
  3888 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  dest            2    3[COMRAM] PTR void 
  3891 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3892 ;;  c               2    5[COMRAM] int 
  3893 ;;  n               2    7[COMRAM] unsigned int 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  s               2   13[COMRAM] PTR unsigned char 
  3896 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3897 ;;  k               2   11[COMRAM] unsigned int 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2    3[COMRAM] PTR void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:       12 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 4
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_convert_uint16_to_string
  3918 ;;		_convert_uint8_to_string
  3919 ;;		_convert_uint32_to_string
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text23
  3924   001DC4                     __ptext23:
  3925                           	callstack 0
  3926   001DC4                     _memset:
  3927                           	callstack 25
  3928   001DC4  C004  F00E         	movff	memset@dest,memset@s
  3929   001DC8  C005  F00F         	movff	memset@dest+1,memset@s+1
  3930   001DCC  5008               	movf	memset@n^0,w,c
  3931   001DCE  1009               	iorwf	(memset@n+1)^0,w,c
  3932   001DD0  A4D8               	btfss	status,2,c
  3933   001DD2  EFED  F00E         	goto	u6091
  3934   001DD6  EFEF  F00E         	goto	u6090
  3935   001DDA                     u6091:
  3936   001DDA  EFF1  F00E         	goto	l6426
  3937   001DDE                     u6090:
  3938   001DDE  EF9C  F00F         	goto	l1679
  3939   001DE2                     l6426:
  3940   001DE2  C00E  FFD9         	movff	memset@s,fsr2l
  3941   001DE6  C00F  FFDA         	movff	memset@s+1,fsr2h
  3942   001DEA  C006  FFDF         	movff	memset@c,indf2
  3943   001DEE  5008               	movf	memset@n^0,w,c
  3944   001DF0  240E               	addwf	memset@s^0,w,c
  3945   001DF2  6E0A               	movwf	??_memset^0,c
  3946   001DF4  5009               	movf	(memset@n+1)^0,w,c
  3947   001DF6  200F               	addwfc	(memset@s+1)^0,w,c
  3948   001DF8  6E0B               	movwf	(??_memset+1)^0,c
  3949   001DFA  0EFF               	movlw	255
  3950   001DFC  240A               	addwf	??_memset^0,w,c
  3951   001DFE  6ED9               	movwf	fsr2l,c
  3952   001E00  0EFF               	movlw	255
  3953   001E02  200B               	addwfc	(??_memset+1)^0,w,c
  3954   001E04  6EDA               	movwf	fsr2h,c
  3955   001E06  C006  FFDF         	movff	memset@c,indf2
  3956   001E0A  5009               	movf	(memset@n+1)^0,w,c
  3957   001E0C  E107               	bnz	u6101
  3958   001E0E  0E03               	movlw	3
  3959   001E10  5C08               	subwf	memset@n^0,w,c
  3960   001E12  B0D8               	btfsc	status,0,c
  3961   001E14  EF0E  F00F         	goto	u6101
  3962   001E18  EF10  F00F         	goto	u6100
  3963   001E1C                     u6101:
  3964   001E1C  EF12  F00F         	goto	l6432
  3965   001E20                     u6100:
  3966   001E20  EF9C  F00F         	goto	l1679
  3967   001E24                     l6432:
  3968   001E24  EE20 F001          	lfsr	2,1
  3969   001E28  500E               	movf	memset@s^0,w,c
  3970   001E2A  26D9               	addwf	fsr2l,f,c
  3971   001E2C  500F               	movf	(memset@s+1)^0,w,c
  3972   001E2E  22DA               	addwfc	fsr2h,f,c
  3973   001E30  C006  FFDF         	movff	memset@c,indf2
  3974   001E34  EE20 F002          	lfsr	2,2
  3975   001E38  500E               	movf	memset@s^0,w,c
  3976   001E3A  26D9               	addwf	fsr2l,f,c
  3977   001E3C  500F               	movf	(memset@s+1)^0,w,c
  3978   001E3E  22DA               	addwfc	fsr2h,f,c
  3979   001E40  C006  FFDF         	movff	memset@c,indf2
  3980   001E44  5008               	movf	memset@n^0,w,c
  3981   001E46  240E               	addwf	memset@s^0,w,c
  3982   001E48  6E0A               	movwf	??_memset^0,c
  3983   001E4A  5009               	movf	(memset@n+1)^0,w,c
  3984   001E4C  200F               	addwfc	(memset@s+1)^0,w,c
  3985   001E4E  6E0B               	movwf	(??_memset+1)^0,c
  3986   001E50  0EFE               	movlw	254
  3987   001E52  240A               	addwf	??_memset^0,w,c
  3988   001E54  6ED9               	movwf	fsr2l,c
  3989   001E56  0EFF               	movlw	255
  3990   001E58  200B               	addwfc	(??_memset+1)^0,w,c
  3991   001E5A  6EDA               	movwf	fsr2h,c
  3992   001E5C  C006  FFDF         	movff	memset@c,indf2
  3993   001E60  5008               	movf	memset@n^0,w,c
  3994   001E62  240E               	addwf	memset@s^0,w,c
  3995   001E64  6E0A               	movwf	??_memset^0,c
  3996   001E66  5009               	movf	(memset@n+1)^0,w,c
  3997   001E68  200F               	addwfc	(memset@s+1)^0,w,c
  3998   001E6A  6E0B               	movwf	(??_memset+1)^0,c
  3999   001E6C  0EFD               	movlw	253
  4000   001E6E  240A               	addwf	??_memset^0,w,c
  4001   001E70  6ED9               	movwf	fsr2l,c
  4002   001E72  0EFF               	movlw	255
  4003   001E74  200B               	addwfc	(??_memset+1)^0,w,c
  4004   001E76  6EDA               	movwf	fsr2h,c
  4005   001E78  C006  FFDF         	movff	memset@c,indf2
  4006   001E7C  5009               	movf	(memset@n+1)^0,w,c
  4007   001E7E  E107               	bnz	u6111
  4008   001E80  0E07               	movlw	7
  4009   001E82  5C08               	subwf	memset@n^0,w,c
  4010   001E84  B0D8               	btfsc	status,0,c
  4011   001E86  EF47  F00F         	goto	u6111
  4012   001E8A  EF49  F00F         	goto	u6110
  4013   001E8E                     u6111:
  4014   001E8E  EF4B  F00F         	goto	l6438
  4015   001E92                     u6110:
  4016   001E92  EF9C  F00F         	goto	l1679
  4017   001E96                     l6438:
  4018   001E96  EE20 F003          	lfsr	2,3
  4019   001E9A  500E               	movf	memset@s^0,w,c
  4020   001E9C  26D9               	addwf	fsr2l,f,c
  4021   001E9E  500F               	movf	(memset@s+1)^0,w,c
  4022   001EA0  22DA               	addwfc	fsr2h,f,c
  4023   001EA2  C006  FFDF         	movff	memset@c,indf2
  4024   001EA6  5008               	movf	memset@n^0,w,c
  4025   001EA8  240E               	addwf	memset@s^0,w,c
  4026   001EAA  6E0A               	movwf	??_memset^0,c
  4027   001EAC  5009               	movf	(memset@n+1)^0,w,c
  4028   001EAE  200F               	addwfc	(memset@s+1)^0,w,c
  4029   001EB0  6E0B               	movwf	(??_memset+1)^0,c
  4030   001EB2  0EFC               	movlw	252
  4031   001EB4  240A               	addwf	??_memset^0,w,c
  4032   001EB6  6ED9               	movwf	fsr2l,c
  4033   001EB8  0EFF               	movlw	255
  4034   001EBA  200B               	addwfc	(??_memset+1)^0,w,c
  4035   001EBC  6EDA               	movwf	fsr2h,c
  4036   001EBE  C006  FFDF         	movff	memset@c,indf2
  4037   001EC2  5009               	movf	(memset@n+1)^0,w,c
  4038   001EC4  E107               	bnz	u6121
  4039   001EC6  0E09               	movlw	9
  4040   001EC8  5C08               	subwf	memset@n^0,w,c
  4041   001ECA  B0D8               	btfsc	status,0,c
  4042   001ECC  EF6A  F00F         	goto	u6121
  4043   001ED0  EF6C  F00F         	goto	u6120
  4044   001ED4                     u6121:
  4045   001ED4  EF6E  F00F         	goto	l6444
  4046   001ED8                     u6120:
  4047   001ED8  EF9C  F00F         	goto	l1679
  4048   001EDC                     l6444:
  4049   001EDC  C00E  F00A         	movff	memset@s,??_memset
  4050   001EE0  C00F  F00B         	movff	memset@s+1,??_memset+1
  4051   001EE4  1E0A               	comf	??_memset^0,f,c
  4052   001EE6  1E0B               	comf	(??_memset+1)^0,f,c
  4053   001EE8  4A0A               	infsnz	??_memset^0,f,c
  4054   001EEA  2A0B               	incf	(??_memset+1)^0,f,c
  4055   001EEC  0E03               	movlw	3
  4056   001EEE  140A               	andwf	??_memset^0,w,c
  4057   001EF0  6E0C               	movwf	memset@k^0,c
  4058   001EF2  6A0D               	clrf	(memset@k+1)^0,c
  4059   001EF4  500C               	movf	memset@k^0,w,c
  4060   001EF6  260E               	addwf	memset@s^0,f,c
  4061   001EF8  500D               	movf	(memset@k+1)^0,w,c
  4062   001EFA  220F               	addwfc	(memset@s+1)^0,f,c
  4063   001EFC  500C               	movf	memset@k^0,w,c
  4064   001EFE  5E08               	subwf	memset@n^0,f,c
  4065   001F00  500D               	movf	(memset@k+1)^0,w,c
  4066   001F02  5A09               	subwfb	(memset@n+1)^0,f,c
  4067   001F04  0EFC               	movlw	252
  4068   001F06  1608               	andwf	memset@n^0,f,c
  4069   001F08  0EFF               	movlw	255
  4070   001F0A  1609               	andwf	(memset@n+1)^0,f,c
  4071   001F0C  EF93  F00F         	goto	l6452
  4072   001F10                     l6446:
  4073   001F10  C00E  FFD9         	movff	memset@s,fsr2l
  4074   001F14  C00F  FFDA         	movff	memset@s+1,fsr2h
  4075   001F18  C006  FFDF         	movff	memset@c,indf2
  4076   001F1C  0608               	decf	memset@n^0,f,c
  4077   001F1E  A0D8               	btfss	status,0,c
  4078   001F20  0609               	decf	(memset@n+1)^0,f,c
  4079   001F22  4A0E               	infsnz	memset@s^0,f,c
  4080   001F24  2A0F               	incf	(memset@s+1)^0,f,c
  4081   001F26                     l6452:
  4082   001F26  5008               	movf	memset@n^0,w,c
  4083   001F28  1009               	iorwf	(memset@n+1)^0,w,c
  4084   001F2A  A4D8               	btfss	status,2,c
  4085   001F2C  EF9A  F00F         	goto	u6131
  4086   001F30  EF9C  F00F         	goto	u6130
  4087   001F34                     u6131:
  4088   001F34  EF88  F00F         	goto	l6446
  4089   001F38                     u6130:
  4090   001F38                     l1679:
  4091   001F38  0012               	return		;funcret
  4092   001F3A                     __end_of_memset:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function ___xxtofl *****************
  4096 ;; Defined at:
  4097 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  sign            1    wreg     unsigned char 
  4100 ;;  val             4    3[COMRAM] long 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  sign            1   11[COMRAM] unsigned char 
  4103 ;;  arg             4   13[COMRAM] unsigned long 
  4104 ;;  exp             1   12[COMRAM] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  4    3[COMRAM] unsigned char 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:       14 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 4
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_main
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text24
  4129   001A7C                     __ptext24:
  4130                           	callstack 0
  4131   001A7C                     ___xxtofl:
  4132                           	callstack 26
  4133                           
  4134                           ;incstack = 0
  4135                           ;___xxtofl@sign stored from wreg
  4136   001A7C  6E0C               	movwf	___xxtofl@sign^0,c
  4137   001A7E  500C               	movf	___xxtofl@sign^0,w,c
  4138   001A80  B4D8               	btfsc	status,2,c
  4139   001A82  EF45  F00D         	goto	u4601
  4140   001A86  EF47  F00D         	goto	u4600
  4141   001A8A                     u4601:
  4142   001A8A  EF69  F00D         	goto	l1659
  4143   001A8E                     u4600:
  4144   001A8E  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  4145   001A90  EF4E  F00D         	goto	u4610
  4146   001A94  EF4C  F00D         	goto	u4611
  4147   001A98                     u4611:
  4148   001A98  EF69  F00D         	goto	l1659
  4149   001A9C                     u4610:
  4150   001A9C  C004  F008         	movff	___xxtofl@val,??___xxtofl
  4151   001AA0  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  4152   001AA4  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  4153   001AA8  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  4154   001AAC  1E08               	comf	??___xxtofl^0,f,c
  4155   001AAE  1E09               	comf	(??___xxtofl+1)^0,f,c
  4156   001AB0  1E0A               	comf	(??___xxtofl+2)^0,f,c
  4157   001AB2  1E0B               	comf	(??___xxtofl+3)^0,f,c
  4158   001AB4  2A08               	incf	??___xxtofl^0,f,c
  4159   001AB6  0E00               	movlw	0
  4160   001AB8  2209               	addwfc	(??___xxtofl+1)^0,f,c
  4161   001ABA  220A               	addwfc	(??___xxtofl+2)^0,f,c
  4162   001ABC  220B               	addwfc	(??___xxtofl+3)^0,f,c
  4163   001ABE  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  4164   001AC2  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  4165   001AC6  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  4166   001ACA  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  4167   001ACE  EF71  F00D         	goto	l5280
  4168   001AD2                     l1659:
  4169   001AD2  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  4170   001AD6  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4171   001ADA  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4172   001ADE  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4173   001AE2                     l5280:
  4174   001AE2  5004               	movf	___xxtofl@val^0,w,c
  4175   001AE4  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  4176   001AE6  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  4177   001AE8  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  4178   001AEA  A4D8               	btfss	status,2,c
  4179   001AEC  EF7A  F00D         	goto	u4621
  4180   001AF0  EF7C  F00D         	goto	u4620
  4181   001AF4                     u4621:
  4182   001AF4  EF86  F00D         	goto	l5286
  4183   001AF8                     u4620:
  4184   001AF8  0E00               	movlw	0
  4185   001AFA  6E04               	movwf	?___xxtofl^0,c
  4186   001AFC  0E00               	movlw	0
  4187   001AFE  6E05               	movwf	(?___xxtofl+1)^0,c
  4188   001B00  0E00               	movlw	0
  4189   001B02  6E06               	movwf	(?___xxtofl+2)^0,c
  4190   001B04  0E00               	movlw	0
  4191   001B06  6E07               	movwf	(?___xxtofl+3)^0,c
  4192   001B08  EF17  F00E         	goto	l1662
  4193   001B0C                     l5286:
  4194   001B0C  0E96               	movlw	150
  4195   001B0E  6E0D               	movwf	___xxtofl@exp^0,c
  4196   001B10  EF90  F00D         	goto	l5290
  4197   001B14                     l5288:
  4198   001B14  2A0D               	incf	___xxtofl@exp^0,f,c
  4199   001B16  90D8               	bcf	status,0,c
  4200   001B18  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  4201   001B1A  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  4202   001B1C  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4203   001B1E  320E               	rrcf	___xxtofl@arg^0,f,c
  4204   001B20                     l5290:
  4205   001B20  0E00               	movlw	0
  4206   001B22  140E               	andwf	___xxtofl@arg^0,w,c
  4207   001B24  6E08               	movwf	??___xxtofl^0,c
  4208   001B26  0E00               	movlw	0
  4209   001B28  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  4210   001B2A  6E09               	movwf	(??___xxtofl+1)^0,c
  4211   001B2C  0E00               	movlw	0
  4212   001B2E  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  4213   001B30  6E0A               	movwf	(??___xxtofl+2)^0,c
  4214   001B32  0EFE               	movlw	254
  4215   001B34  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  4216   001B36  6E0B               	movwf	(??___xxtofl+3)^0,c
  4217   001B38  5008               	movf	??___xxtofl^0,w,c
  4218   001B3A  1009               	iorwf	(??___xxtofl+1)^0,w,c
  4219   001B3C  100A               	iorwf	(??___xxtofl+2)^0,w,c
  4220   001B3E  100B               	iorwf	(??___xxtofl+3)^0,w,c
  4221   001B40  A4D8               	btfss	status,2,c
  4222   001B42  EFA5  F00D         	goto	u4631
  4223   001B46  EFA7  F00D         	goto	u4630
  4224   001B4A                     u4631:
  4225   001B4A  EF8A  F00D         	goto	l5288
  4226   001B4E                     u4630:
  4227   001B4E  EFB5  F00D         	goto	l1666
  4228   001B52                     l5292:
  4229   001B52  2A0D               	incf	___xxtofl@exp^0,f,c
  4230   001B54  0E01               	movlw	1
  4231   001B56  260E               	addwf	___xxtofl@arg^0,f,c
  4232   001B58  0E00               	movlw	0
  4233   001B5A  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  4234   001B5C  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  4235   001B5E  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  4236   001B60  90D8               	bcf	status,0,c
  4237   001B62  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  4238   001B64  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  4239   001B66  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4240   001B68  320E               	rrcf	___xxtofl@arg^0,f,c
  4241   001B6A                     l1666:
  4242   001B6A  0E00               	movlw	0
  4243   001B6C  140E               	andwf	___xxtofl@arg^0,w,c
  4244   001B6E  6E08               	movwf	??___xxtofl^0,c
  4245   001B70  0E00               	movlw	0
  4246   001B72  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  4247   001B74  6E09               	movwf	(??___xxtofl+1)^0,c
  4248   001B76  0E00               	movlw	0
  4249   001B78  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  4250   001B7A  6E0A               	movwf	(??___xxtofl+2)^0,c
  4251   001B7C  0EFF               	movlw	255
  4252   001B7E  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  4253   001B80  6E0B               	movwf	(??___xxtofl+3)^0,c
  4254   001B82  5008               	movf	??___xxtofl^0,w,c
  4255   001B84  1009               	iorwf	(??___xxtofl+1)^0,w,c
  4256   001B86  100A               	iorwf	(??___xxtofl+2)^0,w,c
  4257   001B88  100B               	iorwf	(??___xxtofl+3)^0,w,c
  4258   001B8A  A4D8               	btfss	status,2,c
  4259   001B8C  EFCA  F00D         	goto	u4641
  4260   001B90  EFCC  F00D         	goto	u4640
  4261   001B94                     u4641:
  4262   001B94  EFA9  F00D         	goto	l5292
  4263   001B98                     u4640:
  4264   001B98  EFD4  F00D         	goto	l5300
  4265   001B9C                     l5298:
  4266   001B9C  060D               	decf	___xxtofl@exp^0,f,c
  4267   001B9E  90D8               	bcf	status,0,c
  4268   001BA0  360E               	rlcf	___xxtofl@arg^0,f,c
  4269   001BA2  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  4270   001BA4  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  4271   001BA6  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  4272   001BA8                     l5300:
  4273   001BA8  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  4274   001BAA  EFD9  F00D         	goto	u4651
  4275   001BAE  EFDB  F00D         	goto	u4650
  4276   001BB2                     u4651:
  4277   001BB2  EFE3  F00D         	goto	l1673
  4278   001BB6                     u4650:
  4279   001BB6  0E02               	movlw	2
  4280   001BB8  600D               	cpfslt	___xxtofl@exp^0,c
  4281   001BBA  EFE1  F00D         	goto	u4661
  4282   001BBE  EFE3  F00D         	goto	u4660
  4283   001BC2                     u4661:
  4284   001BC2  EFCE  F00D         	goto	l5298
  4285   001BC6                     u4660:
  4286   001BC6                     l1673:
  4287   001BC6  B00D               	btfsc	___xxtofl@exp^0,0,c
  4288   001BC8  EFE8  F00D         	goto	u4671
  4289   001BCC  EFEA  F00D         	goto	u4670
  4290   001BD0                     u4671:
  4291   001BD0  EFEB  F00D         	goto	l5306
  4292   001BD4                     u4670:
  4293   001BD4  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  4294   001BD6                     l5306:
  4295   001BD6  90D8               	bcf	status,0,c
  4296   001BD8  320D               	rrcf	___xxtofl@exp^0,f,c
  4297   001BDA  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  4298   001BDE  6A09               	clrf	(??___xxtofl+1)^0,c
  4299   001BE0  6A0A               	clrf	(??___xxtofl+2)^0,c
  4300   001BE2  6A0B               	clrf	(??___xxtofl+3)^0,c
  4301   001BE4  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  4302   001BE8  6A0A               	clrf	(??___xxtofl+2)^0,c
  4303   001BEA  6A09               	clrf	(??___xxtofl+1)^0,c
  4304   001BEC  6A08               	clrf	??___xxtofl^0,c
  4305   001BEE  5008               	movf	??___xxtofl^0,w,c
  4306   001BF0  120E               	iorwf	___xxtofl@arg^0,f,c
  4307   001BF2  5009               	movf	(??___xxtofl+1)^0,w,c
  4308   001BF4  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  4309   001BF6  500A               	movf	(??___xxtofl+2)^0,w,c
  4310   001BF8  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  4311   001BFA  500B               	movf	(??___xxtofl+3)^0,w,c
  4312   001BFC  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  4313   001BFE  500C               	movf	___xxtofl@sign^0,w,c
  4314   001C00  B4D8               	btfsc	status,2,c
  4315   001C02  EF05  F00E         	goto	u4681
  4316   001C06  EF07  F00E         	goto	u4680
  4317   001C0A                     u4681:
  4318   001C0A  EF0F  F00E         	goto	l5316
  4319   001C0E                     u4680:
  4320   001C0E  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  4321   001C10  EF0E  F00E         	goto	u4690
  4322   001C14  EF0C  F00E         	goto	u4691
  4323   001C18                     u4691:
  4324   001C18  EF0F  F00E         	goto	l5316
  4325   001C1C                     u4690:
  4326   001C1C  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  4327   001C1E                     l5316:
  4328   001C1E  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  4329   001C22  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  4330   001C26  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  4331   001C2A  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  4332   001C2E                     l1662:
  4333   001C2E  0012               	return		;funcret
  4334   001C30                     __end_of___xxtofl:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function ___fltol *****************
  4338 ;; Defined at:
  4339 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  f1              4   67[COMRAM] unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  exp1            1   76[COMRAM] unsigned char 
  4344 ;;  sign1           1   75[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  4   67[COMRAM] long 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:       10 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 4
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text25
  4369   002320                     __ptext25:
  4370                           	callstack 0
  4371   002320                     ___fltol:
  4372                           	callstack 26
  4373   002320  3446               	rlcf	(___fltol@f1+2)^0,w,c
  4374   002322  3447               	rlcf	(___fltol@f1+3)^0,w,c
  4375   002324  6E4D               	movwf	___fltol@exp1^0,c
  4376   002326  504D               	movf	___fltol@exp1^0,w,c
  4377   002328  A4D8               	btfss	status,2,c
  4378   00232A  EF99  F011         	goto	u4531
  4379   00232E  EF9B  F011         	goto	u4530
  4380   002332                     u4531:
  4381   002332  EFA5  F011         	goto	l5236
  4382   002336                     u4530:
  4383   002336                     l5232:
  4384   002336  0E00               	movlw	0
  4385   002338  6E44               	movwf	?___fltol^0,c
  4386   00233A  0E00               	movlw	0
  4387   00233C  6E45               	movwf	(?___fltol+1)^0,c
  4388   00233E  0E00               	movlw	0
  4389   002340  6E46               	movwf	(?___fltol+2)^0,c
  4390   002342  0E00               	movlw	0
  4391   002344  6E47               	movwf	(?___fltol+3)^0,c
  4392   002346  EF12  F012         	goto	l1301
  4393   00234A                     l5236:
  4394   00234A  C044  F048         	movff	___fltol@f1,??___fltol
  4395   00234E  C045  F049         	movff	___fltol@f1+1,??___fltol+1
  4396   002352  C046  F04A         	movff	___fltol@f1+2,??___fltol+2
  4397   002356  C047  F04B         	movff	___fltol@f1+3,??___fltol+3
  4398   00235A  0E20               	movlw	32
  4399   00235C  EFB5  F011         	goto	u4540
  4400   002360                     u4545:
  4401   002360  90D8               	bcf	status,0,c
  4402   002362  324B               	rrcf	(??___fltol+3)^0,f,c
  4403   002364  324A               	rrcf	(??___fltol+2)^0,f,c
  4404   002366  3249               	rrcf	(??___fltol+1)^0,f,c
  4405   002368  3248               	rrcf	??___fltol^0,f,c
  4406   00236A                     u4540:
  4407   00236A  2EE8               	decfsz	wreg,f,c
  4408   00236C  EFB0  F011         	goto	u4545
  4409   002370  5048               	movf	??___fltol^0,w,c
  4410   002372  6E4C               	movwf	___fltol@sign1^0,c
  4411   002374  8E46               	bsf	(___fltol@f1+2)^0,7,c
  4412   002376  0EFF               	movlw	255
  4413   002378  1644               	andwf	___fltol@f1^0,f,c
  4414   00237A  0EFF               	movlw	255
  4415   00237C  1645               	andwf	(___fltol@f1+1)^0,f,c
  4416   00237E  0EFF               	movlw	255
  4417   002380  1646               	andwf	(___fltol@f1+2)^0,f,c
  4418   002382  0E00               	movlw	0
  4419   002384  1647               	andwf	(___fltol@f1+3)^0,f,c
  4420   002386  0E96               	movlw	150
  4421   002388  5E4D               	subwf	___fltol@exp1^0,f,c
  4422   00238A  BE4D               	btfsc	___fltol@exp1^0,7,c
  4423   00238C  EFCC  F011         	goto	u4550
  4424   002390  EFCA  F011         	goto	u4551
  4425   002394                     u4551:
  4426   002394  EFE2  F011         	goto	l5256
  4427   002398                     u4550:
  4428   002398  504D               	movf	___fltol@exp1^0,w,c
  4429   00239A  0A80               	xorlw	128
  4430   00239C  0F97               	addlw	151
  4431   00239E  B0D8               	btfsc	status,0,c
  4432   0023A0  EFD4  F011         	goto	u4561
  4433   0023A4  EFD6  F011         	goto	u4560
  4434   0023A8                     u4561:
  4435   0023A8  EFD8  F011         	goto	l5252
  4436   0023AC                     u4560:
  4437   0023AC  EF9B  F011         	goto	l5232
  4438   0023B0                     l5252:
  4439   0023B0  90D8               	bcf	status,0,c
  4440   0023B2  3247               	rrcf	(___fltol@f1+3)^0,f,c
  4441   0023B4  3246               	rrcf	(___fltol@f1+2)^0,f,c
  4442   0023B6  3245               	rrcf	(___fltol@f1+1)^0,f,c
  4443   0023B8  3244               	rrcf	___fltol@f1^0,f,c
  4444   0023BA  3E4D               	incfsz	___fltol@exp1^0,f,c
  4445   0023BC  EFD8  F011         	goto	l5252
  4446   0023C0  EFFA  F011         	goto	l5266
  4447   0023C4                     l5256:
  4448   0023C4  0E1F               	movlw	31
  4449   0023C6  644D               	cpfsgt	___fltol@exp1^0,c
  4450   0023C8  EFE8  F011         	goto	u4571
  4451   0023CC  EFEA  F011         	goto	u4570
  4452   0023D0                     u4571:
  4453   0023D0  EFF2  F011         	goto	l5264
  4454   0023D4                     u4570:
  4455   0023D4  EF9B  F011         	goto	l5232
  4456   0023D8                     l5262:
  4457   0023D8  90D8               	bcf	status,0,c
  4458   0023DA  3644               	rlcf	___fltol@f1^0,f,c
  4459   0023DC  3645               	rlcf	(___fltol@f1+1)^0,f,c
  4460   0023DE  3646               	rlcf	(___fltol@f1+2)^0,f,c
  4461   0023E0  3647               	rlcf	(___fltol@f1+3)^0,f,c
  4462   0023E2  064D               	decf	___fltol@exp1^0,f,c
  4463   0023E4                     l5264:
  4464   0023E4  504D               	movf	___fltol@exp1^0,w,c
  4465   0023E6  A4D8               	btfss	status,2,c
  4466   0023E8  EFF8  F011         	goto	u4581
  4467   0023EC  EFFA  F011         	goto	u4580
  4468   0023F0                     u4581:
  4469   0023F0  EFEC  F011         	goto	l5262
  4470   0023F4                     u4580:
  4471   0023F4                     l5266:
  4472   0023F4  504C               	movf	___fltol@sign1^0,w,c
  4473   0023F6  B4D8               	btfsc	status,2,c
  4474   0023F8  EF00  F012         	goto	u4591
  4475   0023FC  EF02  F012         	goto	u4590
  4476   002400                     u4591:
  4477   002400  EF0A  F012         	goto	l5270
  4478   002404                     u4590:
  4479   002404  1E47               	comf	(___fltol@f1+3)^0,f,c
  4480   002406  1E46               	comf	(___fltol@f1+2)^0,f,c
  4481   002408  1E45               	comf	(___fltol@f1+1)^0,f,c
  4482   00240A  6C44               	negf	___fltol@f1^0,c
  4483   00240C  0E00               	movlw	0
  4484   00240E  2245               	addwfc	(___fltol@f1+1)^0,f,c
  4485   002410  2246               	addwfc	(___fltol@f1+2)^0,f,c
  4486   002412  2247               	addwfc	(___fltol@f1+3)^0,f,c
  4487   002414                     l5270:
  4488   002414  C044  F044         	movff	___fltol@f1,?___fltol
  4489   002418  C045  F045         	movff	___fltol@f1+1,?___fltol+1
  4490   00241C  C046  F046         	movff	___fltol@f1+2,?___fltol+2
  4491   002420  C047  F047         	movff	___fltol@f1+3,?___fltol+3
  4492   002424                     l1301:
  4493   002424  0012               	return		;funcret
  4494   002426                     __end_of___fltol:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function ___flmul *****************
  4498 ;; Defined at:
  4499 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  b               4   17[COMRAM] long 
  4502 ;;  a               4   21[COMRAM] long 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  prod            4   36[COMRAM] struct .
  4505 ;;  grs             4   30[COMRAM] unsigned long 
  4506 ;;  temp            2   40[COMRAM] struct .
  4507 ;;  bexp            1   35[COMRAM] unsigned char 
  4508 ;;  aexp            1   34[COMRAM] unsigned char 
  4509 ;;  sign            1   29[COMRAM] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  4   17[COMRAM] unsigned char 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, prodl, prodh
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4519 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;Total ram usage:       25 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 4
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text26
  4534   001034                     __ptext26:
  4535                           	callstack 0
  4536   001034                     ___flmul:
  4537                           	callstack 26
  4538   001034  5015               	movf	(___flmul@b+3)^0,w,c
  4539   001036  0B80               	andlw	128
  4540   001038  6E1E               	movwf	___flmul@sign^0,c
  4541   00103A  5015               	movf	(___flmul@b+3)^0,w,c
  4542   00103C  2415               	addwf	(___flmul@b+3)^0,w,c
  4543   00103E  6E24               	movwf	___flmul@bexp^0,c
  4544   001040  AE14               	btfss	(___flmul@b+2)^0,7,c
  4545   001042  EF25  F008         	goto	u4341
  4546   001046  EF27  F008         	goto	u4340
  4547   00104A                     u4341:
  4548   00104A  EF28  F008         	goto	l5106
  4549   00104E                     u4340:
  4550   00104E  8024               	bsf	___flmul@bexp^0,0,c
  4551   001050                     l5106:
  4552   001050  5024               	movf	___flmul@bexp^0,w,c
  4553   001052  B4D8               	btfsc	status,2,c
  4554   001054  EF2E  F008         	goto	u4351
  4555   001058  EF30  F008         	goto	u4350
  4556   00105C                     u4351:
  4557   00105C  EF43  F008         	goto	l5114
  4558   001060                     u4350:
  4559   001060  2824               	incf	___flmul@bexp^0,w,c
  4560   001062  A4D8               	btfss	status,2,c
  4561   001064  EF36  F008         	goto	u4361
  4562   001068  EF38  F008         	goto	u4360
  4563   00106C                     u4361:
  4564   00106C  EF40  F008         	goto	l5112
  4565   001070                     u4360:
  4566   001070  0E00               	movlw	0
  4567   001072  6E12               	movwf	___flmul@b^0,c
  4568   001074  0E00               	movlw	0
  4569   001076  6E13               	movwf	(___flmul@b+1)^0,c
  4570   001078  0E00               	movlw	0
  4571   00107A  6E14               	movwf	(___flmul@b+2)^0,c
  4572   00107C  0E00               	movlw	0
  4573   00107E  6E15               	movwf	(___flmul@b+3)^0,c
  4574   001080                     l5112:
  4575   001080  8E14               	bsf	(___flmul@b+2)^0,7,c
  4576   001082  EF4B  F008         	goto	l5116
  4577   001086                     l5114:
  4578   001086  0E00               	movlw	0
  4579   001088  6E12               	movwf	___flmul@b^0,c
  4580   00108A  0E00               	movlw	0
  4581   00108C  6E13               	movwf	(___flmul@b+1)^0,c
  4582   00108E  0E00               	movlw	0
  4583   001090  6E14               	movwf	(___flmul@b+2)^0,c
  4584   001092  0E00               	movlw	0
  4585   001094  6E15               	movwf	(___flmul@b+3)^0,c
  4586   001096                     l5116:
  4587   001096  5019               	movf	(___flmul@a+3)^0,w,c
  4588   001098  0B80               	andlw	128
  4589   00109A  1A1E               	xorwf	___flmul@sign^0,f,c
  4590   00109C  5019               	movf	(___flmul@a+3)^0,w,c
  4591   00109E  2419               	addwf	(___flmul@a+3)^0,w,c
  4592   0010A0  6E23               	movwf	___flmul@aexp^0,c
  4593   0010A2  AE18               	btfss	(___flmul@a+2)^0,7,c
  4594   0010A4  EF56  F008         	goto	u4371
  4595   0010A8  EF58  F008         	goto	u4370
  4596   0010AC                     u4371:
  4597   0010AC  EF59  F008         	goto	l5124
  4598   0010B0                     u4370:
  4599   0010B0  8023               	bsf	___flmul@aexp^0,0,c
  4600   0010B2                     l5124:
  4601   0010B2  5023               	movf	___flmul@aexp^0,w,c
  4602   0010B4  B4D8               	btfsc	status,2,c
  4603   0010B6  EF5F  F008         	goto	u4381
  4604   0010BA  EF61  F008         	goto	u4380
  4605   0010BE                     u4381:
  4606   0010BE  EF74  F008         	goto	l5132
  4607   0010C2                     u4380:
  4608   0010C2  2823               	incf	___flmul@aexp^0,w,c
  4609   0010C4  A4D8               	btfss	status,2,c
  4610   0010C6  EF67  F008         	goto	u4391
  4611   0010CA  EF69  F008         	goto	u4390
  4612   0010CE                     u4391:
  4613   0010CE  EF71  F008         	goto	l5130
  4614   0010D2                     u4390:
  4615   0010D2  0E00               	movlw	0
  4616   0010D4  6E16               	movwf	___flmul@a^0,c
  4617   0010D6  0E00               	movlw	0
  4618   0010D8  6E17               	movwf	(___flmul@a+1)^0,c
  4619   0010DA  0E00               	movlw	0
  4620   0010DC  6E18               	movwf	(___flmul@a+2)^0,c
  4621   0010DE  0E00               	movlw	0
  4622   0010E0  6E19               	movwf	(___flmul@a+3)^0,c
  4623   0010E2                     l5130:
  4624   0010E2  8E18               	bsf	(___flmul@a+2)^0,7,c
  4625   0010E4  EF7C  F008         	goto	l1618
  4626   0010E8                     l5132:
  4627   0010E8  0E00               	movlw	0
  4628   0010EA  6E16               	movwf	___flmul@a^0,c
  4629   0010EC  0E00               	movlw	0
  4630   0010EE  6E17               	movwf	(___flmul@a+1)^0,c
  4631   0010F0  0E00               	movlw	0
  4632   0010F2  6E18               	movwf	(___flmul@a+2)^0,c
  4633   0010F4  0E00               	movlw	0
  4634   0010F6  6E19               	movwf	(___flmul@a+3)^0,c
  4635   0010F8                     l1618:
  4636   0010F8  5023               	movf	___flmul@aexp^0,w,c
  4637   0010FA  B4D8               	btfsc	status,2,c
  4638   0010FC  EF82  F008         	goto	u4401
  4639   001100  EF84  F008         	goto	u4400
  4640   001104                     u4401:
  4641   001104  EF8C  F008         	goto	l5136
  4642   001108                     u4400:
  4643   001108  5024               	movf	___flmul@bexp^0,w,c
  4644   00110A  A4D8               	btfss	status,2,c
  4645   00110C  EF8A  F008         	goto	u4411
  4646   001110  EF8C  F008         	goto	u4410
  4647   001114                     u4411:
  4648   001114  EF96  F008         	goto	l5140
  4649   001118                     u4410:
  4650   001118                     l5136:
  4651   001118  0E00               	movlw	0
  4652   00111A  6E12               	movwf	?___flmul^0,c
  4653   00111C  0E00               	movlw	0
  4654   00111E  6E13               	movwf	(?___flmul+1)^0,c
  4655   001120  0E00               	movlw	0
  4656   001122  6E14               	movwf	(?___flmul+2)^0,c
  4657   001124  0E00               	movlw	0
  4658   001126  6E15               	movwf	(?___flmul+3)^0,c
  4659   001128  EF2E  F00A         	goto	l1622
  4660   00112C                     l5140:
  4661   00112C  5018               	movf	(___flmul@a+2)^0,w,c
  4662   00112E  0212               	mulwf	___flmul@b^0,c
  4663   001130  CFF3 F029          	movff	prodl,___flmul@temp
  4664   001134  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4665   001138  5029               	movf	___flmul@temp^0,w,c
  4666   00113A  6E1F               	movwf	___flmul@grs^0,c
  4667   00113C  6A20               	clrf	(___flmul@grs+1)^0,c
  4668   00113E  6A21               	clrf	(___flmul@grs+2)^0,c
  4669   001140  6A22               	clrf	(___flmul@grs+3)^0,c
  4670   001142  502A               	movf	(___flmul@temp+1)^0,w,c
  4671   001144  6E25               	movwf	___flmul@prod^0,c
  4672   001146  6A26               	clrf	(___flmul@prod+1)^0,c
  4673   001148  6A27               	clrf	(___flmul@prod+2)^0,c
  4674   00114A  6A28               	clrf	(___flmul@prod+3)^0,c
  4675   00114C  5017               	movf	(___flmul@a+1)^0,w,c
  4676   00114E  0213               	mulwf	(___flmul@b+1)^0,c
  4677   001150  CFF3 F029          	movff	prodl,___flmul@temp
  4678   001154  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4679   001158  5029               	movf	___flmul@temp^0,w,c
  4680   00115A  261F               	addwf	___flmul@grs^0,f,c
  4681   00115C  0E00               	movlw	0
  4682   00115E  2220               	addwfc	(___flmul@grs+1)^0,f,c
  4683   001160  2221               	addwfc	(___flmul@grs+2)^0,f,c
  4684   001162  2222               	addwfc	(___flmul@grs+3)^0,f,c
  4685   001164  502A               	movf	(___flmul@temp+1)^0,w,c
  4686   001166  2625               	addwf	___flmul@prod^0,f,c
  4687   001168  0E00               	movlw	0
  4688   00116A  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4689   00116C  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4690   00116E  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4691   001170  5016               	movf	___flmul@a^0,w,c
  4692   001172  0214               	mulwf	(___flmul@b+2)^0,c
  4693   001174  CFF3 F029          	movff	prodl,___flmul@temp
  4694   001178  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4695   00117C  5029               	movf	___flmul@temp^0,w,c
  4696   00117E  261F               	addwf	___flmul@grs^0,f,c
  4697   001180  0E00               	movlw	0
  4698   001182  2220               	addwfc	(___flmul@grs+1)^0,f,c
  4699   001184  2221               	addwfc	(___flmul@grs+2)^0,f,c
  4700   001186  2222               	addwfc	(___flmul@grs+3)^0,f,c
  4701   001188  502A               	movf	(___flmul@temp+1)^0,w,c
  4702   00118A  2625               	addwf	___flmul@prod^0,f,c
  4703   00118C  0E00               	movlw	0
  4704   00118E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4705   001190  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4706   001192  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4707   001194  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  4708   001198  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  4709   00119C  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  4710   0011A0  6A1F               	clrf	___flmul@grs^0,c
  4711   0011A2  5016               	movf	___flmul@a^0,w,c
  4712   0011A4  0213               	mulwf	(___flmul@b+1)^0,c
  4713   0011A6  CFF3 F029          	movff	prodl,___flmul@temp
  4714   0011AA  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4715   0011AE  5029               	movf	___flmul@temp^0,w,c
  4716   0011B0  261F               	addwf	___flmul@grs^0,f,c
  4717   0011B2  502A               	movf	(___flmul@temp+1)^0,w,c
  4718   0011B4  2220               	addwfc	(___flmul@grs+1)^0,f,c
  4719   0011B6  0E00               	movlw	0
  4720   0011B8  2221               	addwfc	(___flmul@grs+2)^0,f,c
  4721   0011BA  0E00               	movlw	0
  4722   0011BC  2222               	addwfc	(___flmul@grs+3)^0,f,c
  4723   0011BE  5017               	movf	(___flmul@a+1)^0,w,c
  4724   0011C0  0212               	mulwf	___flmul@b^0,c
  4725   0011C2  CFF3 F029          	movff	prodl,___flmul@temp
  4726   0011C6  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4727   0011CA  5029               	movf	___flmul@temp^0,w,c
  4728   0011CC  261F               	addwf	___flmul@grs^0,f,c
  4729   0011CE  502A               	movf	(___flmul@temp+1)^0,w,c
  4730   0011D0  2220               	addwfc	(___flmul@grs+1)^0,f,c
  4731   0011D2  0E00               	movlw	0
  4732   0011D4  2221               	addwfc	(___flmul@grs+2)^0,f,c
  4733   0011D6  0E00               	movlw	0
  4734   0011D8  2222               	addwfc	(___flmul@grs+3)^0,f,c
  4735   0011DA  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  4736   0011DE  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  4737   0011E2  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  4738   0011E6  6A1F               	clrf	___flmul@grs^0,c
  4739   0011E8  5016               	movf	___flmul@a^0,w,c
  4740   0011EA  0212               	mulwf	___flmul@b^0,c
  4741   0011EC  CFF3 F029          	movff	prodl,___flmul@temp
  4742   0011F0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4743   0011F4  5029               	movf	___flmul@temp^0,w,c
  4744   0011F6  261F               	addwf	___flmul@grs^0,f,c
  4745   0011F8  502A               	movf	(___flmul@temp+1)^0,w,c
  4746   0011FA  2220               	addwfc	(___flmul@grs+1)^0,f,c
  4747   0011FC  0E00               	movlw	0
  4748   0011FE  2221               	addwfc	(___flmul@grs+2)^0,f,c
  4749   001200  0E00               	movlw	0
  4750   001202  2222               	addwfc	(___flmul@grs+3)^0,f,c
  4751   001204  5018               	movf	(___flmul@a+2)^0,w,c
  4752   001206  0213               	mulwf	(___flmul@b+1)^0,c
  4753   001208  CFF3 F029          	movff	prodl,___flmul@temp
  4754   00120C  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4755   001210  5029               	movf	___flmul@temp^0,w,c
  4756   001212  2625               	addwf	___flmul@prod^0,f,c
  4757   001214  502A               	movf	(___flmul@temp+1)^0,w,c
  4758   001216  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4759   001218  0E00               	movlw	0
  4760   00121A  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4761   00121C  0E00               	movlw	0
  4762   00121E  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4763   001220  5017               	movf	(___flmul@a+1)^0,w,c
  4764   001222  0214               	mulwf	(___flmul@b+2)^0,c
  4765   001224  CFF3 F029          	movff	prodl,___flmul@temp
  4766   001228  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4767   00122C  5029               	movf	___flmul@temp^0,w,c
  4768   00122E  2625               	addwf	___flmul@prod^0,f,c
  4769   001230  502A               	movf	(___flmul@temp+1)^0,w,c
  4770   001232  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4771   001234  0E00               	movlw	0
  4772   001236  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4773   001238  0E00               	movlw	0
  4774   00123A  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4775   00123C  5018               	movf	(___flmul@a+2)^0,w,c
  4776   00123E  0214               	mulwf	(___flmul@b+2)^0,c
  4777   001240  CFF3 F029          	movff	prodl,___flmul@temp
  4778   001244  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4779   001248  5029               	movf	___flmul@temp^0,w,c
  4780   00124A  6E1A               	movwf	??___flmul^0,c
  4781   00124C  502A               	movf	(___flmul@temp+1)^0,w,c
  4782   00124E  6E1B               	movwf	(??___flmul+1)^0,c
  4783   001250  6A1C               	clrf	(??___flmul+2)^0,c
  4784   001252  6A1D               	clrf	(??___flmul+3)^0,c
  4785   001254  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  4786   001258  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  4787   00125C  C01A  F01B         	movff	??___flmul,??___flmul+1
  4788   001260  6A1A               	clrf	??___flmul^0,c
  4789   001262  501A               	movf	??___flmul^0,w,c
  4790   001264  2625               	addwf	___flmul@prod^0,f,c
  4791   001266  501B               	movf	(??___flmul+1)^0,w,c
  4792   001268  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4793   00126A  501C               	movf	(??___flmul+2)^0,w,c
  4794   00126C  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4795   00126E  501D               	movf	(??___flmul+3)^0,w,c
  4796   001270  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4797   001272  C01F  F01A         	movff	___flmul@grs,??___flmul
  4798   001276  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  4799   00127A  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  4800   00127E  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  4801   001282  0E19               	movlw	25
  4802   001284  EF49  F009         	goto	u4420
  4803   001288                     u4425:
  4804   001288  90D8               	bcf	status,0,c
  4805   00128A  321D               	rrcf	(??___flmul+3)^0,f,c
  4806   00128C  321C               	rrcf	(??___flmul+2)^0,f,c
  4807   00128E  321B               	rrcf	(??___flmul+1)^0,f,c
  4808   001290  321A               	rrcf	??___flmul^0,f,c
  4809   001292                     u4420:
  4810   001292  2EE8               	decfsz	wreg,f,c
  4811   001294  EF44  F009         	goto	u4425
  4812   001298  501A               	movf	??___flmul^0,w,c
  4813   00129A  2625               	addwf	___flmul@prod^0,f,c
  4814   00129C  501B               	movf	(??___flmul+1)^0,w,c
  4815   00129E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4816   0012A0  501C               	movf	(??___flmul+2)^0,w,c
  4817   0012A2  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4818   0012A4  501D               	movf	(??___flmul+3)^0,w,c
  4819   0012A6  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4820   0012A8  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  4821   0012AC  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  4822   0012B0  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  4823   0012B4  6A1F               	clrf	___flmul@grs^0,c
  4824   0012B6  5023               	movf	___flmul@aexp^0,w,c
  4825   0012B8  C024  F01A         	movff	___flmul@bexp,??___flmul
  4826   0012BC  6A1B               	clrf	(??___flmul+1)^0,c
  4827   0012BE  261A               	addwf	??___flmul^0,f,c
  4828   0012C0  0E00               	movlw	0
  4829   0012C2  221B               	addwfc	(??___flmul+1)^0,f,c
  4830   0012C4  0E82               	movlw	130
  4831   0012C6  241A               	addwf	??___flmul^0,w,c
  4832   0012C8  6E29               	movwf	___flmul@temp^0,c
  4833   0012CA  0EFF               	movlw	255
  4834   0012CC  201B               	addwfc	(??___flmul+1)^0,w,c
  4835   0012CE  6E2A               	movwf	(___flmul@temp+1)^0,c
  4836   0012D0  EF7F  F009         	goto	l5188
  4837   0012D4                     l5182:
  4838   0012D4  90D8               	bcf	status,0,c
  4839   0012D6  3625               	rlcf	___flmul@prod^0,f,c
  4840   0012D8  3626               	rlcf	(___flmul@prod+1)^0,f,c
  4841   0012DA  3627               	rlcf	(___flmul@prod+2)^0,f,c
  4842   0012DC  3628               	rlcf	(___flmul@prod+3)^0,f,c
  4843   0012DE  AE22               	btfss	(___flmul@grs+3)^0,7,c
  4844   0012E0  EF74  F009         	goto	u4431
  4845   0012E4  EF76  F009         	goto	u4430
  4846   0012E8                     u4431:
  4847   0012E8  EF77  F009         	goto	l1625
  4848   0012EC                     u4430:
  4849   0012EC  8025               	bsf	___flmul@prod^0,0,c
  4850   0012EE                     l1625:
  4851   0012EE  90D8               	bcf	status,0,c
  4852   0012F0  361F               	rlcf	___flmul@grs^0,f,c
  4853   0012F2  3620               	rlcf	(___flmul@grs+1)^0,f,c
  4854   0012F4  3621               	rlcf	(___flmul@grs+2)^0,f,c
  4855   0012F6  3622               	rlcf	(___flmul@grs+3)^0,f,c
  4856   0012F8  0629               	decf	___flmul@temp^0,f,c
  4857   0012FA  A0D8               	btfss	status,0,c
  4858   0012FC  062A               	decf	(___flmul@temp+1)^0,f,c
  4859   0012FE                     l5188:
  4860   0012FE  AE27               	btfss	(___flmul@prod+2)^0,7,c
  4861   001300  EF84  F009         	goto	u4441
  4862   001304  EF86  F009         	goto	u4440
  4863   001308                     u4441:
  4864   001308  EF6A  F009         	goto	l5182
  4865   00130C                     u4440:
  4866   00130C  0E00               	movlw	0
  4867   00130E  6E23               	movwf	___flmul@aexp^0,c
  4868   001310  AE22               	btfss	(___flmul@grs+3)^0,7,c
  4869   001312  EF8D  F009         	goto	u4451
  4870   001316  EF8F  F009         	goto	u4450
  4871   00131A                     u4451:
  4872   00131A  EFB3  F009         	goto	l1627
  4873   00131E                     u4450:
  4874   00131E  0EFF               	movlw	255
  4875   001320  141F               	andwf	___flmul@grs^0,w,c
  4876   001322  6E1A               	movwf	??___flmul^0,c
  4877   001324  0EFF               	movlw	255
  4878   001326  1420               	andwf	(___flmul@grs+1)^0,w,c
  4879   001328  6E1B               	movwf	(??___flmul+1)^0,c
  4880   00132A  0EFF               	movlw	255
  4881   00132C  1421               	andwf	(___flmul@grs+2)^0,w,c
  4882   00132E  6E1C               	movwf	(??___flmul+2)^0,c
  4883   001330  0E7F               	movlw	127
  4884   001332  1422               	andwf	(___flmul@grs+3)^0,w,c
  4885   001334  6E1D               	movwf	(??___flmul+3)^0,c
  4886   001336  501A               	movf	??___flmul^0,w,c
  4887   001338  101B               	iorwf	(??___flmul+1)^0,w,c
  4888   00133A  101C               	iorwf	(??___flmul+2)^0,w,c
  4889   00133C  101D               	iorwf	(??___flmul+3)^0,w,c
  4890   00133E  B4D8               	btfsc	status,2,c
  4891   001340  EFA4  F009         	goto	u4461
  4892   001344  EFA6  F009         	goto	u4460
  4893   001348                     u4461:
  4894   001348  EFAA  F009         	goto	l1628
  4895   00134C                     u4460:
  4896   00134C                     l5196:
  4897   00134C  0E01               	movlw	1
  4898   00134E  6E23               	movwf	___flmul@aexp^0,c
  4899   001350  EFB3  F009         	goto	l1627
  4900   001354                     l1628:
  4901   001354  A025               	btfss	___flmul@prod^0,0,c
  4902   001356  EFAF  F009         	goto	u4471
  4903   00135A  EFB1  F009         	goto	u4470
  4904   00135E                     u4471:
  4905   00135E  EFB3  F009         	goto	l1627
  4906   001362                     u4470:
  4907   001362  EFA6  F009         	goto	l5196
  4908   001366                     l1627:
  4909   001366  5023               	movf	___flmul@aexp^0,w,c
  4910   001368  B4D8               	btfsc	status,2,c
  4911   00136A  EFB9  F009         	goto	u4481
  4912   00136E  EFBB  F009         	goto	u4480
  4913   001372                     u4481:
  4914   001372  EFDF  F009         	goto	l5208
  4915   001376                     u4480:
  4916   001376  0E01               	movlw	1
  4917   001378  2625               	addwf	___flmul@prod^0,f,c
  4918   00137A  0E00               	movlw	0
  4919   00137C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  4920   00137E  2227               	addwfc	(___flmul@prod+2)^0,f,c
  4921   001380  2228               	addwfc	(___flmul@prod+3)^0,f,c
  4922   001382  A028               	btfss	(___flmul@prod+3)^0,0,c
  4923   001384  EFC6  F009         	goto	u4491
  4924   001388  EFC8  F009         	goto	u4490
  4925   00138C                     u4491:
  4926   00138C  EFDF  F009         	goto	l5208
  4927   001390                     u4490:
  4928   001390  C025  F01A         	movff	___flmul@prod,??___flmul
  4929   001394  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  4930   001398  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  4931   00139C  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  4932   0013A0  341D               	rlcf	(??___flmul+3)^0,w,c
  4933   0013A2  321D               	rrcf	(??___flmul+3)^0,f,c
  4934   0013A4  321C               	rrcf	(??___flmul+2)^0,f,c
  4935   0013A6  321B               	rrcf	(??___flmul+1)^0,f,c
  4936   0013A8  321A               	rrcf	??___flmul^0,f,c
  4937   0013AA  C01A  F025         	movff	??___flmul,___flmul@prod
  4938   0013AE  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  4939   0013B2  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  4940   0013B6  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  4941   0013BA  4A29               	infsnz	___flmul@temp^0,f,c
  4942   0013BC  2A2A               	incf	(___flmul@temp+1)^0,f,c
  4943   0013BE                     l5208:
  4944   0013BE  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  4945   0013C0  EFEA  F009         	goto	u4501
  4946   0013C4  502A               	movf	(___flmul@temp+1)^0,w,c
  4947   0013C6  E108               	bnz	u4500
  4948   0013C8  2829               	incf	___flmul@temp^0,w,c
  4949   0013CA  A0D8               	btfss	status,0,c
  4950   0013CC  EFEA  F009         	goto	u4501
  4951   0013D0  EFEC  F009         	goto	u4500
  4952   0013D4                     u4501:
  4953   0013D4  EFF6  F009         	goto	l5212
  4954   0013D8                     u4500:
  4955   0013D8  0E00               	movlw	0
  4956   0013DA  6E25               	movwf	___flmul@prod^0,c
  4957   0013DC  0E00               	movlw	0
  4958   0013DE  6E26               	movwf	(___flmul@prod+1)^0,c
  4959   0013E0  0E80               	movlw	128
  4960   0013E2  6E27               	movwf	(___flmul@prod+2)^0,c
  4961   0013E4  0E7F               	movlw	127
  4962   0013E6  6E28               	movwf	(___flmul@prod+3)^0,c
  4963   0013E8  EF24  F00A         	goto	l5224
  4964   0013EC                     l5212:
  4965   0013EC  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  4966   0013EE  EF03  F00A         	goto	u4510
  4967   0013F2  502A               	movf	(___flmul@temp+1)^0,w,c
  4968   0013F4  E106               	bnz	u4511
  4969   0013F6  0429               	decf	___flmul@temp^0,w,c
  4970   0013F8  B0D8               	btfsc	status,0,c
  4971   0013FA  EF01  F00A         	goto	u4511
  4972   0013FE  EF03  F00A         	goto	u4510
  4973   001402                     u4511:
  4974   001402  EF0F  F00A         	goto	l1635
  4975   001406                     u4510:
  4976   001406  0E00               	movlw	0
  4977   001408  6E25               	movwf	___flmul@prod^0,c
  4978   00140A  0E00               	movlw	0
  4979   00140C  6E26               	movwf	(___flmul@prod+1)^0,c
  4980   00140E  0E00               	movlw	0
  4981   001410  6E27               	movwf	(___flmul@prod+2)^0,c
  4982   001412  0E00               	movlw	0
  4983   001414  6E28               	movwf	(___flmul@prod+3)^0,c
  4984   001416  0E00               	movlw	0
  4985   001418  6E1E               	movwf	___flmul@sign^0,c
  4986   00141A  EF24  F00A         	goto	l5224
  4987   00141E                     l1635:
  4988   00141E  C029  F024         	movff	___flmul@temp,___flmul@bexp
  4989   001422  0EFF               	movlw	255
  4990   001424  1625               	andwf	___flmul@prod^0,f,c
  4991   001426  0EFF               	movlw	255
  4992   001428  1626               	andwf	(___flmul@prod+1)^0,f,c
  4993   00142A  0E7F               	movlw	127
  4994   00142C  1627               	andwf	(___flmul@prod+2)^0,f,c
  4995   00142E  0E00               	movlw	0
  4996   001430  1628               	andwf	(___flmul@prod+3)^0,f,c
  4997   001432  A024               	btfss	___flmul@bexp^0,0,c
  4998   001434  EF1E  F00A         	goto	u4521
  4999   001438  EF20  F00A         	goto	u4520
  5000   00143C                     u4521:
  5001   00143C  EF21  F00A         	goto	l5222
  5002   001440                     u4520:
  5003   001440  8E27               	bsf	(___flmul@prod+2)^0,7,c
  5004   001442                     l5222:
  5005   001442  90D8               	bcf	status,0,c
  5006   001444  3024               	rrcf	___flmul@bexp^0,w,c
  5007   001446  6E28               	movwf	(___flmul@prod+3)^0,c
  5008   001448                     l5224:
  5009   001448  501E               	movf	___flmul@sign^0,w,c
  5010   00144A  1228               	iorwf	(___flmul@prod+3)^0,f,c
  5011   00144C  C025  F012         	movff	___flmul@prod,?___flmul
  5012   001450  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  5013   001454  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  5014   001458  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  5015   00145C                     l1622:
  5016   00145C  0012               	return		;funcret
  5017   00145E                     __end_of___flmul:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function ___fldiv *****************
  5021 ;; Defined at:
  5022 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  b               4   42[COMRAM] unsigned char 
  5025 ;;  a               4   46[COMRAM] unsigned char 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  grs             4   61[COMRAM] unsigned long 
  5028 ;;  rem             4   54[COMRAM] unsigned long 
  5029 ;;  new_exp         2   59[COMRAM] short 
  5030 ;;  aexp            1   66[COMRAM] unsigned char 
  5031 ;;  bexp            1   65[COMRAM] unsigned char 
  5032 ;;  sign            1   58[COMRAM] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  4   42[COMRAM] unsigned char 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5042 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;Total ram usage:       25 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 4
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text27
  5057   00145E                     __ptext27:
  5058                           	callstack 0
  5059   00145E                     ___fldiv:
  5060                           	callstack 26
  5061   00145E  502E               	movf	(___fldiv@b+3)^0,w,c
  5062   001460  0B80               	andlw	128
  5063   001462  6E3B               	movwf	___fldiv@sign^0,c
  5064   001464  502E               	movf	(___fldiv@b+3)^0,w,c
  5065   001466  242E               	addwf	(___fldiv@b+3)^0,w,c
  5066   001468  6E42               	movwf	___fldiv@bexp^0,c
  5067   00146A  AE2D               	btfss	(___fldiv@b+2)^0,7,c
  5068   00146C  EF3A  F00A         	goto	u4111
  5069   001470  EF3C  F00A         	goto	u4110
  5070   001474                     u4111:
  5071   001474  EF3D  F00A         	goto	l4968
  5072   001478                     u4110:
  5073   001478  8042               	bsf	___fldiv@bexp^0,0,c
  5074   00147A                     l4968:
  5075   00147A  5042               	movf	___fldiv@bexp^0,w,c
  5076   00147C  B4D8               	btfsc	status,2,c
  5077   00147E  EF43  F00A         	goto	u4121
  5078   001482  EF45  F00A         	goto	u4120
  5079   001486                     u4121:
  5080   001486  EF5A  F00A         	goto	l4978
  5081   00148A                     u4120:
  5082   00148A  2842               	incf	___fldiv@bexp^0,w,c
  5083   00148C  A4D8               	btfss	status,2,c
  5084   00148E  EF4B  F00A         	goto	u4131
  5085   001492  EF4D  F00A         	goto	u4130
  5086   001496                     u4131:
  5087   001496  EF55  F00A         	goto	l4974
  5088   00149A                     u4130:
  5089   00149A  0E00               	movlw	0
  5090   00149C  6E2B               	movwf	___fldiv@b^0,c
  5091   00149E  0E00               	movlw	0
  5092   0014A0  6E2C               	movwf	(___fldiv@b+1)^0,c
  5093   0014A2  0E00               	movlw	0
  5094   0014A4  6E2D               	movwf	(___fldiv@b+2)^0,c
  5095   0014A6  0E00               	movlw	0
  5096   0014A8  6E2E               	movwf	(___fldiv@b+3)^0,c
  5097   0014AA                     l4974:
  5098   0014AA  8E2D               	bsf	(___fldiv@b+2)^0,7,c
  5099   0014AC  0E00               	movlw	0
  5100   0014AE  6E2E               	movwf	(___fldiv@b+3)^0,c
  5101   0014B0  EF62  F00A         	goto	l4980
  5102   0014B4                     l4978:
  5103   0014B4  0E00               	movlw	0
  5104   0014B6  6E2B               	movwf	___fldiv@b^0,c
  5105   0014B8  0E00               	movlw	0
  5106   0014BA  6E2C               	movwf	(___fldiv@b+1)^0,c
  5107   0014BC  0E00               	movlw	0
  5108   0014BE  6E2D               	movwf	(___fldiv@b+2)^0,c
  5109   0014C0  0E00               	movlw	0
  5110   0014C2  6E2E               	movwf	(___fldiv@b+3)^0,c
  5111   0014C4                     l4980:
  5112   0014C4  5032               	movf	(___fldiv@a+3)^0,w,c
  5113   0014C6  0B80               	andlw	128
  5114   0014C8  1A3B               	xorwf	___fldiv@sign^0,f,c
  5115   0014CA  5032               	movf	(___fldiv@a+3)^0,w,c
  5116   0014CC  2432               	addwf	(___fldiv@a+3)^0,w,c
  5117   0014CE  6E43               	movwf	___fldiv@aexp^0,c
  5118   0014D0  AE31               	btfss	(___fldiv@a+2)^0,7,c
  5119   0014D2  EF6D  F00A         	goto	u4141
  5120   0014D6  EF6F  F00A         	goto	u4140
  5121   0014DA                     u4141:
  5122   0014DA  EF70  F00A         	goto	l4988
  5123   0014DE                     u4140:
  5124   0014DE  8043               	bsf	___fldiv@aexp^0,0,c
  5125   0014E0                     l4988:
  5126   0014E0  5043               	movf	___fldiv@aexp^0,w,c
  5127   0014E2  B4D8               	btfsc	status,2,c
  5128   0014E4  EF76  F00A         	goto	u4151
  5129   0014E8  EF78  F00A         	goto	u4150
  5130   0014EC                     u4151:
  5131   0014EC  EF8D  F00A         	goto	l4998
  5132   0014F0                     u4150:
  5133   0014F0  2843               	incf	___fldiv@aexp^0,w,c
  5134   0014F2  A4D8               	btfss	status,2,c
  5135   0014F4  EF7E  F00A         	goto	u4161
  5136   0014F8  EF80  F00A         	goto	u4160
  5137   0014FC                     u4161:
  5138   0014FC  EF88  F00A         	goto	l4994
  5139   001500                     u4160:
  5140   001500  0E00               	movlw	0
  5141   001502  6E2F               	movwf	___fldiv@a^0,c
  5142   001504  0E00               	movlw	0
  5143   001506  6E30               	movwf	(___fldiv@a+1)^0,c
  5144   001508  0E00               	movlw	0
  5145   00150A  6E31               	movwf	(___fldiv@a+2)^0,c
  5146   00150C  0E00               	movlw	0
  5147   00150E  6E32               	movwf	(___fldiv@a+3)^0,c
  5148   001510                     l4994:
  5149   001510  8E31               	bsf	(___fldiv@a+2)^0,7,c
  5150   001512  0E00               	movlw	0
  5151   001514  6E32               	movwf	(___fldiv@a+3)^0,c
  5152   001516  EF95  F00A         	goto	l5000
  5153   00151A                     l4998:
  5154   00151A  0E00               	movlw	0
  5155   00151C  6E2F               	movwf	___fldiv@a^0,c
  5156   00151E  0E00               	movlw	0
  5157   001520  6E30               	movwf	(___fldiv@a+1)^0,c
  5158   001522  0E00               	movlw	0
  5159   001524  6E31               	movwf	(___fldiv@a+2)^0,c
  5160   001526  0E00               	movlw	0
  5161   001528  6E32               	movwf	(___fldiv@a+3)^0,c
  5162   00152A                     l5000:
  5163   00152A  502F               	movf	___fldiv@a^0,w,c
  5164   00152C  1030               	iorwf	(___fldiv@a+1)^0,w,c
  5165   00152E  1031               	iorwf	(___fldiv@a+2)^0,w,c
  5166   001530  1032               	iorwf	(___fldiv@a+3)^0,w,c
  5167   001532  A4D8               	btfss	status,2,c
  5168   001534  EF9E  F00A         	goto	u4171
  5169   001538  EFA0  F00A         	goto	u4170
  5170   00153C                     u4171:
  5171   00153C  EFB8  F00A         	goto	l5012
  5172   001540                     u4170:
  5173   001540  0E00               	movlw	0
  5174   001542  6E2B               	movwf	___fldiv@b^0,c
  5175   001544  0E00               	movlw	0
  5176   001546  6E2C               	movwf	(___fldiv@b+1)^0,c
  5177   001548  0E00               	movlw	0
  5178   00154A  6E2D               	movwf	(___fldiv@b+2)^0,c
  5179   00154C  0E00               	movlw	0
  5180   00154E  6E2E               	movwf	(___fldiv@b+3)^0,c
  5181   001550  0E80               	movlw	128
  5182   001552  122D               	iorwf	(___fldiv@b+2)^0,f,c
  5183   001554  0E7F               	movlw	127
  5184   001556  122E               	iorwf	(___fldiv@b+3)^0,f,c
  5185   001558                     l5006:
  5186   001558  503B               	movf	___fldiv@sign^0,w,c
  5187   00155A  122E               	iorwf	(___fldiv@b+3)^0,f,c
  5188   00155C  C02B  F02B         	movff	___fldiv@b,?___fldiv
  5189   001560  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
  5190   001564  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
  5191   001568  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
  5192   00156C  EFFB  F00B         	goto	l1586
  5193   001570                     l5012:
  5194   001570  5042               	movf	___fldiv@bexp^0,w,c
  5195   001572  A4D8               	btfss	status,2,c
  5196   001574  EFBE  F00A         	goto	u4181
  5197   001578  EFC0  F00A         	goto	u4180
  5198   00157C                     u4181:
  5199   00157C  EFCA  F00A         	goto	l5020
  5200   001580                     u4180:
  5201   001580  0E00               	movlw	0
  5202   001582  6E2B               	movwf	?___fldiv^0,c
  5203   001584  0E00               	movlw	0
  5204   001586  6E2C               	movwf	(?___fldiv+1)^0,c
  5205   001588  0E00               	movlw	0
  5206   00158A  6E2D               	movwf	(?___fldiv+2)^0,c
  5207   00158C  0E00               	movlw	0
  5208   00158E  6E2E               	movwf	(?___fldiv+3)^0,c
  5209   001590  EFFB  F00B         	goto	l1586
  5210   001594                     l5020:
  5211   001594  5043               	movf	___fldiv@aexp^0,w,c
  5212   001596  C042  F033         	movff	___fldiv@bexp,??___fldiv
  5213   00159A  6A34               	clrf	(??___fldiv+1)^0,c
  5214   00159C  5E33               	subwf	??___fldiv^0,f,c
  5215   00159E  0E00               	movlw	0
  5216   0015A0  5A34               	subwfb	(??___fldiv+1)^0,f,c
  5217   0015A2  0E7F               	movlw	127
  5218   0015A4  2433               	addwf	??___fldiv^0,w,c
  5219   0015A6  6E3C               	movwf	___fldiv@new_exp^0,c
  5220   0015A8  0E00               	movlw	0
  5221   0015AA  2034               	addwfc	(??___fldiv+1)^0,w,c
  5222   0015AC  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
  5223   0015AE  C02B  F037         	movff	___fldiv@b,___fldiv@rem
  5224   0015B2  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
  5225   0015B6  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
  5226   0015BA  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
  5227   0015BE  0E00               	movlw	0
  5228   0015C0  6E2B               	movwf	___fldiv@b^0,c
  5229   0015C2  0E00               	movlw	0
  5230   0015C4  6E2C               	movwf	(___fldiv@b+1)^0,c
  5231   0015C6  0E00               	movlw	0
  5232   0015C8  6E2D               	movwf	(___fldiv@b+2)^0,c
  5233   0015CA  0E00               	movlw	0
  5234   0015CC  6E2E               	movwf	(___fldiv@b+3)^0,c
  5235   0015CE  0E00               	movlw	0
  5236   0015D0  6E3E               	movwf	___fldiv@grs^0,c
  5237   0015D2  0E00               	movlw	0
  5238   0015D4  6E3F               	movwf	(___fldiv@grs+1)^0,c
  5239   0015D6  0E00               	movlw	0
  5240   0015D8  6E40               	movwf	(___fldiv@grs+2)^0,c
  5241   0015DA  0E00               	movlw	0
  5242   0015DC  6E41               	movwf	(___fldiv@grs+3)^0,c
  5243   0015DE  0E00               	movlw	0
  5244   0015E0  6E43               	movwf	___fldiv@aexp^0,c
  5245   0015E2  EF2B  F00B         	goto	l1588
  5246   0015E6                     l5030:
  5247   0015E6  5043               	movf	___fldiv@aexp^0,w,c
  5248   0015E8  B4D8               	btfsc	status,2,c
  5249   0015EA  EFF9  F00A         	goto	u4191
  5250   0015EE  EFFB  F00A         	goto	u4190
  5251   0015F2                     u4191:
  5252   0015F2  EF12  F00B         	goto	l5038
  5253   0015F6                     u4190:
  5254   0015F6  90D8               	bcf	status,0,c
  5255   0015F8  3637               	rlcf	___fldiv@rem^0,f,c
  5256   0015FA  3638               	rlcf	(___fldiv@rem+1)^0,f,c
  5257   0015FC  3639               	rlcf	(___fldiv@rem+2)^0,f,c
  5258   0015FE  363A               	rlcf	(___fldiv@rem+3)^0,f,c
  5259   001600  90D8               	bcf	status,0,c
  5260   001602  362B               	rlcf	___fldiv@b^0,f,c
  5261   001604  362C               	rlcf	(___fldiv@b+1)^0,f,c
  5262   001606  362D               	rlcf	(___fldiv@b+2)^0,f,c
  5263   001608  362E               	rlcf	(___fldiv@b+3)^0,f,c
  5264   00160A  AE41               	btfss	(___fldiv@grs+3)^0,7,c
  5265   00160C  EF0A  F00B         	goto	u4201
  5266   001610  EF0C  F00B         	goto	u4200
  5267   001614                     u4201:
  5268   001614  EF0D  F00B         	goto	l1591
  5269   001618                     u4200:
  5270   001618  802B               	bsf	___fldiv@b^0,0,c
  5271   00161A                     l1591:
  5272   00161A  90D8               	bcf	status,0,c
  5273   00161C  363E               	rlcf	___fldiv@grs^0,f,c
  5274   00161E  363F               	rlcf	(___fldiv@grs+1)^0,f,c
  5275   001620  3640               	rlcf	(___fldiv@grs+2)^0,f,c
  5276   001622  3641               	rlcf	(___fldiv@grs+3)^0,f,c
  5277   001624                     l5038:
  5278   001624  502F               	movf	___fldiv@a^0,w,c
  5279   001626  5C37               	subwf	___fldiv@rem^0,w,c
  5280   001628  5030               	movf	(___fldiv@a+1)^0,w,c
  5281   00162A  5838               	subwfb	(___fldiv@rem+1)^0,w,c
  5282   00162C  5031               	movf	(___fldiv@a+2)^0,w,c
  5283   00162E  5839               	subwfb	(___fldiv@rem+2)^0,w,c
  5284   001630  5032               	movf	(___fldiv@a+3)^0,w,c
  5285   001632  583A               	subwfb	(___fldiv@rem+3)^0,w,c
  5286   001634  A0D8               	btfss	status,0,c
  5287   001636  EF1F  F00B         	goto	u4211
  5288   00163A  EF21  F00B         	goto	u4210
  5289   00163E                     u4211:
  5290   00163E  EF2A  F00B         	goto	l5044
  5291   001642                     u4210:
  5292   001642  8C41               	bsf	(___fldiv@grs+3)^0,6,c
  5293   001644  502F               	movf	___fldiv@a^0,w,c
  5294   001646  5E37               	subwf	___fldiv@rem^0,f,c
  5295   001648  5030               	movf	(___fldiv@a+1)^0,w,c
  5296   00164A  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
  5297   00164C  5031               	movf	(___fldiv@a+2)^0,w,c
  5298   00164E  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
  5299   001650  5032               	movf	(___fldiv@a+3)^0,w,c
  5300   001652  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
  5301   001654                     l5044:
  5302   001654  2A43               	incf	___fldiv@aexp^0,f,c
  5303   001656                     l1588:
  5304   001656  0E19               	movlw	25
  5305   001658  6443               	cpfsgt	___fldiv@aexp^0,c
  5306   00165A  EF31  F00B         	goto	u4221
  5307   00165E  EF33  F00B         	goto	u4220
  5308   001662                     u4221:
  5309   001662  EFF3  F00A         	goto	l5030
  5310   001666                     u4220:
  5311   001666  5037               	movf	___fldiv@rem^0,w,c
  5312   001668  1038               	iorwf	(___fldiv@rem+1)^0,w,c
  5313   00166A  1039               	iorwf	(___fldiv@rem+2)^0,w,c
  5314   00166C  103A               	iorwf	(___fldiv@rem+3)^0,w,c
  5315   00166E  B4D8               	btfsc	status,2,c
  5316   001670  EF3C  F00B         	goto	u4231
  5317   001674  EF3E  F00B         	goto	u4230
  5318   001678                     u4231:
  5319   001678  EF56  F00B         	goto	l5056
  5320   00167C                     u4230:
  5321   00167C  803E               	bsf	___fldiv@grs^0,0,c
  5322   00167E  EF56  F00B         	goto	l5056
  5323   001682                     l5050:
  5324   001682  90D8               	bcf	status,0,c
  5325   001684  362B               	rlcf	___fldiv@b^0,f,c
  5326   001686  362C               	rlcf	(___fldiv@b+1)^0,f,c
  5327   001688  362D               	rlcf	(___fldiv@b+2)^0,f,c
  5328   00168A  362E               	rlcf	(___fldiv@b+3)^0,f,c
  5329   00168C  AE41               	btfss	(___fldiv@grs+3)^0,7,c
  5330   00168E  EF4B  F00B         	goto	u4241
  5331   001692  EF4D  F00B         	goto	u4240
  5332   001696                     u4241:
  5333   001696  EF4E  F00B         	goto	l1597
  5334   00169A                     u4240:
  5335   00169A  802B               	bsf	___fldiv@b^0,0,c
  5336   00169C                     l1597:
  5337   00169C  90D8               	bcf	status,0,c
  5338   00169E  363E               	rlcf	___fldiv@grs^0,f,c
  5339   0016A0  363F               	rlcf	(___fldiv@grs+1)^0,f,c
  5340   0016A2  3640               	rlcf	(___fldiv@grs+2)^0,f,c
  5341   0016A4  3641               	rlcf	(___fldiv@grs+3)^0,f,c
  5342   0016A6  063C               	decf	___fldiv@new_exp^0,f,c
  5343   0016A8  A0D8               	btfss	status,0,c
  5344   0016AA  063D               	decf	(___fldiv@new_exp+1)^0,f,c
  5345   0016AC                     l5056:
  5346   0016AC  AE2D               	btfss	(___fldiv@b+2)^0,7,c
  5347   0016AE  EF5B  F00B         	goto	u4251
  5348   0016B2  EF5D  F00B         	goto	u4250
  5349   0016B6                     u4251:
  5350   0016B6  EF41  F00B         	goto	l5050
  5351   0016BA                     u4250:
  5352   0016BA  0E00               	movlw	0
  5353   0016BC  6E43               	movwf	___fldiv@aexp^0,c
  5354   0016BE  AE41               	btfss	(___fldiv@grs+3)^0,7,c
  5355   0016C0  EF64  F00B         	goto	u4261
  5356   0016C4  EF66  F00B         	goto	u4260
  5357   0016C8                     u4261:
  5358   0016C8  EF8A  F00B         	goto	l1599
  5359   0016CC                     u4260:
  5360   0016CC  0EFF               	movlw	255
  5361   0016CE  143E               	andwf	___fldiv@grs^0,w,c
  5362   0016D0  6E33               	movwf	??___fldiv^0,c
  5363   0016D2  0EFF               	movlw	255
  5364   0016D4  143F               	andwf	(___fldiv@grs+1)^0,w,c
  5365   0016D6  6E34               	movwf	(??___fldiv+1)^0,c
  5366   0016D8  0EFF               	movlw	255
  5367   0016DA  1440               	andwf	(___fldiv@grs+2)^0,w,c
  5368   0016DC  6E35               	movwf	(??___fldiv+2)^0,c
  5369   0016DE  0E7F               	movlw	127
  5370   0016E0  1441               	andwf	(___fldiv@grs+3)^0,w,c
  5371   0016E2  6E36               	movwf	(??___fldiv+3)^0,c
  5372   0016E4  5033               	movf	??___fldiv^0,w,c
  5373   0016E6  1034               	iorwf	(??___fldiv+1)^0,w,c
  5374   0016E8  1035               	iorwf	(??___fldiv+2)^0,w,c
  5375   0016EA  1036               	iorwf	(??___fldiv+3)^0,w,c
  5376   0016EC  B4D8               	btfsc	status,2,c
  5377   0016EE  EF7B  F00B         	goto	u4271
  5378   0016F2  EF7D  F00B         	goto	u4270
  5379   0016F6                     u4271:
  5380   0016F6  EF81  F00B         	goto	l1600
  5381   0016FA                     u4270:
  5382   0016FA                     l5064:
  5383   0016FA  0E01               	movlw	1
  5384   0016FC  6E43               	movwf	___fldiv@aexp^0,c
  5385   0016FE  EF8A  F00B         	goto	l1599
  5386   001702                     l1600:
  5387   001702  A02B               	btfss	___fldiv@b^0,0,c
  5388   001704  EF86  F00B         	goto	u4281
  5389   001708  EF88  F00B         	goto	u4280
  5390   00170C                     u4281:
  5391   00170C  EF8A  F00B         	goto	l1599
  5392   001710                     u4280:
  5393   001710  EF7D  F00B         	goto	l5064
  5394   001714                     l1599:
  5395   001714  5043               	movf	___fldiv@aexp^0,w,c
  5396   001716  B4D8               	btfsc	status,2,c
  5397   001718  EF90  F00B         	goto	u4291
  5398   00171C  EF92  F00B         	goto	u4290
  5399   001720                     u4291:
  5400   001720  EFB6  F00B         	goto	l5076
  5401   001724                     u4290:
  5402   001724  0E01               	movlw	1
  5403   001726  262B               	addwf	___fldiv@b^0,f,c
  5404   001728  0E00               	movlw	0
  5405   00172A  222C               	addwfc	(___fldiv@b+1)^0,f,c
  5406   00172C  222D               	addwfc	(___fldiv@b+2)^0,f,c
  5407   00172E  222E               	addwfc	(___fldiv@b+3)^0,f,c
  5408   001730  A02E               	btfss	(___fldiv@b+3)^0,0,c
  5409   001732  EF9D  F00B         	goto	u4301
  5410   001736  EF9F  F00B         	goto	u4300
  5411   00173A                     u4301:
  5412   00173A  EFB6  F00B         	goto	l5076
  5413   00173E                     u4300:
  5414   00173E  C02B  F033         	movff	___fldiv@b,??___fldiv
  5415   001742  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
  5416   001746  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
  5417   00174A  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
  5418   00174E  3436               	rlcf	(??___fldiv+3)^0,w,c
  5419   001750  3236               	rrcf	(??___fldiv+3)^0,f,c
  5420   001752  3235               	rrcf	(??___fldiv+2)^0,f,c
  5421   001754  3234               	rrcf	(??___fldiv+1)^0,f,c
  5422   001756  3233               	rrcf	??___fldiv^0,f,c
  5423   001758  C033  F02B         	movff	??___fldiv,___fldiv@b
  5424   00175C  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
  5425   001760  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
  5426   001764  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
  5427   001768  4A3C               	infsnz	___fldiv@new_exp^0,f,c
  5428   00176A  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
  5429   00176C                     l5076:
  5430   00176C  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5431   00176E  EFC1  F00B         	goto	u4311
  5432   001772  503D               	movf	(___fldiv@new_exp+1)^0,w,c
  5433   001774  E108               	bnz	u4310
  5434   001776  283C               	incf	___fldiv@new_exp^0,w,c
  5435   001778  A0D8               	btfss	status,0,c
  5436   00177A  EFC1  F00B         	goto	u4311
  5437   00177E  EFC3  F00B         	goto	u4310
  5438   001782                     u4311:
  5439   001782  EFCE  F00B         	goto	l5080
  5440   001786                     u4310:
  5441   001786  0E00               	movlw	0
  5442   001788  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
  5443   00178A  683C               	setf	___fldiv@new_exp^0,c
  5444   00178C  0E00               	movlw	0
  5445   00178E  6E2B               	movwf	___fldiv@b^0,c
  5446   001790  0E00               	movlw	0
  5447   001792  6E2C               	movwf	(___fldiv@b+1)^0,c
  5448   001794  0E00               	movlw	0
  5449   001796  6E2D               	movwf	(___fldiv@b+2)^0,c
  5450   001798  0E00               	movlw	0
  5451   00179A  6E2E               	movwf	(___fldiv@b+3)^0,c
  5452   00179C                     l5080:
  5453   00179C  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5454   00179E  EFDB  F00B         	goto	u4320
  5455   0017A2  503D               	movf	(___fldiv@new_exp+1)^0,w,c
  5456   0017A4  E106               	bnz	u4321
  5457   0017A6  043C               	decf	___fldiv@new_exp^0,w,c
  5458   0017A8  B0D8               	btfsc	status,0,c
  5459   0017AA  EFD9  F00B         	goto	u4321
  5460   0017AE  EFDB  F00B         	goto	u4320
  5461   0017B2                     u4321:
  5462   0017B2  EFE9  F00B         	goto	l5084
  5463   0017B6                     u4320:
  5464   0017B6  0E00               	movlw	0
  5465   0017B8  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
  5466   0017BA  0E00               	movlw	0
  5467   0017BC  6E3C               	movwf	___fldiv@new_exp^0,c
  5468   0017BE  0E00               	movlw	0
  5469   0017C0  6E2B               	movwf	___fldiv@b^0,c
  5470   0017C2  0E00               	movlw	0
  5471   0017C4  6E2C               	movwf	(___fldiv@b+1)^0,c
  5472   0017C6  0E00               	movlw	0
  5473   0017C8  6E2D               	movwf	(___fldiv@b+2)^0,c
  5474   0017CA  0E00               	movlw	0
  5475   0017CC  6E2E               	movwf	(___fldiv@b+3)^0,c
  5476   0017CE  0E00               	movlw	0
  5477   0017D0  6E3B               	movwf	___fldiv@sign^0,c
  5478   0017D2                     l5084:
  5479   0017D2  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
  5480   0017D6  A042               	btfss	___fldiv@bexp^0,0,c
  5481   0017D8  EFF0  F00B         	goto	u4331
  5482   0017DC  EFF2  F00B         	goto	u4330
  5483   0017E0                     u4331:
  5484   0017E0  EFF5  F00B         	goto	l5090
  5485   0017E4                     u4330:
  5486   0017E4  8E2D               	bsf	(___fldiv@b+2)^0,7,c
  5487   0017E6  EFF6  F00B         	goto	l5092
  5488   0017EA                     l5090:
  5489   0017EA  9E2D               	bcf	(___fldiv@b+2)^0,7,c
  5490   0017EC                     l5092:
  5491   0017EC  90D8               	bcf	status,0,c
  5492   0017EE  3042               	rrcf	___fldiv@bexp^0,w,c
  5493   0017F0  6E2E               	movwf	(___fldiv@b+3)^0,c
  5494   0017F2  EFAC  F00A         	goto	l5006
  5495   0017F6                     l1586:
  5496   0017F6  0012               	return		;funcret
  5497   0017F8                     __end_of___fldiv:
  5498                           	callstack 0
  5499                           
  5500 ;; *************** function _ADC_GetConversion_Blocking *****************
  5501 ;; Defined at:
  5502 ;;		line 192 in file "MCAL_Layer/ADC/hal_adc.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  _adc            2   11[COMRAM] PTR const struct .
  5505 ;;		 -> adc_1(4), 
  5506 ;;  channel         1   13[COMRAM] enum E3203
  5507 ;;  conversion_r    2   14[COMRAM] PTR unsigned int 
  5508 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  ret             1   16[COMRAM] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      unsigned char 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5520 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;Total ram usage:        6 bytes
  5525 ;; Hardware stack levels used: 1
  5526 ;; Hardware stack levels required when called: 6
  5527 ;; This function calls:
  5528 ;;		_ADC_GetConversionResult
  5529 ;;		_ADC_SelectChannel
  5530 ;;		_ADC_StartConversion
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text28
  5537   002B24                     __ptext28:
  5538                           	callstack 0
  5539   002B24                     _ADC_GetConversion_Blocking:
  5540                           	callstack 24
  5541   002B24                     
  5542                           ;MCAL_Layer/ADC/hal_adc.c: 194:      if((_adc==((void*)0))||(conversion_result==((void*)
      +                          0))){
  5543   002B24  500C               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  5544   002B26  100D               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
  5545   002B28  B4D8               	btfsc	status,2,c
  5546   002B2A  EF99  F015         	goto	u4081
  5547   002B2E  EF9B  F015         	goto	u4080
  5548   002B32                     u4081:
  5549   002B32  EFA4  F015         	goto	l4952
  5550   002B36                     u4080:
  5551   002B36  500F               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  5552   002B38  1010               	iorwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,w,c
  5553   002B3A  A4D8               	btfss	status,2,c
  5554   002B3C  EFA2  F015         	goto	u4091
  5555   002B40  EFA4  F015         	goto	u4090
  5556   002B44                     u4091:
  5557   002B44  EFA8  F015         	goto	l4954
  5558   002B48                     u4090:
  5559   002B48                     l4952:
  5560                           
  5561                           ;MCAL_Layer/ADC/hal_adc.c: 195:         ret=(Std_ReturnType)0x00;
  5562   002B48  0E00               	movlw	0
  5563   002B4A  6E11               	movwf	ADC_GetConversion_Blocking@ret^0,c
  5564                           
  5565                           ;MCAL_Layer/ADC/hal_adc.c: 196:     }
  5566   002B4C  EFCA  F015         	goto	l4958
  5567   002B50                     l4954:
  5568                           
  5569                           ;MCAL_Layer/ADC/hal_adc.c: 199:          ret = ADC_SelectChannel(_adc ,channel);
  5570   002B50  C00C  F007         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
  5571   002B54  C00D  F008         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_SelectChannel@_adc+1
  5572   002B58  C00E  F009         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  5573   002B5C  EC7F  F017         	call	_ADC_SelectChannel	;wreg free
  5574   002B60  6E11               	movwf	ADC_GetConversion_Blocking@ret^0,c
  5575                           
  5576                           ;MCAL_Layer/ADC/hal_adc.c: 201:          ret&= ADC_StartConversion(_adc);
  5577   002B62  C00C  F004         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  5578   002B66  C00D  F005         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_StartConversion@_adc+1
  5579   002B6A  ECB2  F017         	call	_ADC_StartConversion	;wreg free
  5580   002B6E  1611               	andwf	ADC_GetConversion_Blocking@ret^0,f,c
  5581   002B70                     l958:
  5582   002B70  B2C2               	btfsc	194,1,c	;volatile
  5583   002B72  EFBD  F015         	goto	u4101
  5584   002B76  EFBF  F015         	goto	u4100
  5585   002B7A                     u4101:
  5586   002B7A  EFB8  F015         	goto	l958
  5587   002B7E                     u4100:
  5588   002B7E                     
  5589                           ;MCAL_Layer/ADC/hal_adc.c: 205:          ret&= ADC_GetConversionResult(_adc,conversion_r
      +                          esult);
  5590   002B7E  C00C  F004         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  5591   002B82  C00D  F005         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversionResult@_adc+1
  5592   002B86  C00F  F006         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  5593   002B8A  C010  F007         	movff	ADC_GetConversion_Blocking@conversion_result+1,ADC_GetConversionResult@conversion
      +                          _result+1
  5594   002B8E  EC13  F012         	call	_ADC_GetConversionResult	;wreg free
  5595   002B92  1611               	andwf	ADC_GetConversion_Blocking@ret^0,f,c
  5596   002B94                     l4958:
  5597                           
  5598                           ;MCAL_Layer/ADC/hal_adc.c: 207:     return ret;
  5599   002B94  5011               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  5600   002B96  0012               	return		;funcret
  5601   002B98                     __end_of_ADC_GetConversion_Blocking:
  5602                           	callstack 0
  5603                           
  5604 ;; *************** function _ADC_StartConversion *****************
  5605 ;; Defined at:
  5606 ;;		line 120 in file "MCAL_Layer/ADC/hal_adc.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  _adc            2    3[COMRAM] PTR const struct .
  5609 ;;		 -> adc_1(4), 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  ret             1    5[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      unsigned char 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;Total ram usage:        3 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 4
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_ADC_GetConversion_Blocking
  5632 ;;		_ADC_StartConversion_Interrupt
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text29
  5637   002F64                     __ptext29:
  5638                           	callstack 0
  5639   002F64                     _ADC_StartConversion:
  5640                           	callstack 25
  5641   002F64                     
  5642                           ;MCAL_Layer/ADC/hal_adc.c: 121:     Std_ReturnType ret=(Std_ReturnType)0x01;
  5643   002F64  0E01               	movlw	1
  5644   002F66  6E06               	movwf	ADC_StartConversion@ret^0,c
  5645   002F68                     
  5646                           ;MCAL_Layer/ADC/hal_adc.c: 122:     if(_adc==((void*)0)){
  5647   002F68  5004               	movf	ADC_StartConversion@_adc^0,w,c
  5648   002F6A  1005               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  5649   002F6C  A4D8               	btfss	status,2,c
  5650   002F6E  EFBB  F017         	goto	u3861
  5651   002F72  EFBD  F017         	goto	u3860
  5652   002F76                     u3861:
  5653   002F76  EFC1  F017         	goto	l930
  5654   002F7A                     u3860:
  5655   002F7A                     
  5656                           ;MCAL_Layer/ADC/hal_adc.c: 123:         ret=(Std_ReturnType)0x00;
  5657   002F7A  0E00               	movlw	0
  5658   002F7C  6E06               	movwf	ADC_StartConversion@ret^0,c
  5659                           
  5660                           ;MCAL_Layer/ADC/hal_adc.c: 124:     }
  5661   002F7E  EFC2  F017         	goto	l4762
  5662   002F82                     l930:
  5663                           
  5664                           ;MCAL_Layer/ADC/hal_adc.c: 126:         ((*((volatile ADCON0_t *)(0xFC2))).GO_DONE=1);
  5665   002F82  82C2               	bsf	194,1,c	;volatile
  5666   002F84                     l4762:
  5667                           
  5668                           ;MCAL_Layer/ADC/hal_adc.c: 128:     return ret;
  5669   002F84  5006               	movf	ADC_StartConversion@ret^0,w,c
  5670   002F86  0012               	return		;funcret
  5671   002F88                     __end_of_ADC_StartConversion:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _ADC_SelectChannel *****************
  5675 ;; Defined at:
  5676 ;;		line 100 in file "MCAL_Layer/ADC/hal_adc.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  _adc            2    6[COMRAM] PTR const struct .
  5679 ;;		 -> adc_1(4), 
  5680 ;;  channel         1    8[COMRAM] enum E3203
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  ret             1   10[COMRAM] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      unsigned char 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5692 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;Total ram usage:        5 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; Hardware stack levels required when called: 5
  5699 ;; This function calls:
  5700 ;;		_adc_input_channel_port_configure
  5701 ;; This function is called by:
  5702 ;;		_ADC_GetConversion_Blocking
  5703 ;;		_ADC_StartConversion_Interrupt
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text30
  5708   002EFE                     __ptext30:
  5709                           	callstack 0
  5710   002EFE                     _ADC_SelectChannel:
  5711                           	callstack 24
  5712   002EFE                     
  5713                           ;MCAL_Layer/ADC/hal_adc.c: 101:      Std_ReturnType ret=(Std_ReturnType)0x01;
  5714   002EFE  0E01               	movlw	1
  5715   002F00  6E0B               	movwf	ADC_SelectChannel@ret^0,c
  5716   002F02                     
  5717                           ;MCAL_Layer/ADC/hal_adc.c: 102:     if(_adc==((void*)0)){
  5718   002F02  5007               	movf	ADC_SelectChannel@_adc^0,w,c
  5719   002F04  1008               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  5720   002F06  A4D8               	btfss	status,2,c
  5721   002F08  EF88  F017         	goto	u3851
  5722   002F0C  EF8A  F017         	goto	u3850
  5723   002F10                     u3851:
  5724   002F10  EF8E  F017         	goto	l4748
  5725   002F14                     u3850:
  5726   002F14                     
  5727                           ;MCAL_Layer/ADC/hal_adc.c: 103:         ret=(Std_ReturnType)0x00;
  5728   002F14  0E00               	movlw	0
  5729   002F16  6E0B               	movwf	ADC_SelectChannel@ret^0,c
  5730                           
  5731                           ;MCAL_Layer/ADC/hal_adc.c: 104:     }
  5732   002F18  EF9A  F017         	goto	l4752
  5733   002F1C                     l4748:
  5734                           
  5735                           ;MCAL_Layer/ADC/hal_adc.c: 106:          (*((volatile ADCON0_t *)(0xFC2))).CHS =channel;
  5736   002F1C  C009  F00A         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5737   002F20  460A               	rlncf	??_ADC_SelectChannel^0,f,c
  5738   002F22  460A               	rlncf	??_ADC_SelectChannel^0,f,c
  5739   002F24  50C2               	movf	194,w,c	;volatile
  5740   002F26  180A               	xorwf	??_ADC_SelectChannel^0,w,c
  5741   002F28  0BC3               	andlw	-61
  5742   002F2A  180A               	xorwf	??_ADC_SelectChannel^0,w,c
  5743   002F2C  6EC2               	movwf	194,c	;volatile
  5744   002F2E                     
  5745                           ;MCAL_Layer/ADC/hal_adc.c: 107:         adc_input_channel_port_configure(channel);
  5746   002F2E  5009               	movf	ADC_SelectChannel@channel^0,w,c
  5747   002F30  EC80  F012         	call	_adc_input_channel_port_configure
  5748   002F34                     l4752:
  5749                           
  5750                           ;MCAL_Layer/ADC/hal_adc.c: 109:     return ret;
  5751   002F34  500B               	movf	ADC_SelectChannel@ret^0,w,c
  5752   002F36  0012               	return		;funcret
  5753   002F38                     __end_of_ADC_SelectChannel:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _adc_input_channel_port_configure *****************
  5757 ;; Defined at:
  5758 ;;		line 233 in file "MCAL_Layer/ADC/hal_adc.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  channel         1    wreg     enum E3203
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  channel         1    5[COMRAM] enum E3203
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;Total ram usage:        3 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 4
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_ADC_SelectChannel
  5783 ;;		_ADC_Init
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text31
  5788   002500                     __ptext31:
  5789                           	callstack 0
  5790   002500                     _adc_input_channel_port_configure:
  5791                           	callstack 24
  5792                           
  5793                           ;incstack = 0
  5794                           ;adc_input_channel_port_configure@channel stored from wreg
  5795   002500  6E06               	movwf	adc_input_channel_port_configure@channel^0,c
  5796   002502                     
  5797                           ;MCAL_Layer/ADC/hal_adc.c: 234:       switch(channel){
  5798   002502  EFAA  F012         	goto	l4556
  5799   002506                     l4528:
  5800   002506  8092               	bsf	146,0,c	;volatile
  5801   002508  EFEB  F012         	goto	l985
  5802   00250C                     l4530:
  5803   00250C  8292               	bsf	146,1,c	;volatile
  5804   00250E  EFEB  F012         	goto	l985
  5805   002512                     l4532:
  5806   002512  8492               	bsf	146,2,c	;volatile
  5807   002514  EFEB  F012         	goto	l985
  5808   002518                     l4534:
  5809   002518  8692               	bsf	146,3,c	;volatile
  5810   00251A  EFEB  F012         	goto	l985
  5811   00251E                     l4536:
  5812   00251E  8A92               	bsf	146,5,c	;volatile
  5813   002520  EFEB  F012         	goto	l985
  5814   002524                     l4538:
  5815   002524  8096               	bsf	150,0,c	;volatile
  5816   002526  EFEB  F012         	goto	l985
  5817   00252A                     l4540:
  5818   00252A  8296               	bsf	150,1,c	;volatile
  5819   00252C  EFEB  F012         	goto	l985
  5820   002530                     l4542:
  5821   002530  8496               	bsf	150,2,c	;volatile
  5822   002532  EFEB  F012         	goto	l985
  5823   002536                     l4544:
  5824   002536  8493               	bsf	147,2,c	;volatile
  5825   002538  EFEB  F012         	goto	l985
  5826   00253C                     l4546:
  5827   00253C  8693               	bsf	147,3,c	;volatile
  5828   00253E  EFEB  F012         	goto	l985
  5829   002542                     l4548:
  5830   002542  8293               	bsf	147,1,c	;volatile
  5831   002544  EFEB  F012         	goto	l985
  5832   002548                     l4550:
  5833   002548  8893               	bsf	147,4,c	;volatile
  5834   00254A  EFEB  F012         	goto	l985
  5835   00254E                     l4552:
  5836   00254E  8093               	bsf	147,0,c	;volatile
  5837   002550  EFEB  F012         	goto	l985
  5838   002554                     l4556:
  5839   002554  5006               	movf	adc_input_channel_port_configure@channel^0,w,c
  5840   002556  6E04               	movwf	??_adc_input_channel_port_configure^0,c
  5841   002558  6A05               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  5842                           
  5843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5844                           ; Switch size 1, requested type "simple"
  5845                           ; Number of cases is 1, Range of values is 0 to 0
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte            4     3 (average)
  5849                           ;	Chosen strategy is simple_byte
  5850   00255A  5005               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  5851   00255C  0A00               	xorlw	0	; case 0
  5852   00255E  B4D8               	btfsc	status,2,c
  5853   002560  EFB4  F012         	goto	l6658
  5854   002564  EFEB  F012         	goto	l985
  5855   002568                     l6658:
  5856                           
  5857                           ; Switch size 1, requested type "simple"
  5858                           ; Number of cases is 13, Range of values is 0 to 12
  5859                           ; switch strategies available:
  5860                           ; Name         Instructions Cycles
  5861                           ; simple_byte           40    21 (average)
  5862                           ;	Chosen strategy is simple_byte
  5863   002568  5004               	movf	??_adc_input_channel_port_configure^0,w,c
  5864   00256A  0A00               	xorlw	0	; case 0
  5865   00256C  B4D8               	btfsc	status,2,c
  5866   00256E  EF83  F012         	goto	l4528
  5867   002572  0A01               	xorlw	1	; case 1
  5868   002574  B4D8               	btfsc	status,2,c
  5869   002576  EF86  F012         	goto	l4530
  5870   00257A  0A03               	xorlw	3	; case 2
  5871   00257C  B4D8               	btfsc	status,2,c
  5872   00257E  EF89  F012         	goto	l4532
  5873   002582  0A01               	xorlw	1	; case 3
  5874   002584  B4D8               	btfsc	status,2,c
  5875   002586  EF8C  F012         	goto	l4534
  5876   00258A  0A07               	xorlw	7	; case 4
  5877   00258C  B4D8               	btfsc	status,2,c
  5878   00258E  EF8F  F012         	goto	l4536
  5879   002592  0A01               	xorlw	1	; case 5
  5880   002594  B4D8               	btfsc	status,2,c
  5881   002596  EF92  F012         	goto	l4538
  5882   00259A  0A03               	xorlw	3	; case 6
  5883   00259C  B4D8               	btfsc	status,2,c
  5884   00259E  EF95  F012         	goto	l4540
  5885   0025A2  0A01               	xorlw	1	; case 7
  5886   0025A4  B4D8               	btfsc	status,2,c
  5887   0025A6  EF98  F012         	goto	l4542
  5888   0025AA  0A0F               	xorlw	15	; case 8
  5889   0025AC  B4D8               	btfsc	status,2,c
  5890   0025AE  EF9B  F012         	goto	l4544
  5891   0025B2  0A01               	xorlw	1	; case 9
  5892   0025B4  B4D8               	btfsc	status,2,c
  5893   0025B6  EF9E  F012         	goto	l4546
  5894   0025BA  0A03               	xorlw	3	; case 10
  5895   0025BC  B4D8               	btfsc	status,2,c
  5896   0025BE  EFA1  F012         	goto	l4548
  5897   0025C2  0A01               	xorlw	1	; case 11
  5898   0025C4  B4D8               	btfsc	status,2,c
  5899   0025C6  EFA4  F012         	goto	l4550
  5900   0025CA  0A07               	xorlw	7	; case 12
  5901   0025CC  B4D8               	btfsc	status,2,c
  5902   0025CE  EFA7  F012         	goto	l4552
  5903   0025D2  EFEB  F012         	goto	l985
  5904   0025D6                     l985:
  5905   0025D6  0012               	return		;funcret
  5906   0025D8                     __end_of_adc_input_channel_port_configure:
  5907                           	callstack 0
  5908                           
  5909 ;; *************** function _ADC_GetConversionResult *****************
  5910 ;; Defined at:
  5911 ;;		line 166 in file "MCAL_Layer/ADC/hal_adc.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  _adc            2    3[COMRAM] PTR const struct .
  5914 ;;		 -> adc_1(4), 
  5915 ;;  conversion_r    2    5[COMRAM] PTR unsigned int 
  5916 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  ret             1   10[COMRAM] unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      unsigned char 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:        8 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 4
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_ADC_GetConversion_Blocking
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text32
  5943   002426                     __ptext32:
  5944                           	callstack 0
  5945   002426                     _ADC_GetConversionResult:
  5946                           	callstack 25
  5947   002426                     
  5948                           ;MCAL_Layer/ADC/hal_adc.c: 167:     Std_ReturnType ret=(Std_ReturnType)0x01;
  5949   002426  0E01               	movlw	1
  5950   002428  6E0B               	movwf	ADC_GetConversionResult@ret^0,c
  5951   00242A                     
  5952                           ;MCAL_Layer/ADC/hal_adc.c: 168:      if((_adc==((void*)0))||(conversion_result==((void*)
      +                          0))){
  5953   00242A  5004               	movf	ADC_GetConversionResult@_adc^0,w,c
  5954   00242C  1005               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  5955   00242E  B4D8               	btfsc	status,2,c
  5956   002430  EF1C  F012         	goto	u3871
  5957   002434  EF1E  F012         	goto	u3870
  5958   002438                     u3871:
  5959   002438  EF27  F012         	goto	l4772
  5960   00243C                     u3870:
  5961   00243C  5006               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  5962   00243E  1007               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  5963   002440  A4D8               	btfss	status,2,c
  5964   002442  EF25  F012         	goto	u3881
  5965   002446  EF27  F012         	goto	u3880
  5966   00244A                     u3881:
  5967   00244A  EF5B  F012         	goto	l4782
  5968   00244E                     u3880:
  5969   00244E                     l4772:
  5970                           
  5971                           ;MCAL_Layer/ADC/hal_adc.c: 169:         ret=(Std_ReturnType)0x00;
  5972   00244E  0E00               	movlw	0
  5973   002450  6E0B               	movwf	ADC_GetConversionResult@ret^0,c
  5974                           
  5975                           ;MCAL_Layer/ADC/hal_adc.c: 170:     }
  5976   002452  EF7E  F012         	goto	l4784
  5977   002456                     l4774:
  5978   002456  50C3               	movf	195,w,c	;volatile
  5979   002458  CFC4 F008          	movff	4036,??_ADC_GetConversionResult	;volatile
  5980   00245C  6A09               	clrf	(??_ADC_GetConversionResult+1)^0,c
  5981   00245E  C008  F009         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  5982   002462  6A08               	clrf	??_ADC_GetConversionResult^0,c
  5983   002464  2608               	addwf	??_ADC_GetConversionResult^0,f,c
  5984   002466  0E00               	movlw	0
  5985   002468  2209               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  5986   00246A  0E06               	movlw	6
  5987   00246C  6E0A               	movwf	(??_ADC_GetConversionResult+2)^0,c
  5988   00246E                     u3895:
  5989   00246E  3409               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  5990   002470  3209               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  5991   002472  3208               	rrcf	??_ADC_GetConversionResult^0,f,c
  5992   002474  2E0A               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  5993   002476  EF37  F012         	goto	u3895
  5994   00247A  C006  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  5995   00247E  C007  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  5996   002482  C008  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  5997   002486  C009  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  5998   00248A  EF7E  F012         	goto	l4784
  5999   00248E                     l4776:
  6000   00248E  50C3               	movf	195,w,c	;volatile
  6001   002490  CFC4 F008          	movff	4036,??_ADC_GetConversionResult	;volatile
  6002   002494  6A09               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6003   002496  C008  F009         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6004   00249A  6A08               	clrf	??_ADC_GetConversionResult^0,c
  6005   00249C  2608               	addwf	??_ADC_GetConversionResult^0,f,c
  6006   00249E  0E00               	movlw	0
  6007   0024A0  2209               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6008   0024A2  C006  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  6009   0024A6  C007  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  6010   0024AA  C008  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6011   0024AE  C009  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6012   0024B2  EF7E  F012         	goto	l4784
  6013   0024B6                     l4782:
  6014   0024B6  EE20 F003          	lfsr	2,3
  6015   0024BA  5004               	movf	ADC_GetConversionResult@_adc^0,w,c
  6016   0024BC  26D9               	addwf	fsr2l,f,c
  6017   0024BE  5005               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  6018   0024C0  22DA               	addwfc	fsr2h,f,c
  6019   0024C2  B2DF               	btfsc	indf2,1,c
  6020   0024C4  EF66  F012         	goto	u3901
  6021   0024C8  EF69  F012         	goto	u3900
  6022   0024CC                     u3901:
  6023   0024CC  0E01               	movlw	1
  6024   0024CE  EF6A  F012         	goto	u3910
  6025   0024D2                     u3900:
  6026   0024D2  0E00               	movlw	0
  6027   0024D4                     u3910:
  6028   0024D4  6E08               	movwf	??_ADC_GetConversionResult^0,c
  6029   0024D6  6A09               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6030                           
  6031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6032                           ; Switch size 1, requested type "simple"
  6033                           ; Number of cases is 1, Range of values is 0 to 0
  6034                           ; switch strategies available:
  6035                           ; Name         Instructions Cycles
  6036                           ; simple_byte            4     3 (average)
  6037                           ;	Chosen strategy is simple_byte
  6038   0024D8  5009               	movf	(??_ADC_GetConversionResult+1)^0,w,c
  6039   0024DA  0A00               	xorlw	0	; case 0
  6040   0024DC  B4D8               	btfsc	status,2,c
  6041   0024DE  EF73  F012         	goto	l6660
  6042   0024E2  EF47  F012         	goto	l4776
  6043   0024E6                     l6660:
  6044                           
  6045                           ; Switch size 1, requested type "simple"
  6046                           ; Number of cases is 2, Range of values is 0 to 1
  6047                           ; switch strategies available:
  6048                           ; Name         Instructions Cycles
  6049                           ; simple_byte            7     4 (average)
  6050                           ;	Chosen strategy is simple_byte
  6051   0024E6  5008               	movf	??_ADC_GetConversionResult^0,w,c
  6052   0024E8  0A00               	xorlw	0	; case 0
  6053   0024EA  B4D8               	btfsc	status,2,c
  6054   0024EC  EF2B  F012         	goto	l4774
  6055   0024F0  0A01               	xorlw	1	; case 1
  6056   0024F2  B4D8               	btfsc	status,2,c
  6057   0024F4  EF47  F012         	goto	l4776
  6058   0024F8  EF47  F012         	goto	l4776
  6059   0024FC                     l4784:
  6060                           
  6061                           ;MCAL_Layer/ADC/hal_adc.c: 178:     return ret;
  6062   0024FC  500B               	movf	ADC_GetConversionResult@ret^0,w,c
  6063   0024FE  0012               	return		;funcret
  6064   002500                     __end_of_ADC_GetConversionResult:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function _InterruptManagerLow *****************
  6068 ;; Defined at:
  6069 ;;		line 41 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;Total ram usage:        3 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 3
  6090 ;; This function calls:
  6091 ;;		_ADC_ISR
  6092 ;;		_INT1_ISR
  6093 ;;		_INT2_ISR
  6094 ;;		_RB4_ISR
  6095 ;;		_RB5_ISR
  6096 ;;		_RB6_ISR
  6097 ;;		_RB7_ISR
  6098 ;; This function is called by:
  6099 ;;		Interrupt level 1
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	intcodelo
  6104   000018                     __pintcodelo:
  6105                           	callstack 0
  6106   000018                     _InterruptManagerLow:
  6107                           	callstack 18
  6108                           
  6109                           ;incstack = 0
  6110   000018  8077               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6111   00001A  CFD8 F001          	movff	status,??_InterruptManagerLow
  6112   00001E  CFE8 F002          	movff	wreg,??_InterruptManagerLow+1
  6113   000022  CFE0 F003          	movff	bsr,??_InterruptManagerLow+2
  6114   000026                     
  6115                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:       if((0 == (*((volatile INTCON3_
      +                          t *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  6116   000026  BCF0               	btfsc	240,6,c	;volatile
  6117   000028  EF18  F000         	goto	i1u288_21
  6118   00002C  EF1A  F000         	goto	i1u288_20
  6119   000030                     i1u288_21:
  6120   000030  EF23  F000         	goto	i1l830
  6121   000034                     i1u288_20:
  6122   000034  A0F0               	btfss	240,0,c	;volatile
  6123   000036  EF1F  F000         	goto	i1u289_21
  6124   00003A  EF21  F000         	goto	i1u289_20
  6125   00003E                     i1u289_21:
  6126   00003E  EF23  F000         	goto	i1l830
  6127   000042                     i1u289_20:
  6128   000042                     
  6129                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT1_ISR();
  6130   000042  ECCE  F017         	call	_INT1_ISR	;wreg free
  6131   000046                     i1l830:
  6132                           
  6133                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 46:     if((0 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  6134   000046  BEF0               	btfsc	240,7,c	;volatile
  6135   000048  EF28  F000         	goto	i1u290_21
  6136   00004C  EF2A  F000         	goto	i1u290_20
  6137   000050                     i1u290_21:
  6138   000050  EF33  F000         	goto	i1l832
  6139   000054                     i1u290_20:
  6140   000054  A2F0               	btfss	240,1,c	;volatile
  6141   000056  EF2F  F000         	goto	i1u291_21
  6142   00005A  EF31  F000         	goto	i1u291_20
  6143   00005E                     i1u291_21:
  6144   00005E  EF33  F000         	goto	i1l832
  6145   000062                     i1u291_20:
  6146   000062                     
  6147                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 47:         INT2_ISR();
  6148   000062  ECCC  F017         	call	_INT2_ISR	;wreg free
  6149   000066                     i1l832:
  6150                           
  6151                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:      if((0 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  6152   000066  B0F1               	btfsc	241,0,c	;volatile
  6153   000068  EF38  F000         	goto	i1u292_21
  6154   00006C  EF3A  F000         	goto	i1u292_20
  6155   000070                     i1u292_21:
  6156   000070  EF50  F000         	goto	i1l834
  6157   000074                     i1u292_20:
  6158   000074  A0F2               	btfss	242,0,c	;volatile
  6159   000076  EF3F  F000         	goto	i1u293_21
  6160   00007A  EF41  F000         	goto	i1u293_20
  6161   00007E                     i1u293_21:
  6162   00007E  EF50  F000         	goto	i1l834
  6163   000082                     i1u293_20:
  6164   000082  3881               	swapf	129,w,c	;volatile
  6165   000084  0B0F               	andlw	15
  6166   000086  0B01               	andlw	1
  6167   000088  186E               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  6168   00008A  B4D8               	btfsc	status,2,c
  6169   00008C  EF4A  F000         	goto	i1u294_21
  6170   000090  EF4C  F000         	goto	i1u294_20
  6171   000094                     i1u294_21:
  6172   000094  EF50  F000         	goto	i1l834
  6173   000098                     i1u294_20:
  6174   000098                     
  6175                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_pin_init_value^=1;
  6176   000098  0E01               	movlw	1
  6177   00009A  1A6E               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  6178   00009C                     
  6179                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR();
  6180   00009C  ECCA  F017         	call	_RB4_ISR	;wreg free
  6181   0000A0                     i1l834:
  6182                           
  6183                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  6184   0000A0  B0F1               	btfsc	241,0,c	;volatile
  6185   0000A2  EF55  F000         	goto	i1u295_21
  6186   0000A6  EF57  F000         	goto	i1u295_20
  6187   0000AA                     i1u295_21:
  6188   0000AA  EF6E  F000         	goto	i1l836
  6189   0000AE                     i1u295_20:
  6190   0000AE  A0F2               	btfss	242,0,c	;volatile
  6191   0000B0  EF5C  F000         	goto	i1u296_21
  6192   0000B4  EF5E  F000         	goto	i1u296_20
  6193   0000B8                     i1u296_21:
  6194   0000B8  EF6E  F000         	goto	i1l836
  6195   0000BC                     i1u296_20:
  6196   0000BC  3881               	swapf	129,w,c	;volatile
  6197   0000BE  42E8               	rrncf	wreg,f,c
  6198   0000C0  0B07               	andlw	7
  6199   0000C2  0B01               	andlw	1
  6200   0000C4  186D               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  6201   0000C6  B4D8               	btfsc	status,2,c
  6202   0000C8  EF68  F000         	goto	i1u297_21
  6203   0000CC  EF6A  F000         	goto	i1u297_20
  6204   0000D0                     i1u297_21:
  6205   0000D0  EF6E  F000         	goto	i1l836
  6206   0000D4                     i1u297_20:
  6207   0000D4                     
  6208                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:         RB5_pin_init_value^=1;
  6209   0000D4  0E01               	movlw	1
  6210   0000D6  1A6D               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  6211   0000D8                     
  6212                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB5_ISR();
  6213   0000D8  ECC8  F017         	call	_RB5_ISR	;wreg free
  6214   0000DC                     i1l836:
  6215                           
  6216                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  6217   0000DC  B0F1               	btfsc	241,0,c	;volatile
  6218   0000DE  EF73  F000         	goto	i1u298_21
  6219   0000E2  EF75  F000         	goto	i1u298_20
  6220   0000E6                     i1u298_21:
  6221   0000E6  EF8C  F000         	goto	i1l838
  6222   0000EA                     i1u298_20:
  6223   0000EA  A0F2               	btfss	242,0,c	;volatile
  6224   0000EC  EF7A  F000         	goto	i1u299_21
  6225   0000F0  EF7C  F000         	goto	i1u299_20
  6226   0000F4                     i1u299_21:
  6227   0000F4  EF8C  F000         	goto	i1l838
  6228   0000F8                     i1u299_20:
  6229   0000F8  4481               	rlncf	129,w,c	;volatile
  6230   0000FA  46E8               	rlncf	wreg,f,c
  6231   0000FC  0B03               	andlw	3
  6232   0000FE  0B01               	andlw	1
  6233   000100  186C               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  6234   000102  B4D8               	btfsc	status,2,c
  6235   000104  EF86  F000         	goto	i1u300_21
  6236   000108  EF88  F000         	goto	i1u300_20
  6237   00010C                     i1u300_21:
  6238   00010C  EF8C  F000         	goto	i1l838
  6239   000110                     i1u300_20:
  6240   000110                     
  6241                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:         RB6_pin_init_value^=1;
  6242   000110  0E01               	movlw	1
  6243   000112  1A6C               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  6244   000114                     
  6245                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:         RB6_ISR();
  6246   000114  ECC6  F017         	call	_RB6_ISR	;wreg free
  6247   000118                     i1l838:
  6248                           
  6249                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  6250   000118  B0F1               	btfsc	241,0,c	;volatile
  6251   00011A  EF91  F000         	goto	i1u301_21
  6252   00011E  EF93  F000         	goto	i1u301_20
  6253   000122                     i1u301_21:
  6254   000122  EFA8  F000         	goto	i1l840
  6255   000126                     i1u301_20:
  6256   000126  A0F2               	btfss	242,0,c	;volatile
  6257   000128  EF98  F000         	goto	i1u302_21
  6258   00012C  EF9A  F000         	goto	i1u302_20
  6259   000130                     i1u302_21:
  6260   000130  EFA8  F000         	goto	i1l840
  6261   000134                     i1u302_20:
  6262   000134  4481               	rlncf	129,w,c	;volatile
  6263   000136  0B01               	andlw	1
  6264   000138  186B               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  6265   00013A  B4D8               	btfsc	status,2,c
  6266   00013C  EFA2  F000         	goto	i1u303_21
  6267   000140  EFA4  F000         	goto	i1u303_20
  6268   000144                     i1u303_21:
  6269   000144  EFA8  F000         	goto	i1l840
  6270   000148                     i1u303_20:
  6271   000148                     
  6272                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:         RB7_pin_init_value^=1;
  6273   000148  0E01               	movlw	1
  6274   00014A  1A6B               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  6275   00014C                     
  6276                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:         RB7_ISR();
  6277   00014C  ECC4  F017         	call	_RB7_ISR	;wreg free
  6278   000150                     i1l840:
  6279                           
  6280                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:      if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  6281   000150  BC9F               	btfsc	159,6,c	;volatile
  6282   000152  EFAD  F000         	goto	i1u304_21
  6283   000156  EFAF  F000         	goto	i1u304_20
  6284   00015A                     i1u304_21:
  6285   00015A  EFB8  F000         	goto	i1l843
  6286   00015E                     i1u304_20:
  6287   00015E  AC9E               	btfss	158,6,c	;volatile
  6288   000160  EFB4  F000         	goto	i1u305_21
  6289   000164  EFB6  F000         	goto	i1u305_20
  6290   000168                     i1u305_21:
  6291   000168  EFB8  F000         	goto	i1l843
  6292   00016C                     i1u305_20:
  6293   00016C                     
  6294                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         ADC_ISR();
  6295   00016C  ECDF  F017         	call	_ADC_ISR	;wreg free
  6296   000170                     i1l843:
  6297   000170  C003  FFE0         	movff	??_InterruptManagerLow+2,bsr
  6298   000174  C002  FFE8         	movff	??_InterruptManagerLow+1,wreg
  6299   000178  C001  FFD8         	movff	??_InterruptManagerLow,status
  6300   00017C  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6301   00017E  0010               	retfie	
  6302   000180                     __end_of_InterruptManagerLow:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _RB7_ISR *****************
  6306 ;; Defined at:
  6307 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		None
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; Hardware stack levels required when called: 2
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_InterruptManagerLow
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text34
  6336   002F88                     __ptext34:
  6337                           	callstack 0
  6338   002F88                     _RB7_ISR:
  6339                           	callstack 18
  6340   002F88                     
  6341                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6342   002F88  90F2               	bcf	242,0,c	;volatile
  6343   002F8A  0012               	return		;funcret
  6344   002F8C                     __end_of_RB7_ISR:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _RB6_ISR *****************
  6348 ;; Defined at:
  6349 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		None
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; Hardware stack levels required when called: 2
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_InterruptManagerLow
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text35
  6378   002F8C                     __ptext35:
  6379                           	callstack 0
  6380   002F8C                     _RB6_ISR:
  6381                           	callstack 18
  6382   002F8C                     
  6383                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6384   002F8C  90F2               	bcf	242,0,c	;volatile
  6385   002F8E  0012               	return		;funcret
  6386   002F90                     __end_of_RB6_ISR:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function _RB5_ISR *****************
  6390 ;; Defined at:
  6391 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		None
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;Total ram usage:        0 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; Hardware stack levels required when called: 2
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_InterruptManagerLow
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text36
  6420   002F90                     __ptext36:
  6421                           	callstack 0
  6422   002F90                     _RB5_ISR:
  6423                           	callstack 18
  6424   002F90                     
  6425                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6426   002F90  90F2               	bcf	242,0,c	;volatile
  6427   002F92  0012               	return		;funcret
  6428   002F94                     __end_of_RB5_ISR:
  6429                           	callstack 0
  6430                           
  6431 ;; *************** function _RB4_ISR *****************
  6432 ;; Defined at:
  6433 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;		None
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		None
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;Total ram usage:        0 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; Hardware stack levels required when called: 2
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_InterruptManagerLow
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text37
  6462   002F94                     __ptext37:
  6463                           	callstack 0
  6464   002F94                     _RB4_ISR:
  6465                           	callstack 18
  6466   002F94                     
  6467                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6468   002F94  90F2               	bcf	242,0,c	;volatile
  6469   002F96  0012               	return		;funcret
  6470   002F98                     __end_of_RB4_ISR:
  6471                           	callstack 0
  6472                           
  6473 ;; *************** function _INT2_ISR *****************
  6474 ;; Defined at:
  6475 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		None
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;Total ram usage:        0 bytes
  6494 ;; Hardware stack levels used: 1
  6495 ;; Hardware stack levels required when called: 2
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_InterruptManagerLow
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text38
  6504   002F98                     __ptext38:
  6505                           	callstack 0
  6506   002F98                     _INT2_ISR:
  6507                           	callstack 18
  6508   002F98                     
  6509                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  6510   002F98  92F0               	bcf	240,1,c	;volatile
  6511   002F9A  0012               	return		;funcret
  6512   002F9C                     __end_of_INT2_ISR:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _INT1_ISR *****************
  6516 ;; Defined at:
  6517 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		None
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 2
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_InterruptManagerLow
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text39
  6546   002F9C                     __ptext39:
  6547                           	callstack 0
  6548   002F9C                     _INT1_ISR:
  6549                           	callstack 18
  6550   002F9C                     
  6551                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  6552   002F9C  90F0               	bcf	240,0,c	;volatile
  6553   002F9E  0012               	return		;funcret
  6554   002FA0                     __end_of_INT1_ISR:
  6555                           	callstack 0
  6556                           
  6557 ;; *************** function _ADC_ISR *****************
  6558 ;; Defined at:
  6559 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		None
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;Total ram usage:        0 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 2
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_InterruptManagerLow
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text40
  6588   002FBE                     __ptext40:
  6589                           	callstack 0
  6590   002FBE                     _ADC_ISR:
  6591                           	callstack 18
  6592   002FBE  0012               	return		;funcret
  6593   002FC0                     __end_of_ADC_ISR:
  6594                           	callstack 0
  6595                           
  6596 ;; *************** function _InterruptManagerHigh *****************
  6597 ;; Defined at:
  6598 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;Total ram usage:        0 bytes
  6617 ;; Hardware stack levels used: 1
  6618 ;; Hardware stack levels required when called: 1
  6619 ;; This function calls:
  6620 ;;		_INT0_ISR
  6621 ;;		i2_ADC_ISR
  6622 ;;		i2_INT1_ISR
  6623 ;;		i2_INT2_ISR
  6624 ;;		i2_RB4_ISR
  6625 ;;		i2_RB5_ISR
  6626 ;;		i2_RB6_ISR
  6627 ;;		i2_RB7_ISR
  6628 ;; This function is called by:
  6629 ;;		Interrupt level 2
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	intcode
  6634   000008                     __pintcode:
  6635                           	callstack 0
  6636   000008                     _InterruptManagerHigh:
  6637                           	callstack 18
  6638                           
  6639                           ;incstack = 0
  6640   000008  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6641   00000A  ED9D  F00F         	call	int_func,f	;refresh shadow registers
  6642                           
  6643                           	psect	intcode_body
  6644   001F3A                     __pintcode_body:
  6645                           	callstack 18
  6646   001F3A                     int_func:
  6647                           	callstack 18
  6648   001F3A  0006               	pop		; remove dummy address from shadow register refresh
  6649   001F3C                     
  6650                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 4:     if((1 == (*((volatile INTCON_t *)
      +                          (0xFF2))).INT0IE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).INT0IF)){
  6651   001F3C  A8F2               	btfss	242,4,c	;volatile
  6652   001F3E  EFA3  F00F         	goto	i2u547_41
  6653   001F42  EFA5  F00F         	goto	i2u547_40
  6654   001F46                     i2u547_41:
  6655   001F46  EFAE  F00F         	goto	i2l809
  6656   001F4A                     i2u547_40:
  6657   001F4A  A2F2               	btfss	242,1,c	;volatile
  6658   001F4C  EFAA  F00F         	goto	i2u548_41
  6659   001F50  EFAC  F00F         	goto	i2u548_40
  6660   001F54                     i2u548_41:
  6661   001F54  EFAE  F00F         	goto	i2l809
  6662   001F58                     i2u548_40:
  6663   001F58                     
  6664                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 5:         INT0_ISR();
  6665   001F58  ECDC  F017         	call	_INT0_ISR	;wreg free
  6666   001F5C                     i2l809:
  6667                           
  6668                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 8:      if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  6669   001F5C  ACF0               	btfss	240,6,c	;volatile
  6670   001F5E  EFB3  F00F         	goto	i2u549_41
  6671   001F62  EFB5  F00F         	goto	i2u549_40
  6672   001F66                     i2u549_41:
  6673   001F66  EFBE  F00F         	goto	i2l811
  6674   001F6A                     i2u549_40:
  6675   001F6A  A0F0               	btfss	240,0,c	;volatile
  6676   001F6C  EFBA  F00F         	goto	i2u550_41
  6677   001F70  EFBC  F00F         	goto	i2u550_40
  6678   001F74                     i2u550_41:
  6679   001F74  EFBE  F00F         	goto	i2l811
  6680   001F78                     i2u550_40:
  6681   001F78                     
  6682                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 9:         INT1_ISR();
  6683   001F78  ECDA  F017         	call	i2_INT1_ISR	;wreg free
  6684   001F7C                     i2l811:
  6685                           
  6686                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 12:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  6687   001F7C  AEF0               	btfss	240,7,c	;volatile
  6688   001F7E  EFC3  F00F         	goto	i2u551_41
  6689   001F82  EFC5  F00F         	goto	i2u551_40
  6690   001F86                     i2u551_41:
  6691   001F86  EFCE  F00F         	goto	i2l813
  6692   001F8A                     i2u551_40:
  6693   001F8A  A2F0               	btfss	240,1,c	;volatile
  6694   001F8C  EFCA  F00F         	goto	i2u552_41
  6695   001F90  EFCC  F00F         	goto	i2u552_40
  6696   001F94                     i2u552_41:
  6697   001F94  EFCE  F00F         	goto	i2l813
  6698   001F98                     i2u552_40:
  6699   001F98                     
  6700                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 13:         INT2_ISR();
  6701   001F98  ECD8  F017         	call	i2_INT2_ISR	;wreg free
  6702   001F9C                     i2l813:
  6703                           
  6704                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 16:      if((1 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  6705   001F9C  A0F1               	btfss	241,0,c	;volatile
  6706   001F9E  EFD3  F00F         	goto	i2u553_41
  6707   001FA2  EFD5  F00F         	goto	i2u553_40
  6708   001FA6                     i2u553_41:
  6709   001FA6  EFEB  F00F         	goto	i2l815
  6710   001FAA                     i2u553_40:
  6711   001FAA  A0F2               	btfss	242,0,c	;volatile
  6712   001FAC  EFDA  F00F         	goto	i2u554_41
  6713   001FB0  EFDC  F00F         	goto	i2u554_40
  6714   001FB4                     i2u554_41:
  6715   001FB4  EFEB  F00F         	goto	i2l815
  6716   001FB8                     i2u554_40:
  6717   001FB8  3881               	swapf	129,w,c	;volatile
  6718   001FBA  0B0F               	andlw	15
  6719   001FBC  0B01               	andlw	1
  6720   001FBE  186E               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  6721   001FC0  B4D8               	btfsc	status,2,c
  6722   001FC2  EFE5  F00F         	goto	i2u555_41
  6723   001FC6  EFE7  F00F         	goto	i2u555_40
  6724   001FCA                     i2u555_41:
  6725   001FCA  EFEB  F00F         	goto	i2l815
  6726   001FCE                     i2u555_40:
  6727   001FCE                     
  6728                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 17:         RB4_pin_init_value^=1;
  6729   001FCE  0E01               	movlw	1
  6730   001FD0  1A6E               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  6731   001FD2                     
  6732                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 18:         RB4_ISR();
  6733   001FD2  ECD6  F017         	call	i2_RB4_ISR	;wreg free
  6734   001FD6                     i2l815:
  6735                           
  6736                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 21:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  6737   001FD6  A0F1               	btfss	241,0,c	;volatile
  6738   001FD8  EFF0  F00F         	goto	i2u556_41
  6739   001FDC  EFF2  F00F         	goto	i2u556_40
  6740   001FE0                     i2u556_41:
  6741   001FE0  EF09  F010         	goto	i2l817
  6742   001FE4                     i2u556_40:
  6743   001FE4  A0F2               	btfss	242,0,c	;volatile
  6744   001FE6  EFF7  F00F         	goto	i2u557_41
  6745   001FEA  EFF9  F00F         	goto	i2u557_40
  6746   001FEE                     i2u557_41:
  6747   001FEE  EF09  F010         	goto	i2l817
  6748   001FF2                     i2u557_40:
  6749   001FF2  3881               	swapf	129,w,c	;volatile
  6750   001FF4  42E8               	rrncf	wreg,f,c
  6751   001FF6  0B07               	andlw	7
  6752   001FF8  0B01               	andlw	1
  6753   001FFA  186D               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  6754   001FFC  B4D8               	btfsc	status,2,c
  6755   001FFE  EF03  F010         	goto	i2u558_41
  6756   002002  EF05  F010         	goto	i2u558_40
  6757   002006                     i2u558_41:
  6758   002006  EF09  F010         	goto	i2l817
  6759   00200A                     i2u558_40:
  6760   00200A                     
  6761                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 22:         RB5_pin_init_value^=1;
  6762   00200A  0E01               	movlw	1
  6763   00200C  1A6D               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  6764   00200E                     
  6765                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 23:         RB5_ISR();
  6766   00200E  ECD4  F017         	call	i2_RB5_ISR	;wreg free
  6767   002012                     i2l817:
  6768                           
  6769                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 26:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  6770   002012  A0F1               	btfss	241,0,c	;volatile
  6771   002014  EF0E  F010         	goto	i2u559_41
  6772   002018  EF10  F010         	goto	i2u559_40
  6773   00201C                     i2u559_41:
  6774   00201C  EF27  F010         	goto	i2l819
  6775   002020                     i2u559_40:
  6776   002020  A0F2               	btfss	242,0,c	;volatile
  6777   002022  EF15  F010         	goto	i2u560_41
  6778   002026  EF17  F010         	goto	i2u560_40
  6779   00202A                     i2u560_41:
  6780   00202A  EF27  F010         	goto	i2l819
  6781   00202E                     i2u560_40:
  6782   00202E  4481               	rlncf	129,w,c	;volatile
  6783   002030  46E8               	rlncf	wreg,f,c
  6784   002032  0B03               	andlw	3
  6785   002034  0B01               	andlw	1
  6786   002036  186C               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  6787   002038  B4D8               	btfsc	status,2,c
  6788   00203A  EF21  F010         	goto	i2u561_41
  6789   00203E  EF23  F010         	goto	i2u561_40
  6790   002042                     i2u561_41:
  6791   002042  EF27  F010         	goto	i2l819
  6792   002046                     i2u561_40:
  6793   002046                     
  6794                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 27:         RB6_pin_init_value^=1;
  6795   002046  0E01               	movlw	1
  6796   002048  1A6C               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  6797   00204A                     
  6798                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 28:         RB6_ISR();
  6799   00204A  ECD2  F017         	call	i2_RB6_ISR	;wreg free
  6800   00204E                     i2l819:
  6801                           
  6802                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 31:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  6803   00204E  A0F1               	btfss	241,0,c	;volatile
  6804   002050  EF2C  F010         	goto	i2u562_41
  6805   002054  EF2E  F010         	goto	i2u562_40
  6806   002058                     i2u562_41:
  6807   002058  EF43  F010         	goto	i2l821
  6808   00205C                     i2u562_40:
  6809   00205C  A0F2               	btfss	242,0,c	;volatile
  6810   00205E  EF33  F010         	goto	i2u563_41
  6811   002062  EF35  F010         	goto	i2u563_40
  6812   002066                     i2u563_41:
  6813   002066  EF43  F010         	goto	i2l821
  6814   00206A                     i2u563_40:
  6815   00206A  4481               	rlncf	129,w,c	;volatile
  6816   00206C  0B01               	andlw	1
  6817   00206E  186B               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  6818   002070  B4D8               	btfsc	status,2,c
  6819   002072  EF3D  F010         	goto	i2u564_41
  6820   002076  EF3F  F010         	goto	i2u564_40
  6821   00207A                     i2u564_41:
  6822   00207A  EF43  F010         	goto	i2l821
  6823   00207E                     i2u564_40:
  6824   00207E                     
  6825                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:         RB7_pin_init_value^=1;
  6826   00207E  0E01               	movlw	1
  6827   002080  1A6B               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  6828   002082                     
  6829                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:         RB7_ISR();
  6830   002082  ECD0  F017         	call	i2_RB7_ISR	;wreg free
  6831   002086                     i2l821:
  6832                           
  6833                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 36:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  6834   002086  AC9F               	btfss	159,6,c	;volatile
  6835   002088  EF48  F010         	goto	i2u565_41
  6836   00208C  EF4A  F010         	goto	i2u565_40
  6837   002090                     i2u565_41:
  6838   002090  EF53  F010         	goto	i2l824
  6839   002094                     i2u565_40:
  6840   002094  AC9E               	btfss	158,6,c	;volatile
  6841   002096  EF4F  F010         	goto	i2u566_41
  6842   00209A  EF51  F010         	goto	i2u566_40
  6843   00209E                     i2u566_41:
  6844   00209E  EF53  F010         	goto	i2l824
  6845   0020A2                     i2u566_40:
  6846   0020A2                     
  6847                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 37:         ADC_ISR();
  6848   0020A2  ECE0  F017         	call	i2_ADC_ISR	;wreg free
  6849   0020A6                     i2l824:
  6850   0020A6  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6851   0020A8  0011               	retfie		f
  6852   0020AA                     __end_of_InterruptManagerHigh:
  6853                           	callstack 0
  6854                           
  6855 ;; *************** function i2_RB7_ISR *****************
  6856 ;; Defined at:
  6857 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		None
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;Total ram usage:        0 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_InterruptManagerHigh
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text42
  6885   002FA0                     __ptext42:
  6886                           	callstack 0
  6887   002FA0                     i2_RB7_ISR:
  6888                           	callstack 18
  6889   002FA0                     
  6890                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6891   002FA0  90F2               	bcf	242,0,c	;volatile
  6892   002FA2  0012               	return		;funcret
  6893   002FA4                     __end_ofi2_RB7_ISR:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function i2_RB6_ISR *****************
  6897 ;; Defined at:
  6898 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		None
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_InterruptManagerHigh
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text43
  6926   002FA4                     __ptext43:
  6927                           	callstack 0
  6928   002FA4                     i2_RB6_ISR:
  6929                           	callstack 18
  6930   002FA4                     
  6931                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6932   002FA4  90F2               	bcf	242,0,c	;volatile
  6933   002FA6  0012               	return		;funcret
  6934   002FA8                     __end_ofi2_RB6_ISR:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function i2_RB5_ISR *****************
  6938 ;; Defined at:
  6939 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		None
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_InterruptManagerHigh
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text44
  6967   002FA8                     __ptext44:
  6968                           	callstack 0
  6969   002FA8                     i2_RB5_ISR:
  6970                           	callstack 18
  6971   002FA8                     
  6972                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  6973   002FA8  90F2               	bcf	242,0,c	;volatile
  6974   002FAA  0012               	return		;funcret
  6975   002FAC                     __end_ofi2_RB5_ISR:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function i2_RB4_ISR *****************
  6979 ;; Defined at:
  6980 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		None
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;Total ram usage:        0 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_InterruptManagerHigh
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text45
  7008   002FAC                     __ptext45:
  7009                           	callstack 0
  7010   002FAC                     i2_RB4_ISR:
  7011                           	callstack 18
  7012   002FAC                     
  7013                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
  7014   002FAC  90F2               	bcf	242,0,c	;volatile
  7015   002FAE  0012               	return		;funcret
  7016   002FB0                     __end_ofi2_RB4_ISR:
  7017                           	callstack 0
  7018                           
  7019 ;; *************** function i2_INT2_ISR *****************
  7020 ;; Defined at:
  7021 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		None
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;Total ram usage:        0 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_InterruptManagerHigh
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text46
  7049   002FB0                     __ptext46:
  7050                           	callstack 0
  7051   002FB0                     i2_INT2_ISR:
  7052                           	callstack 18
  7053   002FB0                     
  7054                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
  7055   002FB0  92F0               	bcf	240,1,c	;volatile
  7056   002FB2  0012               	return		;funcret
  7057   002FB4                     __end_ofi2_INT2_ISR:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function i2_INT1_ISR *****************
  7061 ;; Defined at:
  7062 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		None
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;Total ram usage:        0 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_InterruptManagerHigh
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text47
  7090   002FB4                     __ptext47:
  7091                           	callstack 0
  7092   002FB4                     i2_INT1_ISR:
  7093                           	callstack 18
  7094   002FB4                     
  7095                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
  7096   002FB4  90F0               	bcf	240,0,c	;volatile
  7097   002FB6  0012               	return		;funcret
  7098   002FB8                     __end_ofi2_INT1_ISR:
  7099                           	callstack 0
  7100                           
  7101 ;; *************** function i2_ADC_ISR *****************
  7102 ;; Defined at:
  7103 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;		None
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;		None
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  1    wreg      void 
  7110 ;; Registers used:
  7111 ;;		None
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;Total ram usage:        0 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_InterruptManagerHigh
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text48
  7131   002FC0                     __ptext48:
  7132                           	callstack 0
  7133   002FC0                     i2_ADC_ISR:
  7134                           	callstack 18
  7135   002FC0  0012               	return		;funcret
  7136   002FC2                     __end_ofi2_ADC_ISR:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _INT0_ISR *****************
  7140 ;; Defined at:
  7141 ;;		line 132 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      void 
  7148 ;; Registers used:
  7149 ;;		None
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used: 1
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_InterruptManagerHigh
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text49
  7169   002FB8                     __ptext49:
  7170                           	callstack 0
  7171   002FB8                     _INT0_ISR:
  7172                           	callstack 18
  7173   002FB8                     
  7174                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).INT0IF=0);
  7175   002FB8  92F2               	bcf	242,1,c	;volatile
  7176   002FBA  0012               	return		;funcret
  7177   002FBC                     __end_of_INT0_ISR:
  7178                           	callstack 0
  7179                           
  7180                           	psect	rparam
  7181   000000                     
  7182                           	psect	temp
  7183   000077                     btemp:
  7184                           	callstack 0
  7185   000077                     	ds	1
  7186   000000                     int$flags	set	btemp
  7187   000000                     wtemp8	set	btemp+1
  7188   000000                     ttemp5	set	btemp+1
  7189   000000                     ttemp6	set	btemp+4
  7190   000000                     ttemp7	set	btemp+8
  7191                           
  7192                           	psect	config
  7193                           
  7194                           ; Padding undefined space
  7195   300000                     	org	3145728
  7196   300000  FF                 	db	255
  7197                           
  7198                           ;Config register CONFIG1H @ 0x300001
  7199                           ;	Oscillator Selection bits
  7200                           ;	OSC = HS, HS oscillator
  7201                           ;	Fail-Safe Clock Monitor Enable bit
  7202                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7203                           ;	Internal/External Oscillator Switchover bit
  7204                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7205   300001                     	org	3145729
  7206   300001  02                 	db	2
  7207                           
  7208                           ;Config register CONFIG2L @ 0x300002
  7209                           ;	Power-up Timer Enable bit
  7210                           ;	PWRT = OFF, PWRT disabled
  7211                           ;	Brown-out Reset Enable bits
  7212                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7213                           ;	Brown Out Reset Voltage bits
  7214                           ;	BORV = 1, 
  7215   300002                     	org	3145730
  7216   300002  09                 	db	9
  7217                           
  7218                           ;Config register CONFIG2H @ 0x300003
  7219                           ;	Watchdog Timer Enable bit
  7220                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7221                           ;	Watchdog Timer Postscale Select bits
  7222                           ;	WDTPS = 32768, 1:32768
  7223   300003                     	org	3145731
  7224   300003  1E                 	db	30
  7225                           
  7226                           ; Padding undefined space
  7227   300004                     	org	3145732
  7228   300004  FF                 	db	255
  7229                           
  7230                           ;Config register CONFIG3H @ 0x300005
  7231                           ;	CCP2 MUX bit
  7232                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7233                           ;	PORTB A/D Enable bit
  7234                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7235                           ;	Low-Power Timer1 Oscillator Enable bit
  7236                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7237                           ;	MCLR Pin Enable bit
  7238                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7239   300005                     	org	3145733
  7240   300005  81                 	db	129
  7241                           
  7242                           ;Config register CONFIG4L @ 0x300006
  7243                           ;	Stack Full/Underflow Reset Enable bit
  7244                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7245                           ;	Single-Supply ICSP Enable bit
  7246                           ;	LVP = OFF, Single-Supply ICSP disabled
  7247                           ;	Extended Instruction Set Enable bit
  7248                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7249                           ;	Background Debugger Enable bit
  7250                           ;	DEBUG = 0x1, unprogrammed default
  7251   300006                     	org	3145734
  7252   300006  81                 	db	129
  7253                           
  7254                           ; Padding undefined space
  7255   300007                     	org	3145735
  7256   300007  FF                 	db	255
  7257                           
  7258                           ;Config register CONFIG5L @ 0x300008
  7259                           ;	Code Protection bit
  7260                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7261                           ;	Code Protection bit
  7262                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7263                           ;	Code Protection bit
  7264                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7265                           ;	Code Protection bit
  7266                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7267   300008                     	org	3145736
  7268   300008  0F                 	db	15
  7269                           
  7270                           ;Config register CONFIG5H @ 0x300009
  7271                           ;	Boot Block Code Protection bit
  7272                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7273                           ;	Data EEPROM Code Protection bit
  7274                           ;	CPD = OFF, Data EEPROM not code-protected
  7275   300009                     	org	3145737
  7276   300009  C0                 	db	192
  7277                           
  7278                           ;Config register CONFIG6L @ 0x30000A
  7279                           ;	Write Protection bit
  7280                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7281                           ;	Write Protection bit
  7282                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7283                           ;	Write Protection bit
  7284                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7285                           ;	Write Protection bit
  7286                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7287   30000A                     	org	3145738
  7288   30000A  0F                 	db	15
  7289                           
  7290                           ;Config register CONFIG6H @ 0x30000B
  7291                           ;	Configuration Register Write Protection bit
  7292                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7293                           ;	Boot Block Write Protection bit
  7294                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7295                           ;	Data EEPROM Write Protection bit
  7296                           ;	WRTD = OFF, Data EEPROM not write-protected
  7297   30000B                     	org	3145739
  7298   30000B  E0                 	db	224
  7299                           
  7300                           ;Config register CONFIG7L @ 0x30000C
  7301                           ;	Table Read Protection bit
  7302                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7303                           ;	Table Read Protection bit
  7304                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7305                           ;	Table Read Protection bit
  7306                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7307                           ;	Table Read Protection bit
  7308                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7309   30000C                     	org	3145740
  7310   30000C  0F                 	db	15
  7311                           
  7312                           ;Config register CONFIG7H @ 0x30000D
  7313                           ;	Boot Block Table Read Protection bit
  7314                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7315   30000D                     	org	3145741
  7316   30000D  40                 	db	64
  7317                           tosu	equ	0xFFF
  7318                           tosh	equ	0xFFE
  7319                           tosl	equ	0xFFD
  7320                           stkptr	equ	0xFFC
  7321                           pclatu	equ	0xFFB
  7322                           pclath	equ	0xFFA
  7323                           pcl	equ	0xFF9
  7324                           tblptru	equ	0xFF8
  7325                           tblptrh	equ	0xFF7
  7326                           tblptrl	equ	0xFF6
  7327                           tablat	equ	0xFF5
  7328                           prodh	equ	0xFF4
  7329                           prodl	equ	0xFF3
  7330                           indf0	equ	0xFEF
  7331                           postinc0	equ	0xFEE
  7332                           postdec0	equ	0xFED
  7333                           preinc0	equ	0xFEC
  7334                           plusw0	equ	0xFEB
  7335                           fsr0h	equ	0xFEA
  7336                           fsr0l	equ	0xFE9
  7337                           wreg	equ	0xFE8
  7338                           indf1	equ	0xFE7
  7339                           postinc1	equ	0xFE6
  7340                           postdec1	equ	0xFE5
  7341                           preinc1	equ	0xFE4
  7342                           plusw1	equ	0xFE3
  7343                           fsr1h	equ	0xFE2
  7344                           fsr1l	equ	0xFE1
  7345                           bsr	equ	0xFE0
  7346                           indf2	equ	0xFDF
  7347                           postinc2	equ	0xFDE
  7348                           postdec2	equ	0xFDD
  7349                           preinc2	equ	0xFDC
  7350                           plusw2	equ	0xFDB
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    16
    Data        44
    BSS         105
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     93     118
    BANK0           128      0     125
    BANK1           256      8       8
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2114$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_str(COMRAM[11]), convert_uint16_to_string@Temp_str(BANK1[6]), convert_uint8_to_string@Temp_str(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2061$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2061$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned int  size(2) Largest target is 2
		 -> lm35_res_2(BANK0[2]), lm35_res_1(BANK0[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 4
		 -> adc_1(BANK0[4]), 

    ADC_GetConversionResult@conversion_result	PTR unsigned int  size(2) Largest target is 2
		 -> lm35_res_2(BANK0[2]), lm35_res_1(BANK0[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 4
		 -> adc_1(BANK0[4]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 4
		 -> adc_1(BANK0[4]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 4
		 -> adc_1(BANK0[4]), 

    Interrupt_RBx_set_pin_init_value@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S910$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S868$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pin(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pin(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 11
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), STR_8(CODE[10]), STR_6(CODE[10]), 
		 -> STR_4(CODE[11]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManagerLow in COMRAM

    None.

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   86582
                                             91 COMRAM     2     2      0
         _ADC_GetConversion_Blocking
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
           _convert_uint16_to_string
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   37170
                                             27 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   18688
                                             21 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   17998
                                             17 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16782
                                             17 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5747
                                             13 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5309
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5157
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5081
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    5081
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4913
                                              3 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10234
                                             87 COMRAM     4     0      4
                                              0 BANK1      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             65 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             57 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             43 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             30 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             67 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             42 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           6     1      5    1559
                                             11 COMRAM     6     1      5
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     198
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     416
                                              6 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              8     4      4     308
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerLow                                 3     3      0       0
                                              0 COMRAM     3     3      0
                            _ADC_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _InterruptManagerHigh                                0     0      0       0
                           _INT0_ISR
                          i2_ADC_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB4_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
 ---------------------------------------------------------------------------------
 (13) i2_RB7_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB6_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB5_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_RB4_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_INT2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_INT1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_ADC_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_command
     _gpio_pin_write_logic
     _lcd_4bit_send_enable_signal
       _gpio_pin_write_logic
     _lcd_send_4bits
       _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   i2_ADC_ISR
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB4_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      39        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8       8       7        3.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5D      76       1       93.7%
BITBIGSFRl          43      0       0      38        0.0%
BITBIGSFRh          3B      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      12        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 03 23:33:45 2023

                               ___fldiv@aexp 0043                                 ___fldiv@bexp 0042  
                               ___fldiv@sign 003B                              ?_lcd_send_4bits 000E  
                                         l81 2C7A                                           l76 2C08  
                               ___awdiv@sign 0009                                           bsr 0FE0  
                      ??_InterruptManagerLow 0001                                          l102 2A20  
                                        l241 2DF0                                          l251 2DAA  
                                        l227 28CE                                          l246 2E36  
                                        l193 2AA8                                          l178 281E  
                                        l442 21F2                                          l198 2D18  
                                        l930 2F82                                          l932 2F86  
                                        l951 24FE                                          l927 2F36  
                                        l961 2B96                                          l958 2B70  
                                        l985 25D6                                          _abs 2EBE  
                     ??_InterruptManagerHigh 0001                                          _pad 2AAA  
                            __end_of_ADC_ISR 2FC0                                          _ret 0076  
        __end_of_lcd_4bit_send_enable_signal 2D1A                  _lcd_4bit_send_enable_signal 2CCC  
                               ___awmod@sign 0009                          led_initialize@F3217 0075  
                                        prod 0FF3                        relay_initialize@F3211 0071  
                                        wreg 0FE8                                 ___flmul@aexp 0023  
                               ___flmul@bexp 0024                  lcd_send_4bits@_data_command 0010  
                               ___flmul@sign 001E                                 ___flmul@temp 0029  
                               ___flmul@prod 0025                    ?_convert_uint16_to_string 0058  
                            __end_of_RB4_ISR 2F98                              __end_of_RB5_ISR 2F94  
                            __end_of_RB6_ISR 2F90                              __end_of_RB7_ISR 2F8C  
                               ___fltol@exp1 004D                                         ?_abs 000A  
                                       l1301 2424                                         l1235 2764  
                                       l1600 1702                                         l1248 297E  
                                       l1622 145C                                         l5000 152A  
                                       l1625 12EE                                         l5002 1540  
                                       l1618 10F8                                         l1714 2ACC  
                                       l1635 141E                                         l1627 1366  
                                       l1723 1C78                                         l5020 1594  
                                       l5004 1550                                         l5012 1570  
                                       l1628 1354                                         l5100 1034  
                                       l1725 1C80                                         l5030 15E6  
                                       l5022 15AE                                         l5014 1580  
                                       l5006 1558                                         l5110 1070  
                                       l5102 1040                                         l1662 1C2E  
                                       l1718 2B22                                         l1726 1CC6  
                                       l1750 2CCA                                         l1591 161A  
                                       l5040 1642                                         l5032 15F6  
                                       l5024 15BE                                         l5016 1580  
                                       l5008 155C                                         l5200 1376  
                                       l5120 10A2                                         l5112 1080  
                                       l5104 104E                                         l1744 231E  
                                       l1673 1BC6                                         l1737 1DC2  
                                       l5050 1682                                         l5042 1644  
                                       l5034 160A                                         l5026 15CE  
                                       l1586 17F6                                         l5210 13D8  
                                       l5202 1382                                         l5130 10E2  
                                       l5122 10B0                                         l5114 1086  
                                       l5106 1050                                         l1666 1B6A  
                                       l1754 2EF4                                         l1659 1AD2  
                                       l5060 16BE                                         l5052 168C  
                                       l5044 1654                                         l5036 1618  
                                       l1588 1656                                         l5028 15DE  
                                       l5220 1440                                         l5212 13EC  
                                       l5204 1390                                         l5140 112C  
                                       l5132 10E8                                         l5124 10B2  
                                       l5116 1096                                         l5108 1060  
                                       l5300 1BA8                                         l1780 2FBC  
                                       l1692 2D64                                         l4340 20AA  
                                       l1597 169C                                         l1757 2EFC  
                                       l5070 1730                                         l5062 16CC  
                                       l5054 169A                                         l5046 1666  
                                       l5038 1624                                         l5222 1442  
                                       l5214 1406                                         l5206 13BA  
                                       l5150 117C                                         l5142 1138  
                                       l5134 1108                                         l5126 10C2  
                                       l5118 109C                                         l5230 2320  
                                       l5310 1BFE                                         l5302 1BB6  
                                       l4350 2108                                         l4342 20AE  
                                       l1599 1714                                         l1679 1F38  
                                       l5080 179C                                         l5072 173E  
                                       l5064 16FA                                         l5048 167C  
                                       l5056 16AC                                         l5216 1422  
                                       l5224 1448                                         l5208 13BE  
                                       l5160 11BE                                         l5152 1188  
                                       l5144 1142                                         l5136 1118  
                                       l5128 10D2                                         l5240 2376  
                                       l5232 2336                                         l5312 1C0E  
                                       l5304 1BD4                                         l4352 2164  
                                       l4344 20C0                                         l4520 2BB2  
                                       l1769 26A0                                         l1777 2E7A  
                                       l4530 250C                                         l5090 17EA  
                                       l5082 17B6                                         l5074 1768  
                                       l5058 16BA                                         l5226 144C  
                                       l5218 1432                                         l5170 1220  
                                       l5162 11CA                                         l5154 1194  
                                       l5146 1158                                         l5242 2386  
                                       l5314 1C1C                                         l5306 1BD6  
                                       l4346 20E2                                         l4450 2AA6  
                                       l4442 2A22                                         l4610 2C0A  
                                       l4522 2C06                                         l4514 2B98  
                                       l4540 252A                                         l4532 2512  
                                       l5092 17EC                                         l5084 17D2  
                                       l5068 1724                                         l5076 176C  
                                       l5180 12B6                                         l5172 122C  
                                       l5164 11DA                                         l5156 11A2  
                                       l5148 1164                                         l5252 23B0  
                                       l5244 238A                                         l5236 234A  
                                       l5316 1C1E                                         l5308 1BDA  
                                       l6300 294A                                         l6220 2624  
                                       l6212 25D8                                         l4356 21C6  
                                       l4348 2100                                         l4460 2CE6  
                                       l4444 2A22                                         l4612 2C0A  
                                       l4516 2B98                                         l4550 2548  
                                       l4542 2530                                         l4534 2518  
                                       l4526 2502                                         l5086 17D6  
                                       l5078 1786                                         l5190 130C  
                                       l5182 12D4                                         l5174 1248  
                                       l5166 11F4                                         l5158 11AE  
                                       l5270 2414                                         l5262 23D8  
                                       l5254 23BA                                         l5246 2398  
                                       l5238 2374                                         l6310 2976  
                                       l6302 2952                                         l6222 265A  
                                       l6214 25EA                                         l6230 2E56  
                                       l4358 21F0                                         l4462 2CFA  
                                       l4454 2CCC                                         l4446 2A34  
                                       l4614 2C1C                                         l4518 2BAA  
                                       l4630 283C                                         l4622 2820  
                                       ?_pad 0014                                         l4552 254E  
                                       l4544 2536                                         l4536 251E  
                                       l4528 2506                                         l5088 17E4  
                                       l5192 1310                                         l5184 12DE  
                                       l5176 1272                                         l5168 1204  
                                       l5264 23E4                                         l5256 23C4  
                                       l5280 1AE2                                         l6240 26BC  
                                       l6304 2958                                         l6216 25FC  
                                       l6232 2E5A                                         l6320 2AD8  
                                       l4464 2D16                                         l4456 2CCC  
                                       l4448 2A3C                                         l4616 2C24  
                                       l4632 2852                                         l4624 2820  
                                       l4546 253C                                         l4538 2524  
                                       l5194 131E                                         l5186 12EC  
                                       l5178 12A8                                         l5266 23F4  
                                       l5290 1B20                                         l5282 1AF8  
                                       l5274 1A7E                                         l6250 26E2  
                                       l6242 26C0                                         l6234 26A2  
                                       l6306 295E                                         l6330 2ED8  
                                       l6218 2606                                         l6226 2E38  
                                       l6322 2AEC                                         l6314 2AAA  
                                       l6402 22E2                                         l4458 2CDE  
                                       l4618 2C78                                         l4634 2868  
                                       l4642 2894                                         l4626 2832  
                                       l4810 299E                                         l4548 2542  
                                       l4556 2554                                         l5196 134C  
                                       l5188 12FE                                         l5268 2404  
                                       l5292 1B52                                         l5276 1A8E  
                                       l6260 2718                                         l6252 26F4  
                                       l6244 26CE                                         l6236 26A6  
                                       l6308 296E                                         l6228 2E44  
                                       l6324 2AF0                                         l6316 2AB8  
                                       l6340 1C6C                                         l6332 1C30  
                                       l6412 2C7C                                         l4900 2DF2  
                                       l4636 287E                                         l4628 2836  
                                       l4812 29B6                                         l4804 2980  
                                       l4750 2F2E                                         l4742 2EFE  
                                       l5294 1B54                                         l5286 1B0C  
                                       l5278 1A9C                                         l6422 1DC4  
                                       l6262 272E                                         l6254 26FC  
                                       l6270 2744                                         l6246 26D6  
                                       l6238 26B4                                         l6326 2B0E  
                                       l6318 2AC4                                         l6350 1CBA  
                                       l6342 1C88                                         l6334 1C44  
                                       l6406 22F4                                         l6414 2C88  
                                       l4902 2E04                                         l4910 2D66  
                                       l4814 29E8                                         l4806 2984  
                                       l4752 2F34                                         l4744 2F02  
                                       l4760 2F7A                                         l5296 1B60  
                                       l5288 1B14                                         l6440 1EC2  
                                       l6432 1E24                                         l6272 2754  
                                       l6264 2736                                         l6256 2704  
                                       l6248 26DA                                         l6280 28D4  
                                       l6328 2EBE                                         l6360 1D0E  
                                       l6352 1CC2                                         l6344 1C98  
                                       l6336 1C54                                         l6416 2CA4  
                                       l4904 2E0C                                         l4912 2D66  
                                       l4816 29EC                                         l4808 2996  
                                       l4770 243C                                         l4746 2F14  
                                       l4762 2F84                                         l5298 1B9C  
                                       l6450 1F22                                         l6434 1E7C  
                                       l6426 1DE2                                         l6274 275C  
                                       l6266 2738                                         l6258 2712  
                                       l6290 2904                                         l6282 28E2  
                                       l6370 1D62                                         l6362 1D14  
                                       l6354 1CCE                                         l6346 1C9E  
                                       l6338 1C5C                                         l6418 2CC2  
                                       l4906 2E34                                         l4914 2D78  
                                       l4818 2A1E                                         l4772 244E  
                                       l4748 2F1C                                         l4756 2F64  
                                       l6452 1F26                                         l6444 1EDC  
                                       l6428 1DEE                                         l6268 273E  
                                       l6292 2916                                         l6284 28EA  
                                       l6372 1D7C                                         l6364 1D1A  
                                       l6356 1CD6                                         l6348 1CAE  
                                       l6460 2D3A                                         l4916 2D80  
                                       l6540 182E                                         l4774 2456  
                                       l4782 24B6                                         l4766 2426  
                                       l4758 2F68                                         l4950 2B36  
                                       l6446 1F10                                         l6438 1E96  
                                       l6294 291E                                         l6286 28EE  
                                       l6278 28D0                                         l6374 1D8C  
                                       l6358 1CDC                                         l6366 1D36  
                                       l6390 223A                                         l6382 21F4  
                                       l6462 2D56                                         l6454 2D1A  
                                       l6470 2778                                         l4918 2DA8  
                                       l6550 18B0                                         l6542 1840  
                                       l4776 248E                                         l4784 24FC  
                                       l4768 242A                                         l4952 2B48  
                                       l6448 1F1C                                         l6296 2926  
                                       l6288 28FC                                         l6376 1D92  
                                       l6368 1D50                                         l6392 224A  
                                       l6384 221A                                         l6456 2D2A  
                                       l6480 27D2                                         l6472 277C  
                                       l6560 19E6                                         l6552 1926  
                                       l6544 185E                                         l6536 17F8  
                                       l4954 2B50                                         l4946 2B24  
                                       l4970 148A                                         l4962 145E  
                                       l6298 2934                                         l6378 1DA2  
                                       l6394 2268                                         l6386 2228  
                                       l6458 2D32                                         l6482 27EE  
                                       l6474 278E                                         l6466 2766  
                                       l4890 2DBE                                         l6570 1A54  
                                       l6562 1A04                                         l6554 199C  
                                       l6546 187C                                         l6538 1816  
                                       l6660 24E6                                         l4956 2B7E  
                                       l4948 2B24                                         l4980 14C4  
                                       l4972 149A                                         l4964 146A  
                                       l6396 2286                                         l6388 2236  
                                       l6484 27F0                                         l6476 2796  
                                       l6468 276C                                         l4892 2DC6  
                                       l6572 1A66                                         l6564 1A1C  
                                       l6556 19B2                                         l6548 1896  
                                       l4958 2B94                                         l4990 14F0  
                                       l4982 14CA                                         l4974 14AA  
                                       l4966 1478                                         l6398 22CA  
                                       l6486 280E                                         l6478 27B2  
                                       l4894 2DEE                                         l4886 2DAC  
                                       l6654 28A8                                         l6566 1A2E  
                                       l6558 19C8                                         l4992 1500  
                                       l4984 14D0                                         l4976 14AC  
                                       l4968 147A                                         l6488 281C  
                                       l6656 21DA                                         l4888 2DAC  
                                       l6568 1A3C                                         l6658 2568  
                                       l4994 1510                                         l4986 14DE  
                                       l4978 14B4                                         l4898 2DF2  
                                       l4996 1512                                         l4988 14E0  
                                       l4998 151A                                         STR_1 1030  
                                       STR_2 1030                                         STR_4 1011  
                                       STR_5 101C                                         STR_6 101C  
                                       STR_7 1026                                         STR_8 1026  
                                       u4100 2B7E                                         u4101 2B7A  
                                       u4110 1478                                         u4111 1474  
                                       u4200 1618                                         u4120 148A  
                                       u3400 20E2                                         u4040 2DBE  
                                       u4201 1614                                         u4121 1486  
                                       u3401 20DE                                         u4041 2DBA  
                                       u4210 1642                                         u4130 149A  
                                       u3410 2100                                         u4050 2E04  
                                       u4211 163E                                         u4131 1496  
                                       u3411 20FC                                         u4051 2E00  
                                       u4300 173E                                         u4220 1666  
                                       u4140 14DE                                         u4060 2D78  
                                       u4301 173A                                         u4221 1662  
                                       u4141 14DA                                         u4061 2D74  
                                       u4310 1786                                         u4230 167C  
                                       u4150 14F0                                         u4311 1782  
                                       u4231 1678                                         u4151 14EC  
                                       u4080 2B36                                         u4320 17B6  
                                       u4240 169A                                         u4160 1500  
                                       u4400 1108                                         u6000 1CAE  
                                       u3424 2128                                         u4081 2B32  
                                       u4321 17B2                                         u4241 1696  
                                       u4161 14FC                                         u4401 1104  
                                       u6001 1CAA                                         u3425 2124  
                                       u4090 2B48                                         u4330 17E4  
                                       u4250 16BA                                         u4170 1540  
                                       u4410 1118                                         u6010 1D50  
                                       u3434 2184                                         u3610 2A34  
                                       u4091 2B44                                         u4331 17E0  
                                       u4251 16B6                                         u4171 153C  
                                       u4411 1114                                         u6011 1D4C  
                                       u3435 2180                                         u3611 2A30  
                                       u4260 16CC                                         u4180 1580  
                                       u4500 13D8                                         u4420 1292  
                                       u4340 104E                                         u6100 1E20  
                                       u6020 1D62                                         u3620 2CDE  
                                       u4261 16C8                                         u4181 157C  
                                       u4501 13D4                                         u4341 104A  
                                       u6101 1E1C                                         u6021 1D5E  
                                       u3621 2CDA                                         u4270 16FA  
                                       u4190 15F6                                         u4510 1406  
                                       u4430 12EC                                         u4350 1060  
                                       u6110 1E92                                         u6030 1D7C  
                                       u3390 20C0                                         u4271 16F6  
                                       u4191 15F2                                         u4511 1402  
                                       u4431 12E8                                         u4351 105C  
                                       u6111 1E8E                                         u6031 1D78  
                                       u3391 20BC                                         u4280 1710  
                                       u4520 1440                                         u4440 130C  
                                       u4360 1070                                         u4600 1A8E  
                                       u6120 1ED8                                         u6040 1D8C  
                                       u4281 170C                                         u4521 143C  
                                       u4441 1308                                         u4425 1288  
                                       u4361 106C                                         u4601 1A8A  
                                       u6121 1ED4                                         u6041 1D88  
                                       u4290 1724                                         u4450 131E  
                                       u4370 10B0                                         u4530 2336  
                                       u4610 1A9C                                         u6130 1F38  
                                       u6050 221A                                         u3730 2C1C  
                                       u4291 1720                                         u4451 131A  
                                       u4371 10AC                                         u4531 2332  
                                       u4611 1A98                                         u6131 1F34  
                                       u6051 2216                                         u3731 2C18  
                                       u3900 24D2                                         u4460 134C  
                                       u4380 10C2                                         u4540 236A  
                                       u4620 1AF8                                         u6060 2268  
                                       u3740 2832                                         u6220 1A1C  
                                       u3901 24CC                                         u4461 1348  
                                       u4381 10BE                                         u4621 1AF4  
                                       u6061 2264                                         u6141 2772  
                                       u3741 282E                                         u6221 1A18  
                                       u3910 24D4                                         u4470 1362  
                                       u4390 10D2                                         u4550 2398  
                                       u4630 1B4E                                         u6070 2286  
                                       u6150 278E                                         u6230 1A54  
                                       u4471 135E                                         u4391 10CE  
                                       u4551 2394                                         u4631 1B4A  
                                       u6071 2282                                         u6151 278A  
                                       u6231 1A50                                         u4480 1376  
                                       u4560 23AC                                         u4640 1B98  
                                       u6080 2CC2                                         u6160 280E  
                                       u4481 1372                                         u4561 23A8  
                                       u4545 2360                                         u4641 1B94  
                                       u6081 2CBE                                         u6161 280A  
                                       u3850 2F14                                         u4490 1390  
                                       u4570 23D4                                         u4650 1BB6  
                                       u6090 1DDE                                         u3690 2BAA  
                                       u3930 2996                                         u3851 2F10  
                                       u4491 138C                                         u4571 23D0  
                                       u4651 1BB2                                         u6091 1DDA  
                                       u3691 2BA6                                         u3931 2992  
                                       u3860 2F7A                                         u4580 23F4  
                                       u4660 1BC6                                         u3940 29E0  
                                       u3861 2F76                                         u4581 23F0  
                                       u4661 1BC2                                         u3870 243C  
                                       u4590 2404                                         u4670 1BD4  
                                       u3950 2A0E                                         u3871 2438  
                                       u4591 2400                                         u4671 1BD0  
                                       u6247 1820                                         u3880 244E  
                                       u4680 1C0E                                         u5800 26B4  
                                       u3960 2A1E                                         u3881 244A  
                                       u4681 1C0A                                         u5801 26B0  
                                       u3961 2A1A                                         u4690 1C1C  
                                       u5810 26CE                                         u4691 1C18  
                                       u5811 26CA                                         u3947 29D6  
                                       u5820 26F4                                         u5900 294A  
                                       u5821 26F0                                         u5901 2946  
                                       u3957 2A04                                         u5830 2712  
                                       u5910 296E                                         u5750 25EA  
                                       u3895 246E                                         u5831 270E  
                                       u5911 296A                                         u5751 25E6  
                                       u5840 272E                                         u5760 25FC  
                                       u5920 2AB8                                         u5841 272A  
                                       u5761 25F8                                         u5921 2AB4  
                                       u5850 2754                                         u5770 2624  
                                       u5930 2B0E                                         u5851 2750  
                                       u5771 2620                                         u5931 2B0A  
                                       u5860 28E2                                         u5940 2ED8  
                                       u5780 265A                                         u5861 28DE  
                                       u5941 2ED4                                         u5781 2656  
                                       u5870 28FC                                         u5790 2E7A  
                                       u5950 1C40                                         u5871 28F8  
                                       u5791 2E76                                         u5951 1C3A  
                                       u5880 2916                                         u5960 1C42  
                                       u5881 2912                                         u5890 2934  
                                       u5970 1C54                                         u5891 2930  
                                       u5971 1C50                                         u5980 1C6C  
                                       u5981 1C68                                         u5990 1C98  
                                       u5991 1C94                ??_lcd_4bit_send_enable_signal 0010  
                                       abs@a 000A                                         _lcd1 00EF  
                                       _dbuf 009F                                         _main 17F8  
                                       _dtoa 1C30                                  ?i2_INT1_ISR 0001  
                                ?i2_INT2_ISR 0001                                         _prec 0097  
                                       pad@i 001B                                         pad@p 0018  
                                       fsr0h 0FEA                                         fsr1h 0FE2  
                                       indf0 0FEF                                         fsr2h 0FDA  
                                       fsr0l 0FE9                                         indf1 0FE7  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       pad@w 001D                                         fsr2l 0FD9  
                                       btemp 0077                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0180  
                            ___fldiv@new_exp 003C                         _RB7_InterruptHandler 005E  
                               ___param_bank 0000                               _lm35_res_1_txt 00C6  
                      _lcd_4bit_send_command 2B98                               _lm35_res_2_txt 00BF  
                                      ??_abs 000C                         _gpio_pin_write_logic 20AA  
             lcd_4bit_send_string_pos@column 001F                                        ??_pad 001A  
                           __end_of_INT0_ISR 2FBC                             __end_of_INT1_ISR 2FA0  
                           __end_of_INT2_ISR 2F9C                                ___fltol@sign1 004C  
                                      ?_main 0001                                        ?_dtoa 001F  
                            __end_of___fldiv 17F8                              __end_of___awdiv 2766  
                            __end_of___awmod 2980                              __end_of___flmul 145E  
                            __end_of___fltol 2426                              ___awdiv@divisor 0006  
                                      i1l574 2F9E                                        i1l582 2F96  
                                      i1l590 2F8E                                        i1l830 0046  
                                      i1l488 2FBE                                        i1l840 0150  
                                      i1l832 0066                                        i1l578 2F9A  
                                      i1l586 2F92                                        i1l594 2F8A  
                                      i1l834 00A0                                        i1l843 0170  
                                      i1l836 00DC                                        i1l838 0118  
                                      i2l570 2FBA                                        i2l811 1F7C  
                                      i2l821 2086                                        i2l813 1F9C  
                                      i2l574 2FB6                                        i2l582 2FAE  
                                      i2l590 2FA6                                        i2l815 1FD6  
                                      i2l488 2FC0                                        i2l824 20A6  
                                      i2l817 2012                                        i2l809 1F5C  
                                      i2l578 2FB2                                        i2l586 2FAA  
                                      i2l594 2FA2                                        i2l819 204E  
                            ___awdiv@counter 0008                          relay_turn_off@F3221 006F  
                               vfpfcnvrt@fmt 002E                    lcd_4bit_set_cursor@column 0019  
                                      _adc_1 00F5                                        _flags 006A  
                                      _fputc 25D8                                        _fputs 2E38  
                                      pad@fp 0014                                        _width 0095  
                                      _putch 2FBC                                        dtoa@d 0021  
                                      dtoa@i 002A                                        dtoa@p 0025  
                                      dtoa@s 0029                                        dtoa@w 0027  
                                      tablat 0FF5                                        ttemp5 0078  
                                      ttemp6 007B                                        ttemp7 007F  
                                      status 0FD8                                        wtemp8 0078  
                            __end_of_sprintf 2D66                              __initialization 2E7C  
                               __end_of_main 1A7C                                 __end_of_dtoa 1DC4  
                      ?_gpio_pin_write_logic 0004                                    ??_ADC_ISR 0001  
                              _lat_registers 00DB                                       ??_main 005C  
                                     ??_dtoa 0023                                __activetblptr 0003  
                           led_turn_on@F3222 0074                                    ??_RB4_ISR 0001  
                                  ??_RB5_ISR 0001                                    ??_RB6_ISR 0001  
                                  ??_RB7_ISR 0001                           _RB4_pin_init_value 006E  
                          __end_ofi2_ADC_ISR 2FC2                                       ?_fputc 0004  
                                     ?_fputs 000D                                       _ADRESH 0FC4  
                                     _ADRESL 0FC3                             ___awdiv@dividend 0004  
                                     ?_putch 0001                                       i1l2502 2F98  
                                     i1l2510 2F90                                       i1l2506 2F94  
                                     i1l2514 2F8C                                       i1l4050 0062  
                                     i1l4042 0026                                       i1l4060 00AE  
                                     i1l4052 0074                                       i1l4044 0034  
                                     i1l2518 2F88                                       i1l4070 00F8  
                                     i1l4062 00BC                                       i1l4054 0082  
                                     i1l4046 0042                                       i1l4080 0148  
                                     i1l4072 0110                                       i1l4064 00D4  
                                     i1l4056 0098                                       i1l4048 0054  
                                     i1l4082 014C                                       i1l4074 0114  
                                     i1l4066 00D8                                       i1l4058 009C  
                                     i1l4084 015E                                       i1l4076 0126  
                                     i1l4068 00EA                                       i1l4086 016C  
                                     i1l4078 0134                                       i1l2498 2F9C  
                          __end_ofi2_RB4_ISR 2FB0                                       i2l6000 1FB8  
                                     i2l6010 200A                                       i2l6002 1FCE  
                                     i2l6020 204A                                       i2l6012 200E  
                                     i2l6004 1FD2                                       i2l6030 2094  
                                     i2l6022 205C                                       i2l6014 2020  
                                     i2l6006 1FE4                                       i2l6032 20A2  
                                     i2l6024 206A                                       i2l6016 202E  
                                     i2l6008 1FF2                                       i2l6026 207E  
                                     i2l6018 2046                                       i2l2932 2FB4  
                                     i2l2940 2FAC                                       i2l6028 2082  
                                     i2l2936 2FB0                            __end_ofi2_RB5_ISR 2FAC  
                                     i2l2944 2FA8                                       i2l2952 2FA0  
                                     i2l2948 2FA4                                       i2l4930 2FB8  
                          __end_ofi2_RB6_ISR 2FA8                                       i2l5990 1F6A  
                          __end_ofi2_RB7_ISR 2FA4                                       i2l5992 1F78  
                                     i2l5984 1F3C                                       i2l5994 1F8A  
                                     i2l5986 1F4A                                       i2l5996 1F98  
                                     i2l5988 1F58                                       i2l5998 1FAA  
          ADC_GetConversion_Blocking@channel 000E                             __end_of___xxtofl 1C30  
           __end_of_lcd_4bit_send_string_pos 2A22                  __end_of_dc_motor_move_right 2DF2  
                     ?_lcd_4bit_send_command 0012                                 vfprintf@cfmt 0040  
                                  ??___fldiv 0033                                    ??___awdiv 0008  
                                  ??___awmod 0008                                    ??___flmul 001A  
                                  ??___fltol 0048                                       _memset 1DC4  
                                     clear_0 2EA2                                       clear_1 2EAE  
                           ___awdiv@quotient 000A                              ___awmod@divisor 0006  
                                     isa$std 0001                              ___awmod@counter 0008  
                                     pad@buf 0016                                       dtoa@fp 001F  
                                     fputc@c 0004                                       fputs@c 0011  
                                     fputs@i 0012                                       fputs@s 000D  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                     putch@c 0001                             __end_of_vfprintf 2CCC  
                                  ??_sprintf 004A                                 ___xxtofl@arg 000E  
                               ___xxtofl@exp 000D                                 ___xxtofl@val 0004  
                         _RB6_pin_init_value 006C                                   __accesstop 0080  
                    __end_of__initialization 2EB4                                    ?_INT0_ISR 0001  
                                  ?_INT1_ISR 0001                                    ?_INT2_ISR 0001  
                                 _lm35_res_1 00CF                                   _lm35_res_2 00CD  
                              ___rparam_used 0001                                   ___fltol@f1 0044  
                           ??_lcd_send_4bits 0011                  dc_motor_move_left@_dc_motor 000E  
                    _lcd_4bit_send_char_data 2C0A                       ??_gpio_pin_write_logic 0007  
                             __pcstackCOMRAM 0001                                 __pidataBANK0 2F38  
               ??_ADC_GetConversion_Blocking 0011                                __end_of_fputc 26A2  
                              __end_of_fputs 2E7C                                __end_of_putch 2FBE  
                   lcd_4bit_send_command@lcd 0012                     lcd_4bit_send_command@ret 0015  
                    _ADC_GetConversionResult 2426                         ADC_SelectChannel@ret 000B  
                                    ??_fputc 0008                                   _dc_motor_1 00FB  
                                 _dc_motor_2 00F9                                      ??_fputs 0011  
                                    ??_putch 0004                       ADC_StartConversion@ret 0006  
                                 __pbssBANK0 0080                                 ??i2_INT1_ISR 0001  
                      _INT0_InterruptHandler 009D                                   ??_INT0_ISR 0001  
                               ??i2_INT2_ISR 0001                                   ??_INT1_ISR 0001  
                                 ??_INT2_ISR 0001                                   __pnvCOMRAM 0076  
                 ADC_GetConversionResult@ret 000B                  __end_of_InterruptManagerLow 0180  
                          led_turn_off@F3227 0073                  convert_uint16_to_string@cnt 0107  
                convert_uint16_to_string@ret 0106                                      _ADC_ISR 2FBE  
                            led_toggle@F3232 0072                  convert_uint16_to_string@str 005A  
                                    ?_memset 0004               ADC_GetConversion_Blocking@_adc 000C  
                                    _RB4_ISR 2F94                                      _RB5_ISR 2F90  
                                    _RB6_ISR 2F8C                                      _RB7_ISR 2F88  
                         __end_ofi2_INT1_ISR 2FB8                                    ?___xxtofl 0004  
                         __end_ofi2_INT2_ISR 2FB4                    ?_lcd_4bit_send_string_pos 001C  
                                 _btn_values 1001                               _tris_registers 00E5  
                  ??_lcd_4bit_send_char_data 0015                                      __Hparam 0000  
                                    __Lparam 0000                        dc_motor_move_left@ret 0010  
                                    ___fldiv 145E                                      ___awdiv 26A2  
                                    ___awmod 28D0                                      ___flmul 1034  
                                    ___fltol 2320                                    ?_vfprintf 003A  
                               __psmallconst 1000                    ??_ADC_GetConversionResult 0008  
                                    __pcinit 2E7C                                      __ramtop 1000  
                                    __ptext0 17F8                                      __ptext1 2980  
                                    __ptext2 2820                                      __ptext3 2B98  
                                    __ptext4 2C0A                                      __ptext5 2A22  
                                    __ptext6 2CCC                                      __ptext7 2D66  
                                    __ptext8 2DAC                                      __ptext9 2DF2  
                   _convert_uint16_to_string 2766                                   ??___xxtofl 0008  
                           ___awmod@dividend 0004                                      _sprintf 2D1A  
                             __pintcode_body 1F3A                         end_of_initialization 2EB4  
                          lcd_send_4bits@lcd 000E                            lcd_send_4bits@ret 0011  
                                  i2_ADC_ISR 2FC0  ADC_GetConversion_Blocking@conversion_result 000F  
                                    fputc@fp 0006                                      memset@c 0006  
                                    memset@k 000C                                      memset@n 0008  
                                    memset@s 000E                                      int_func 1F3A  
                                    fputs@fp 000F                      ??_lcd_4bit_send_command 0015  
                                  i2_RB4_ISR 2FAC                                    i2_RB5_ISR 2FA8  
                                  i2_RB6_ISR 2FA4                                    i2_RB7_ISR 2FA0  
                              _dc_motor_stop 2D66                            __end_of_vfpfcnvrt 2320  
         __end_of_ADC_GetConversion_Blocking 2B98                   _ADC_GetConversion_Blocking 2B24  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                             vfpfcnvrt@convarg 0034  
                                 ??_vfprintf 0040              __end_of_lcd_4bit_send_char_data 2C7C  
                      _INT1_InterruptHandler 0068                   lcd_4bit_send_char_data@lcd 0012  
                 lcd_4bit_send_char_data@ret 0015                                ___xxtofl@sign 000C  
                        _ADC_StartConversion 2F64                                  ___fldiv@grs 003E  
                                ___fldiv@rem 0037                                   ?i2_ADC_ISR 0001  
                                ___flmul@grs 001F                                   ?i2_RB4_ISR 0001  
                                 ?i2_RB5_ISR 0001                                   ?i2_RB6_ISR 0001  
                                 ?i2_RB7_ISR 0001                               ?_dc_motor_stop 000E  
                        _lcd_4bit_set_cursor 2820                           relay_turn_on@F3216 0070  
                       ?_ADC_StartConversion 0004                  lcd_4bit_send_string_pos@lcd 001C  
                lcd_4bit_send_string_pos@ret 0022                  lcd_4bit_send_string_pos@row 001E  
                lcd_4bit_send_string_pos@str 0020                convert_uint16_to_string@F3370 008B  
              convert_uint32_to_string@F3377 0080                                  vfpfcnvrt@ap 0030  
                                vfpfcnvrt@cp 0038                                  vfpfcnvrt@fp 002C  
    adc_input_channel_port_configure@channel 0006                               __end_of_memset 1F3A  
                        start_initialization 2E7C                 ?_lcd_4bit_send_enable_signal 000E  
                       ?_lcd_4bit_set_cursor 0016                         _RB4_InterruptHandler 0064  
              convert_uint16_to_string@value 0058                                  __end_of_abs 2EFE  
                                __end_of_pad 2B24     ADC_GetConversionResult@conversion_result 0006  
                     dc_motor_stop@_dc_motor 000E                        ADC_SelectChannel@_adc 0007  
                      ??_ADC_StartConversion 0006                   __end_of_dc_motor_move_left 2E38  
                                vfprintf@fmt 003C                                  __pdataBANK0 00D1  
               convert_uint8_to_string@F3363 0091                                     ?_ADC_ISR 0001  
                                   ??_memset 000A                                   memset@dest 0004  
               lcd_4bit_send_command@command 0014                             dc_motor_stop@ret 0010  
                    ADC_StartConversion@_adc 0004                                    ___fldiv@a 002F  
                                  ___fldiv@b 002B                                     ?_RB4_ISR 0001  
                                   ?_RB5_ISR 0001                                     ?_RB6_ISR 0001  
                                   ?_RB7_ISR 0001                                    ___flmul@a 0016  
                                  ___flmul@b 0012                                  __pbssCOMRAM 005E  
                      ??_lcd_4bit_set_cursor 001A                                __pcstackBANK1 0100  
                ADC_GetConversionResult@_adc 0004                                  ??i2_ADC_ISR 0001  
           convert_uint16_to_string@Temp_str 0100                        _INT2_InterruptHandler 0066  
             gpio_pin_write_logic@pin_config 0004                              ??_dc_motor_stop 0010  
                                ??i2_RB4_ISR 0001                                  ??i2_RB5_ISR 0001  
                                ??i2_RB6_ISR 0001                                  ??i2_RB7_ISR 0001  
               __end_of_InterruptManagerHigh 20AA                                    _dtoa$2141 0023  
                                  __pintcode 0008     __end_of_adc_input_channel_port_configure 25D8  
         ??_adc_input_channel_port_configure 0004            ?_adc_input_channel_port_configure 0001  
           _adc_input_channel_port_configure 2500                            _ADC_SelectChannel 2EFE  
                 ??_convert_uint16_to_string 005C                                     ?___fldiv 002B  
                                   ?___awdiv 0004                                     ?___awmod 0004  
                                   ?___flmul 0012                                     ?___fltol 0044  
              ADC_GetConversion_Blocking@ret 0011                           ?_ADC_SelectChannel 0007  
                                __pintcodelo 0018                    gpio_pin_write_logic@logic 0006  
                                __smallconst 1000                          ??_ADC_SelectChannel 000A  
                                   ?_sprintf 0042                           _RB5_pin_init_value 006D  
                                   _INT0_ISR 2FB8                                     _INT1_ISR 2F9C  
                                   _INT2_ISR 2F98                                     i1u300_20 0110  
                                   i1u300_21 010C                                     i1u301_20 0126  
                                   i1u301_21 0122                                     i1u302_20 0134  
                                   i1u302_21 0130                                     i1u303_20 0148  
                                   i1u303_21 0144                                     i1u304_20 015E  
                                   i1u304_21 015A                                     i1u305_20 016C  
                                   i1u305_21 0168                    __end_of_ADC_SelectChannel 2F38  
                                   i1u290_20 0054                                     i1u290_21 0050  
                                   i1u291_20 0062                                     i1u291_21 005E  
                                   i1u292_20 0074                                     i1u292_21 0070  
              __end_of_lcd_4bit_send_command 2C0A                                     i1u293_20 0082  
                                   i1u293_21 007E                                     i1u294_20 0098  
                                   i1u294_21 0094                                     i1u295_20 00AE  
                                   i1u295_21 00AA                                     i1u296_20 00BC  
                                   i1u288_20 0034                                     i1u296_21 00B8  
                                   i1u288_21 0030                                     i1u297_20 00D4  
                                   i1u289_20 0042                                     i1u297_21 00D0  
                                   i1u289_21 003E                                     i1u298_20 00EA  
                                   i1u298_21 00E6                                     i1u299_20 00F8  
                                   i1u299_21 00F4                         _RB5_InterruptHandler 0062  
                                   i2u550_40 1F78                                     i2u550_41 1F74  
                                   i2u551_40 1F8A                                     i2u551_41 1F86  
                                   i2u560_40 202E                                     i2u552_40 1F98  
                                   i2u560_41 202A                                     i2u552_41 1F94  
                                   i2u561_40 2046                                     i2u553_40 1FAA  
                                   i2u561_41 2042                                     i2u553_41 1FA6  
                                   i2u562_40 205C                                     i2u554_40 1FB8  
                                   i2u562_41 2058                                     i2u554_41 1FB4  
                                   i2u563_40 206A                                     i2u555_40 1FCE  
                                   i2u547_40 1F4A                                     i2u563_41 2066  
                                   i2u555_41 1FCA                                     i2u547_41 1F46  
                                   i2u564_40 207E                                     i2u556_40 1FE4  
                                   i2u548_40 1F58                                     i2u564_41 207A  
                                   i2u556_41 1FE0                                     i2u548_41 1F54  
                                   i2u565_40 2094                                     i2u557_40 1FF2  
                                   i2u549_40 1F6A                                     i2u565_41 2090  
                                   i2u557_41 1FEE                                     i2u549_41 1F66  
                                   i2u566_40 20A2                                     i2u558_40 200A  
                                   i2u566_41 209E                                     i2u558_41 2006  
                                   i2u559_40 2020                                     i2u559_41 201C  
                ?_ADC_GetConversion_Blocking 000C                                    _vfpfcnvrt 21F4  
                   _lcd_4bit_send_string_pos 2980                     ADC_SelectChannel@channel 0009  
                    gpio_pin_write_logic@ret 000D                     ?_lcd_4bit_send_char_data 0012  
                                  copy_data0 2E90                        _lm35_res_1_Celsius_mv 009B  
                        _dc_motor_move_right 2DAC                           _RB7_pin_init_value 006B  
                                   __Hrparam 0000                                   vfprintf@ap 003E  
                                   __Lrparam 0000                                   vfprintf@fp 003A  
                   ?_ADC_GetConversionResult 0004                       lcd_4bit_set_cursor@lcd 0016  
                                 ?_vfpfcnvrt 002C                       lcd_4bit_set_cursor@row 0018  
                      _lm35_res_2_Celsius_mv 0099                         ?_dc_motor_move_right 000E  
                         __end_of_btn_values 1011                                   sprintf@fmt 0044  
                                   ___xxtofl 1A7C                         _InterruptManagerHigh 0008  
                                   __ptext10 20AA                                     __ptext11 2766  
                                   __ptext20 2EBE                                     __ptext12 2D1A  
                                   __ptext21 28D0                                     __ptext13 2C7C  
                                   __ptext30 2EFE                                     __ptext22 26A2  
                                   __ptext14 21F4                                     __ptext31 2500  
                                   __ptext23 1DC4                                     __ptext15 1C30  
                                   __ptext40 2FBE                                     __ptext32 2426  
                                   __ptext24 1A7C                                     __ptext16 2AAA  
                                   __ptext25 2320                                     __ptext17 2E38  
                                   __ptext42 2FA0                                     __ptext34 2F88  
                                   __ptext26 1034                                     __ptext18 25D8  
                                   __ptext43 2FA4                                     __ptext35 2F8C  
                                   __ptext27 145E                                     __ptext19 2FBC  
                                   __ptext44 2FA8                                     __ptext36 2F90  
                                   __ptext28 2B24                                     __ptext45 2FAC  
                                   __ptext37 2F94                                     __ptext29 2F64  
                                   __ptext46 2FB0                                     __ptext38 2F98  
                                   __ptext47 2FB4                                     __ptext39 2F9C  
                                   __ptext48 2FC0                                     __ptext49 2FB8  
                     dc_motor_move_right@ret 0010             __end_of_convert_uint16_to_string 2820  
                                   isa$xinst 0000                                     int$flags 0077  
                                   _vfprintf 2C7C                        ??_dc_motor_move_right 0010  
                             _lcd_send_4bits 2A22                           _dc_motor_move_left 2DF2  
                      ?_InterruptManagerHigh 0001                         _RB6_InterruptHandler 0060  
               __end_of_gpio_pin_write_logic 21F4                          ?_dc_motor_move_left 000E  
                                   intlevel1 0000                                     intlevel2 0000  
                                  sprintf@ap 004A                  __end_of_ADC_StartConversion 2F88  
                        _InterruptManagerLow 0018               lcd_4bit_send_enable_signal@lcd 000E  
             lcd_4bit_send_enable_signal@ret 0010                                   i2_INT1_ISR 2FB4  
                                 i2_INT2_ISR 2FB0              __end_of_ADC_GetConversionResult 2500  
                       ??_dc_motor_move_left 0010                       __end_of_lcd_send_4bits 2AAA  
               dc_motor_move_right@_dc_motor 000E                                  ??_vfpfcnvrt 0032  
                __end_of_lcd_4bit_set_cursor 28D0                         ?_InterruptManagerLow 0001  
                                   sprintf@f 004C                                     sprintf@s 0042  
                             _port_registers 00D1                  lcd_4bit_send_char_data@data 0014  
                      __end_of_dc_motor_stop 2DAC                   ??_lcd_4bit_send_string_pos 0022  
