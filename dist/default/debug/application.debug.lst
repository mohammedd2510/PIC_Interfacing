

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 06 22:56:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 23/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   001ADA                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _port_registers
    74   001ADA  80                 	db	128
    75   001ADB  0F                 	db	15
    76   001ADC  81                 	db	129
    77   001ADD  0F                 	db	15
    78   001ADE  82                 	db	130
    79   001ADF  0F                 	db	15
    80   001AE0  83                 	db	131
    81   001AE1  0F                 	db	15
    82   001AE2  84                 	db	132
    83   001AE3  0F                 	db	15
    84                           
    85                           ;initializer for _lat_registers
    86   001AE4  89                 	db	137
    87   001AE5  0F                 	db	15
    88   001AE6  8A                 	db	138
    89   001AE7  0F                 	db	15
    90   001AE8  8B                 	db	139
    91   001AE9  0F                 	db	15
    92   001AEA  8C                 	db	140
    93   001AEB  0F                 	db	15
    94   001AEC  8D                 	db	141
    95   001AED  0F                 	db	15
    96                           
    97                           ;initializer for _tris_registers
    98   001AEE  92                 	db	146
    99   001AEF  0F                 	db	15
   100   001AF0  93                 	db	147
   101   001AF1  0F                 	db	15
   102   001AF2  94                 	db	148
   103   001AF3  0F                 	db	15
   104   001AF4  95                 	db	149
   105   001AF5  0F                 	db	15
   106   001AF6  96                 	db	150
   107   001AF7  0F                 	db	15
   108                           
   109                           ;initializer for _keypad1
   110   001AF8  02                 	db	2
   111   001AF9  0A                 	db	10
   112   001AFA  12                 	db	18
   113   001AFB  1A                 	db	26
   114   001AFC  62                 	db	98
   115   001AFD  6A                 	db	106
   116   001AFE  72                 	db	114
   117   001AFF  7A                 	db	122
   118                           
   119                           ;initializer for _led1
   120   001B00  03                 	db	3
   121                           
   122                           ;initializer for _lcd_2
   123   001B01  32                 	db	50
   124   001B02  3A                 	db	58
   125   001B03  03                 	db	3
   126   001B04  0B                 	db	11
   127   001B05  13                 	db	19
   128   001B06  1B                 	db	27
   129   001B07  23                 	db	35
   130   001B08  2B                 	db	43
   131   001B09  33                 	db	51
   132   001B0A  3B                 	db	59
   133                           
   134                           ;initializer for _lcd1
   135   001B0B  02                 	db	2
   136   001B0C  0A                 	db	10
   137   001B0D  12                 	db	18
   138   001B0E  1A                 	db	26
   139   001B0F  22                 	db	34
   140   001B10  2A                 	db	42
   141                           
   142                           	psect	smallconst
   143   001000                     __psmallconst:
   144                           	callstack 0
   145   001000  00                 	db	0
   146   001001                     _btn_values:
   147                           	callstack 0
   148   001001  37                 	db	55
   149   001002  38                 	db	56
   150   001003  39                 	db	57
   151   001004  2F                 	db	47
   152   001005  34                 	db	52
   153   001006  35                 	db	53
   154   001007  36                 	db	54
   155   001008  2A                 	db	42
   156   001009  31                 	db	49
   157   00100A  32                 	db	50
   158   00100B  33                 	db	51
   159   00100C  2D                 	db	45
   160   00100D  23                 	db	35
   161   00100E  30                 	db	48
   162   00100F  3D                 	db	61
   163   001010  2B                 	db	43
   164   001011                     __end_of_btn_values:
   165                           	callstack 0
   166   001011                     STR_1:
   167   001011  45                 	db	69	;'E'
   168   001012  4D                 	db	77	;'M'
   169   001013  42                 	db	66	;'B'
   170   001014  45                 	db	69	;'E'
   171   001015  44                 	db	68	;'D'
   172   001016  44                 	db	68	;'D'
   173   001017  45                 	db	69	;'E'
   174   001018  44                 	db	68	;'D'
   175   001019  20                 	db	32
   176   00101A  44                 	db	68	;'D'
   177   00101B  49                 	db	73	;'I'
   178   00101C  50                 	db	80	;'P'
   179   00101D  4C                 	db	76	;'L'
   180   00101E  4F                 	db	79	;'O'
   181   00101F  4D                 	db	77	;'M'
   182   001020  41                 	db	65	;'A'
   183   001021  00                 	db	0
   184   001022  00                 	db	0	; dummy byte at the end
   185   000000                     
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189   001B12                     __pcinit:
   190                           	callstack 0
   191   001B12                     start_initialization:
   192                           	callstack 0
   193   001B12                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Initialize objects allocated to COMRAM (55 bytes)
   197                           ; load TBLPTR registers with __pidataCOMRAM
   198   001B12  0EDA               	movlw	low __pidataCOMRAM
   199   001B14  6EF6               	movwf	tblptrl,c
   200   001B16  0E1A               	movlw	high __pidataCOMRAM
   201   001B18  6EF7               	movwf	tblptrh,c
   202   001B1A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   203   001B1C  6EF8               	movwf	tblptru,c
   204   001B1E  EE00  F001         	lfsr	0,__pdataCOMRAM
   205   001B22  EE10 F037          	lfsr	1,55
   206   001B26                     copy_data0:
   207   001B26  0009               	tblrd		*+
   208   001B28  CFF5 FFEE          	movff	tablat,postinc0
   209   001B2C  50E5               	movf	postdec1,w,c
   210   001B2E  50E1               	movf	fsr1l,w,c
   211   001B30  E1FA               	bnz	copy_data0
   212                           
   213                           ; Clear objects allocated to COMRAM (8 bytes)
   214   001B32  EE00  F059         	lfsr	0,__pbssCOMRAM
   215   001B36  0E08               	movlw	8
   216   001B38                     clear_0:
   217   001B38  6AEE               	clrf	postinc0,c
   218   001B3A  06E8               	decf	wreg,f,c
   219   001B3C  E1FD               	bnz	clear_0
   220   001B3E                     end_of_initialization:
   221                           	callstack 0
   222   001B3E                     __end_of__initialization:
   223                           	callstack 0
   224   001B3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225   001B40  6EF8               	movwf	tblptru,c
   226   001B42  0100               	movlb	0
   227   001B44  EF4B  F00D         	goto	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMRAM
   230   000059                     __pbssCOMRAM:
   231                           	callstack 0
   232   000059                     _ret:
   233                           	callstack 0
   234   000059                     	ds	1
   235   00005A                     relay_turn_off@F2885:
   236                           	callstack 0
   237   00005A                     	ds	1
   238   00005B                     relay_turn_on@F2880:
   239                           	callstack 0
   240   00005B                     	ds	1
   241   00005C                     relay_initialize@F2875:
   242                           	callstack 0
   243   00005C                     	ds	1
   244   00005D                     led_toggle@F2896:
   245                           	callstack 0
   246   00005D                     	ds	1
   247   00005E                     led_turn_off@F2891:
   248                           	callstack 0
   249   00005E                     	ds	1
   250   00005F                     led_turn_on@F2886:
   251                           	callstack 0
   252   00005F                     	ds	1
   253   000060                     led_initialize@F2881:
   254                           	callstack 0
   255   000060                     	ds	1
   256                           
   257                           	psect	dataCOMRAM
   258   000001                     __pdataCOMRAM:
   259                           	callstack 0
   260   000001                     _port_registers:
   261                           	callstack 0
   262   000001                     	ds	10
   263   00000B                     _lat_registers:
   264                           	callstack 0
   265   00000B                     	ds	10
   266   000015                     _tris_registers:
   267                           	callstack 0
   268   000015                     	ds	10
   269   00001F                     _keypad1:
   270                           	callstack 0
   271   00001F                     	ds	8
   272   000027                     _led1:
   273                           	callstack 0
   274   000027                     	ds	1
   275   000028                     _lcd_2:
   276                           	callstack 0
   277   000028                     	ds	10
   278   000032                     _lcd1:
   279                           	callstack 0
   280   000032                     	ds	6
   281                           
   282                           	psect	cstackCOMRAM
   283   000038                     __pcstackCOMRAM:
   284                           	callstack 0
   285   000038                     gpio_pin_direction_initialize@pin_config:
   286                           	callstack 0
   287   000038                     gpio_pin_write_logic@pin_config:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x0
   291   000038                     	ds	2
   292   00003A                     ??_gpio_pin_direction_initialize:
   293   00003A                     gpio_pin_write_logic@logic:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x2
   297   00003A                     	ds	1
   298   00003B                     ??_gpio_pin_write_logic:
   299                           
   300                           ; 1 bytes @ 0x3
   301   00003B                     	ds	5
   302   000040                     gpio_pin_direction_initialize@ret:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x8
   306   000040                     	ds	1
   307   000041                     gpio_pin_write_logic@ret:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x9
   311   000041                     	ds	1
   312   000042                     gpio_pin_initialize@pin_config:
   313                           	callstack 0
   314   000042                     lcd_send_4bits@lcd:
   315                           	callstack 0
   316   000042                     lcd_4bit_send_enable_signal@lcd:
   317                           	callstack 0
   318   000042                     lcd_8bit_send_enable_signal@lcd:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xA
   322   000042                     	ds	2
   323   000044                     ??_gpio_pin_initialize:
   324   000044                     lcd_send_4bits@_data_command:
   325                           	callstack 0
   326   000044                     lcd_4bit_send_enable_signal@ret:
   327                           	callstack 0
   328   000044                     lcd_8bit_send_command@lcd:
   329                           	callstack 0
   330   000044                     lcd_8bit_send_char_data@lcd:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xC
   334   000044                     	ds	1
   335   000045                     gpio_pin_initialize@ret:
   336                           	callstack 0
   337   000045                     lcd_send_4bits@ret:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xD
   341   000045                     	ds	1
   342   000046                     lcd_8bit_send_command@command:
   343                           	callstack 0
   344   000046                     lcd_8bit_send_char_data@data:
   345                           	callstack 0
   346   000046                     lcd_4bit_send_command@lcd:
   347                           	callstack 0
   348   000046                     lcd_4bit_send_char_data@lcd:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0xE
   352   000046                     	ds	1
   353   000047                     ??_lcd_8bit_send_command:
   354   000047                     ??_lcd_8bit_send_char_data:
   355                           
   356                           ; 1 bytes @ 0xF
   357   000047                     	ds	1
   358   000048                     lcd_4bit_send_command@command:
   359                           	callstack 0
   360   000048                     lcd_4bit_send_char_data@data:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x10
   364   000048                     	ds	1
   365   000049                     lcd_4bit_send_command@ret:
   366                           	callstack 0
   367   000049                     lcd_4bit_send_char_data@ret:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x11
   371   000049                     	ds	1
   372   00004A                     lcd_4bit_initialize@lcd:
   373                           	callstack 0
   374   00004A                     lcd_4bit_set_cursor@lcd:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x12
   378   00004A                     	ds	1
   379   00004B                     lcd_8bit_send_command@ret:
   380                           	callstack 0
   381   00004B                     lcd_8bit_send_char_data@ret:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x13
   385   00004B                     	ds	1
   386   00004C                     ??_lcd_4bit_initialize:
   387   00004C                     lcd_8bit_send_command@l_pins_counter:
   388                           	callstack 0
   389   00004C                     lcd_8bit_send_char_data@l_pins_counter:
   390                           	callstack 0
   391   00004C                     lcd_4bit_set_cursor@row:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x14
   395   00004C                     	ds	1
   396   00004D                     lcd_4bit_set_cursor@column:
   397                           	callstack 0
   398   00004D                     lcd_8bit_initialize@lcd:
   399                           	callstack 0
   400   00004D                     lcd_8bit_set_cursor@lcd:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x15
   404   00004D                     	ds	1
   405   00004E                     ??_lcd_4bit_set_cursor:
   406   00004E                     lcd_4bit_initialize@ret:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x16
   410   00004E                     	ds	1
   411   00004F                     ??_lcd_8bit_initialize:
   412   00004F                     lcd_4bit_initialize@l_data_pins_counter:
   413                           	callstack 0
   414   00004F                     lcd_8bit_set_cursor@row:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x17
   418   00004F                     	ds	1
   419   000050                     lcd_8bit_set_cursor@column:
   420                           	callstack 0
   421   000050                     lcd_4bit_send_string_pos@lcd:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x18
   425   000050                     	ds	1
   426   000051                     ??_lcd_8bit_set_cursor:
   427   000051                     lcd_8bit_initialize@l_data_pins_counter:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x19
   431   000051                     	ds	1
   432   000052                     lcd_4bit_send_string_pos@row:
   433                           	callstack 0
   434   000052                     lcd_8bit_initialize@ret:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x1A
   438   000052                     	ds	1
   439   000053                     lcd_4bit_send_string_pos@column:
   440                           	callstack 0
   441   000053                     lcd_8bit_send_string_pos@lcd:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x1B
   445   000053                     	ds	1
   446   000054                     lcd_4bit_send_string_pos@str:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x1C
   450   000054                     	ds	1
   451   000055                     lcd_8bit_send_string_pos@row:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x1D
   455   000055                     	ds	1
   456   000056                     lcd_8bit_send_string_pos@column:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x1E
   460   000056                     	ds	1
   461   000057                     lcd_8bit_send_string_pos@str:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x1F
   465   000057                     	ds	2
   466   000059                     
   467                           ; 1 bytes @ 0x21
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 17 in file "application.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  2  282[None  ] int 
   480 ;; Registers used:
   481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels required when called: 6
   493 ;; This function calls:
   494 ;;		_application_initialize
   495 ;;		_lcd_4bit_send_string_pos
   496 ;;		_lcd_8bit_send_string_pos
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text0
   503   001A96                     __ptext0:
   504                           	callstack 0
   505   001A96                     _main:
   506                           	callstack 25
   507   001A96                     
   508                           ;application.c: 18:     application_initialize();
   509   001A96  ECB1  F00D         	call	_application_initialize	;wreg free
   510   001A9A                     l2601:
   511                           
   512                           ;application.c: 23:         lcd_4bit_send_string_pos(&lcd1,1,1,"EMBEDDED DIPLOMA");
   513   001A9A  0E32               	movlw	low _lcd1
   514   001A9C  6E50               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   515   001A9E  0E00               	movlw	high _lcd1
   516   001AA0  6E51               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   517   001AA2  0E01               	movlw	1
   518   001AA4  6E52               	movwf	lcd_4bit_send_string_pos@row^0,c
   519   001AA6  0E01               	movlw	1
   520   001AA8  6E53               	movwf	lcd_4bit_send_string_pos@column^0,c
   521   001AAA  0E11               	movlw	low STR_1
   522   001AAC  6E54               	movwf	lcd_4bit_send_string_pos@str^0,c
   523   001AAE  0E10               	movlw	high STR_1
   524   001AB0  6E55               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   525   001AB2  ECCC  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   526   001AB6                     
   527                           ;application.c: 24:         lcd_8bit_send_string_pos(&lcd_2,1,1,"EMBEDDED DIPLOMA");
   528   001AB6  0E28               	movlw	low _lcd_2
   529   001AB8  6E53               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   530   001ABA  0E00               	movlw	high _lcd_2
   531   001ABC  6E54               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
   532   001ABE  0E01               	movlw	1
   533   001AC0  6E55               	movwf	lcd_8bit_send_string_pos@row^0,c
   534   001AC2  0E01               	movlw	1
   535   001AC4  6E56               	movwf	lcd_8bit_send_string_pos@column^0,c
   536   001AC6  0E11               	movlw	low STR_1
   537   001AC8  6E57               	movwf	lcd_8bit_send_string_pos@str^0,c
   538   001ACA  0E10               	movlw	high STR_1
   539   001ACC  6E58               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   540   001ACE  EC97  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   541   001AD2  EF4D  F00D         	goto	l2601
   542   001AD6  EF00  F000         	goto	start
   543   001ADA                     __end_of_main:
   544                           	callstack 0
   545                           
   546 ;; *************** function _lcd_8bit_send_string_pos *****************
   547 ;; Defined at:
   548 ;;		line 277 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  lcd             2   27[COMRAM] PTR const struct .
   551 ;;		 -> lcd_2(10), 
   552 ;;  row             1   29[COMRAM] unsigned char 
   553 ;;  column          1   30[COMRAM] unsigned char 
   554 ;;  str             2   31[COMRAM] PTR unsigned char 
   555 ;;		 -> STR_2(17), 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  ret             1    0        unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      unsigned char 
   560 ;; Registers used:
   561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   567 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;Total ram usage:        6 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 4
   574 ;; This function calls:
   575 ;;		_lcd_8bit_send_char_data
   576 ;;		_lcd_8bit_set_cursor
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text1
   583   00192E                     __ptext1:
   584                           	callstack 0
   585   00192E                     _lcd_8bit_send_string_pos:
   586                           	callstack 26
   587   00192E                     
   588                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:     if(lcd==((void*)0)){
   589   00192E  5053               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   590   001930  1054               	iorwf	(lcd_8bit_send_string_pos@lcd+1)^0,w,c
   591   001932  A4D8               	btfss	status,2,c
   592   001934  EF9E  F00C         	goto	u1371
   593   001938  EFA0  F00C         	goto	u1370
   594   00193C                     u1371:
   595   00193C  EFA2  F00C         	goto	l2319
   596   001940                     u1370:
   597   001940                     
   598                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:     }
   599   001940  EFCB  F00C         	goto	l394
   600   001944                     l2319:
   601                           
   602                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 283:         lcd_8bit_set_cursor(lcd,row,column);
   603   001944  C053  F04D         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   604   001948  C054  F04E         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
   605   00194C  C055  F04F         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   606   001950  C056  F050         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
   607   001954  EC5C  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   608                           
   609                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 284:         while(*str){
   610   001958  EFBD  F00C         	goto	l2325
   611   00195C                     l2321:
   612   00195C  C053  F044         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   613   001960  C054  F045         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
   614   001964  C057  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   615   001968  C058  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
   616   00196C                     	if	0	;tblptru may be non-zero
   617   00196C                     	endif
   618   00196C                     	if	0	;tblptru may be non-zero
   619   00196C                     	endif
   620   00196C  0008               	tblrd		*
   621   00196E  CFF5 F046          	movff	tablat,lcd_8bit_send_char_data@data
   622   001972  EC0C  F00B         	call	_lcd_8bit_send_char_data	;wreg free
   623   001976  4A57               	infsnz	lcd_8bit_send_string_pos@str^0,f,c
   624   001978  2A58               	incf	(lcd_8bit_send_string_pos@str+1)^0,f,c
   625   00197A                     l2325:
   626                           
   627                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 284:         while(*str){
   628   00197A  C057  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   629   00197E  C058  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
   630   001982                     	if	0	;tblptru may be non-zero
   631   001982                     	endif
   632   001982                     	if	0	;tblptru may be non-zero
   633   001982                     	endif
   634   001982  0008               	tblrd		*
   635   001984  50F5               	movf	tablat,w,c
   636   001986  0900               	iorlw	0
   637   001988  A4D8               	btfss	status,2,c
   638   00198A  EFC9  F00C         	goto	u1381
   639   00198E  EFCB  F00C         	goto	u1380
   640   001992                     u1381:
   641   001992  EFAE  F00C         	goto	l2321
   642   001996                     u1380:
   643   001996                     l394:
   644   001996  0012               	return		;funcret
   645   001998                     __end_of_lcd_8bit_send_string_pos:
   646                           	callstack 0
   647                           
   648 ;; *************** function _lcd_8bit_set_cursor *****************
   649 ;; Defined at:
   650 ;;		line 378 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  lcd             2   21[COMRAM] PTR const struct .
   653 ;;		 -> lcd_2(10), 
   654 ;;  row             1   23[COMRAM] unsigned char 
   655 ;;  column          1   24[COMRAM] unsigned char 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  ret             1    0        unsigned char 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      unsigned char 
   660 ;; Registers used:
   661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;Total ram usage:        6 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 3
   674 ;; This function calls:
   675 ;;		_lcd_8bit_send_command
   676 ;; This function is called by:
   677 ;;		_lcd_8bit_send_string_pos
   678 ;;		_lcd_8bit_send_char_data_pos
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text2
   683   0014B8                     __ptext2:
   684                           	callstack 0
   685   0014B8                     _lcd_8bit_set_cursor:
   686                           	callstack 26
   687   0014B8                     
   688                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 380:     if(lcd==((void*)0)){
   689   0014B8  504D               	movf	lcd_8bit_set_cursor@lcd^0,w,c
   690   0014BA  104E               	iorwf	(lcd_8bit_set_cursor@lcd+1)^0,w,c
   691   0014BC  A4D8               	btfss	status,2,c
   692   0014BE  EF63  F00A         	goto	u1341
   693   0014C2  EF65  F00A         	goto	u1340
   694   0014C6                     u1341:
   695   0014C6  EF67  F00A         	goto	l2275
   696   0014CA                     u1340:
   697   0014CA                     l2273:
   698                           
   699                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 382:     }
   700   0014CA  EFB3  F00A         	goto	l435
   701   0014CE                     l2275:
   702                           
   703                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 384:         column--;
   704   0014CE  0650               	decf	lcd_8bit_set_cursor@column^0,f,c
   705                           
   706                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 385:         switch (row){
   707   0014D0  EF96  F00A         	goto	l2289
   708   0014D4                     l2277:
   709   0014D4  C04D  F044         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   710   0014D8  C04E  F045         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   711   0014DC  5050               	movf	lcd_8bit_set_cursor@column^0,w,c
   712   0014DE  0F80               	addlw	128
   713   0014E0  6E46               	movwf	lcd_8bit_send_command@command^0,c
   714   0014E2  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
   715   0014E6  EFB3  F00A         	goto	l435
   716   0014EA                     l2279:
   717   0014EA  C04D  F044         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   718   0014EE  C04E  F045         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   719   0014F2  5050               	movf	lcd_8bit_set_cursor@column^0,w,c
   720   0014F4  0FC0               	addlw	192
   721   0014F6  6E46               	movwf	lcd_8bit_send_command@command^0,c
   722   0014F8  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
   723   0014FC  EFB3  F00A         	goto	l435
   724   001500                     l2281:
   725   001500  C04D  F044         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   726   001504  C04E  F045         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   727   001508  5050               	movf	lcd_8bit_set_cursor@column^0,w,c
   728   00150A  0F94               	addlw	148
   729   00150C  6E46               	movwf	lcd_8bit_send_command@command^0,c
   730   00150E  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
   731   001512  EFB3  F00A         	goto	l435
   732   001516                     l2283:
   733   001516  C04D  F044         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   734   00151A  C04E  F045         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   735   00151E  5050               	movf	lcd_8bit_set_cursor@column^0,w,c
   736   001520  0FD4               	addlw	212
   737   001522  6E46               	movwf	lcd_8bit_send_command@command^0,c
   738   001524  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
   739   001528  EFB3  F00A         	goto	l435
   740   00152C                     l2289:
   741   00152C  504F               	movf	lcd_8bit_set_cursor@row^0,w,c
   742   00152E  6E51               	movwf	??_lcd_8bit_set_cursor^0,c
   743   001530  6A52               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   744                           
   745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   746                           ; Switch size 1, requested type "simple"
   747                           ; Number of cases is 1, Range of values is 0 to 0
   748                           ; switch strategies available:
   749                           ; Name         Instructions Cycles
   750                           ; simple_byte            4     3 (average)
   751                           ;	Chosen strategy is simple_byte
   752   001532  5052               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   753   001534  0A00               	xorlw	0	; case 0
   754   001536  B4D8               	btfsc	status,2,c
   755   001538  EFA0  F00A         	goto	l2665
   756   00153C  EF65  F00A         	goto	l2273
   757   001540                     l2665:
   758                           
   759                           ; Switch size 1, requested type "simple"
   760                           ; Number of cases is 4, Range of values is 1 to 4
   761                           ; switch strategies available:
   762                           ; Name         Instructions Cycles
   763                           ; simple_byte           13     7 (average)
   764                           ;	Chosen strategy is simple_byte
   765   001540  5051               	movf	??_lcd_8bit_set_cursor^0,w,c
   766   001542  0A01               	xorlw	1	; case 1
   767   001544  B4D8               	btfsc	status,2,c
   768   001546  EF6A  F00A         	goto	l2277
   769   00154A  0A03               	xorlw	3	; case 2
   770   00154C  B4D8               	btfsc	status,2,c
   771   00154E  EF75  F00A         	goto	l2279
   772   001552  0A01               	xorlw	1	; case 3
   773   001554  B4D8               	btfsc	status,2,c
   774   001556  EF80  F00A         	goto	l2281
   775   00155A  0A07               	xorlw	7	; case 4
   776   00155C  B4D8               	btfsc	status,2,c
   777   00155E  EF8B  F00A         	goto	l2283
   778   001562  EF65  F00A         	goto	l2273
   779   001566                     l435:
   780   001566  0012               	return		;funcret
   781   001568                     __end_of_lcd_8bit_set_cursor:
   782                           	callstack 0
   783                           
   784 ;; *************** function _lcd_8bit_send_char_data *****************
   785 ;; Defined at:
   786 ;;		line 217 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  lcd             2   12[COMRAM] PTR const struct .
   789 ;;		 -> lcd_2(10), 
   790 ;;  data            1   14[COMRAM] unsigned char 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  l_pins_count    1   20[COMRAM] unsigned char 
   793 ;;  ret             1   19[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      unsigned char 
   796 ;; Registers used:
   797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:        9 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 2
   810 ;; This function calls:
   811 ;;		_gpio_pin_write_logic
   812 ;;		_lcd_8bit_send_enable_signal
   813 ;; This function is called by:
   814 ;;		_lcd_8bit_send_string_pos
   815 ;;		_lcd_8bit_send_char_data_pos
   816 ;;		_lcd_8bit_send_string
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text3
   821   001618                     __ptext3:
   822                           	callstack 0
   823   001618                     _lcd_8bit_send_char_data:
   824                           	callstack 27
   825   001618                     
   826                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 219:      uint8 l_pins_counter=0;
   827   001618  0E00               	movlw	0
   828   00161A  6E4C               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
   829   00161C                     
   830                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 220:     if(lcd==((void*)0)){
   831   00161C  5044               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   832   00161E  1045               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
   833   001620  A4D8               	btfss	status,2,c
   834   001622  EF15  F00B         	goto	u1311
   835   001626  EF17  F00B         	goto	u1310
   836   00162A                     u1311:
   837   00162A  EF1B  F00B         	goto	l2249
   838   00162E                     u1310:
   839   00162E                     
   840                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 221:         ret=(Std_ReturnType)0x00;
   841   00162E  0E00               	movlw	0
   842   001630  6E4B               	movwf	lcd_8bit_send_char_data@ret^0,c
   843                           
   844                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:     }
   845   001632  EF52  F00B         	goto	l2265
   846   001636                     l2249:
   847   001636  C044  F038         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
   848   00163A  C045  F039         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
   849   00163E  0E01               	movlw	1
   850   001640  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
   851   001642  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
   852   001646                     
   853                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 225:         for(l_pins_counter=0;l_pins_counter<8;l_p
      +                          ins_counter++){
   854   001646  0E00               	movlw	0
   855   001648  6E4C               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
   856   00164A                     l2257:
   857                           
   858                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:          ret=gpio_pin_write_logic(&(lcd->lcd_data
      +                          [l_pins_counter]),( data >> l_pins_counter ) & (uint8)0x01);
   859   00164A  504C               	movf	lcd_8bit_send_char_data@l_pins_counter^0,w,c
   860   00164C  2444               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
   861   00164E  6E47               	movwf	??_lcd_8bit_send_char_data^0,c
   862   001650  0E00               	movlw	0
   863   001652  2045               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
   864   001654  6E48               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
   865   001656  0E02               	movlw	2
   866   001658  2447               	addwf	??_lcd_8bit_send_char_data^0,w,c
   867   00165A  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
   868   00165C  0E00               	movlw	0
   869   00165E  2048               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
   870   001660  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   871   001662  C04C  F049         	movff	lcd_8bit_send_char_data@l_pins_counter,??_lcd_8bit_send_char_data+2
   872   001666  C046  F04A         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
   873   00166A  2A49               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
   874   00166C  EF3A  F00B         	goto	u1324
   875   001670                     u1325:
   876   001670  90D8               	bcf	status,0,c
   877   001672  324A               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
   878   001674                     u1324:
   879   001674  2E49               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
   880   001676  EF38  F00B         	goto	u1325
   881   00167A  504A               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
   882   00167C  0B01               	andlw	1
   883   00167E  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
   884   001680  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
   885   001684  6E4B               	movwf	lcd_8bit_send_char_data@ret^0,c
   886   001686                     
   887                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:         }
   888   001686  2A4C               	incf	lcd_8bit_send_char_data@l_pins_counter^0,f,c
   889   001688  0E07               	movlw	7
   890   00168A  644C               	cpfsgt	lcd_8bit_send_char_data@l_pins_counter^0,c
   891   00168C  EF4A  F00B         	goto	u1331
   892   001690  EF4C  F00B         	goto	u1330
   893   001694                     u1331:
   894   001694  EF25  F00B         	goto	l2257
   895   001698                     u1330:
   896   001698                     
   897                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:         lcd_8bit_send_enable_signal(lcd);
   898   001698  C044  F042         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
   899   00169C  C045  F043         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
   900   0016A0  EC28  F00D         	call	_lcd_8bit_send_enable_signal	;wreg free
   901   0016A4                     l2265:
   902                           
   903                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:     return ret;
   904   0016A4  504B               	movf	lcd_8bit_send_char_data@ret^0,w,c
   905   0016A6  0012               	return		;funcret
   906   0016A8                     __end_of_lcd_8bit_send_char_data:
   907                           	callstack 0
   908                           
   909 ;; *************** function _lcd_4bit_send_string_pos *****************
   910 ;; Defined at:
   911 ;;		line 122 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  lcd             2   24[COMRAM] PTR const struct .
   914 ;;		 -> lcd1(6), 
   915 ;;  row             1   26[COMRAM] unsigned char 
   916 ;;  column          1   27[COMRAM] unsigned char 
   917 ;;  str             2   28[COMRAM] PTR unsigned char 
   918 ;;		 -> STR_1(17), 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  ret             1    0        unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      unsigned char 
   923 ;; Registers used:
   924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        6 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; Hardware stack levels required when called: 4
   937 ;; This function calls:
   938 ;;		_lcd_4bit_send_char_data
   939 ;;		_lcd_4bit_set_cursor
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text4
   946   001998                     __ptext4:
   947                           	callstack 0
   948   001998                     _lcd_4bit_send_string_pos:
   949                           	callstack 26
   950   001998                     
   951                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:     if(lcd==((void*)0)){
   952   001998  5050               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
   953   00199A  1051               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
   954   00199C  A4D8               	btfss	status,2,c
   955   00199E  EFD3  F00C         	goto	u1351
   956   0019A2  EFD5  F00C         	goto	u1350
   957   0019A6                     u1351:
   958   0019A6  EFD7  F00C         	goto	l2305
   959   0019AA                     u1350:
   960   0019AA                     
   961                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 126:     }
   962   0019AA  EF00  F00D         	goto	l347
   963   0019AE                     l2305:
   964                           
   965                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:        lcd_4bit_set_cursor(lcd,row,column);
   966   0019AE  C050  F04A         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
   967   0019B2  C051  F04B         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
   968   0019B6  C052  F04C         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
   969   0019BA  C053  F04D         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
   970   0019BE  ECB4  F00A         	call	_lcd_4bit_set_cursor	;wreg free
   971                           
   972                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
   973   0019C2  EFF2  F00C         	goto	l2311
   974   0019C6                     l2307:
   975   0019C6  C050  F046         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
   976   0019CA  C051  F047         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
   977   0019CE  C054  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   978   0019D2  C055  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
   979   0019D6                     	if	0	;tblptru may be non-zero
   980   0019D6                     	endif
   981   0019D6                     	if	0	;tblptru may be non-zero
   982   0019D6                     	endif
   983   0019D6  0008               	tblrd		*
   984   0019D8  CFF5 F048          	movff	tablat,lcd_4bit_send_char_data@data
   985   0019DC  EC25  F00C         	call	_lcd_4bit_send_char_data	;wreg free
   986   0019E0  4A54               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
   987   0019E2  2A55               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
   988   0019E4                     l2311:
   989                           
   990                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:         while(*str){
   991   0019E4  C054  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   992   0019E8  C055  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
   993   0019EC                     	if	0	;tblptru may be non-zero
   994   0019EC                     	endif
   995   0019EC                     	if	0	;tblptru may be non-zero
   996   0019EC                     	endif
   997   0019EC  0008               	tblrd		*
   998   0019EE  50F5               	movf	tablat,w,c
   999   0019F0  0900               	iorlw	0
  1000   0019F2  A4D8               	btfss	status,2,c
  1001   0019F4  EFFE  F00C         	goto	u1361
  1002   0019F8  EF00  F00D         	goto	u1360
  1003   0019FC                     u1361:
  1004   0019FC  EFE3  F00C         	goto	l2307
  1005   001A00                     u1360:
  1006   001A00                     l347:
  1007   001A00  0012               	return		;funcret
  1008   001A02                     __end_of_lcd_4bit_send_string_pos:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _lcd_4bit_set_cursor *****************
  1012 ;; Defined at:
  1013 ;;		line 395 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  lcd             2   18[COMRAM] PTR const struct .
  1016 ;;		 -> lcd1(6), 
  1017 ;;  row             1   20[COMRAM] unsigned char 
  1018 ;;  column          1   21[COMRAM] unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  ret             1    0        unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      unsigned char 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        6 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 3
  1037 ;; This function calls:
  1038 ;;		_lcd_4bit_send_command
  1039 ;; This function is called by:
  1040 ;;		_lcd_4bit_send_string_pos
  1041 ;;		_lcd_4bit_send_char_data_pos
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text5
  1046   001568                     __ptext5:
  1047                           	callstack 0
  1048   001568                     _lcd_4bit_set_cursor:
  1049                           	callstack 26
  1050   001568                     
  1051                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 397:     if(lcd==((void*)0)){
  1052   001568  504A               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1053   00156A  104B               	iorwf	(lcd_4bit_set_cursor@lcd+1)^0,w,c
  1054   00156C  A4D8               	btfss	status,2,c
  1055   00156E  EFBB  F00A         	goto	u1301
  1056   001572  EFBD  F00A         	goto	u1300
  1057   001576                     u1301:
  1058   001576  EFBF  F00A         	goto	l2223
  1059   00157A                     u1300:
  1060   00157A                     l2221:
  1061                           
  1062                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:     }
  1063   00157A  EF0B  F00B         	goto	l447
  1064   00157E                     l2223:
  1065                           
  1066                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 401:         column--;
  1067   00157E  064D               	decf	lcd_4bit_set_cursor@column^0,f,c
  1068                           
  1069                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 402:         switch (row){
  1070   001580  EFEE  F00A         	goto	l2237
  1071   001584                     l2225:
  1072   001584  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1073   001588  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1074   00158C  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1075   00158E  0F80               	addlw	128
  1076   001590  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1077   001592  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1078   001596  EF0B  F00B         	goto	l447
  1079   00159A                     l2227:
  1080   00159A  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1081   00159E  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1082   0015A2  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1083   0015A4  0FC0               	addlw	192
  1084   0015A6  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1085   0015A8  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1086   0015AC  EF0B  F00B         	goto	l447
  1087   0015B0                     l2229:
  1088   0015B0  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1089   0015B4  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1090   0015B8  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1091   0015BA  0F94               	addlw	148
  1092   0015BC  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1093   0015BE  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1094   0015C2  EF0B  F00B         	goto	l447
  1095   0015C6                     l2231:
  1096   0015C6  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1097   0015CA  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1098   0015CE  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1099   0015D0  0FD4               	addlw	212
  1100   0015D2  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1101   0015D4  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1102   0015D8  EF0B  F00B         	goto	l447
  1103   0015DC                     l2237:
  1104   0015DC  504C               	movf	lcd_4bit_set_cursor@row^0,w,c
  1105   0015DE  6E4E               	movwf	??_lcd_4bit_set_cursor^0,c
  1106   0015E0  6A4F               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115   0015E2  504F               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1116   0015E4  0A00               	xorlw	0	; case 0
  1117   0015E6  B4D8               	btfsc	status,2,c
  1118   0015E8  EFF8  F00A         	goto	l2667
  1119   0015EC  EFBD  F00A         	goto	l2221
  1120   0015F0                     l2667:
  1121                           
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 4, Range of values is 1 to 4
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte           13     7 (average)
  1127                           ;	Chosen strategy is simple_byte
  1128   0015F0  504E               	movf	??_lcd_4bit_set_cursor^0,w,c
  1129   0015F2  0A01               	xorlw	1	; case 1
  1130   0015F4  B4D8               	btfsc	status,2,c
  1131   0015F6  EFC2  F00A         	goto	l2225
  1132   0015FA  0A03               	xorlw	3	; case 2
  1133   0015FC  B4D8               	btfsc	status,2,c
  1134   0015FE  EFCD  F00A         	goto	l2227
  1135   001602  0A01               	xorlw	1	; case 3
  1136   001604  B4D8               	btfsc	status,2,c
  1137   001606  EFD8  F00A         	goto	l2229
  1138   00160A  0A07               	xorlw	7	; case 4
  1139   00160C  B4D8               	btfsc	status,2,c
  1140   00160E  EFE3  F00A         	goto	l2231
  1141   001612  EFBD  F00A         	goto	l2221
  1142   001616                     l447:
  1143   001616  0012               	return		;funcret
  1144   001618                     __end_of_lcd_4bit_set_cursor:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _lcd_4bit_send_char_data *****************
  1148 ;; Defined at:
  1149 ;;		line 63 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  lcd             2   14[COMRAM] PTR const struct .
  1152 ;;		 -> lcd1(6), 
  1153 ;;  data            1   16[COMRAM] unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  ret             1   17[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      unsigned char 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        4 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 2
  1172 ;; This function calls:
  1173 ;;		_gpio_pin_write_logic
  1174 ;;		_lcd_4bit_send_enable_signal
  1175 ;;		_lcd_send_4bits
  1176 ;; This function is called by:
  1177 ;;		_lcd_4bit_send_string_pos
  1178 ;;		_lcd_4bit_send_char_data_pos
  1179 ;;		_lcd_4bit_send_string
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text6
  1184   00184A                     __ptext6:
  1185                           	callstack 0
  1186   00184A                     _lcd_4bit_send_char_data:
  1187                           	callstack 27
  1188   00184A                     
  1189                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     if(lcd==((void*)0)){
  1190   00184A  5046               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1191   00184C  1047               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1192   00184E  A4D8               	btfss	status,2,c
  1193   001850  EF2C  F00C         	goto	u1291
  1194   001854  EF2E  F00C         	goto	u1290
  1195   001858                     u1291:
  1196   001858  EF32  F00C         	goto	l2211
  1197   00185C                     u1290:
  1198   00185C                     
  1199                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret=(Std_ReturnType)0x00;
  1200   00185C  0E00               	movlw	0
  1201   00185E  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1202                           
  1203                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:     }
  1204   001860  EF5C  F00C         	goto	l2213
  1205   001864                     l2211:
  1206                           
  1207                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  1208   001864  C046  F038         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1209   001868  C047  F039         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1210   00186C  0E01               	movlw	1
  1211   00186E  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1212   001870  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  1213   001874  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1214                           
  1215                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret=lcd_send_4bits(lcd, data >> 4);
  1216   001876  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1217   00187A  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1218   00187E  3848               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1219   001880  0B0F               	andlw	15
  1220   001882  6E44               	movwf	lcd_send_4bits@_data_command^0,c
  1221   001884  ECE1  F00B         	call	_lcd_send_4bits	;wreg free
  1222   001888  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1223                           
  1224                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_4bit_send_enable_signal(lcd);
  1225   00188A  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1226   00188E  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1227   001892  EC01  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1228   001896  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1229                           
  1230                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_send_4bits(lcd, data);
  1231   001898  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1232   00189C  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  1233   0018A0  C048  F044         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1234   0018A4  ECE1  F00B         	call	_lcd_send_4bits	;wreg free
  1235   0018A8  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1236                           
  1237                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_4bit_send_enable_signal(lcd);
  1238   0018AA  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1239   0018AE  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1240   0018B2  EC01  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1241   0018B6  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1242   0018B8                     l2213:
  1243                           
  1244                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:     return ret;
  1245   0018B8  5049               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1246   0018BA  0012               	return		;funcret
  1247   0018BC                     __end_of_lcd_4bit_send_char_data:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function _application_initialize *****************
  1251 ;; Defined at:
  1252 ;;		line 29 in file "application.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  ret             1    0        unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 5
  1273 ;; This function calls:
  1274 ;;		_ecu_layer_initialize
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text7
  1281   001B62                     __ptext7:
  1282                           	callstack 0
  1283   001B62                     _application_initialize:
  1284                           	callstack 25
  1285   001B62                     
  1286                           ;application.c: 31:     ecu_layer_initialize();
  1287   001B62  ECA4  F00D         	call	_ecu_layer_initialize	;wreg free
  1288   001B66  0012               	return		;funcret
  1289   001B68                     __end_of_application_initialize:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _ecu_layer_initialize *****************
  1293 ;; Defined at:
  1294 ;;		line 111 in file "ECU_Layer/ecu_layer_init.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  ret             1    0        unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 4
  1315 ;; This function calls:
  1316 ;;		_lcd_4bit_initialize
  1317 ;;		_lcd_8bit_initialize
  1318 ;; This function is called by:
  1319 ;;		_application_initialize
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text8
  1324   001B48                     __ptext8:
  1325                           	callstack 0
  1326   001B48                     _ecu_layer_initialize:
  1327                           	callstack 25
  1328   001B48  0E32               	movlw	low _lcd1
  1329   001B4A  6E4A               	movwf	lcd_4bit_initialize@lcd^0,c
  1330   001B4C  0E00               	movlw	high _lcd1
  1331   001B4E  6E4B               	movwf	(lcd_4bit_initialize@lcd+1)^0,c
  1332   001B50  ECEE  F009         	call	_lcd_4bit_initialize	;wreg free
  1333   001B54  0E28               	movlw	low _lcd_2
  1334   001B56  6E4D               	movwf	lcd_8bit_initialize@lcd^0,c
  1335   001B58  0E00               	movlw	high _lcd_2
  1336   001B5A  6E4E               	movwf	(lcd_8bit_initialize@lcd+1)^0,c
  1337   001B5C  EC68  F009         	call	_lcd_8bit_initialize	;wreg free
  1338   001B60  0012               	return		;funcret
  1339   001B62                     __end_of_ecu_layer_initialize:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function _lcd_8bit_initialize *****************
  1343 ;; Defined at:
  1344 ;;		line 162 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  lcd             2   21[COMRAM] PTR const struct .
  1347 ;;		 -> lcd_2(10), 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  ret             1   26[COMRAM] unsigned char 
  1350 ;;  l_data_pins_    1   25[COMRAM] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      unsigned char 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;Total ram usage:        6 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 3
  1367 ;; This function calls:
  1368 ;;		_gpio_pin_initialize
  1369 ;;		_lcd_8bit_send_command
  1370 ;; This function is called by:
  1371 ;;		_ecu_layer_initialize
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text9
  1376   0012D0                     __ptext9:
  1377                           	callstack 0
  1378   0012D0                     _lcd_8bit_initialize:
  1379                           	callstack 25
  1380   0012D0                     
  1381                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 164:      uint8 l_data_pins_counter=0;
  1382   0012D0  0E00               	movlw	0
  1383   0012D2  6E51               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1384   0012D4                     
  1385                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     if(lcd==((void*)0)){
  1386   0012D4  504D               	movf	lcd_8bit_initialize@lcd^0,w,c
  1387   0012D6  104E               	iorwf	(lcd_8bit_initialize@lcd+1)^0,w,c
  1388   0012D8  A4D8               	btfss	status,2,c
  1389   0012DA  EF71  F009         	goto	u1271
  1390   0012DE  EF73  F009         	goto	u1270
  1391   0012E2                     u1271:
  1392   0012E2  EF77  F009         	goto	l2163
  1393   0012E6                     u1270:
  1394   0012E6                     
  1395                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:         ret=(Std_ReturnType)0x00;
  1396   0012E6  0E00               	movlw	0
  1397   0012E8  6E52               	movwf	lcd_8bit_initialize@ret^0,c
  1398                           
  1399                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:     }
  1400   0012EA  EFEC  F009         	goto	l2195
  1401   0012EE                     l2163:
  1402                           
  1403                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  1404   0012EE  C04D  F042         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@pin_config
  1405   0012F2  C04E  F043         	movff	lcd_8bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  1406   0012F6  EC9C  F00B         	call	_gpio_pin_initialize	;wreg free
  1407   0012FA  6E52               	movwf	lcd_8bit_initialize@ret^0,c
  1408                           
  1409                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  1410   0012FC  0E01               	movlw	1
  1411   0012FE  244D               	addwf	lcd_8bit_initialize@lcd^0,w,c
  1412   001300  6E42               	movwf	gpio_pin_initialize@pin_config^0,c
  1413   001302  0E00               	movlw	0
  1414   001304  204E               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  1415   001306  6E43               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  1416   001308  EC9C  F00B         	call	_gpio_pin_initialize	;wreg free
  1417   00130C  6E52               	movwf	lcd_8bit_initialize@ret^0,c
  1418   00130E                     
  1419                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:         for(l_data_pins_counter=0;l_data_pins_cou
      +                          nter<8;l_data_pins_counter++){
  1420   00130E  0E00               	movlw	0
  1421   001310  6E51               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1422   001312                     l2171:
  1423   001312  5051               	movf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  1424   001314  244D               	addwf	lcd_8bit_initialize@lcd^0,w,c
  1425   001316  6E4F               	movwf	??_lcd_8bit_initialize^0,c
  1426   001318  0E00               	movlw	0
  1427   00131A  204E               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  1428   00131C  6E50               	movwf	(??_lcd_8bit_initialize+1)^0,c
  1429   00131E  0E02               	movlw	2
  1430   001320  244F               	addwf	??_lcd_8bit_initialize^0,w,c
  1431   001322  6E42               	movwf	gpio_pin_initialize@pin_config^0,c
  1432   001324  0E00               	movlw	0
  1433   001326  2050               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  1434   001328  6E43               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  1435   00132A  EC9C  F00B         	call	_gpio_pin_initialize	;wreg free
  1436   00132E                     
  1437                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:         }
  1438   00132E  2A51               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  1439   001330  0E07               	movlw	7
  1440   001332  6451               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  1441   001334  EF9E  F009         	goto	u1281
  1442   001338  EFA0  F009         	goto	u1280
  1443   00133C                     u1281:
  1444   00133C  EF89  F009         	goto	l2171
  1445   001340                     u1280:
  1446   001340                     
  1447                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:         _delay((unsigned long)((20)*(4000000/4000
      +                          .0)));
  1448   001340  0E1A               	movlw	26
  1449   001342  6E4F               	movwf	??_lcd_8bit_initialize^0,c
  1450   001344  0EF8               	movlw	248
  1451   001346                     u1747:
  1452   001346  2EE8               	decfsz	wreg,f,c
  1453   001348  D7FE               	bra	u1747
  1454   00134A  2E4F               	decfsz	??_lcd_8bit_initialize^0,f,c
  1455   00134C  D7FC               	bra	u1747
  1456   00134E  D000               	nop2	
  1457   001350  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1458   001354  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1459   001358  0E38               	movlw	56
  1460   00135A  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1461   00135C  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1462   001360                     
  1463                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:         _delay((unsigned long)((5)*(4000000/4000.
      +                          0)));
  1464   001360  0E07               	movlw	7
  1465   001362  6E4F               	movwf	??_lcd_8bit_initialize^0,c
  1466   001364  0E7D               	movlw	125
  1467   001366                     u1757:
  1468   001366  2EE8               	decfsz	wreg,f,c
  1469   001368  D7FE               	bra	u1757
  1470   00136A  2E4F               	decfsz	??_lcd_8bit_initialize^0,f,c
  1471   00136C  D7FC               	bra	u1757
  1472   00136E  F000               	nop	
  1473   001370  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1474   001374  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1475   001378  0E38               	movlw	56
  1476   00137A  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1477   00137C  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1478   001380                     
  1479                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 178:         _delay((unsigned long)((150)*(4000000/400
      +                          0000.0)));
  1480   001380  0E32               	movlw	50
  1481   001382                     u1767:
  1482   001382  2EE8               	decfsz	wreg,f,c
  1483   001384  D7FE               	bra	u1767
  1484   001386  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1485   00138A  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1486   00138E  0E38               	movlw	56
  1487   001390  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1488   001392  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1489   001396  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1490   00139A  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1491   00139E  0E38               	movlw	56
  1492   0013A0  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1493   0013A2  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1494   0013A6  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1495   0013AA  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1496   0013AE  0E01               	movlw	1
  1497   0013B0  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1498   0013B2  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1499   0013B6  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1500   0013BA  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1501   0013BE  0E06               	movlw	6
  1502   0013C0  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1503   0013C2  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1504   0013C6                     
  1505                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 183:         ret=lcd_8bit_send_command(lcd,0X0C);
  1506   0013C6  C04D  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1507   0013CA  C04E  F045         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  1508   0013CE  0E0C               	movlw	12
  1509   0013D0  6E46               	movwf	lcd_8bit_send_command@command^0,c
  1510   0013D2  EC54  F00B         	call	_lcd_8bit_send_command	;wreg free
  1511   0013D6  6E52               	movwf	lcd_8bit_initialize@ret^0,c
  1512   0013D8                     l2195:
  1513                           
  1514                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 187:     return ret;
  1515   0013D8  5052               	movf	lcd_8bit_initialize@ret^0,w,c
  1516   0013DA  0012               	return		;funcret
  1517   0013DC                     __end_of_lcd_8bit_initialize:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _lcd_8bit_send_command *****************
  1521 ;; Defined at:
  1522 ;;		line 195 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  lcd             2   12[COMRAM] PTR const struct .
  1525 ;;		 -> lcd_2(10), 
  1526 ;;  command         1   14[COMRAM] unsigned char 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  l_pins_count    1   20[COMRAM] unsigned char 
  1529 ;;  ret             1   19[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      unsigned char 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:        9 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 2
  1546 ;; This function calls:
  1547 ;;		_gpio_pin_write_logic
  1548 ;;		_lcd_8bit_send_enable_signal
  1549 ;; This function is called by:
  1550 ;;		_lcd_8bit_initialize
  1551 ;;		_lcd_8bit_set_cursor
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text10
  1556   0016A8                     __ptext10:
  1557                           	callstack 0
  1558   0016A8                     _lcd_8bit_send_command:
  1559                           	callstack 26
  1560   0016A8                     
  1561                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 197:      uint8 l_pins_counter=0;
  1562   0016A8  0E00               	movlw	0
  1563   0016AA  6E4C               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  1564   0016AC                     
  1565                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 198:     if(lcd==((void*)0)){
  1566   0016AC  5044               	movf	lcd_8bit_send_command@lcd^0,w,c
  1567   0016AE  1045               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  1568   0016B0  A4D8               	btfss	status,2,c
  1569   0016B2  EF5D  F00B         	goto	u1221
  1570   0016B6  EF5F  F00B         	goto	u1220
  1571   0016BA                     u1221:
  1572   0016BA  EF63  F00B         	goto	l2099
  1573   0016BE                     u1220:
  1574   0016BE                     
  1575                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 199:         ret=(Std_ReturnType)0x00;
  1576   0016BE  0E00               	movlw	0
  1577   0016C0  6E4B               	movwf	lcd_8bit_send_command@ret^0,c
  1578                           
  1579                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 200:     }
  1580   0016C2  EF9A  F00B         	goto	l2115
  1581   0016C6                     l2099:
  1582   0016C6  C044  F038         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1583   0016CA  C045  F039         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  1584   0016CE  0E00               	movlw	0
  1585   0016D0  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1586   0016D2  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  1587   0016D6                     
  1588                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 203:         for(l_pins_counter=0;l_pins_counter<8;l_p
      +                          ins_counter++){
  1589   0016D6  0E00               	movlw	0
  1590   0016D8  6E4C               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  1591   0016DA                     l2107:
  1592                           
  1593                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 204:          ret=gpio_pin_write_logic(&(lcd->lcd_data
      +                          [l_pins_counter]),( command >> l_pins_counter ) & (uint8)0x01);
  1594   0016DA  504C               	movf	lcd_8bit_send_command@l_pins_counter^0,w,c
  1595   0016DC  2444               	addwf	lcd_8bit_send_command@lcd^0,w,c
  1596   0016DE  6E47               	movwf	??_lcd_8bit_send_command^0,c
  1597   0016E0  0E00               	movlw	0
  1598   0016E2  2045               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  1599   0016E4  6E48               	movwf	(??_lcd_8bit_send_command+1)^0,c
  1600   0016E6  0E02               	movlw	2
  1601   0016E8  2447               	addwf	??_lcd_8bit_send_command^0,w,c
  1602   0016EA  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  1603   0016EC  0E00               	movlw	0
  1604   0016EE  2048               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  1605   0016F0  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1606   0016F2  C04C  F049         	movff	lcd_8bit_send_command@l_pins_counter,??_lcd_8bit_send_command+2
  1607   0016F6  C046  F04A         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  1608   0016FA  2A49               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  1609   0016FC  EF82  F00B         	goto	u1234
  1610   001700                     u1235:
  1611   001700  90D8               	bcf	status,0,c
  1612   001702  324A               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  1613   001704                     u1234:
  1614   001704  2E49               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  1615   001706  EF80  F00B         	goto	u1235
  1616   00170A  504A               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  1617   00170C  0B01               	andlw	1
  1618   00170E  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1619   001710  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  1620   001714  6E4B               	movwf	lcd_8bit_send_command@ret^0,c
  1621   001716                     
  1622                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 205:         }
  1623   001716  2A4C               	incf	lcd_8bit_send_command@l_pins_counter^0,f,c
  1624   001718  0E07               	movlw	7
  1625   00171A  644C               	cpfsgt	lcd_8bit_send_command@l_pins_counter^0,c
  1626   00171C  EF92  F00B         	goto	u1241
  1627   001720  EF94  F00B         	goto	u1240
  1628   001724                     u1241:
  1629   001724  EF6D  F00B         	goto	l2107
  1630   001728                     u1240:
  1631   001728                     
  1632                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 206:         lcd_8bit_send_enable_signal(lcd);
  1633   001728  C044  F042         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1634   00172C  C045  F043         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1635   001730  EC28  F00D         	call	_lcd_8bit_send_enable_signal	;wreg free
  1636   001734                     l2115:
  1637                           
  1638                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 209:     return ret;
  1639   001734  504B               	movf	lcd_8bit_send_command@ret^0,w,c
  1640   001736  0012               	return		;funcret
  1641   001738                     __end_of_lcd_8bit_send_command:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1645 ;; Defined at:
  1646 ;;		line 366 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  lcd             2   10[COMRAM] PTR const struct .
  1649 ;;		 -> lcd_2(10), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  ret             1    0        unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 1
  1668 ;; This function calls:
  1669 ;;		_gpio_pin_write_logic
  1670 ;; This function is called by:
  1671 ;;		_lcd_8bit_send_command
  1672 ;;		_lcd_8bit_send_char_data
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text11
  1677   001A50                     __ptext11:
  1678                           	callstack 0
  1679   001A50                     _lcd_8bit_send_enable_signal:
  1680                           	callstack 26
  1681   001A50                     
  1682                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 368:     if(lcd==((void*)0)){
  1683   001A50  5042               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1684   001A52  1043               	iorwf	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1685   001A54  A4D8               	btfss	status,2,c
  1686   001A56  EF2F  F00D         	goto	u1171
  1687   001A5A  EF31  F00D         	goto	u1170
  1688   001A5E                     u1171:
  1689   001A5E  EF33  F00D         	goto	l2059
  1690   001A62                     u1170:
  1691   001A62                     
  1692                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 370:     }
  1693   001A62  EF4A  F00D         	goto	l423
  1694   001A66                     l2059:
  1695   001A66  0E01               	movlw	1
  1696   001A68  2442               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1697   001A6A  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  1698   001A6C  0E00               	movlw	0
  1699   001A6E  2043               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1700   001A70  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1701   001A72  0E01               	movlw	1
  1702   001A74  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1703   001A76  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  1704   001A7A                     
  1705                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 373:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  1706   001A7A  D000               	nop2		;2 cycle nop
  1707   001A7C  D000               	nop2		;2 cycle nop
  1708   001A7E  F000               	nop	
  1709   001A80  0E01               	movlw	1
  1710   001A82  2442               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1711   001A84  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  1712   001A86  0E00               	movlw	0
  1713   001A88  2043               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1714   001A8A  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1715   001A8C  0E00               	movlw	0
  1716   001A8E  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1717   001A90  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  1718   001A94                     l423:
  1719   001A94  0012               	return		;funcret
  1720   001A96                     __end_of_lcd_8bit_send_enable_signal:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _lcd_4bit_initialize *****************
  1724 ;; Defined at:
  1725 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  lcd             2   18[COMRAM] PTR const struct .
  1728 ;;		 -> lcd1(6), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  l_data_pins_    1   23[COMRAM] unsigned char 
  1731 ;;  ret             1   22[COMRAM] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      unsigned char 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;Total ram usage:        6 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		_gpio_pin_initialize
  1750 ;;		_lcd_4bit_send_command
  1751 ;; This function is called by:
  1752 ;;		_ecu_layer_initialize
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text12
  1757   0013DC                     __ptext12:
  1758                           	callstack 0
  1759   0013DC                     _lcd_4bit_initialize:
  1760                           	callstack 25
  1761   0013DC                     
  1762                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  1763   0013DC  0E00               	movlw	0
  1764   0013DE  6E4F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1765   0013E0                     
  1766                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  1767   0013E0  504A               	movf	lcd_4bit_initialize@lcd^0,w,c
  1768   0013E2  104B               	iorwf	(lcd_4bit_initialize@lcd+1)^0,w,c
  1769   0013E4  A4D8               	btfss	status,2,c
  1770   0013E6  EFF7  F009         	goto	u1251
  1771   0013EA  EFF9  F009         	goto	u1250
  1772   0013EE                     u1251:
  1773   0013EE  EFFD  F009         	goto	l2125
  1774   0013F2                     u1250:
  1775   0013F2                     
  1776                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  1777   0013F2  0E00               	movlw	0
  1778   0013F4  6E4E               	movwf	lcd_4bit_initialize@ret^0,c
  1779                           
  1780                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  1781   0013F6  EF5A  F00A         	goto	l2153
  1782   0013FA                     l2125:
  1783                           
  1784                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  1785   0013FA  C04A  F042         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  1786   0013FE  C04B  F043         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  1787   001402  EC9C  F00B         	call	_gpio_pin_initialize	;wreg free
  1788   001406  6E4E               	movwf	lcd_4bit_initialize@ret^0,c
  1789                           
  1790                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  1791   001408  0E01               	movlw	1
  1792   00140A  244A               	addwf	lcd_4bit_initialize@lcd^0,w,c
  1793   00140C  6E42               	movwf	gpio_pin_initialize@pin_config^0,c
  1794   00140E  0E00               	movlw	0
  1795   001410  204B               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  1796   001412  6E43               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  1797   001414  EC9C  F00B         	call	_gpio_pin_initialize	;wreg free
  1798   001418  6E4E               	movwf	lcd_4bit_initialize@ret^0,c
  1799   00141A                     
  1800                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  1801   00141A  0E00               	movlw	0
  1802   00141C  6E4F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1803   00141E                     l2133:
  1804   00141E  504F               	movf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1805   001420  244A               	addwf	lcd_4bit_initialize@lcd^0,w,c
  1806   001422  6E4C               	movwf	??_lcd_4bit_initialize^0,c
  1807   001424  0E00               	movlw	0
  1808   001426  204B               	addwfc	(lcd_4bit_initialize@lcd+1)^0,w,c
  1809   001428  6E4D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  1810   00142A  0E02               	movlw	2
  1811   00142C  244C               	addwf	??_lcd_4bit_initialize^0,w,c
  1812   00142E  6E42               	movwf	gpio_pin_initialize@pin_config^0,c
  1813   001430  0E00               	movlw	0
  1814   001432  204D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  1815   001434  6E43               	movwf	(gpio_pin_initialize@pin_config+1)^0,c
  1816   001436  EC9C  F00B         	call	_gpio_pin_initialize	;wreg free
  1817   00143A                     
  1818                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  1819   00143A  2A4F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1820   00143C  0E03               	movlw	3
  1821   00143E  644F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1822   001440  EF24  F00A         	goto	u1261
  1823   001444  EF26  F00A         	goto	u1260
  1824   001448                     u1261:
  1825   001448  EF0F  F00A         	goto	l2133
  1826   00144C                     u1260:
  1827   00144C  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1828   001450  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1829   001454  0E33               	movlw	51
  1830   001456  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1831   001458  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1832   00145C                     
  1833                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((150)*(4000000/4000
      +                          000.0)));
  1834   00145C  0E32               	movlw	50
  1835   00145E                     u1777:
  1836   00145E  2EE8               	decfsz	wreg,f,c
  1837   001460  D7FE               	bra	u1777
  1838   001462  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1839   001466  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1840   00146A  0E32               	movlw	50
  1841   00146C  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1842   00146E  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1843   001472  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1844   001476  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1845   00147A  0E28               	movlw	40
  1846   00147C  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1847   00147E  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1848   001482  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1849   001486  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1850   00148A  0E01               	movlw	1
  1851   00148C  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1852   00148E  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1853   001492  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1854   001496  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1855   00149A  0E06               	movlw	6
  1856   00149C  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1857   00149E  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1858   0014A2                     
  1859                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret=lcd_4bit_send_command(lcd,0X0C);
  1860   0014A2  C04A  F046         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1861   0014A6  C04B  F047         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  1862   0014AA  0E0C               	movlw	12
  1863   0014AC  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1864   0014AE  EC5E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1865   0014B2  6E4E               	movwf	lcd_4bit_initialize@ret^0,c
  1866   0014B4                     l2153:
  1867                           
  1868                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     return ret;
  1869   0014B4  504E               	movf	lcd_4bit_initialize@ret^0,w,c
  1870   0014B6  0012               	return		;funcret
  1871   0014B8                     __end_of_lcd_4bit_initialize:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function _lcd_4bit_send_command *****************
  1875 ;; Defined at:
  1876 ;;		line 43 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  lcd             2   14[COMRAM] PTR const struct .
  1879 ;;		 -> lcd1(6), 
  1880 ;;  command         1   16[COMRAM] unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  ret             1   17[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      unsigned char 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;Total ram usage:        4 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 2
  1899 ;; This function calls:
  1900 ;;		_gpio_pin_write_logic
  1901 ;;		_lcd_4bit_send_enable_signal
  1902 ;;		_lcd_send_4bits
  1903 ;; This function is called by:
  1904 ;;		_lcd_4bit_initialize
  1905 ;;		_lcd_4bit_set_cursor
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text13
  1910   0018BC                     __ptext13:
  1911                           	callstack 0
  1912   0018BC                     _lcd_4bit_send_command:
  1913                           	callstack 26
  1914   0018BC                     
  1915                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:     if(lcd==((void*)0)){
  1916   0018BC  5046               	movf	lcd_4bit_send_command@lcd^0,w,c
  1917   0018BE  1047               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  1918   0018C0  A4D8               	btfss	status,2,c
  1919   0018C2  EF65  F00C         	goto	u1211
  1920   0018C6  EF67  F00C         	goto	u1210
  1921   0018CA                     u1211:
  1922   0018CA  EF6B  F00C         	goto	l2087
  1923   0018CE                     u1210:
  1924   0018CE                     
  1925                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:         ret=(Std_ReturnType)0x00;
  1926   0018CE  0E00               	movlw	0
  1927   0018D0  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  1928                           
  1929                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:     }
  1930   0018D2  EF95  F00C         	goto	l2089
  1931   0018D6                     l2087:
  1932                           
  1933                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  1934   0018D6  C046  F038         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1935   0018DA  C047  F039         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  1936   0018DE  0E00               	movlw	0
  1937   0018E0  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1938   0018E2  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  1939   0018E6  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  1940                           
  1941                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=lcd_send_4bits(lcd, command >> 4);
  1942   0018E8  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1943   0018EC  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1944   0018F0  3848               	swapf	lcd_4bit_send_command@command^0,w,c
  1945   0018F2  0B0F               	andlw	15
  1946   0018F4  6E44               	movwf	lcd_send_4bits@_data_command^0,c
  1947   0018F6  ECE1  F00B         	call	_lcd_send_4bits	;wreg free
  1948   0018FA  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  1949                           
  1950                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_4bit_send_enable_signal(lcd);
  1951   0018FC  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1952   001900  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1953   001904  EC01  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1954   001908  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  1955                           
  1956                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_send_4bits(lcd, command);
  1957   00190A  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1958   00190E  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1959   001912  C048  F044         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1960   001916  ECE1  F00B         	call	_lcd_send_4bits	;wreg free
  1961   00191A  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  1962                           
  1963                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_4bit_send_enable_signal(lcd);
  1964   00191C  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1965   001920  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1966   001924  EC01  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1967   001928  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  1968   00192A                     l2089:
  1969                           
  1970                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:     return ret;
  1971   00192A  5049               	movf	lcd_4bit_send_command@ret^0,w,c
  1972   00192C  0012               	return		;funcret
  1973   00192E                     __end_of_lcd_4bit_send_command:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _lcd_send_4bits *****************
  1977 ;; Defined at:
  1978 ;;		line 341 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  lcd             2   10[COMRAM] PTR const struct .
  1981 ;;		 -> lcd1(6), 
  1982 ;;  _data_comman    1   12[COMRAM] unsigned char 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  ret             1   13[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:        4 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 1
  2001 ;; This function calls:
  2002 ;;		_gpio_pin_write_logic
  2003 ;; This function is called by:
  2004 ;;		_lcd_4bit_send_command
  2005 ;;		_lcd_4bit_send_char_data
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text14
  2010   0017C2                     __ptext14:
  2011                           	callstack 0
  2012   0017C2                     _lcd_send_4bits:
  2013                           	callstack 26
  2014   0017C2                     
  2015                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 343:     if(lcd==((void*)0)){
  2016   0017C2  5042               	movf	lcd_send_4bits@lcd^0,w,c
  2017   0017C4  1043               	iorwf	(lcd_send_4bits@lcd+1)^0,w,c
  2018   0017C6  A4D8               	btfss	status,2,c
  2019   0017C8  EFE8  F00B         	goto	u1151
  2020   0017CC  EFEA  F00B         	goto	u1150
  2021   0017D0                     u1151:
  2022   0017D0  EFEE  F00B         	goto	l2033
  2023   0017D4                     u1150:
  2024   0017D4                     
  2025                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 344:         ret=(Std_ReturnType)0x00;
  2026   0017D4  0E00               	movlw	0
  2027   0017D6  6E45               	movwf	lcd_send_4bits@ret^0,c
  2028                           
  2029                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:     }
  2030   0017D8  EF23  F00C         	goto	l2035
  2031   0017DC                     l2033:
  2032                           
  2033                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 347:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  2034   0017DC  0E02               	movlw	2
  2035   0017DE  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  2036   0017E0  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  2037   0017E2  0E00               	movlw	0
  2038   0017E4  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2039   0017E6  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2040   0017E8  5044               	movf	lcd_send_4bits@_data_command^0,w,c
  2041   0017EA  0B01               	andlw	1
  2042   0017EC  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2043   0017EE  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2044   0017F2  6E45               	movwf	lcd_send_4bits@ret^0,c
  2045                           
  2046                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 348:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  2047   0017F4  0E03               	movlw	3
  2048   0017F6  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  2049   0017F8  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  2050   0017FA  0E00               	movlw	0
  2051   0017FC  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2052   0017FE  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2053   001800  90D8               	bcf	status,0,c
  2054   001802  3044               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2055   001804  0B01               	andlw	1
  2056   001806  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2057   001808  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2058   00180C  6E45               	movwf	lcd_send_4bits@ret^0,c
  2059                           
  2060                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 349:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  2061   00180E  0E04               	movlw	4
  2062   001810  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  2063   001812  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  2064   001814  0E00               	movlw	0
  2065   001816  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2066   001818  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2067   00181A  4044               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2068   00181C  42E8               	rrncf	wreg,f,c
  2069   00181E  0B3F               	andlw	63
  2070   001820  0B01               	andlw	1
  2071   001822  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2072   001824  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2073   001828  6E45               	movwf	lcd_send_4bits@ret^0,c
  2074                           
  2075                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 350:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  2076   00182A  0E05               	movlw	5
  2077   00182C  2442               	addwf	lcd_send_4bits@lcd^0,w,c
  2078   00182E  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  2079   001830  0E00               	movlw	0
  2080   001832  2043               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  2081   001834  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2082   001836  3844               	swapf	lcd_send_4bits@_data_command^0,w,c
  2083   001838  46E8               	rlncf	wreg,f,c
  2084   00183A  0B1F               	andlw	31
  2085   00183C  0B01               	andlw	1
  2086   00183E  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2087   001840  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2088   001844  6E45               	movwf	lcd_send_4bits@ret^0,c
  2089   001846                     l2035:
  2090                           
  2091                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:     return ret;
  2092   001846  5045               	movf	lcd_send_4bits@ret^0,w,c
  2093   001848  0012               	return		;funcret
  2094   00184A                     __end_of_lcd_send_4bits:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2098 ;; Defined at:
  2099 ;;		line 354 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  lcd             2   10[COMRAM] PTR const struct .
  2102 ;;		 -> lcd1(6), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  ret             1   12[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      unsigned char 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;Total ram usage:        3 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 1
  2121 ;; This function calls:
  2122 ;;		_gpio_pin_write_logic
  2123 ;; This function is called by:
  2124 ;;		_lcd_4bit_send_command
  2125 ;;		_lcd_4bit_send_char_data
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text15
  2130   001A02                     __ptext15:
  2131                           	callstack 0
  2132   001A02                     _lcd_4bit_send_enable_signal:
  2133                           	callstack 26
  2134   001A02                     
  2135                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 356:     if(lcd==((void*)0)){
  2136   001A02  5042               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2137   001A04  1043               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2138   001A06  A4D8               	btfss	status,2,c
  2139   001A08  EF08  F00D         	goto	u1161
  2140   001A0C  EF0A  F00D         	goto	u1160
  2141   001A10                     u1161:
  2142   001A10  EF0E  F00D         	goto	l2045
  2143   001A14                     u1160:
  2144   001A14                     
  2145                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 357:         ret=(Std_ReturnType)0x00;
  2146   001A14  0E00               	movlw	0
  2147   001A16  6E44               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2148                           
  2149                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 358:     }
  2150   001A18  EF26  F00D         	goto	l2049
  2151   001A1C                     l2045:
  2152   001A1C  0E01               	movlw	1
  2153   001A1E  2442               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2154   001A20  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  2155   001A22  0E00               	movlw	0
  2156   001A24  2043               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2157   001A26  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2158   001A28  0E01               	movlw	1
  2159   001A2A  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2160   001A2C  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2161   001A30                     
  2162                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 361:         _delay((unsigned long)((5)*(4000000/40000
      +                          00.0)));
  2163   001A30  D000               	nop2		;2 cycle nop
  2164   001A32  D000               	nop2		;2 cycle nop
  2165   001A34  F000               	nop	
  2166                           
  2167                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 362:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  2168   001A36  0E01               	movlw	1
  2169   001A38  2442               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2170   001A3A  6E38               	movwf	gpio_pin_write_logic@pin_config^0,c
  2171   001A3C  0E00               	movlw	0
  2172   001A3E  2043               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  2173   001A40  6E39               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  2174   001A42  0E00               	movlw	0
  2175   001A44  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2176   001A46  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2177   001A4A  6E44               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2178   001A4C                     l2049:
  2179                           
  2180                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 364:     return ret;
  2181   001A4C  5044               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2182   001A4E  0012               	return		;funcret
  2183   001A50                     __end_of_lcd_4bit_send_enable_signal:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _gpio_pin_initialize *****************
  2187 ;; Defined at:
  2188 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  pin_config      2   10[COMRAM] PTR const struct .
  2191 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd1.lcd_data(4), lcd1(6), 
  2192 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  ret             1   13[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        4 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 1
  2211 ;; This function calls:
  2212 ;;		_gpio_pin_direction_initialize
  2213 ;;		_gpio_pin_write_logic
  2214 ;; This function is called by:
  2215 ;;		_lcd_4bit_initialize
  2216 ;;		_lcd_8bit_initialize
  2217 ;;		_seven_segment_initialize
  2218 ;;		_dc_motor_initialize
  2219 ;;		_keypad_initialize
  2220 ;;		_led_initialize
  2221 ;;		_relay_initialize
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text16
  2226   001738                     __ptext16:
  2227                           	callstack 0
  2228   001738                     _gpio_pin_initialize:
  2229                           	callstack 26
  2230   001738                     
  2231                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2232   001738  5042               	movf	gpio_pin_initialize@pin_config^0,w,c
  2233   00173A  1043               	iorwf	(gpio_pin_initialize@pin_config+1)^0,w,c
  2234   00173C  B4D8               	btfsc	status,2,c
  2235   00173E  EFA3  F00B         	goto	u1181
  2236   001742  EFA5  F00B         	goto	u1180
  2237   001746                     u1181:
  2238   001746  EFC5  F00B         	goto	l2073
  2239   00174A                     u1180:
  2240   00174A  C042  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2241   00174E  C043  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2242   001752  30DF               	rrcf	223,w,c
  2243   001754  32E8               	rrcf	wreg,f,c
  2244   001756  32E8               	rrcf	wreg,f,c
  2245   001758  0B07               	andlw	7
  2246   00175A  6E44               	movwf	??_gpio_pin_initialize^0,c
  2247   00175C  0E08               	movlw	8
  2248   00175E  6044               	cpfslt	??_gpio_pin_initialize^0,c
  2249   001760  EFB4  F00B         	goto	u1191
  2250   001764  EFB6  F00B         	goto	u1190
  2251   001768                     u1191:
  2252   001768  EFC5  F00B         	goto	l2073
  2253   00176C                     u1190:
  2254   00176C  C042  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2255   001770  C043  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2256   001774  50DF               	movf	223,w,c
  2257   001776  0B07               	andlw	7
  2258   001778  6E44               	movwf	??_gpio_pin_initialize^0,c
  2259   00177A  0E04               	movlw	4
  2260   00177C  6444               	cpfsgt	??_gpio_pin_initialize^0,c
  2261   00177E  EFC3  F00B         	goto	u1201
  2262   001782  EFC5  F00B         	goto	u1200
  2263   001786                     u1201:
  2264   001786  EFC9  F00B         	goto	l2075
  2265   00178A                     u1200:
  2266   00178A                     l2073:
  2267                           
  2268                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  2269   00178A  0E00               	movlw	0
  2270   00178C  6E45               	movwf	gpio_pin_initialize@ret^0,c
  2271                           
  2272                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  2273   00178E  EFDF  F00B         	goto	l2077
  2274   001792                     l2075:
  2275                           
  2276                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  2277   001792  C042  F038         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  2278   001796  C043  F039         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  2279   00179A  EC12  F008         	call	_gpio_pin_direction_initialize	;wreg free
  2280   00179E  6E45               	movwf	gpio_pin_initialize@ret^0,c
  2281                           
  2282                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  2283   0017A0  C042  F038         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  2284   0017A4  C043  F039         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  2285   0017A8  C042  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  2286   0017AC  C043  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  2287   0017B0  0E00               	movlw	0
  2288   0017B2  BEDF               	btfsc	indf2,7,c
  2289   0017B4  0E01               	movlw	1
  2290   0017B6  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2291   0017B8  ECC3  F008         	call	_gpio_pin_write_logic	;wreg free
  2292   0017BC  6E45               	movwf	gpio_pin_initialize@ret^0,c
  2293   0017BE                     l2077:
  2294                           
  2295                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  2296   0017BE  5045               	movf	gpio_pin_initialize@ret^0,w,c
  2297   0017C0  0012               	return		;funcret
  2298   0017C2                     __end_of_gpio_pin_initialize:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _gpio_pin_write_logic *****************
  2302 ;; Defined at:
  2303 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  pin_config      2    0[COMRAM] PTR const struct .
  2306 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd1.lcd_data(4), lcd1(6), 
  2307 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  2308 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2309 ;;  logic           1    2[COMRAM] enum E2801
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  ret             1    9[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      unsigned char 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2321 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;Total ram usage:       10 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_gpio_pin_initialize
  2331 ;;		_lcd_4bit_send_command
  2332 ;;		_lcd_4bit_send_char_data
  2333 ;;		_lcd_8bit_send_command
  2334 ;;		_lcd_8bit_send_char_data
  2335 ;;		_lcd_send_4bits
  2336 ;;		_lcd_4bit_send_enable_signal
  2337 ;;		_lcd_8bit_send_enable_signal
  2338 ;;		_seven_segment_write_number
  2339 ;;		_dc_motor_move_right
  2340 ;;		_dc_motor_move_left
  2341 ;;		_dc_motor_stop
  2342 ;;		_keypad_get_value
  2343 ;;		_led_turn_on
  2344 ;;		_led_turn_off
  2345 ;;		_relay_turn_on
  2346 ;;		_relay_turn_off
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text17
  2351   001186                     __ptext17:
  2352                           	callstack 0
  2353   001186                     _gpio_pin_write_logic:
  2354                           	callstack 26
  2355   001186                     
  2356                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  2357   001186  0E01               	movlw	1
  2358   001188  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  2359   00118A                     
  2360                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2361   00118A  5038               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2362   00118C  1039               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  2363   00118E  B4D8               	btfsc	status,2,c
  2364   001190  EFCC  F008         	goto	u1031
  2365   001194  EFCE  F008         	goto	u1030
  2366   001198                     u1031:
  2367   001198  EFEE  F008         	goto	l1983
  2368   00119C                     u1030:
  2369   00119C  C038  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2370   0011A0  C039  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2371   0011A4  30DF               	rrcf	223,w,c
  2372   0011A6  32E8               	rrcf	wreg,f,c
  2373   0011A8  32E8               	rrcf	wreg,f,c
  2374   0011AA  0B07               	andlw	7
  2375   0011AC  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2376   0011AE  0E08               	movlw	8
  2377   0011B0  603B               	cpfslt	??_gpio_pin_write_logic^0,c
  2378   0011B2  EFDD  F008         	goto	u1041
  2379   0011B6  EFDF  F008         	goto	u1040
  2380   0011BA                     u1041:
  2381   0011BA  EFEE  F008         	goto	l1983
  2382   0011BE                     u1040:
  2383   0011BE  C038  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2384   0011C2  C039  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2385   0011C6  50DF               	movf	223,w,c
  2386   0011C8  0B07               	andlw	7
  2387   0011CA  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2388   0011CC  0E04               	movlw	4
  2389   0011CE  643B               	cpfsgt	??_gpio_pin_write_logic^0,c
  2390   0011D0  EFEC  F008         	goto	u1051
  2391   0011D4  EFEE  F008         	goto	u1050
  2392   0011D8                     u1051:
  2393   0011D8  EF51  F009         	goto	l1991
  2394   0011DC                     u1050:
  2395   0011DC                     l1983:
  2396                           
  2397                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  2398   0011DC  0E00               	movlw	0
  2399   0011DE  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  2400                           
  2401                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  2402   0011E0  EF66  F009         	goto	l1993
  2403   0011E4                     l1985:
  2404                           
  2405                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  2406   0011E4  C038  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2407   0011E8  C039  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2408   0011EC  30DF               	rrcf	223,w,c
  2409   0011EE  32E8               	rrcf	wreg,f,c
  2410   0011F0  32E8               	rrcf	wreg,f,c
  2411   0011F2  0B07               	andlw	7
  2412   0011F4  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2413   0011F6  0E01               	movlw	1
  2414   0011F8  6E3C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2415   0011FA  2A3B               	incf	??_gpio_pin_write_logic^0,f,c
  2416   0011FC  EF02  F009         	goto	u1064
  2417   001200                     u1065:
  2418   001200  90D8               	bcf	status,0,c
  2419   001202  363C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2420   001204                     u1064:
  2421   001204  2E3B               	decfsz	??_gpio_pin_write_logic^0,f,c
  2422   001206  EF00  F009         	goto	u1065
  2423   00120A  C038  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2424   00120E  C039  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2425   001212  50DF               	movf	223,w,c
  2426   001214  0B07               	andlw	7
  2427   001216  6E3D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2428   001218  503D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2429   00121A  0D02               	mullw	2
  2430   00121C  0E0B               	movlw	low _lat_registers
  2431   00121E  24F3               	addwf	243,w,c
  2432   001220  6ED9               	movwf	fsr2l,c
  2433   001222  0E00               	movlw	high _lat_registers
  2434   001224  20F4               	addwfc	prodh,w,c
  2435   001226  6EDA               	movwf	fsr2h,c
  2436   001228  CFDE F03E          	movff	postinc2,??_gpio_pin_write_logic+3
  2437   00122C  CFDD F03F          	movff	postdec2,??_gpio_pin_write_logic+4
  2438   001230  C03E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2439   001234  C03F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2440   001238  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2441   00123A  12DF               	iorwf	indf2,f,c
  2442                           
  2443                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  2444   00123C  EF66  F009         	goto	l1993
  2445   001240                     l1987:
  2446                           
  2447                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  2448   001240  C038  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2449   001244  C039  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2450   001248  30DF               	rrcf	223,w,c
  2451   00124A  32E8               	rrcf	wreg,f,c
  2452   00124C  32E8               	rrcf	wreg,f,c
  2453   00124E  0B07               	andlw	7
  2454   001250  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2455   001252  0E01               	movlw	1
  2456   001254  6E3C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2457   001256  2A3B               	incf	??_gpio_pin_write_logic^0,f,c
  2458   001258  EF30  F009         	goto	u1074
  2459   00125C                     u1075:
  2460   00125C  90D8               	bcf	status,0,c
  2461   00125E  363C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2462   001260                     u1074:
  2463   001260  2E3B               	decfsz	??_gpio_pin_write_logic^0,f,c
  2464   001262  EF2E  F009         	goto	u1075
  2465   001266  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2466   001268  0AFF               	xorlw	255
  2467   00126A  6E3D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2468   00126C  C038  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2469   001270  C039  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2470   001274  50DF               	movf	223,w,c
  2471   001276  0B07               	andlw	7
  2472   001278  6E3E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  2473   00127A  503E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  2474   00127C  0D02               	mullw	2
  2475   00127E  0E0B               	movlw	low _lat_registers
  2476   001280  24F3               	addwf	243,w,c
  2477   001282  6ED9               	movwf	fsr2l,c
  2478   001284  0E00               	movlw	high _lat_registers
  2479   001286  20F4               	addwfc	prodh,w,c
  2480   001288  6EDA               	movwf	fsr2h,c
  2481   00128A  CFDE F03F          	movff	postinc2,??_gpio_pin_write_logic+4
  2482   00128E  CFDD F040          	movff	postdec2,??_gpio_pin_write_logic+5
  2483   001292  C03F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2484   001296  C040  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2485   00129A  503D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2486   00129C  16DF               	andwf	indf2,f,c
  2487                           
  2488                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  2489   00129E  EF66  F009         	goto	l1993
  2490   0012A2                     l1991:
  2491   0012A2  503A               	movf	gpio_pin_write_logic@logic^0,w,c
  2492   0012A4  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  2493   0012A6  6A3C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2494                           
  2495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2496                           ; Switch size 1, requested type "simple"
  2497                           ; Number of cases is 1, Range of values is 0 to 0
  2498                           ; switch strategies available:
  2499                           ; Name         Instructions Cycles
  2500                           ; simple_byte            4     3 (average)
  2501                           ;	Chosen strategy is simple_byte
  2502   0012A8  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2503   0012AA  0A00               	xorlw	0	; case 0
  2504   0012AC  B4D8               	btfsc	status,2,c
  2505   0012AE  EF5B  F009         	goto	l2669
  2506   0012B2  EFEE  F008         	goto	l1983
  2507   0012B6                     l2669:
  2508                           
  2509                           ; Switch size 1, requested type "simple"
  2510                           ; Number of cases is 2, Range of values is 0 to 1
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte            7     4 (average)
  2514                           ;	Chosen strategy is simple_byte
  2515   0012B6  503B               	movf	??_gpio_pin_write_logic^0,w,c
  2516   0012B8  0A00               	xorlw	0	; case 0
  2517   0012BA  B4D8               	btfsc	status,2,c
  2518   0012BC  EF20  F009         	goto	l1987
  2519   0012C0  0A01               	xorlw	1	; case 1
  2520   0012C2  B4D8               	btfsc	status,2,c
  2521   0012C4  EFF2  F008         	goto	l1985
  2522   0012C8  EFEE  F008         	goto	l1983
  2523   0012CC                     l1993:
  2524                           
  2525                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  2526   0012CC  5041               	movf	gpio_pin_write_logic@ret^0,w,c
  2527   0012CE  0012               	return		;funcret
  2528   0012D0                     __end_of_gpio_pin_write_logic:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _gpio_pin_direction_initialize *****************
  2532 ;; Defined at:
  2533 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  pin_config      2    0[COMRAM] PTR const struct .
  2536 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd1.lcd_data(4), lcd1(6), 
  2537 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  ret             1    8[COMRAM] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;Total ram usage:        9 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_gpio_pin_initialize
  2559 ;;		_button_initialize
  2560 ;;		_keypad_initialize
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text18
  2565   001024                     __ptext18:
  2566                           	callstack 0
  2567   001024                     _gpio_pin_direction_initialize:
  2568                           	callstack 26
  2569   001024                     
  2570                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2571   001024  0E01               	movlw	1
  2572   001026  6E40               	movwf	gpio_pin_direction_initialize@ret^0,c
  2573   001028                     
  2574                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  2575   001028  5038               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  2576   00102A  1039               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  2577   00102C  B4D8               	btfsc	status,2,c
  2578   00102E  EF1B  F008         	goto	u1081
  2579   001032  EF1D  F008         	goto	u1080
  2580   001036                     u1081:
  2581   001036  EF3D  F008         	goto	l2009
  2582   00103A                     u1080:
  2583   00103A  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2584   00103E  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2585   001042  30DF               	rrcf	223,w,c
  2586   001044  32E8               	rrcf	wreg,f,c
  2587   001046  32E8               	rrcf	wreg,f,c
  2588   001048  0B07               	andlw	7
  2589   00104A  6E3A               	movwf	??_gpio_pin_direction_initialize^0,c
  2590   00104C  0E08               	movlw	8
  2591   00104E  603A               	cpfslt	??_gpio_pin_direction_initialize^0,c
  2592   001050  EF2C  F008         	goto	u1091
  2593   001054  EF2E  F008         	goto	u1090
  2594   001058                     u1091:
  2595   001058  EF3D  F008         	goto	l2009
  2596   00105C                     u1090:
  2597   00105C  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2598   001060  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2599   001064  50DF               	movf	223,w,c
  2600   001066  0B07               	andlw	7
  2601   001068  6E3A               	movwf	??_gpio_pin_direction_initialize^0,c
  2602   00106A  0E04               	movlw	4
  2603   00106C  643A               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  2604   00106E  EF3B  F008         	goto	u1101
  2605   001072  EF3D  F008         	goto	u1100
  2606   001076                     u1101:
  2607   001076  EFA0  F008         	goto	l2017
  2608   00107A                     u1100:
  2609   00107A                     l2009:
  2610                           
  2611                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  2612   00107A  0E00               	movlw	0
  2613   00107C  6E40               	movwf	gpio_pin_direction_initialize@ret^0,c
  2614                           
  2615                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  2616   00107E  EFC1  F008         	goto	l2019
  2617   001082                     l2011:
  2618                           
  2619                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  2620   001082  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2621   001086  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2622   00108A  30DF               	rrcf	223,w,c
  2623   00108C  32E8               	rrcf	wreg,f,c
  2624   00108E  32E8               	rrcf	wreg,f,c
  2625   001090  0B07               	andlw	7
  2626   001092  6E3A               	movwf	??_gpio_pin_direction_initialize^0,c
  2627   001094  0E01               	movlw	1
  2628   001096  6E3B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2629   001098  2A3A               	incf	??_gpio_pin_direction_initialize^0,f,c
  2630   00109A  EF51  F008         	goto	u1114
  2631   00109E                     u1115:
  2632   00109E  90D8               	bcf	status,0,c
  2633   0010A0  363B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2634   0010A2                     u1114:
  2635   0010A2  2E3A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2636   0010A4  EF4F  F008         	goto	u1115
  2637   0010A8  503B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2638   0010AA  0AFF               	xorlw	255
  2639   0010AC  6E3C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2640   0010AE  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2641   0010B2  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2642   0010B6  50DF               	movf	223,w,c
  2643   0010B8  0B07               	andlw	7
  2644   0010BA  6E3D               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  2645   0010BC  503D               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  2646   0010BE  0D02               	mullw	2
  2647   0010C0  0E15               	movlw	low _tris_registers
  2648   0010C2  24F3               	addwf	243,w,c
  2649   0010C4  6ED9               	movwf	fsr2l,c
  2650   0010C6  0E00               	movlw	high _tris_registers
  2651   0010C8  20F4               	addwfc	prodh,w,c
  2652   0010CA  6EDA               	movwf	fsr2h,c
  2653   0010CC  CFDE F03E          	movff	postinc2,??_gpio_pin_direction_initialize+4
  2654   0010D0  CFDD F03F          	movff	postdec2,??_gpio_pin_direction_initialize+5
  2655   0010D4  C03E  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  2656   0010D8  C03F  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  2657   0010DC  503C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2658   0010DE  16DF               	andwf	indf2,f,c
  2659                           
  2660                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  2661   0010E0  EFC1  F008         	goto	l2019
  2662   0010E4                     l2013:
  2663                           
  2664                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  2665   0010E4  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2666   0010E8  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2667   0010EC  30DF               	rrcf	223,w,c
  2668   0010EE  32E8               	rrcf	wreg,f,c
  2669   0010F0  32E8               	rrcf	wreg,f,c
  2670   0010F2  0B07               	andlw	7
  2671   0010F4  6E3A               	movwf	??_gpio_pin_direction_initialize^0,c
  2672   0010F6  0E01               	movlw	1
  2673   0010F8  6E3B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2674   0010FA  2A3A               	incf	??_gpio_pin_direction_initialize^0,f,c
  2675   0010FC  EF82  F008         	goto	u1124
  2676   001100                     u1125:
  2677   001100  90D8               	bcf	status,0,c
  2678   001102  363B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2679   001104                     u1124:
  2680   001104  2E3A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2681   001106  EF80  F008         	goto	u1125
  2682   00110A  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2683   00110E  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2684   001112  50DF               	movf	223,w,c
  2685   001114  0B07               	andlw	7
  2686   001116  6E3C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2687   001118  503C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2688   00111A  0D02               	mullw	2
  2689   00111C  0E15               	movlw	low _tris_registers
  2690   00111E  24F3               	addwf	243,w,c
  2691   001120  6ED9               	movwf	fsr2l,c
  2692   001122  0E00               	movlw	high _tris_registers
  2693   001124  20F4               	addwfc	prodh,w,c
  2694   001126  6EDA               	movwf	fsr2h,c
  2695   001128  CFDE F03D          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2696   00112C  CFDD F03E          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2697   001130  C03D  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2698   001134  C03E  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2699   001138  503B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2700   00113A  12DF               	iorwf	indf2,f,c
  2701                           
  2702                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  2703   00113C  EFC1  F008         	goto	l2019
  2704   001140                     l2017:
  2705   001140  C038  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  2706   001144  C039  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  2707   001148  BCDF               	btfsc	indf2,6,c
  2708   00114A  EFA9  F008         	goto	u1131
  2709   00114E  EFAC  F008         	goto	u1130
  2710   001152                     u1131:
  2711   001152  0E01               	movlw	1
  2712   001154  EFAD  F008         	goto	u1140
  2713   001158                     u1130:
  2714   001158  0E00               	movlw	0
  2715   00115A                     u1140:
  2716   00115A  6E3A               	movwf	??_gpio_pin_direction_initialize^0,c
  2717   00115C  6A3B               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2718                           
  2719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2720                           ; Switch size 1, requested type "simple"
  2721                           ; Number of cases is 1, Range of values is 0 to 0
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte            4     3 (average)
  2725                           ;	Chosen strategy is simple_byte
  2726   00115E  503B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2727   001160  0A00               	xorlw	0	; case 0
  2728   001162  B4D8               	btfsc	status,2,c
  2729   001164  EFB6  F008         	goto	l2671
  2730   001168  EF3D  F008         	goto	l2009
  2731   00116C                     l2671:
  2732                           
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 2, Range of values is 0 to 1
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte            7     4 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739   00116C  503A               	movf	??_gpio_pin_direction_initialize^0,w,c
  2740   00116E  0A00               	xorlw	0	; case 0
  2741   001170  B4D8               	btfsc	status,2,c
  2742   001172  EF41  F008         	goto	l2011
  2743   001176  0A01               	xorlw	1	; case 1
  2744   001178  B4D8               	btfsc	status,2,c
  2745   00117A  EF72  F008         	goto	l2013
  2746   00117E  EF3D  F008         	goto	l2009
  2747   001182                     l2019:
  2748                           
  2749                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  2750   001182  5040               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2751   001184  0012               	return		;funcret
  2752   001186                     __end_of_gpio_pin_direction_initialize:
  2753                           	callstack 0
  2754                           
  2755                           	psect	rparam
  2756   000000                     
  2757                           	psect	config
  2758                           
  2759                           ; Padding undefined space
  2760   300000                     	org	3145728
  2761   300000  FF                 	db	255
  2762                           
  2763                           ;Config register CONFIG1H @ 0x300001
  2764                           ;	Oscillator Selection bits
  2765                           ;	OSC = HS, HS oscillator
  2766                           ;	Fail-Safe Clock Monitor Enable bit
  2767                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2768                           ;	Internal/External Oscillator Switchover bit
  2769                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2770   300001                     	org	3145729
  2771   300001  02                 	db	2
  2772                           
  2773                           ;Config register CONFIG2L @ 0x300002
  2774                           ;	Power-up Timer Enable bit
  2775                           ;	PWRT = OFF, PWRT disabled
  2776                           ;	Brown-out Reset Enable bits
  2777                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2778                           ;	Brown Out Reset Voltage bits
  2779                           ;	BORV = 1, 
  2780   300002                     	org	3145730
  2781   300002  09                 	db	9
  2782                           
  2783                           ;Config register CONFIG2H @ 0x300003
  2784                           ;	Watchdog Timer Enable bit
  2785                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2786                           ;	Watchdog Timer Postscale Select bits
  2787                           ;	WDTPS = 32768, 1:32768
  2788   300003                     	org	3145731
  2789   300003  1E                 	db	30
  2790                           
  2791                           ; Padding undefined space
  2792   300004                     	org	3145732
  2793   300004  FF                 	db	255
  2794                           
  2795                           ;Config register CONFIG3H @ 0x300005
  2796                           ;	CCP2 MUX bit
  2797                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2798                           ;	PORTB A/D Enable bit
  2799                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2800                           ;	Low-Power Timer1 Oscillator Enable bit
  2801                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2802                           ;	MCLR Pin Enable bit
  2803                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2804   300005                     	org	3145733
  2805   300005  81                 	db	129
  2806                           
  2807                           ;Config register CONFIG4L @ 0x300006
  2808                           ;	Stack Full/Underflow Reset Enable bit
  2809                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2810                           ;	Single-Supply ICSP Enable bit
  2811                           ;	LVP = OFF, Single-Supply ICSP disabled
  2812                           ;	Extended Instruction Set Enable bit
  2813                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2814                           ;	Background Debugger Enable bit
  2815                           ;	DEBUG = 0x1, unprogrammed default
  2816   300006                     	org	3145734
  2817   300006  81                 	db	129
  2818                           
  2819                           ; Padding undefined space
  2820   300007                     	org	3145735
  2821   300007  FF                 	db	255
  2822                           
  2823                           ;Config register CONFIG5L @ 0x300008
  2824                           ;	Code Protection bit
  2825                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2826                           ;	Code Protection bit
  2827                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2828                           ;	Code Protection bit
  2829                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2830                           ;	Code Protection bit
  2831                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2832   300008                     	org	3145736
  2833   300008  0F                 	db	15
  2834                           
  2835                           ;Config register CONFIG5H @ 0x300009
  2836                           ;	Boot Block Code Protection bit
  2837                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2838                           ;	Data EEPROM Code Protection bit
  2839                           ;	CPD = OFF, Data EEPROM not code-protected
  2840   300009                     	org	3145737
  2841   300009  C0                 	db	192
  2842                           
  2843                           ;Config register CONFIG6L @ 0x30000A
  2844                           ;	Write Protection bit
  2845                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2846                           ;	Write Protection bit
  2847                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2848                           ;	Write Protection bit
  2849                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2850                           ;	Write Protection bit
  2851                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2852   30000A                     	org	3145738
  2853   30000A  0F                 	db	15
  2854                           
  2855                           ;Config register CONFIG6H @ 0x30000B
  2856                           ;	Configuration Register Write Protection bit
  2857                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2858                           ;	Boot Block Write Protection bit
  2859                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2860                           ;	Data EEPROM Write Protection bit
  2861                           ;	WRTD = OFF, Data EEPROM not write-protected
  2862   30000B                     	org	3145739
  2863   30000B  E0                 	db	224
  2864                           
  2865                           ;Config register CONFIG7L @ 0x30000C
  2866                           ;	Table Read Protection bit
  2867                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2868                           ;	Table Read Protection bit
  2869                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2870                           ;	Table Read Protection bit
  2871                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2872                           ;	Table Read Protection bit
  2873                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2874   30000C                     	org	3145740
  2875   30000C  0F                 	db	15
  2876                           
  2877                           ;Config register CONFIG7H @ 0x30000D
  2878                           ;	Boot Block Table Read Protection bit
  2879                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2880   30000D                     	org	3145741
  2881   30000D  40                 	db	64
  2882                           tosu	equ	0xFFF
  2883                           tosh	equ	0xFFE
  2884                           tosl	equ	0xFFD
  2885                           stkptr	equ	0xFFC
  2886                           pclatu	equ	0xFFB
  2887                           pclath	equ	0xFFA
  2888                           pcl	equ	0xFF9
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           indf0	equ	0xFEF
  2896                           postinc0	equ	0xFEE
  2897                           postdec0	equ	0xFED
  2898                           preinc0	equ	0xFEC
  2899                           plusw0	equ	0xFEB
  2900                           fsr0h	equ	0xFEA
  2901                           fsr0l	equ	0xFE9
  2902                           wreg	equ	0xFE8
  2903                           indf1	equ	0xFE7
  2904                           postinc1	equ	0xFE6
  2905                           postdec1	equ	0xFE5
  2906                           preinc1	equ	0xFE4
  2907                           plusw1	equ	0xFE3
  2908                           fsr1h	equ	0xFE2
  2909                           fsr1l	equ	0xFE1
  2910                           bsr	equ	0xFE0
  2911                           indf2	equ	0xFDF
  2912                           postinc2	equ	0xFDE
  2913                           postdec2	equ	0xFDD
  2914                           preinc2	equ	0xFDC
  2915                           plusw2	equ	0xFDB
  2916                           fsr2h	equ	0xFDA
  2917                           fsr2l	equ	0xFD9
  2918                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    16
    Data        55
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33      96
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  103080
             _application_initialize
           _lcd_4bit_send_string_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   23848
                                             27 COMRAM     6     0      6
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   12643
                                             21 COMRAM     6     2      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              9     6      3   10737
                                             12 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   35482
                                             24 COMRAM     6     0      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   18384
                                             18 COMRAM     6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16630
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   43750
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   43749
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   19014
                                             21 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                9     6      3   11953
                                             12 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          3     1      2    5141
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   24732
                                             18 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   17694
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5747
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     1      2    5309
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6640
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4913
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     429
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     21      60       1       75.6%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      12        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 06 22:56:44 2023

                        ?_lcd_send_4bits 0042                                      l202 1184  
                                    l221 12CE                                      l321 192C  
                                    l316 14B6                                      l413 1848  
                                    l173 1B60                                      l190 17C0  
                                    l326 18BA                                      l423 1A94  
                                    l418 1A4E                                      l347 1A00  
                                    l435 1566                                      l373 16A6  
                                    l366 1736                                      l359 13DA  
                                    l447 1616                                      l289 1B66  
                                    l394 1996            gpio_pin_initialize@pin_config 0042  
                                    _ret 0059      __end_of_lcd_4bit_send_enable_signal 1A50  
            _lcd_4bit_send_enable_signal 1A02                                      prod 0FF3  
                    led_initialize@F2881 0060                ?_lcd_8bit_send_string_pos 0053  
                                    wreg 0FE8                    relay_initialize@F2875 005C  
            __end_of_lcd_8bit_set_cursor 1568              lcd_send_4bits@_data_command 0044  
                                   l2001 1024                                     l2011 1082  
                                   l2003 1028                                     l2013 10E4  
                                   l2005 103A                                     l2101 16D6  
                                   l2007 105C                                     l2031 17D4  
                                   l2111 1718                                     l2017 1140  
                                   l2009 107A                                     l2041 1A02  
                                   l2033 17DC                                     l2121 13E0  
                                   l2113 1728                                     l2201 1B48  
                                   l2019 1182                                     l2043 1A14  
                                   l2035 1846                                     l2027 17C2  
                                   l2123 13F2                                     l2107 16DA  
                                   l2115 1734                                     l2203 1B54  
                                   l2211 1864                                     l2045 1A1C  
                                   l2029 17C2                                     l2141 145C  
                                   l2133 141E                                     l2125 13FA  
                                   l2061 1A7A                                     l2053 1A50  
                                   l2109 1716                                     l2213 18B8  
                                   l2205 184A                                     l2221 157A  
                                   l2301 1998                                     l2071 176C  
                                   l2047 1A30                                     l2039 1A02  
                                   l2151 14A2                                     l2143 1462  
                                   l2135 143A                                     l2127 141A  
                                   l2119 13DC                                     l2055 1A50  
                                   l2207 184A                                     l2231 15C6  
                                   l2223 157E                                     l2311 19E4  
                                   l2303 19AA                                     l2073 178A  
                                   l2065 1738                                     l2049 1A4C  
                                   l2081 18BC                                     l2145 1472  
                                   l2137 143C                                     l2153 14B4  
                                   l2057 1A62                                     l2161 12E6  
                                   l2209 185C                                     l2225 1584  
                                   l2217 1568                                     l2305 19AE  
                                   l2321 195C                                     l2313 192E  
                                   l2075 1792                                     l2067 1738  
                                   l2083 18BC                                     l2147 1482  
                                   l2139 144C                                     l2059 1A66  
                                   l2171 1312                                     l2163 12EE  
                                   l2227 159A                                     l2219 1568  
                                   l2307 19C6                                     l2251 1646  
                                   l2243 1618                                     l2323 1976  
                                   l2315 192E                                     l2077 17BE  
                                   l2069 174A                                     l2085 18CE  
                                   l2149 1492                                     l2093 16A8  
                                   l2181 1360                                     l2173 132E  
                                   l2165 130E                                     l2157 12D0  
                                   l2229 15B0                                     l2237 15DC  
                                   l2309 19E0                                     l2261 1688  
                                   l2245 161C                                     l2325 197A  
                                   l2317 1940                                     l2087 18D6  
                                   l2095 16AC                                     l2191 13B6  
                                   l2183 1380                                     l2175 1330  
                                   l2159 12D4                                     l2263 1698  
                                   l2247 162E                                     l2271 14B8  
                                   l2319 1944                                     l2089 192A  
                                   l2097 16BE                                     l2193 13C6  
                                   l2185 1386                                     l2177 1340  
                                   l2257 164A                                     l2265 16A4  
                                   l2249 1636                                     l2281 1500  
                                   l2273 14CA                                     l2601 1A9A  
                                   l2099 16C6                                     l2187 1396  
                                   l2179 1350                                     l2195 13D8  
                                   l2259 1686                                     l2283 1516  
                                   l2275 14CE                                     l2603 1AB6  
                                   l2189 13A6                                     l2277 14D4  
                                   l2269 14B8                                     l2199 1B48  
                                   l2295 1B62                                     l2279 14EA  
                                   l2297 1B62                                     l2289 152C  
                                   l2299 1998                                     l2671 116C  
                                   l2665 1540                                     l2667 15F0  
                                   l2669 12B6                                     l1981 11BE  
                                   l1991 12A2                                     l1983 11DC  
                                   l1975 1186                                     l2599 1A96  
                                   l1985 11E4                                     l1993 12CC  
                                   l1977 118A                                     l1987 1240  
                                   l1979 119C                                     STR_1 1011  
                                   STR_2 1011                                     u1100 107A  
                                   u1101 1076                                     u1030 119C  
                                   u1031 1198                                     u1040 11BE  
                                   u1200 178A                                     u1041 11BA  
                                   u1201 1786                                     u1130 1158  
                                   u1114 10A2                                     u1050 11DC  
                                   u1210 18CE                                     u1131 1152  
                                   u1115 109E                                     u1051 11D8  
                                   u1211 18CA                                     u1140 115A  
                                   u1124 1104                                     u1220 16BE  
                                   u1300 157A                                     u1125 1100  
                                   u1221 16BA                                     u1301 1576  
                                   u1150 17D4                                     u1310 162E  
                                   u1151 17D0                                     u1311 162A  
                                   u1080 103A                                     u1064 1204  
                                   u1160 1A14                                     u1240 1728  
                                   u1081 1036                                     u1065 1200  
                                   u1161 1A10                                     u1241 1724  
                                   u1090 105C                                     u1074 1260  
                                   u1250 13F2                                     u1170 1A62  
                                   u1234 1704                                     u1330 1698  
                                   u1091 1058                                     u1075 125C  
                                   u1251 13EE                                     u1171 1A5E  
                                   u1235 1700                                     u1331 1694  
                                   u1180 174A                                     u1260 144C  
                                   u1324 1674                                     u1340 14CA  
                                   u1181 1746                                     u1261 1448  
                                   u1325 1670                                     u1341 14C6  
                                   u1190 176C                                     u1270 12E6  
                                   u1350 19AA                                     u1191 1768  
                                   u1271 12E2                                     u1351 19A6  
                                   u1280 1340                                     u1360 1A00  
                                   u1281 133C                                     u1361 19FC  
                                   u1290 185C                                     u1370 1940  
                                   u1291 1858                                     u1371 193C  
                                   u1380 1996                                     u1381 1992  
                                   u1747 1346                                     u1757 1366  
                                   u1767 1382                                     u1777 145E  
          ??_lcd_4bit_send_enable_signal 0044                                     _lcd1 0032  
                                   _led1 0027                                     _main 1A96  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 1738                             ___param_bank 0000  
                  _lcd_4bit_send_command 18BC                     _gpio_pin_write_logic 1186  
         lcd_4bit_send_string_pos@column 0053                                    ?_main 0038  
               ??_application_initialize 0053                      relay_turn_off@F2885 005A  
              lcd_4bit_set_cursor@column 004D                                    _lcd_2 0028  
               ?_lcd_8bit_send_char_data 0044                                    tablat 0FF5  
                                  status 0FD8           ?_gpio_pin_direction_initialize 0038  
                        __initialization 1B12                             __end_of_main 1ADA  
                  ?_gpio_pin_write_logic 0038                   lcd_8bit_set_cursor@lcd 004D  
                 lcd_8bit_set_cursor@row 004F                            _lat_registers 000B  
    lcd_8bit_send_command@l_pins_counter 004C                                   ??_main 0059  
                          __activetblptr 0002                         led_turn_on@F2886 005F  
       __end_of_lcd_4bit_send_string_pos 1A02                   ?_lcd_4bit_send_command 0046  
                                 clear_0 1B38                                   isa$std 0001  
            lcd_8bit_send_string_pos@lcd 0053              lcd_8bit_send_string_pos@row 0055  
            lcd_8bit_send_string_pos@str 0057                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 1B3E  
                          ___rparam_used 0001                         ??_lcd_send_4bits 0045  
                _lcd_4bit_send_char_data 184A                   ??_gpio_pin_write_logic 003B  
                         __pcstackCOMRAM 0038                 lcd_4bit_send_command@lcd 0046  
               lcd_4bit_send_command@ret 0049                   _application_initialize 1B62  
                 lcd_8bit_initialize@lcd 004D                   lcd_8bit_initialize@ret 0052  
                      led_turn_off@F2891 005E                          led_toggle@F2896 005D  
              ?_lcd_4bit_send_string_pos 0050      __end_of_lcd_8bit_send_enable_signal 1A96  
            _lcd_8bit_send_enable_signal 1A50                               _btn_values 1001  
         lcd_8bit_send_enable_signal@lcd 0042                           _tris_registers 0015  
              ??_lcd_4bit_send_char_data 0049            ??_lcd_8bit_send_enable_signal 0044  
 lcd_8bit_initialize@l_data_pins_counter 0051   lcd_4bit_initialize@l_data_pins_counter 004F  
                                __Hparam 0000                                  __Lparam 0000  
                    _gpio_pin_initialize 1738                    _lcd_8bit_send_command 16A8  
                           __psmallconst 1000                                  __pcinit 1B12  
                                __ramtop 1000                 _lcd_8bit_send_string_pos 192E  
                                __ptext0 1A96                                  __ptext1 192E  
                                __ptext2 14B8                                  __ptext3 1618  
                                __ptext4 1998                                  __ptext5 1568  
                                __ptext6 184A                                  __ptext7 1B62  
                                __ptext8 1B48                                  __ptext9 12D0  
        ??_gpio_pin_direction_initialize 003A                                  _keypad1 001F  
                   ?_gpio_pin_initialize 0042                     end_of_initialization 1B3E  
                      lcd_send_4bits@lcd 0042                        lcd_send_4bits@ret 0045  
                          __Lmediumconst 0000                  ??_lcd_4bit_send_command 0049  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                    _lcd_4bit_initialize 13DC          __end_of_lcd_4bit_send_char_data 18BC  
             lcd_4bit_send_char_data@lcd 0046               lcd_4bit_send_char_data@ret 0049  
                  ??_gpio_pin_initialize 0044                     ?_lcd_4bit_initialize 004A  
                    _lcd_4bit_set_cursor 1568                   ?_lcd_8bit_send_command 0044  
                     relay_turn_on@F2880 005B              lcd_4bit_send_string_pos@lcd 0050  
            lcd_4bit_send_string_pos@row 0052              lcd_4bit_send_string_pos@str 0054  
         lcd_8bit_send_string_pos@column 0056                            __pidataCOMRAM 1ADA  
  lcd_8bit_send_char_data@l_pins_counter 004C                      start_initialization 1B12  
           ?_lcd_4bit_send_enable_signal 0042                     ?_lcd_4bit_set_cursor 004A  
                    _lcd_8bit_initialize 12D0    __end_of_gpio_pin_direction_initialize 1186  
          _gpio_pin_direction_initialize 1024                  ?_application_initialize 0038  
                  ??_lcd_4bit_initialize 004C                     ?_lcd_8bit_initialize 004D  
                _lcd_8bit_send_char_data 1618             __end_of_ecu_layer_initialize 1B62  
                    _lcd_8bit_set_cursor 14B8             lcd_4bit_send_command@command 0048  
               lcd_8bit_send_command@lcd 0044                 lcd_8bit_send_command@ret 004B  
                            __pbssCOMRAM 0059                    ??_lcd_4bit_set_cursor 004E  
         __end_of_application_initialize 1B68                     ?_lcd_8bit_set_cursor 004D  
         gpio_pin_write_logic@pin_config 0038                    ??_lcd_8bit_initialize 004F  
             ??_lcd_8bit_send_string_pos 0059              lcd_8bit_send_char_data@data 0046  
              gpio_pin_write_logic@logic 003A                              __smallconst 1000  
                  ??_lcd_8bit_set_cursor 0051                ??_lcd_8bit_send_char_data 0047  
          __end_of_lcd_4bit_send_command 192E         gpio_pin_direction_initialize@ret 0040  
               _lcd_4bit_send_string_pos 1998  gpio_pin_direction_initialize@pin_config 0038  
                 gpio_pin_initialize@ret 0045                lcd_8bit_set_cursor@column 0050  
                gpio_pin_write_logic@ret 0041                 ?_lcd_4bit_send_char_data 0046  
                              copy_data0 1B26                     _ecu_layer_initialize 1B48  
                ??_lcd_8bit_send_command 0047                                 __Hrparam 0000  
                               __Lrparam 0000                   lcd_4bit_set_cursor@lcd 004A  
                 lcd_4bit_set_cursor@row 004C          __end_of_lcd_8bit_send_char_data 16A8  
            __end_of_gpio_pin_initialize 17C2                       __end_of_btn_values 1011  
             lcd_8bit_send_char_data@lcd 0044               lcd_8bit_send_char_data@ret 004B  
                               __ptext10 16A8                                 __ptext11 1A50  
                               __ptext12 13DC                                 __ptext13 18BC  
                               __ptext14 17C2                                 __ptext15 1A02  
                               __ptext16 1738                                 __ptext17 1186  
                               __ptext18 1024                    ?_ecu_layer_initialize 0038  
       __end_of_lcd_8bit_send_string_pos 1998                                 isa$xinst 0000  
                         _lcd_send_4bits 17C2              __end_of_lcd_4bit_initialize 14B8  
           __end_of_gpio_pin_write_logic 12D0             ?_lcd_8bit_send_enable_signal 0042  
         lcd_4bit_send_enable_signal@lcd 0042           lcd_4bit_send_enable_signal@ret 0044  
                 __end_of_lcd_send_4bits 184A              __end_of_lcd_4bit_set_cursor 1618  
                         _port_registers 0001                   ??_ecu_layer_initialize 0053  
            __end_of_lcd_8bit_initialize 13DC             lcd_8bit_send_command@command 0046  
            lcd_4bit_send_char_data@data 0048               ??_lcd_4bit_send_string_pos 0056  
                 lcd_4bit_initialize@lcd 004A                   lcd_4bit_initialize@ret 004E  
